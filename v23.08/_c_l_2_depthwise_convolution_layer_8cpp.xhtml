<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/DepthwiseConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_depthwise_convolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_depthwise_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLDepthwiseConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_depthwise_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae133c0063d4112703d30b7f7ae485fce">CLDepthwiseConvolutionLayerFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T &gt;</td></tr>
<tr class="separator:ae133c0063d4112703d30b7f7ae485fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a93d42669d83d522e80a6ed5faf4435"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4a93d42669d83d522e80a6ed5faf4435"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a93d42669d83d522e80a6ed5faf4435">CLDepthwiseConvolutionLayerMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a4a93d42669d83d522e80a6ed5faf4435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a089070ec30b2f51d897a51fc2c28fa7f">CLDepthwiseConvolutionLayerInPlaceFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, false, true &gt;</td></tr>
<tr class="separator:a089070ec30b2f51d897a51fc2c28fa7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7ad2df3fbb6f130a192a8ef12eb32cde">CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a7ad2df3fbb6f130a192a8ef12eb32cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9ff8ac2db6fee50706a654768d9f85a7">CLDepthwiseConvolutionLayerQuantizedPerChannelFixture</a> = DepthwiseConvolutionLayerValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a9ff8ac2db6fee50706a654768d9f85a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a225f4144ab99e394753507e385516198"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a225f4144ab99e394753507e385516198">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a225f4144ab99e394753507e385516198"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f55f9683b384e589ba5fc62eb78d496"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f55f9683b384e589ba5fc62eb78d496">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4f55f9683b384e589ba5fc62eb78d496"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abef999f9f6d7dcc9000a667b95b065de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abef999f9f6d7dcc9000a667b95b065de">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:abef999f9f6d7dcc9000a667b95b065de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc561ef43073bf3cdebcadc1004e53de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afc561ef43073bf3cdebcadc1004e53de">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:afc561ef43073bf3cdebcadc1004e53de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c6c2cbcccd87a61b589ee6e825e9cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a13c6c2cbcccd87a61b589ee6e825e9cc">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a13c6c2cbcccd87a61b589ee6e825e9cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2610374027f2e967a291bd532942dd8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2610374027f2e967a291bd532942dd8">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa2610374027f2e967a291bd532942dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e40e2afa93aee22e702ac5c10d1c836"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4e40e2afa93aee22e702ac5c10d1c836">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4e40e2afa93aee22e702ac5c10d1c836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fad1e04e5a676f706058b854565143c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2fad1e04e5a676f706058b854565143c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2fad1e04e5a676f706058b854565143c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2ad50dbb9562ed25d742de5ed919f1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab2ad50dbb9562ed25d742de5ed919f1d">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab2ad50dbb9562ed25d742de5ed919f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a741d89a89433d9975363d4404a06c43b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a741d89a89433d9975363d4404a06c43b">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a741d89a89433d9975363d4404a06c43b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cd07d9290b9376d858b184943d9bb41"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2cd07d9290b9376d858b184943d9bb41">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2cd07d9290b9376d858b184943d9bb41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a162d3404b07d60e34590c8e881619d79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a162d3404b07d60e34590c8e881619d79">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a162d3404b07d60e34590c8e881619d79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7186b0c393e714ea38164f34932602f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7186b0c393e714ea38164f34932602f0">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a7186b0c393e714ea38164f34932602f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf71c5f49f29521f2ca4d0249bfd1c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeaf71c5f49f29521f2ca4d0249bfd1c9">combine</a> (combine(combine(combine(datasets::SmallInPlaceDepthwiseConvolutionLayerDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1 })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aeaf71c5f49f29521f2ca4d0249bfd1c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad586fbe518e36bb13dcea2c4b353c80f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad586fbe518e36bb13dcea2c4b353c80f">combine</a> (combine(combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad586fbe518e36bb13dcea2c4b353c80f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cf2618c46416f76297141b9b71a6411"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cf2618c46416f76297141b9b71a6411">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a8cf2618c46416f76297141b9b71a6411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acee61add7f3585d68211343ce337fa31"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acee61add7f3585d68211343ce337fa31">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:acee61add7f3585d68211343ce337fa31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0f8850664b9cfbae95e8d3823d421e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adc0f8850664b9cfbae95e8d3823d421e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:adc0f8850664b9cfbae95e8d3823d421e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dcd6383242254a7b48e1973606865bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2dcd6383242254a7b48e1973606865bc">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2dcd6383242254a7b48e1973606865bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a469728a37cedcae23066547a179d0dab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a469728a37cedcae23066547a179d0dab">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 2 })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a469728a37cedcae23066547a179d0dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf97303708fa8748b0c3022784c07cad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaf97303708fa8748b0c3022784c07cad">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aaf97303708fa8748b0c3022784c07cad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea6d1f7a9d00f53666613cd359495e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acea6d1f7a9d00f53666613cd359495e4">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:acea6d1f7a9d00f53666613cd359495e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a292505be2c525ac90dbd3048c754669b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a292505be2c525ac90dbd3048c754669b">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a292505be2c525ac90dbd3048c754669b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78bf32187286a070d6347f31439d6515"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a78bf32187286a070d6347f31439d6515">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a78bf32187286a070d6347f31439d6515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d86398cd13c17b242fc8a137517cc3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9d86398cd13c17b242fc8a137517cc3e">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9d86398cd13c17b242fc8a137517cc3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeb2e7abc67657b9abf2e6a343bf6726"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeeb2e7abc67657b9abf2e6a343bf6726">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLargeKernelSize, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::LargeKernelSizeDepthwiseConvolutionLayerNHWCDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1 })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aeeb2e7abc67657b9abf2e6a343bf6726"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a651d98ee93a429d9d8cc9d1eff045998"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a651d98ee93a429d9d8cc9d1eff045998">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a651d98ee93a429d9d8cc9d1eff045998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab79f0d48487b1436d58e48f8e4aebf4c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab79f0d48487b1436d58e48f8e4aebf4c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab79f0d48487b1436d58e48f8e4aebf4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dabc3ee4c06c701e99214462233a594"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0dabc3ee4c06c701e99214462233a594">combine</a> (combine(combine(combine(datasets::SmallInPlaceDepthwiseConvolutionLayerDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1 })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a0dabc3ee4c06c701e99214462233a594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e9d3b298402b249868dac3a47651edf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4e9d3b298402b249868dac3a47651edf">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 128), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(1.f, 128) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4e9d3b298402b249868dac3a47651edf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6461fd0b6dde8f2f4d000e4508ed727b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6461fd0b6dde8f2f4d000e4508ed727b">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 2) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a6461fd0b6dde8f2f4d000e4508ed727b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09af8a5a041e968b7ac249bcbcaeda5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09af8a5a041e968b7ac249bcbcaeda5d">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a09af8a5a041e968b7ac249bcbcaeda5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1808452eb12ecc1d11557640d9c29aee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1808452eb12ecc1d11557640d9c29aee">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(1.3f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a1808452eb12ecc1d11557640d9c29aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6e371e32d0cff14704b7e266d791a33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae6e371e32d0cff14704b7e266d791a33">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ae6e371e32d0cff14704b7e266d791a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac193497063d0036e5811a64473910d05"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac193497063d0036e5811a64473910d05">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac193497063d0036e5811a64473910d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8762c759a31ce5091c2085f57594772f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8762c759a31ce5091c2085f57594772f">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a8762c759a31ce5091c2085f57594772f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ce551dcf5f3213e2b41dc4e7478e66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a16ce551dcf5f3213e2b41dc4e7478e66">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 2 })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a16ce551dcf5f3213e2b41dc4e7478e66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a620a1de952a8473f392f550ed926c7f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a620a1de952a8473f392f550ed926c7f3">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a620a1de952a8473f392f550ed926c7f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accaae76e6a6510a230922b0de0886089"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#accaae76e6a6510a230922b0de0886089">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:accaae76e6a6510a230922b0de0886089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8600e420d708ea68445652fcc5d2464"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae8600e420d708ea68445652fcc5d2464">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, CLDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 2 })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:ae8600e420d708ea68445652fcc5d2464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2496ca1e5a120f2b8df4596a8e1149b5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2496ca1e5a120f2b8df4596a8e1149b5">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10), QuantizationInfo(2.2f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2496ca1e5a120f2b8df4596a8e1149b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a6a055160e47dfa48206ab62dc6c981"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a6a055160e47dfa48206ab62dc6c981">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a4a6a055160e47dfa48206ab62dc6c981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65f1386d53a6b92abfa8cb44290bc4c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa65f1386d53a6b92abfa8cb44290bc4c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 2) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa65f1386d53a6b92abfa8cb44290bc4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9985a1680ac74eb3c341800d56aafbf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa9985a1680ac74eb3c341800d56aafbf">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8, 1) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa9985a1680ac74eb3c341800d56aafbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8e41b008166f75f84b8abef4622e6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8c8e41b008166f75f84b8abef4622e6c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a8c8e41b008166f75f84b8abef4622e6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab30d568dc3f2be7644a21b8f08a1ea67"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab30d568dc3f2be7644a21b8f08a1ea67">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.3f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab30d568dc3f2be7644a21b8f08a1ea67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e49d257f49d6009219da6619fb9cf3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a34e49d257f49d6009219da6619fb9cf3">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a34e49d257f49d6009219da6619fb9cf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f66d73391441b6e648674a1d907125"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a42f66d73391441b6e648674a1d907125">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a42f66d73391441b6e648674a1d907125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb89ad820c97b9e752b514acf23a2dcb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adb89ad820c97b9e752b514acf23a2dcb">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;SrcDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), framework::dataset::make(&quot;SrcQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:adb89ad820c97b9e752b514acf23a2dcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a2437c44063526d22feb88404f431c5c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2437c44063526d22feb88404f431c5c8">CLDepthwiseConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a2437c44063526d22feb88404f431c5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87887d952f8c00ec8d87f38905840f85"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a87887d952f8c00ec8d87f38905840f85">CLDepthwiseConvolutionLayerInPlaceFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a87887d952f8c00ec8d87f38905840f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98594c5ca9886c14365d813714611c79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a98594c5ca9886c14365d813714611c79">CLDepthwiseConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a98594c5ca9886c14365d813714611c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded041e97b0d40a06acc63e781da3daf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aded041e97b0d40a06acc63e781da3daf">CLDepthwiseConvolutionLayerInPlaceFixture&lt; float &gt;</a></td></tr>
<tr class="separator:aded041e97b0d40a06acc63e781da3daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46215efb57d85d73b814e3a5b3f987c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46215efb57d85d73b814e3a5b3f987c2">CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a46215efb57d85d73b814e3a5b3f987c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a91f9125a5968b9b17ef4b68db5d33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a42a91f9125a5968b9b17ef4b68db5d33">CLDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a42a91f9125a5968b9b17ef4b68db5d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a860cb13f725aff473482655e08e7a783"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a860cb13f725aff473482655e08e7a783">CLDepthwiseConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a860cb13f725aff473482655e08e7a783"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_depthwise_convolution_layer_8cpp.xhtml">DepthwiseConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
