<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/PixelWiseMultiplication.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_pixel_wise_multiplication_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">PixelWiseMultiplication.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_c_l_pixel_wise_multiplication_8h_source.xhtml">arm_compute/runtime/CL/functions/CLPixelWiseMultiplication.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ConvertPolicyDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/PixelWiseMultiplicationFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_pixel_wise_multiplication_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a8d69c709ef45fd63b622f283b0723eaf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>(<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate(CLAccessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a8d69c709ef45fd63b622f283b0723eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4567b1c0ed4817ca030cb2cbd0a51d53"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp.xhtml#a4567b1c0ed4817ca030cb2cbd0a51d53">PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</a>(TEST_NAME,  FIXTURE,  MODE,  SHAPES,  DT1,  DT2,  SCALE,  RP,  ACT,  <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>)</td></tr>
<tr class="separator:a4567b1c0ed4817ca030cb2cbd0a51d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a30656f7e4ef9753f6d8a9e8168113fa8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a30656f7e4ef9753f6d8a9e8168113fa8"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a30656f7e4ef9753f6d8a9e8168113fa8">CLPixelWiseMultiplicationToF16Fixture</a> = PixelWiseMultiplicationValidationFloatFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, half_float::half &gt;</td></tr>
<tr class="separator:a30656f7e4ef9753f6d8a9e8168113fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88617622963d525a257f976f1d54520f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a88617622963d525a257f976f1d54520f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a88617622963d525a257f976f1d54520f">CLPixelWiseMultiplicationToF32Fixture</a> = PixelWiseMultiplicationValidationFloatFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:a88617622963d525a257f976f1d54520f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68ea9edb9870f880856701f8975728f8"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a68ea9edb9870f880856701f8975728f8"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a68ea9edb9870f880856701f8975728f8">CLPixelWiseMultiplicationToF32BroadcastFixture</a> = PixelWiseMultiplicationBroadcastValidationFloatFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:a68ea9edb9870f880856701f8975728f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e7b9c8f94fc6b3555b0189eebb6111"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a32e7b9c8f94fc6b3555b0189eebb6111"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a32e7b9c8f94fc6b3555b0189eebb6111">CLPixelWiseMultiplicationIntegerFixture</a> = PixelWiseMultiplicationValidationIntegerFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, int &gt;</td></tr>
<tr class="separator:a32e7b9c8f94fc6b3555b0189eebb6111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e008fd627ebd7cde15f1af359752a6e"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1e008fd627ebd7cde15f1af359752a6e"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e008fd627ebd7cde15f1af359752a6e">CLPixelWiseMultiplicationQuantizedFixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, T &gt;</td></tr>
<tr class="separator:a1e008fd627ebd7cde15f1af359752a6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ddaf835fb36c6b21dd8a53d0c99451"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a65ddaf835fb36c6b21dd8a53d0c99451">CLPixelWiseMultiplicationQSYMM16ToS32Fxture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, int16_t, int16_t, int32_t &gt;</td></tr>
<tr class="separator:a65ddaf835fb36c6b21dd8a53d0c99451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc75074ca71ed1b8261db64b88baac77"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:adc75074ca71ed1b8261db64b88baac77"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adc75074ca71ed1b8261db64b88baac77">CLPixelWiseMultiplicationQuantizedBroadcastFixture</a> = PixelWiseMultiplicationBroadcastValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLPixelWiseMultiplication, T, T &gt;</td></tr>
<tr class="separator:adc75074ca71ed1b8261db64b88baac77"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9881bc071586036bd6b8f033bd8d5c22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9881bc071586036bd6b8f033bd8d5c22">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Scale&quot;,{ 2.f, 2.f, -1.f, 1.f, 1.f})), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, scale, expected)</td></tr>
<tr class="separator:a9881bc071586036bd6b8f033bd8d5c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e912096b210f404148a5b536d8237c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a04e912096b210f404148a5b536d8237c">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLPixelWiseMultiplicationIntegerFixture&lt; int &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S32)), framework::dataset::make(&quot;DataType2&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, { 1.f })), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a04e912096b210f404148a5b536d8237c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adef4a3b1bf9d7a38f62a2fb6077823fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adef4a3b1bf9d7a38f62a2fb6077823fe">FIXTURE_DATA_TEST_CASE</a> (RunInplace, CLPixelWiseMultiplicationIntegerFixture&lt; int &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S32)), framework::dataset::make(&quot;DataType2&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, { 1.f })), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), framework::dataset::make(&quot;InPlace&quot;, { true })))</td></tr>
<tr class="separator:adef4a3b1bf9d7a38f62a2fb6077823fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93ec0f0131905da6eb4c30e75aa64113"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a93ec0f0131905da6eb4c30e75aa64113">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLPixelWiseMultiplicationToF16Fixture&lt; half_float::half &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F16)), framework::dataset::make(&quot;DataType2&quot;, DataType::F16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a93ec0f0131905da6eb4c30e75aa64113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28fb572a13a8cae0aea812ade3334b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af28fb572a13a8cae0aea812ade3334b8">FIXTURE_DATA_TEST_CASE</a> (RunWithActivation, CLPixelWiseMultiplicationToF16Fixture&lt; half_float::half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F16)), framework::dataset::make(&quot;DataType2&quot;, DataType::F16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), ActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:af28fb572a13a8cae0aea812ade3334b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48edc12747387ab89393f50cad6b1c66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a48edc12747387ab89393f50cad6b1c66">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a48edc12747387ab89393f50cad6b1c66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad16e6013909857bfb19468bc4855483c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad16e6013909857bfb19468bc4855483c">FIXTURE_DATA_TEST_CASE</a> (RunWithActivation, CLPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), ActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:ad16e6013909857bfb19468bc4855483c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eca91ce59af1ad94eadd3b6daad29ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6eca91ce59af1ad94eadd3b6daad29ad">FIXTURE_DATA_TEST_CASE</a> (RunInplace, CLPixelWiseMultiplicationToF32Fixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::F32)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), framework::dataset::make(&quot;InPlace&quot;, { true })))</td></tr>
<tr class="separator:a6eca91ce59af1ad94eadd3b6daad29ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a854ab0380f3498de1db5e377dc59fbdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a854ab0380f3498de1db5e377dc59fbdd">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), EmptyActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a854ab0380f3498de1db5e377dc59fbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a558043d3ae0399e395fbb543b5de5589"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a558043d3ae0399e395fbb543b5de5589">FIXTURE_DATA_TEST_CASE</a> (RunWithActivationSmallBroadcast, CLPixelWiseMultiplicationToF32BroadcastFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), ActivationFunctionsDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a558043d3ae0399e395fbb543b5de5589"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca5495c14c1d904c114addbbbb9afc8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca5495c14c1d904c114addbbbb9afc8b">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLPixelWiseMultiplicationQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(5.f/255.f, 20) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;OUtQInfo&quot;, { QuantizationInfo(1.f/255.f, 5) })), InPlaceDataSet))</td></tr>
<tr class="separator:aca5495c14c1d904c114addbbbb9afc8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78a21732fa8e0000bd57193dab67f3d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a78a21732fa8e0000bd57193dab67f3d6">FIXTURE_DATA_TEST_CASE</a> (RunSmallBroadcast, CLPixelWiseMultiplicationQuantizedBroadcastFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(5.f/255.f, 20) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;OUtQInfo&quot;, { QuantizationInfo(1.f/255.f, 5) })), InPlaceDataSet))</td></tr>
<tr class="separator:a78a21732fa8e0000bd57193dab67f3d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2937145aff3eded2a8fcad3a089a001"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae2937145aff3eded2a8fcad3a089a001">FIXTURE_DATA_TEST_CASE</a> (RunInplace, CLPixelWiseMultiplicationQuantizedBroadcastFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapesBroadcastInplace(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;OUtQInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;InPlace&quot;, { true })))</td></tr>
<tr class="separator:ae2937145aff3eded2a8fcad3a089a001"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a640ed8c2f3ca5294d5cdfacb2cb046ac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a640ed8c2f3ca5294d5cdfacb2cb046ac">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(5.f/255.f, 20) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/255.f, 10) })), framework::dataset::make(&quot;OUtQInfo&quot;, { QuantizationInfo(1.f/255.f, 5) })), InPlaceDataSet))</td></tr>
<tr class="separator:a640ed8c2f3ca5294d5cdfacb2cb046ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af55041bda1af441e69cd6753099cd12f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af55041bda1af441e69cd6753099cd12f">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(1.f/32768.f, 0) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/32768.f, 0) })), framework::dataset::make(&quot;OutQInfo&quot;, { QuantizationInfo(5.f/32768.f, 0) })), InPlaceDataSet))</td></tr>
<tr class="separator:af55041bda1af441e69cd6753099cd12f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2c6cf6831f588c131e658d36ea7f21c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2c6cf6831f588c131e658d36ea7f21c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLPixelWiseMultiplicationQuantizedFixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::LargeShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { 1.f, 2.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(1.f/32768.f, 0) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/32768.f, 0) })), framework::dataset::make(&quot;OutQInfo&quot;, { QuantizationInfo(5.f/32768.f, 0) })), InPlaceDataSet))</td></tr>
<tr class="separator:aa2c6cf6831f588c131e658d36ea7f21c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b9cddf94e0be5e58e712cd8a43a9c86"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2b9cddf94e0be5e58e712cd8a43a9c86">combine</a> (combine(combine(combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, { 1.f })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_EVEN)), framework::dataset::make(&quot;Src0QInfo&quot;, { QuantizationInfo(1.f/32768.f, 0) })), framework::dataset::make(&quot;Src1QInfo&quot;, { QuantizationInfo(2.f/32768.f, 0) })), framework::dataset::make(&quot;OutQInfo&quot;, { QuantizationInfo(1.f, 0) })), InPlaceDataSet))</td></tr>
<tr class="separator:a2b9cddf94e0be5e58e712cd8a43a9c86"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a7358bbca9e5c79b0b9f8c336fd38c5a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7358bbca9e5c79b0b9f8c336fd38c5a1">CLPixelWiseMultiplicationToF32Fixture&lt; float &gt;</a></td></tr>
<tr class="separator:a7358bbca9e5c79b0b9f8c336fd38c5a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a90f4daa2c304776c078d96a05d31d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5a90f4daa2c304776c078d96a05d31d7">CLPixelWiseMultiplicationToF32BroadcastFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a5a90f4daa2c304776c078d96a05d31d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7166c34c6dbfda60521ed520cfe39d14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7166c34c6dbfda60521ed520cfe39d14">CLPixelWiseMultiplicationQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a7166c34c6dbfda60521ed520cfe39d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2beab5ff5a1c02704f6d9869804f6a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2beab5ff5a1c02704f6d9869804f6a5">CLPixelWiseMultiplicationQuantizedFixture&lt; int16_t &gt;</a></td></tr>
<tr class="separator:aa2beab5ff5a1c02704f6d9869804f6a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a4567b1c0ed4817ca030cb2cbd0a51d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4567b1c0ed4817ca030cb2cbd0a51d53">&#9670;&nbsp;</a></span>PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TEST_NAME, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">FIXTURE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">MODE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SHAPES, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ACT, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">    <a class="code" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(TEST_NAME, CLPixelWiseMultiplication##FIXTURE, framework::DatasetMode::MODE,                   \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(                                                       \</div>
<div class="line">                           datasets::SHAPES,                                                                              \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                         \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                         \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                          \</div>
<div class="line">                           datasets::ConvertPolicies()),                                                                  \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)), ACT), \</div>
<div class="line">                           InPlaceDataSet))  \</div>
<div class="line">    {                                                                                                                     \</div>
<div class="line">        VALIDATE                                                                                                          \</div>
<div class="line">    }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a8d69c709ef45fd63b622f283b0723eaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d69c709ef45fd63b622f283b0723eaf">&#9670;&nbsp;</a></span>VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate(CLAccessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_abad38c31990fbed3c37c99826d7e3ada"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(framework::dataset::make(&quot;InPlace&quot;, { false }))))</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00562">PixelWiseMultiplication.cpp:562</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml_a42699a26fbdddf91da4aa58a610bb8a8"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a></div><div class="ttdeci">#define FIXTURE_DATA_TEST_CASE(TEST_NAME, FIXTURE, MODE, DATASET)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00254">Macros.h:254</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_pixel_wise_multiplication_8cpp.xhtml">PixelWiseMultiplication.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
