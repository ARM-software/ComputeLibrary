<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/mlgo/MLGOParser.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_m_l_g_o_parser_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MLGOParser.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_m_l_g_o_parser_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_m_l_g_o_parser_8h.xhtml">src/runtime/CL/mlgo/MLGOParser.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_log_8h.xhtml">arm_compute/core/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2runtime_2_c_l_2mlgo_2_utils_8h.xhtml">src/runtime/CL/mlgo/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">   30</a></span>&#160;<span class="preprocessor">#define CHECK(parser_expr, valid_var) \</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">    (parser_expr);                    \</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">    if(!valid_var)                    \</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">        return;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">   35</a></span>&#160;<span class="preprocessor">#define CHECK_DEFAULT(parser_expr, valid_var, default_val) \</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">    (parser_expr);                                         \</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">    if(!valid_var)                                         \</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">        return default_val;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_LOGGING_ENABLED</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#define FAIL_WITH_MSG(valid_var, pos, msg)           \</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">    std::stringstream ss;                            \</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">    ss &lt;&lt; &quot;MLGOParser Error: &quot; &lt;&lt; pos &lt;&lt; &quot; &quot; &lt;&lt; msg; \</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">    ARM_COMPUTE_LOG_INFO_MSG_CORE(ss.str().c_str()); \</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">    valid_var = false;                               \</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">    return;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#define FAIL_WITH_MSG_DEFAULT(valid_var, default_val, pos, msg) \</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">    std::stringstream ss;                                       \</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">    ss &lt;&lt; &quot;MLGOParser Error: &quot; &lt;&lt; pos &lt;&lt; &quot; &quot; &lt;&lt; msg;            \</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    ARM_COMPUTE_LOG_INFO_MSG_CORE(ss.str().c_str());            \</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">    valid_var = false;                                          \</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">    return default_val;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#define LOG_TOKEN_POS(tokens, pos_var) \</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">    const auto pos_var = tokens.current_pos();</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#else // ARM_COMPUTE_LOGGING_ENABLED</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">   61</a></span>&#160;<span class="preprocessor">#define FAIL_WITH_MSG(valid_var, pos, msg) \</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">    valid_var = false;                     \</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">    return;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">   65</a></span>&#160;<span class="preprocessor">#define FAIL_WITH_MSG_DEFAULT(valid_var, default_val, pos, msg) \</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">    valid_var = false;                                          \</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">    return default_val;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">   69</a></span>&#160;<span class="preprocessor">#define LOG_TOKEN_POS(tokens, pos_var)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_LOGGING_ENABLED</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">void</span> ltrim(std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.erase(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.begin(), std::find_if(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.begin(), <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.end(), [](<span class="keywordtype">char</span> ch)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        return !std::isspace(ch);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">void</span> rtrim(std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.erase(std::find_if(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.rbegin(), <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.rend(), [](<span class="keywordtype">char</span> ch)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        return !std::isspace(ch);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }).base(),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>.end());</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">void</span> trim(std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    ltrim(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    rtrim(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml">  102</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80c">  104</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80c">ComparatorType</a></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cacf20423ed48998082c20099488a0917c">Enum</a>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109">Num</a>,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80ca5a92344ee95acf10c31901b36418be77">Var</a></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;};</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#ad152352292c241d237691bcb6ae3d012">  111</a></span>&#160;<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#ad152352292c241d237691bcb6ae3d012">TokenStream::TokenStream</a>(std::istream &amp;s, <span class="keyword">const</span> std::string &amp;delims)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    : _delims{ delims }, _istream{ s }, _tokens{}, _lookahead_pos{}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    read();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a67b76affb3b5d35fa419ac234144038b">  117</a></span>&#160;TokenStream::operator bool()<span class="keyword"> const</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_tokens.empty(), <span class="stringliteral">&quot;TokenStream can never be empty&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> !reached_end();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">  123</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">TokenStream::take</a>()</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_tokens.empty(), <span class="stringliteral">&quot;TokenStream can never be empty&quot;</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> = _tokens.front();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    _tokens.pop_front();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">if</span>(_tokens.empty())</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        read();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">  134</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">TokenStream::peek</a>(<span class="keywordtype">size_t</span> i)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_tokens.empty(), <span class="stringliteral">&quot;TokenStream can never be empty&quot;</span>);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(i &gt;= <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a92c0183aad2b8fc67816d869350d9a50">max_look_ahead</a>, <span class="stringliteral">&quot;TokenStream: Exceeding max look ahead&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// NOTE: If i exceeds the stream (_istream.eof()), read() automatically appends a End token at the end</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">while</span>(_istream &amp;&amp; _tokens.size() &lt;= i)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        read();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">size_t</span> ind = std::min(i, _tokens.size() - 1);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">return</span> _tokens[ind];</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">  147</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">advance</a>(<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> &amp;pos, <span class="keywordtype">char</span> ch)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;\n&#39;</span>)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        pos.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">ln</a> += 1;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        pos.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a> = 0;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        pos.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a> += 1;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">  159</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">rewind</a>(<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> &amp;pos)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    pos.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a> -= 1;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keywordtype">void</span> TokenStream::read()</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">char</span> ch;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Skip any leading space and delim characters</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="comment">// Reached eof</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span>(!_istream.get(ch))</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">if</span>(!reached_end())</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                _tokens.emplace_back(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">TokenType::End</a>, <span class="stringliteral">&quot;&quot;</span>, _lookahead_pos);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">advance</a>(_lookahead_pos, ch);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">while</span>(std::isspace(ch) || is_delim(ch));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Read chars until we hit a delim or eof</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">auto</span> orig_pos = _lookahead_pos;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">auto</span> tok      = recognize_tok(ch);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">rewind</a>(orig_pos);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    tok.pos = orig_pos;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// Trim leading and trailing white spaces</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    trim(tok.value);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    _tokens.push_back(tok);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;Token TokenStream::recognize_tok(<span class="keywordtype">char</span> ch)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;[&#39;</span>)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">return</span> Token{ <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f">TokenType::L_List</a>, <span class="stringliteral">&quot;&quot;</span>, _lookahead_pos };</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;]&#39;</span>)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">return</span> Token{ <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5">TokenType::R_List</a>, <span class="stringliteral">&quot;&quot;</span>, _lookahead_pos };</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;.&#39;</span>)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">return</span> float_after_dp_st(std::string{ ch });</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(std::isdigit(ch))</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">return</span> num_st(std::string{ ch });</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> text_st(std::string{ ch });</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;Token TokenStream::num_st(std::string value)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordtype">char</span> ch{};</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">while</span>(_istream.get(ch))</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">advance</a>(_lookahead_pos, ch);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;.&#39;</span>)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">return</span> float_after_dp_st(value + ch);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!std::isdigit(ch))</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">if</span>(!is_delim(ch) &amp;&amp; !std::isspace(ch))</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">rewind</a>(_lookahead_pos);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                _istream.unget();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        value += ch;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">return</span> Token{ <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">TokenType::Int</a>, value, _lookahead_pos };</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;Token TokenStream::float_after_dp_st(std::string value)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordtype">char</span> ch{};</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">while</span>(_istream.get(ch))</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">advance</a>(_lookahead_pos, ch);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">if</span>(!std::isdigit(ch))</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">if</span>(!is_delim(ch) &amp;&amp; !std::isspace(ch))</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">rewind</a>(_lookahead_pos);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                _istream.unget();</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        value += ch;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">return</span> Token{ <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b">TokenType::Float</a>, value, _lookahead_pos };</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;Token TokenStream::text_st(std::string value)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;{</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">char</span> ch{};</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">while</span>(_istream.get(ch))</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">advance</a>(_lookahead_pos, ch);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">if</span>(is_delim(ch))</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span>(ch == <span class="charliteral">&#39;[&#39;</span> || ch == <span class="charliteral">&#39;]&#39;</span>)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">rewind</a>(_lookahead_pos);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            _istream.unget();</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        value += ch;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">return</span> Token{ <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">TokenType::Text</a>, value, _lookahead_pos };</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordtype">bool</span> TokenStream::reached_end()<span class="keyword"> const</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">return</span> _tokens.size() == 1 &amp;&amp; _tokens.front().type == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">TokenType::End</a>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keywordtype">bool</span> TokenStream::is_delim(<span class="keywordtype">char</span> ch)<span class="keyword"> const</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">return</span> _delims.find(ch) != std::string::npos;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">  290</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;{</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">if</span>(tok.type != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">TokenType::End</a>)</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Unexpected token at the end of stream&quot;</span>);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    }</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">  300</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span>(tok.type != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">TokenType::Int</a>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <span class="keyword">false</span>, pos, <span class="stringliteral">&quot;Expect bool or int token&quot;</span>);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordtype">bool</span> val{};</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    std::stringstream(tok.value) &gt;&gt; val;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#af4db8096adf7c69836622c111b07b16c">  313</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#af4db8096adf7c69836622c111b07b16c">int_val</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordflow">if</span>(tok.type != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">TokenType::Int</a>)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, -1, pos, <span class="stringliteral">&quot;Expect int token&quot;</span>);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordtype">int</span> val{};</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    std::stringstream(tok.value) &gt;&gt; val;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">  326</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordtype">int</span> val = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#af4db8096adf7c69836622c111b07b16c">int_val</a>(in, valid), valid, 0);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">if</span>(val &lt; 0)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, 0, pos, <span class="stringliteral">&quot;Expect unsigned int token&quot;</span>);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(val);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a823852307277021bb0b2a09ae88cda15">  337</a></span>&#160;<span class="keywordtype">float</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a823852307277021bb0b2a09ae88cda15">float_val</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">if</span>(tok.type != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b">TokenType::Float</a>)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, 0.f, pos, <span class="stringliteral">&quot;Expect float token&quot;</span>);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    }</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordtype">float</span> val{};</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    std::stringstream(tok.value) &gt;&gt; val;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;}</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">  350</a></span>&#160;std::string <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">text_val</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;{</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">if</span>(tok.type != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">TokenType::Text</a> || tok.value.empty())</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <span class="stringliteral">&quot;&quot;</span>, pos, <span class="stringliteral">&quot;Expect a non-empty text token&quot;</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">return</span> tok.value;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;}</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">  361</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keyword">const</span> std::string &amp;c_str, <span class="keywordtype">bool</span> take = <span class="keyword">true</span>)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">peek</a>();</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">if</span>(tok.type == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">TokenType::Text</a> &amp;&amp; tok.value == c_str)</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keywordflow">if</span>(take)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;}</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">  375</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keyword">const</span> std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;{</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>))</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, std::string(<span class="stringliteral">&quot;Expect text token: &quot;</span>) + <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a976209eaf8a0721986b0476674a2e7bc">  384</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a976209eaf8a0721986b0476674a2e7bc">accept_l_list</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;{</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">peek</a>();</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">if</span>(tok.type == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f">TokenType::L_List</a>)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    }</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">  395</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;{</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a976209eaf8a0721986b0476674a2e7bc">accept_l_list</a>(in))</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect &#39;[&#39;&quot;</span>);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    }</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aef320a69a7fa5b6b5b9c26d88f8570ec">  404</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aef320a69a7fa5b6b5b9c26d88f8570ec">accept_r_list</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;{</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">auto</span> tok = in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">peek</a>();</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordflow">if</span>(tok.type == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5">TokenType::R_List</a>)</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        in.<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;}</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160; </div>
<div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">  415</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">expect_r_list</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;{</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aef320a69a7fa5b6b5b9c26d88f8570ec">accept_r_list</a>(in))</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect &#39;]&#39;&quot;</span>);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    }</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a094837ba9217d35d4e334190700ac0e2">  424</a></span>&#160;<a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">ConditionalOp</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a094837ba9217d35d4e334190700ac0e2">conditional_op</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;{</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&lt;=&quot;</span>))</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    {</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">ConditionalOp::LE</a>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&gt;=&quot;</span>))</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">ConditionalOp::GE</a>;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;==&quot;</span>))</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">ConditionalOp::EQ</a>;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&lt;&quot;</span>))</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    {</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">ConditionalOp::LT</a>;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&gt;&quot;</span>))</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    {</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">ConditionalOp::GT</a>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">ConditionalOp::EQ</a>, pos, <span class="stringliteral">&quot;Expect conditional op&quot;</span>);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    }</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;}</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ac3fc36cf6c7f61b8a58c8aef369eeaff">  453</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ac3fc36cf6c7f61b8a58c8aef369eeaff">gemm_version</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;gemm-version&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(in, valid), valid);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">expect_r_list</a>(in, valid), valid);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;}</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160; </div>
<div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a774ee340628d25d1af20db7540825108">  463</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a774ee340628d25d1af20db7540825108">ip_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;{</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;ip-type&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;gpu&quot;</span>))</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    {</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        ;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    }</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;cpu&quot;</span>))</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        ;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    {</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect ip type&quot;</span>);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;}</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">  481</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">header</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;{</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;&lt;header&gt;&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ac3fc36cf6c7f61b8a58c8aef369eeaff">gemm_version</a>(in, valid), valid);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a774ee340628d25d1af20db7540825108">ip_type</a>(in, valid), valid);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;&lt;/header&gt;&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a950f4163dda9bddb0a028b1356811c44">  489</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a950f4163dda9bddb0a028b1356811c44">data_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;{</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;f16&quot;</span>))</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;f32&quot;</span>))</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    {</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;qasymm8&quot;</span>))</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    {</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, pos, <span class="stringliteral">&quot;Expect data type&quot;</span>);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;}</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160; </div>
<div class="line"><a name="l00510"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa80feacb62b7f2b06e84efd43434f4cc">  510</a></span>&#160;<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80c">ComparatorType</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa80feacb62b7f2b06e84efd43434f4cc">comparator_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;{</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;var&quot;</span>))</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80ca5a92344ee95acf10c31901b36418be77">ComparatorType::Var</a>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    }</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;num&quot;</span>))</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    {</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109">ComparatorType::Num</a>;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;enum&quot;</span>))</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    {</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cacf20423ed48998082c20099488a0917c">ComparatorType::Enum</a>;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    }</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    {</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109">ComparatorType::Num</a>, pos, <span class="stringliteral">&quot;Expect comparator type&quot;</span>);</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    }</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">  531</a></span>&#160;<a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">heuristic_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid, <span class="keywordtype">bool</span> take = <span class="keyword">true</span>)</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;{</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;gemm-type&quot;</span>, take))</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832">HeuristicType::GEMM_Type</a>;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;gemm-config-native&quot;</span>, take))</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09ae56b3139138294ddd6b272afbf59da0f">HeuristicType::GEMM_Config_Native</a>;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;gemm-config-reshaped-only-rhs&quot;</span>, take))</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a1149b156e352294778e3596869f2f799">HeuristicType::GEMM_Config_Reshaped_Only_RHS</a>;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;gemm-config-reshaped&quot;</span>, take))</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a9d5da140b56691cabc9008f74a0f6f57">HeuristicType::GEMM_Config_Reshaped</a>;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a9d5da140b56691cabc9008f74a0f6f57">HeuristicType::GEMM_Config_Reshaped</a>, pos, <span class="stringliteral">&quot;Expect heuristic type&quot;</span>);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    }</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;}</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00556"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab1a3c72df4275c7bf52e674c80804cde">  556</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab1a3c72df4275c7bf52e674c80804cde">expect_heuristic_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a> expected_ht, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;{</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keyword">auto</span> ht = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">heuristic_type</a>(in, valid, <span class="keyword">false</span>), valid);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordflow">if</span>(ht != expected_ht)</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Unexpected heuristic type&quot;</span>);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">heuristic_type</a>(in, valid, <span class="keyword">true</span>), valid);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;}</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160; </div>
<div class="line"><a name="l00567"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2ea9f63fa9d0189f82257ca7d35740ff">  567</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">GEMMType</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2ea9f63fa9d0189f82257ca7d35740ff">gemm_type</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;{</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;native&quot;</span>))</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">return</span> GEMMType::NATIVE;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    }</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;reshaped-only-rhs&quot;</span>))</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    {</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keywordflow">return</span> GEMMType::RESHAPED_ONLY_RHS;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    }</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;reshaped&quot;</span>))</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    {</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">return</span> GEMMType::RESHAPED;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    }</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    {</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, GEMMType::RESHAPED_ONLY_RHS, pos, <span class="stringliteral">&quot;Expect gemm type&quot;</span>);</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    }</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;}</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a24318e5471d411a0724da7b04c3082ef">  588</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">GEMMConfigNative</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a24318e5471d411a0724da7b04c3082ef">gemm_config_native</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;{</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> invalid_val = <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">GEMMConfigNative</a>{};</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> m0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> n0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> k0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">expect_r_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">GEMMConfigNative</a>{ m0, n0, k0 };</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;}</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160; </div>
<div class="line"><a name="l00599"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#afd3fbf91cc9c5adf3e9c3fb44d0897f5">  599</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">GEMMConfigReshapedOnlyRHS</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#afd3fbf91cc9c5adf3e9c3fb44d0897f5">gemm_config_reshaped_only_rhs</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;{</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> invalid_val = <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">GEMMConfigReshapedOnlyRHS</a>{};</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> m0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> n0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> k0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> h0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ir = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tr = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ex = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">expect_r_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">GEMMConfigReshapedOnlyRHS</a>{ m0, n0, k0, h0, ir, tr, ex };</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;}</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160; </div>
<div class="line"><a name="l00614"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a25abe2f08ab3a354a50815b06680db56">  614</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">GEMMConfigReshaped</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a25abe2f08ab3a354a50815b06680db56">gemm_config_reshaped</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;{</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> invalid_val = <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">GEMMConfigReshaped</a>{};</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> m0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> n0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> k0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> v0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> h0 = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> il = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ir = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tr = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ex = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">bool_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">expect_r_list</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">GEMMConfigReshaped</a>{ m0, n0, k0, v0, h0, il, ir, tr, ex };</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;}</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160; </div>
<div class="line"><a name="l00631"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0e27b4bc5650e5f1fcb02d5b94178b82">  631</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0e27b4bc5650e5f1fcb02d5b94178b82">gpu_priority</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;{</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;best-performance&quot;</span>))</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    {</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        ;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    }</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;best-memory-usage&quot;</span>))</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    {</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        ;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    }</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    {</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect gpu priority&quot;</span>);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    }</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;}</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160; </div>
<div class="line"><a name="l00648"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab298290427be8c5c471bcb91e50f1383">  648</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab298290427be8c5c471bcb91e50f1383">gpu_behavior</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;{</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;static&quot;</span>))</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    {</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        ;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;dynamic&quot;</span>))</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    {</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        ;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    }</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    {</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect ip type&quot;</span>);</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    }</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;}</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160; </div>
<div class="line"><a name="l00665"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aaa9aa664938923951453b12aecd352c7">  665</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aaa9aa664938923951453b12aecd352c7">free_vars</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;{</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">expect_l_list</a>(in, valid), valid);</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="keywordflow">while</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aef320a69a7fa5b6b5b9c26d88f8570ec">accept_r_list</a>(in))</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    {</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">text_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    }</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;}</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160; </div>
<div class="line"><a name="l00674"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a6247be6b4e4024471d6d5364e5e32272">  674</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a6247be6b4e4024471d6d5364e5e32272">heuristics_table_entry</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> &amp;h, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;{</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ip = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">text_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid); <span class="comment">// Num cores</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a> = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a950f4163dda9bddb0a028b1356811c44">data_type</a>(in, valid), valid);</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0e27b4bc5650e5f1fcb02d5b94178b82">gpu_priority</a>(in, valid), valid);</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab298290427be8c5c471bcb91e50f1383">gpu_behavior</a>(in, valid), valid);</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ht = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">heuristic_type</a>(in, valid), valid);</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aaa9aa664938923951453b12aecd352c7">free_vars</a>(in, valid), valid);</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>(<span class="keywordtype">id</span>, ht, ip, <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>);</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    valid = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(h.<a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#a7646f05530c35b7f8c037702e758f57c">add_heuristic_tree</a>(std::move(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>)), valid);</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;}</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160; </div>
<div class="line"><a name="l00688"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a41fe90331380e8f5da761ff70e4d60a7">  688</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a41fe90331380e8f5da761ff70e4d60a7">heuristics_table</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> &amp;h, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;{</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;&lt;heuristics-table&gt;&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keywordflow">while</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&lt;/heuristics-table&gt;&quot;</span>))</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a6247be6b4e4024471d6d5364e5e32272">heuristics_table_entry</a>(in, h, valid), valid);</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    }</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;}</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160; </div>
<div class="line"><a name="l00697"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#adcae039ec81e3fb90684a1c3e1e2540b">  697</a></span>&#160;<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#adcae039ec81e3fb90684a1c3e1e2540b">condition</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;{</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="comment">// NOTE: Only simplified Conditions are accepted, which means the lhs comparator type is fixed to Var and that of</span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="comment">// the rhs is fixed to Num (float)</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> invalid_val = <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a>{};</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> l_t         = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa80feacb62b7f2b06e84efd43434f4cc">comparator_type</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> l_v         = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">text_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> c_o         = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a094837ba9217d35d4e334190700ac0e2">conditional_op</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> r_t         = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa80feacb62b7f2b06e84efd43434f4cc">comparator_type</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> r_v         = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a823852307277021bb0b2a09ae88cda15">float_val</a>(in, valid), valid, invalid_val);</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordflow">if</span>(l_t != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80ca5a92344ee95acf10c31901b36418be77">ComparatorType::Var</a> || r_t != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109">ComparatorType::Num</a>)</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    {</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a>(valid, invalid_val, pos, <span class="stringliteral">&quot;Only accept LHS type to be Var (string) and RHS type to be Num (float)&quot;</span>);</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    }</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a>{ l_v, c_o, r_v };</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;}</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160; </div>
<div class="line"><a name="l00715"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a94b512b446c2660d292657e73c3df8d2">  715</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a94b512b446c2660d292657e73c3df8d2">heuristic_tree</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> &amp;h, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;{</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;&lt;heuristic&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tree_id = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">expect_text</a>(in, <span class="stringliteral">&quot;&gt;&quot;</span>, valid), valid);</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> *<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    std::tie(valid, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>) = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(h.<a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#adbf2b1b31eb0ad3023578ca5f4962ebc">get_heuristic_tree</a>(tree_id), valid);</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a> t_heuristic_type = std::get&lt;0&gt;(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;index());</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="keywordflow">while</span>(!<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&lt;/heuristic&gt;&quot;</span>))</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    {</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;b&quot;</span>))</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        {</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            <span class="comment">// Branch node</span></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span>   = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> cond = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#adcae039ec81e3fb90684a1c3e1e2540b">condition</a>(in, valid), valid);</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> t_id = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> f_id = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            valid           = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;add_branch(<span class="keywordtype">id</span>, cond, t_id, f_id), valid);</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        }</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;l&quot;</span>))</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        {</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;            <span class="comment">// Leaf node</span></div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">uint_val</a>(in, valid), valid);</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            <span class="comment">// NOTE: Heuristic type within each tree appears to be redundant (same information can be obtained from the</span></div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="comment">// heuristic table). For now it remains as a step for validation.</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;            <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a>(in, pos);</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab1a3c72df4275c7bf52e674c80804cde">expect_heuristic_type</a>(in, t_heuristic_type, valid), valid);</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keywordflow">switch</span>(t_heuristic_type)</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            {</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832">HeuristicType::GEMM_Type</a>:</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                {</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> g_type = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2ea9f63fa9d0189f82257ca7d35740ff">gemm_type</a>(in, valid), valid);</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                    valid             = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;add_leaf(<span class="keywordtype">id</span>, g_type), valid);</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                }</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09ae56b3139138294ddd6b272afbf59da0f">HeuristicType::GEMM_Config_Native</a>:</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                {</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> g_c = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a24318e5471d411a0724da7b04c3082ef">gemm_config_native</a>(in, valid), valid);</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                    valid          = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;add_leaf(<span class="keywordtype">id</span>, g_c), valid);</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                }</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a1149b156e352294778e3596869f2f799">HeuristicType::GEMM_Config_Reshaped_Only_RHS</a>:</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                {</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> g_c = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#afd3fbf91cc9c5adf3e9c3fb44d0897f5">gemm_config_reshaped_only_rhs</a>(in, valid), valid);</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                    valid          = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;add_leaf(<span class="keywordtype">id</span>, g_c), valid);</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                }</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a9d5da140b56691cabc9008f74a0f6f57">HeuristicType::GEMM_Config_Reshaped</a>:</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                {</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> g_c = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a25abe2f08ab3a354a50815b06680db56">gemm_config_reshaped</a>(in, valid), valid);</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                    valid          = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;add_leaf(<span class="keywordtype">id</span>, g_c), valid);</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                }</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                {</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Unexpected heuristic type&quot;</span>);</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                }</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;            }</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        }</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        {</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a>(valid, pos, <span class="stringliteral">&quot;Expect tree node type&quot;</span>);</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        }</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    }</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="comment">// Perform semantic checks in the middle of parsing so that it can fail fast should there be any invalidities</span></div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    valid = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a>(h.<a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#a9402d39ad7c6ce7ee57194a1464738d3">check_heuristic_tree</a>(tree_id), valid);</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;}</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160; </div>
<div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">  784</a></span>&#160;<a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a> &amp;in, <span class="keywordtype">bool</span> &amp;valid)</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;{</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">MLGOHeuristics</a> h;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">header</a>(in, valid), valid, h);</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a41fe90331380e8f5da761ff70e4d60a7">heuristics_table</a>(in, h, valid), valid, h);</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    <span class="keywordflow">while</span>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">accept_text</a>(in, <span class="stringliteral">&quot;&lt;heuristic&quot;</span>, <span class="keyword">false</span>))</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    {</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a94b512b446c2660d292657e73c3df8d2">heuristic_tree</a>(in, h, valid), valid, h);</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>(in, valid), valid, h);</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    valid = <a class="code" href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a>(h.<a class="code" href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#adfe8dd7e58bab1c82973c6d0e36e8ad8">check_all</a>(), valid, h);</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keywordflow">return</span> h;</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;}</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160; </div>
<div class="line"><a name="l00798"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ae1e86a77bd18304e29a85dd0cab747eb">  798</a></span>&#160;std::pair&lt;bool, MLGOHeuristics&gt; <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ae1e86a77bd18304e29a85dd0cab747eb">parse_mlgo</a>(std::istream &amp;in)</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;{</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keyword">auto</span> tokens = <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a>(in);</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordtype">bool</span> valid  = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <span class="keyword">auto</span> h      = <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a>(tokens, valid);</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="keywordflow">return</span> std::make_pair(std::move(valid), std::move(h));</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;}</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;} <span class="comment">// namespace parser</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;} <span class="comment">// namespace mlgo</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160; </div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="preprocessor">#undef CHECK</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="preprocessor">#undef CHECK_DEFAULT</span></div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="preprocessor">#undef FAIL_WITH_MSG</span></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;<span class="preprocessor">#undef FAIL_WITH_MSG_DEFAULT</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">arm_compute::mlgo::parser::TokenStream</a></div><div class="ttdoc">A stream of token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00124">MLGOParser.h:124</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_abab60833ea6760ea062273e0ba697bf2"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abab60833ea6760ea062273e0ba697bf2">arm_compute::mlgo::parser::bool_val</a></div><div class="ttdeci">bool bool_val(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00300">MLGOParser.cpp:300</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09a1149b156e352294778e3596869f2f799"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a1149b156e352294778e3596869f2f799">arm_compute::mlgo::HeuristicType::GEMM_Config_Reshaped_Only_RHS</a></div><div class="ttdeci">@ GEMM_Config_Reshaped_Only_RHS</div><div class="ttdoc">About the gemm config for reshaped only rhs kernel.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml_ab1b960957902aac101b97fac72af957d"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">arm_compute::mlgo::parser::CharPosition::ln</a></div><div class="ttdeci">size_t ln</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00101">MLGOParser.h:101</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a41fe90331380e8f5da761ff70e4d60a7"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a41fe90331380e8f5da761ff70e4d60a7">arm_compute::mlgo::parser::heuristics_table</a></div><div class="ttdeci">void heuristics_table(TokenStream &amp;in, MLGOHeuristics &amp;h, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00688">MLGOParser.cpp:688</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a723a2d3874520624df4c3214ef0ec420"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">arm_compute::mlgo::parser::header</a></div><div class="ttdeci">void header(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00481">MLGOParser.cpp:481</a></div></div>
<div class="ttc" id="a_m_l_g_o_parser_8cpp_xhtml_ad793ee6ac3e3f9996c80d8dc650439d5"><div class="ttname"><a href="_m_l_g_o_parser_8cpp.xhtml#ad793ee6ac3e3f9996c80d8dc650439d5">FAIL_WITH_MSG</a></div><div class="ttdeci">#define FAIL_WITH_MSG(valid_var, pos, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00061">MLGOParser.cpp:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">arm_compute::mlgo::ConditionalOp::LE</a></div><div class="ttdeci">@ LE</div><div class="ttdoc">Less than or equal to.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a976209eaf8a0721986b0476674a2e7bc"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a976209eaf8a0721986b0476674a2e7bc">arm_compute::mlgo::parser::accept_l_list</a></div><div class="ttdeci">bool accept_l_list(TokenStream &amp;in)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00384">MLGOParser.cpp:384</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5">arm_compute::mlgo::parser::TokenType::R_List</a></div><div class="ttdeci">@ R_List</div><div class="ttdoc">List close.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a8310583f7f26f56c8bb194b27a5cb84e"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8310583f7f26f56c8bb194b27a5cb84e">arm_compute::mlgo::parser::uint_val</a></div><div class="ttdeci">unsigned int uint_val(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00326">MLGOParser.cpp:326</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aefbb90d49b57d5b2d217717d2ff25aab"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aefbb90d49b57d5b2d217717d2ff25aab">arm_compute::mlgo::parser::expect_r_list</a></div><div class="ttdeci">void expect_r_list(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00415">MLGOParser.cpp:415</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09ae56b3139138294ddd6b272afbf59da0f"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09ae56b3139138294ddd6b272afbf59da0f">arm_compute::mlgo::HeuristicType::GEMM_Config_Native</a></div><div class="ttdeci">@ GEMM_Config_Native</div><div class="ttdoc">About the gemm config for native kernel.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_af4db8096adf7c69836622c111b07b16c"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#af4db8096adf7c69836622c111b07b16c">arm_compute::mlgo::parser::int_val</a></div><div class="ttdeci">int int_val(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00313">MLGOParser.cpp:313</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a21adc9dc5e39e405fe91b4d81ec33a3a"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a21adc9dc5e39e405fe91b4d81ec33a3a">arm_compute::mlgo::parser::text_val</a></div><div class="ttdeci">std::string text_val(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00350">MLGOParser.cpp:350</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a950f4163dda9bddb0a028b1356811c44"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a950f4163dda9bddb0a028b1356811c44">arm_compute::mlgo::parser::data_type</a></div><div class="ttdeci">DataType data_type(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00489">MLGOParser.cpp:489</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_acebc183ba3065ac4356071e2eb69a44c"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">arm_compute::mlgo::parser::TokenStream::peek</a></div><div class="ttdeci">Token peek(size_t i=0)</div><div class="ttdoc">Peek the next ith token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00134">MLGOParser.cpp:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a774ee340628d25d1af20db7540825108"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a774ee340628d25d1af20db7540825108">arm_compute::mlgo::parser::ip_type</a></div><div class="ttdeci">void ip_type(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00463">MLGOParser.cpp:463</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a823852307277021bb0b2a09ae88cda15"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a823852307277021bb0b2a09ae88cda15">arm_compute::mlgo::parser::float_val</a></div><div class="ttdeci">float float_val(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00337">MLGOParser.cpp:337</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">arm_compute::mlgo::ConditionalOp::EQ</a></div><div class="ttdeci">@ EQ</div><div class="ttdoc">Equal.</div></div>
<div class="ttc" id="a_m_l_g_o_parser_8h_xhtml"><div class="ttname"><a href="_m_l_g_o_parser_8h.xhtml">MLGOParser.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09a9d5da140b56691cabc9008f74a0f6f57"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a9d5da140b56691cabc9008f74a0f6f57">arm_compute::mlgo::HeuristicType::GEMM_Config_Reshaped</a></div><div class="ttdeci">@ GEMM_Config_Reshaped</div><div class="ttdoc">About the gemm config for reshaped kernel.</div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">GemmTuner.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00640">GemmTuner.py:640</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">arm_compute::mlgo::parser::Token</a></div><div class="ttdoc">Token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00106">MLGOParser.h:106</a></div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="a_m_l_g_o_parser_8cpp_xhtml_aeaa6d27d92cb69010488623b4863cde6"><div class="ttname"><a href="_m_l_g_o_parser_8cpp.xhtml#aeaa6d27d92cb69010488623b4863cde6">CHECK</a></div><div class="ttdeci">#define CHECK(parser_expr, valid_var)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00030">MLGOParser.cpp:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a2f7ed43a30966415307da837a24ee3ab"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2f7ed43a30966415307da837a24ee3ab">arm_compute::mlgo::parser::advance</a></div><div class="ttdeci">void advance(CharPosition &amp;pos, char ch)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00147">MLGOParser.cpp:147</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics_xhtml_a9402d39ad7c6ce7ee57194a1464738d3"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#a9402d39ad7c6ce7ee57194a1464738d3">arm_compute::mlgo::MLGOHeuristics::check_heuristic_tree</a></div><div class="ttdeci">bool check_heuristic_tree(HeuristicTree::TreeID id)</div><div class="ttdoc">Check the validity of the heuristic tree.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2mlgo_2_m_l_g_o_heuristics_8cpp_source.xhtml#l00131">MLGOHeuristics.cpp:131</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612a"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">arm_compute::CLGEMMKernelType</a></div><div class="ttdeci">CLGEMMKernelType</div><div class="ttdoc">OpenCL GEMM kernel types.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_types_8h_source.xhtml#l00031">CLTypes.h:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a24318e5471d411a0724da7b04c3082ef"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a24318e5471d411a0724da7b04c3082ef">arm_compute::mlgo::parser::gemm_config_native</a></div><div class="ttdeci">GEMMConfigNative gemm_config_native(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00588">MLGOParser.cpp:588</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">arm_compute::mlgo::GEMMConfigReshapedOnlyRHS</a></div><div class="ttdoc">GEMM Configuration for Reshaped Only RHS kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00054">Common.h:54</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_a92c0183aad2b8fc67816d869350d9a50"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a92c0183aad2b8fc67816d869350d9a50">arm_compute::mlgo::parser::TokenStream::max_look_ahead</a></div><div class="ttdeci">static constexpr size_t max_look_ahead</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00128">MLGOParser.h:128</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">arm_compute::mlgo::parser::TokenType::End</a></div><div class="ttdeci">@ End</div><div class="ttdoc">End of stream.</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics_xhtml_adfe8dd7e58bab1c82973c6d0e36e8ad8"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#adfe8dd7e58bab1c82973c6d0e36e8ad8">arm_compute::mlgo::MLGOHeuristics::check_all</a></div><div class="ttdeci">bool check_all() const</div><div class="ttdoc">Check the overall validity of the heuristics.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2mlgo_2_m_l_g_o_heuristics_8cpp_source.xhtml#l00149">MLGOHeuristics.cpp:149</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a094837ba9217d35d4e334190700ac0e2"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a094837ba9217d35d4e334190700ac0e2">arm_compute::mlgo::parser::conditional_op</a></div><div class="ttdeci">ConditionalOp conditional_op(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00424">MLGOParser.cpp:424</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_log_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ae1e86a77bd18304e29a85dd0cab747eb"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ae1e86a77bd18304e29a85dd0cab747eb">arm_compute::mlgo::parser::parse_mlgo</a></div><div class="ttdeci">std::pair&lt; bool, MLGOHeuristics &gt; parse_mlgo(std::istream &amp;in)</div><div class="ttdoc">Parse and construct a MLGOHeuristics from input stream.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00798">MLGOParser.cpp:798</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a6247be6b4e4024471d6d5364e5e32272"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a6247be6b4e4024471d6d5364e5e32272">arm_compute::mlgo::parser::heuristics_table_entry</a></div><div class="ttdeci">void heuristics_table_entry(TokenStream &amp;in, MLGOHeuristics &amp;h, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00674">MLGOParser.cpp:674</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a94b512b446c2660d292657e73c3df8d2"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a94b512b446c2660d292657e73c3df8d2">arm_compute::mlgo::parser::heuristic_tree</a></div><div class="ttdeci">void heuristic_tree(TokenStream &amp;in, MLGOHeuristics &amp;h, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00715">MLGOParser.cpp:715</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">arm_compute::mlgo::parser::CharPosition</a></div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00094">MLGOParser.h:94</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a8f6e0cacae0c93845d42effbaa6a4ef4"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a8f6e0cacae0c93845d42effbaa6a4ef4">arm_compute::mlgo::parser::heuristic_type</a></div><div class="ttdeci">HeuristicType heuristic_type(TokenStream &amp;in, bool &amp;valid, bool take=true)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00531">MLGOParser.cpp:531</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a25abe2f08ab3a354a50815b06680db56"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a25abe2f08ab3a354a50815b06680db56">arm_compute::mlgo::parser::gemm_config_reshaped</a></div><div class="ttdeci">GEMMConfigReshaped gemm_config_reshaped(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00614">MLGOParser.cpp:614</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ab1a3c72df4275c7bf52e674c80804cde"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab1a3c72df4275c7bf52e674c80804cde">arm_compute::mlgo::parser::expect_heuristic_type</a></div><div class="ttdeci">void expect_heuristic_type(TokenStream &amp;in, HeuristicType expected_ht, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00556">MLGOParser.cpp:556</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00457">Error.h:457</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">arm_compute::mlgo::HeuristicTree</a></div><div class="ttdoc">A binary decision tree based heuristic.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00067">HeuristicTree.h:67</a></div></div>
<div class="ttc" id="a_m_l_g_o_parser_8cpp_xhtml_a5b9107030ca94d1b2a5b05bedb908c73"><div class="ttname"><a href="_m_l_g_o_parser_8cpp.xhtml#a5b9107030ca94d1b2a5b05bedb908c73">CHECK_DEFAULT</a></div><div class="ttdeci">#define CHECK_DEFAULT(parser_expr, valid_var, default_val)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00035">MLGOParser.cpp:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a2ea9f63fa9d0189f82257ca7d35740ff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a2ea9f63fa9d0189f82257ca7d35740ff">arm_compute::mlgo::parser::gemm_type</a></div><div class="ttdeci">GEMMType gemm_type(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00567">MLGOParser.cpp:567</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_afd3fbf91cc9c5adf3e9c3fb44d0897f5"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#afd3fbf91cc9c5adf3e9c3fb44d0897f5">arm_compute::mlgo::parser::gemm_config_reshaped_only_rhs</a></div><div class="ttdeci">GEMMConfigReshapedOnlyRHS gemm_config_reshaped_only_rhs(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00599">MLGOParser.cpp:599</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics_xhtml_adbf2b1b31eb0ad3023578ca5f4962ebc"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#adbf2b1b31eb0ad3023578ca5f4962ebc">arm_compute::mlgo::MLGOHeuristics::get_heuristic_tree</a></div><div class="ttdeci">std::pair&lt; bool, HeuristicTree * &gt; get_heuristic_tree(HeuristicTree::TreeID id)</div><div class="ttdoc">Get the heuristic tree from tree id.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2mlgo_2_m_l_g_o_heuristics_8cpp_source.xhtml#l00168">MLGOHeuristics.cpp:168</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ab298290427be8c5c471bcb91e50f1383"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ab298290427be8c5c471bcb91e50f1383">arm_compute::mlgo::parser::gpu_behavior</a></div><div class="ttdeci">void gpu_behavior(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00648">MLGOParser.cpp:648</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">arm_compute::mlgo::GEMMConfigReshaped</a></div><div class="ttdoc">GEMM Configuration for Reshaped kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00066">Common.h:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_a4e7a89861e3005a1c22d09f73cb628ef"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">arm_compute::mlgo::parser::TokenStream::take</a></div><div class="ttdeci">Token take()</div><div class="ttdoc">Get and pop off the current token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00123">MLGOParser.cpp:123</a></div></div>
<div class="ttc" id="asrc_2runtime_2_c_l_2mlgo_2_utils_8h_xhtml"><div class="ttname"><a href="src_2runtime_2_c_l_2mlgo_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">arm_compute::mlgo::parser::TokenType::Text</a></div><div class="ttdeci">@ Text</div><div class="ttdoc">Text/String.</div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_aa36901a4911e511f25f42e191df3526d"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a></div><div class="ttdeci">DataType dt</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00051">NEBatchNormalizationLayerKernel.cpp:51</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml">arm_compute::mlgo::Condition</a></div><div class="ttdoc">A branch condition expression evaluating: feature op threshold.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00050">HeuristicTree.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">arm_compute::mlgo::ConditionalOp::LT</a></div><div class="ttdeci">@ LT</div><div class="ttdoc">Less than.</div></div>
<div class="ttc" id="a_m_l_g_o_parser_8cpp_xhtml_a0ae6199274cc42ee8a82b5beaea49ee8"><div class="ttname"><a href="_m_l_g_o_parser_8cpp.xhtml#a0ae6199274cc42ee8a82b5beaea49ee8">FAIL_WITH_MSG_DEFAULT</a></div><div class="ttdeci">#define FAIL_WITH_MSG_DEFAULT(valid_var, default_val, pos, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00065">MLGOParser.cpp:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ad9caec94da8d468edbb0a0680fa20cff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">arm_compute::mlgo::parser::mlgo</a></div><div class="ttdeci">MLGOHeuristics mlgo(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00784">MLGOParser.cpp:784</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a1e92ccbb4f87d26f5da6bc220138a80ca5a92344ee95acf10c31901b36418be77"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80ca5a92344ee95acf10c31901b36418be77">arm_compute::mlgo::parser::ComparatorType::Var</a></div><div class="ttdeci">@ Var</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics_xhtml_a7646f05530c35b7f8c037702e758f57c"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml#a7646f05530c35b7f8c037702e758f57c">arm_compute::mlgo::MLGOHeuristics::add_heuristic_tree</a></div><div class="ttdeci">bool add_heuristic_tree(HeuristicTree &amp;&amp;t)</div><div class="ttdoc">Add a heuristic tree.</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2mlgo_2_m_l_g_o_heuristics_8cpp_source.xhtml#l00187">MLGOHeuristics.cpp:187</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">arm_compute::mlgo::ConditionalOp::GE</a></div><div class="ttdeci">@ GE</div><div class="ttdoc">Greater than or equal to.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">arm_compute::mlgo::HeuristicType</a></div><div class="ttdeci">HeuristicType</div><div class="ttdoc">Types of Heuristic (tree)</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00035">Common.h:35</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml_a72f49011b5605e0c59eabd1ab811cdfd"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">arm_compute::mlgo::parser::CharPosition::col</a></div><div class="ttdeci">size_t col</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00102">MLGOParser.h:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">arm_compute::mlgo::parser::TokenType::Int</a></div><div class="ttdeci">@ Int</div><div class="ttdoc">Integral.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cab3e3076d9b3c53bede50d468b647b109">arm_compute::mlgo::parser::ComparatorType::Num</a></div><div class="ttdeci">@ Num</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f">arm_compute::mlgo::parser::TokenType::L_List</a></div><div class="ttdeci">@ L_List</div><div class="ttdoc">List open.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a7ae1d8cb84c7608131031a3bf4b9893b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a7ae1d8cb84c7608131031a3bf4b9893b">arm_compute::mlgo::parser::rewind</a></div><div class="ttdeci">void rewind(CharPosition &amp;pos)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00159">MLGOParser.cpp:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">arm_compute::mlgo::ConditionalOp::GT</a></div><div class="ttdeci">@ GT</div><div class="ttdoc">Greater than.</div></div>
<div class="ttc" id="a_m_l_g_o_parser_8cpp_xhtml_a090795fb844cf5160909b7ba00dbdf38"><div class="ttname"><a href="_m_l_g_o_parser_8cpp.xhtml#a090795fb844cf5160909b7ba00dbdf38">LOG_TOKEN_POS</a></div><div class="ttdeci">#define LOG_TOKEN_POS(tokens, pos_var)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00069">MLGOParser.cpp:69</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_abdf5d07bdb248ef563f46314780c8447"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#abdf5d07bdb248ef563f46314780c8447">arm_compute::mlgo::parser::expect_text</a></div><div class="ttdeci">void expect_text(TokenStream &amp;in, const std::string &amp;str, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00375">MLGOParser.cpp:375</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ac3fc36cf6c7f61b8a58c8aef369eeaff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ac3fc36cf6c7f61b8a58c8aef369eeaff">arm_compute::mlgo::parser::gemm_version</a></div><div class="ttdeci">void gemm_version(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00453">MLGOParser.cpp:453</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_native_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">arm_compute::mlgo::GEMMConfigNative</a></div><div class="ttdoc">GEMM Configuration for Native kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00046">Common.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aef320a69a7fa5b6b5b9c26d88f8570ec"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aef320a69a7fa5b6b5b9c26d88f8570ec">arm_compute::mlgo::parser::accept_r_list</a></div><div class="ttdeci">bool accept_r_list(TokenStream &amp;in)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00404">MLGOParser.cpp:404</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a1e92ccbb4f87d26f5da6bc220138a80cacf20423ed48998082c20099488a0917c"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80cacf20423ed48998082c20099488a0917c">arm_compute::mlgo::parser::ComparatorType::Enum</a></div><div class="ttdeci">@ Enum</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_adcae039ec81e3fb90684a1c3e1e2540b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#adcae039ec81e3fb90684a1c3e1e2540b">arm_compute::mlgo::parser::condition</a></div><div class="ttdeci">Condition condition(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00697">MLGOParser.cpp:697</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a0e27b4bc5650e5f1fcb02d5b94178b82"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0e27b4bc5650e5f1fcb02d5b94178b82">arm_compute::mlgo::parser::gpu_priority</a></div><div class="ttdeci">void gpu_priority(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00631">MLGOParser.cpp:631</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b">arm_compute::mlgo::parser::TokenType::Float</a></div><div class="ttdeci">@ Float</div><div class="ttdoc">Floating.</div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a1e92ccbb4f87d26f5da6bc220138a80c"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a1e92ccbb4f87d26f5da6bc220138a80c">arm_compute::mlgo::parser::ComparatorType</a></div><div class="ttdeci">ComparatorType</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00104">MLGOParser.cpp:104</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_m_l_g_o_heuristics.xhtml">arm_compute::mlgo::MLGOHeuristics</a></div><div class="ttdoc">MLGOHeuristics for configuring GEMM kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_heuristics_8h_source.xhtml#l00054">MLGOHeuristics.h:54</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_ad152352292c241d237691bcb6ae3d012"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#ad152352292c241d237691bcb6ae3d012">arm_compute::mlgo::parser::TokenStream::TokenStream</a></div><div class="ttdeci">TokenStream(std::istream &amp;s, const std::string &amp;delims=&quot;,\n&quot;)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00111">MLGOParser.cpp:111</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832">arm_compute::mlgo::HeuristicType::GEMM_Type</a></div><div class="ttdeci">@ GEMM_Type</div><div class="ttdoc">About the type of gemm.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00082">CoreTypes.h:82</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aac8d572e03d88760d2128e11a56220c4"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aac8d572e03d88760d2128e11a56220c4">arm_compute::mlgo::parser::expect_l_list</a></div><div class="ttdeci">void expect_l_list(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00395">MLGOParser.cpp:395</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aaa9aa664938923951453b12aecd352c7"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aaa9aa664938923951453b12aecd352c7">arm_compute::mlgo::parser::free_vars</a></div><div class="ttdeci">void free_vars(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00665">MLGOParser.cpp:665</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">arm_compute::mlgo::ConditionalOp</a></div><div class="ttdeci">ConditionalOp</div><div class="ttdoc">Conditional ops.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00040">HeuristicTree.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa80feacb62b7f2b06e84efd43434f4cc"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa80feacb62b7f2b06e84efd43434f4cc">arm_compute::mlgo::parser::comparator_type</a></div><div class="ttdeci">ComparatorType comparator_type(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00510">MLGOParser.cpp:510</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a0df57340c8f215a3ca2f8dec69068cc0"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a0df57340c8f215a3ca2f8dec69068cc0">arm_compute::mlgo::parser::accept_text</a></div><div class="ttdeci">bool accept_text(TokenStream &amp;in, const std::string &amp;c_str, bool take=true)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00361">MLGOParser.cpp:361</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_82e3926d996ac5aae32ffa787ec227cb.xhtml">mlgo</a></li><li class="navelem"><a class="el" href="_m_l_g_o_parser_8cpp.xhtml">MLGOParser.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
