<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/Framework.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_framework_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Framework.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_framework_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_FRAMEWORK</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_FRAMEWORK</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_modes_8h.xhtml">DatasetModes.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_exceptions_8h.xhtml">Exceptions.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiler_8h.xhtml">Profiler.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_case_8h.xhtml">TestCase.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_case_factory_8h.xhtml">TestCaseFactory.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_result_8h.xhtml">TestResult.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_utils_8h.xhtml">Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instruments_8h.xhtml">instruments/Instruments.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_printer_8h.xhtml">printers/Printer.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;numeric&gt;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">class </span>TestFilter;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/** Framework configuration structure */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">   57</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">FrameworkConfig</a></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">   59</a></span>&#160;    std::vector&lt;framework::InstrumentsDescription&gt; <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">instruments</a>{};               <span class="comment">/**&lt; Instrument types that will be used for benchmarking. */</span></div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">   60</a></span>&#160;    std::string                                    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">name_filter</a>{};               <span class="comment">/**&lt; Regular expression to filter tests by name. Only matching tests will be executed. */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">   61</a></span>&#160;    std::string                                    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">id_filter</a>{};                 <span class="comment">/**&lt; String to match selected test ids. Only matching tests will be executed. */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">   62</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>                                    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>{ <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">DatasetMode::ALL</a> };    <span class="comment">/**&lt; Dataset mode. */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">   63</a></span>&#160;    <span class="keywordtype">int</span>                                            <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">num_iterations</a>{ 1 };         <span class="comment">/**&lt; Number of iterations per test. */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">   64</a></span>&#160;    <span class="keywordtype">float</span>                                          <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">cooldown_sec</a>{ -1.f };        <span class="comment">/**&lt; Delay between tests in seconds. */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">   65</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>                                       <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">log_level</a>{ <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">LogLevel::NONE</a> }; <span class="comment">/**&lt; Verbosity of the output. */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">   66</a></span>&#160;    <span class="keywordtype">bool</span>                                           <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">configure_only</a>{ <span class="keyword">false</span> };     <span class="comment">/**&lt; Only configure kernels */</span></div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aa0ce7e1d2541479293f9ec29f92da6f3">   67</a></span>&#160;    <span class="keywordtype">bool</span>                                           <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aa0ce7e1d2541479293f9ec29f92da6f3">print_rerun_cmd</a>{ <span class="keyword">false</span> };    <span class="comment">/**&lt; Print the command to rerun the failed testcase */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae21f357c223957d36046a0d71cc6aed7">   68</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                                   <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae21f357c223957d36046a0d71cc6aed7">seed</a>{ 0 };                   <span class="comment">/**&lt; The seed that is used to fill tensors with random values.*/</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;};</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">/** Information about a test case.</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * A test can be identified either via its id or via its name. Additionally</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * each test is tagged with the data set mode in which it will be used and</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> * its status.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> * @note The mapping between test id and test name is not guaranteed to be</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * stable. It is subject to change as new test are added.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">   80</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">   82</a></span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a>;     <span class="comment">/**&lt; Test ID */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">   83</a></span>&#160;    std::string             <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>;   <span class="comment">/**&lt; Test name */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">   84</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>             <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>;   <span class="comment">/**&lt; Test data set mode */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">   85</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a>; <span class="comment">/**&lt; Test status */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">   88</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;lhs, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;rhs)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a> &lt; rhs.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">id</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">/** Main framework class.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * Keeps track of the global state, owns all test cases and collects results.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">   97</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> final</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">    /** Access to the singleton.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @return Unique instance of the framework class.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">get</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Supported instrument types for benchmarking.</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return Set of all available instrument types.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    std::set&lt;InstrumentsDescription&gt; <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6f786ac52185e75dfb58b386d006c078">available_instruments</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /** Init the framework.</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @see TestFilter::TestFilter for the format of the string to filter ids.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @param[in] config Framework configuration meta-data.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">init</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">FrameworkConfig</a> &amp;config);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">    /** Add a new test suite.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @warning Cannot be used at execution time. It can only be used for</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * registering test cases.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     * @param[in] name Name of the added test suite.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a3893bc1fbad02227b78bbce22bcff1ba">push_suite</a>(std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /** Remove innermost test suite.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     * @warning Cannot be used at execution time. It can only be used for</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * registering test cases.</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aedbe6ac82569518fedc4a08718f8aa93">pop_suite</a>();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">    /** Add a test case to the framework.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * @param[in] test_name Name of the new test case.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     * @param[in] mode      Mode in which to include the test.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @param[in] status    Status of the test case.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">add_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">    /** Add a data test case to the framework.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param[in] test_name   Name of the new test case.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param[in] mode        Mode in which to include the test.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @param[in] status      Status of the test case.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @param[in] description Description of @p data.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @param[in] data        Data that will be used as input to the test.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> D&gt;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">add_data_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status, std::string description, D &amp;&amp;data);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /** Add info string for the next expectation/assertion.</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     * @param[in] info Info string.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab5eae10e0a4067cff9e87fdcb186eca8">add_test_info</a>(std::string <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">    /** Clear the collected test info. */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">clear_test_info</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">    /** Check if any info has been registered.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     * @return True if there is test info.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6ad85a69f028cf3f5030666babd7e8e7">has_test_info</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">    /** Print test info.</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     * @param[out] os Output stream.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">print_test_info</a>(std::ostream &amp;os) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">    /** Tell the framework that execution of a test starts.</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     * @param[in] info Test info.</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">log_test_start</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">    /** Tell the framework that a test case is skipped.</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">     * @param[in] info Test info.</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">log_test_skipped</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">    /** Tell the framework that a test case finished.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">     * @param[in] info Test info.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">log_test_end</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">    /** Tell the framework that the currently running test case failed a non-fatal expectation.</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     * @param[in] error Description of the error.</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0128e62cd67888b56078dac05dd59761">log_failed_expectation</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> &amp;error);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">    /** Print the debug information that has already been logged</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">     * @param[in] info Description of the log info.</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">log_info</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">    /** Number of iterations per test case.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">     * @return Number of iterations per test case.</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">num_iterations</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">    /** Set number of iterations per test case.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">     * @param[in] num_iterations Number of iterations per test case.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ae0b69f2142100651d022d5af576f42cf">set_num_iterations</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">num_iterations</a>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">    /** Should errors be caught or thrown by the framework.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">     * @return True if errors are thrown.</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">throw_errors</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">    /** Set whether errors are caught or thrown by the framework.</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">     * @param[in] throw_errors True if errors should be thrown.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">set_throw_errors</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">throw_errors</a>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">    /** Indicates if test execution is stopped after the first failed test.</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * @return True if the execution is going to be stopped after the first failed test.</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">stop_on_error</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">    /** Set whether to stop execution after the first failed test.</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">     * @param[in] stop_on_error True if execution is going to be stopped after first failed test.</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">set_stop_on_error</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">stop_on_error</a>);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">    /** Indicates if a test should be marked as failed when its assets are missing.</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">     * @return True if a test should be marked as failed when its assets are missing.</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">error_on_missing_assets</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">    /** Set whether a test should be considered as failed if its assets cannot be found.</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">     * @param[in] error_on_missing_assets True if a test should be marked as failed when its assets are missing.</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">set_error_on_missing_assets</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">error_on_missing_assets</a>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">    /** Run all enabled test cases.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     * @return True if all test cases executed successful.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">run</a>();</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">    /** Set the result for an executed test case.</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     * @param[in] info   Test info.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">     * @param[in] result Execution result.</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">set_test_result</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a> result);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">    /** Use the specified printer to output test results from the last run.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">     * This method can be used if the test results need to be obtained using a</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">     * different printer than the one managed by the framework.</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">     * @param[in] printer Printer used to output results.</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2fac8e2013fb935c058fb09ffd972b54">print_test_results</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;printer) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">    /** Factory method to obtain a configured profiler.</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">     * The profiler enables all instruments that have been passed to the @ref</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">     * init method.</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     * @return Configured profiler to collect benchmark results.</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">get_profiler</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">    /** Set the printer used for the output of test results.</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">     * @param[in] printer Pointer to a printer.</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">add_printer</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> *printer);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">    /** List of @ref TestInfo&#39;s.</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">     * @return Vector with all test ids.</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    std::vector&lt;TestInfo&gt; <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">test_infos</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">    /** Get the current logging level</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">     * @return The current logging level.</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">    /** Sets instruments info</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">     * @note TODO(COMPMID-2638) : Remove once instruments are transferred outside the framework.</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">     * @param[in] instr_info Instruments info to set</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">set_instruments_info</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a> instr_info);<span class="comment"></span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">    /** Get the configure only flag</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">     * @return The current configure only flag.</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a955c72412a010bb3ea68a363c5c682d4">configure_only</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">    /** Return whether the new fixture has been called</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">     * @return The current new fixture call flag.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c5c063edcdae06657674308ceae80fe">new_fixture_call</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">    /** Set the new fixture call flag</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">     * @param[in] val Value to set for the flag</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c1f2b12dae229a936fcbb6c54b7ee24">set_new_fixture_call</a>(<span class="keywordtype">bool</span> val);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    ~<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestResult::Status</a> run_test(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">TestCaseFactory</a> &amp;test_factory);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    std::map&lt;TestResult::Status, int&gt; count_test_results() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">    /** Returns the current test suite name.</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     * @warning Cannot be used at execution time to get the test suite of the</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">     * currently executed test case. It can only be used for registering test</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">     * cases.</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     * @return Name of the current test suite.</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    std::string current_suite_name() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="comment">/* Perform func on all printers */</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordtype">void</span> func_on_all_printers(F &amp;&amp;func);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    std::vector&lt;std::string&gt;                      _test_suite_name{};</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    std::vector&lt;std::unique_ptr&lt;TestCaseFactory&gt;&gt; _test_factories{};</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    std::map&lt;TestInfo, TestResult&gt; _test_results{};</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordtype">int</span>                    _num_iterations{ 1 };</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordtype">float</span>                  _cooldown_sec{ -1.f };</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordtype">bool</span>                   _throw_errors{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordtype">bool</span>                   _stop_on_error{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordtype">bool</span>                   _error_on_missing_assets{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    std::vector&lt;Printer *&gt; _printers{};</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordtype">bool</span>                   _configure_only{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordtype">bool</span>                   _new_fixture_call{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordtype">bool</span>                   _print_rerun_cmd{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>           _seed{ 0 };</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">using</span> create_function = std::unique_ptr&lt;Instrument&gt;();</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    std::map&lt;InstrumentsDescription, create_function *&gt; _available_instruments{};</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    std::set&lt;framework::InstrumentsDescription&gt; _instruments{ std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab50339a10e1de285ac99d4c3990b8693">InstrumentType::NONE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>) };</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::unique_ptr&lt;TestFilter&gt;                 _test_filter;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>                                    _log_level{ <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a5fb1f955b45e38e31789286a1790398d">LogLevel::ALL</a> };</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a>                             *_current_test_info{ <span class="keyword">nullptr</span> };</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a>                                 *_current_test_result{ <span class="keyword">nullptr</span> };</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    std::vector&lt;std::string&gt;                    _test_info{};</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;};</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">  376</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">Framework::add_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status)</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;{</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    _test_factories.emplace_back(std::make_unique&lt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">SimpleTestCaseFactory&lt;T&gt;</a>&gt;(current_suite_name(), std::move(test_name), <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, status));</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> D&gt;</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">  382</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">Framework::add_data_test_case</a>(std::string test_name, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status, std::string description, D &amp;&amp;data)</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;{</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="comment">// WORKAROUND for GCC 4.9</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="comment">// The function should get *it which is tuple but that seems to trigger a</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="comment">// bug in the compiler.</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keyword">auto</span> tmp = std::unique_ptr&lt;DataTestCaseFactory&lt;T, decltype(*std::declval&lt;D&gt;())&gt;&gt;(<span class="keyword">new</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">DataTestCaseFactory</a>&lt;T, decltype(*std::declval&lt;D&gt;())&gt;(current_suite_name(), std::move(test_name), <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>, status,</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                                                                     std::move(description), *data));</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    _test_factories.emplace_back(std::move(tmp));</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;}</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_FRAMEWORK */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_data_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">arm_compute::test::framework::DataTestCaseFactory</a></div><div class="ttdoc">Implementation of a test case factory to create data test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00114">TestCaseFactory.h:114</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a3893bc1fbad02227b78bbce22bcff1ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a3893bc1fbad02227b78bbce22bcff1ba">arm_compute::test::framework::Framework::push_suite</a></div><div class="ttdeci">void push_suite(std::string name)</div><div class="ttdoc">Add a new test suite.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00148">Framework.cpp:148</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">arm_compute::test::framework::FrameworkConfig</a></div><div class="ttdoc">Framework configuration structure.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00057">Framework.h:57</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ab702e2f7530d6172eea3780d8923bd71"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">arm_compute::test::framework::FrameworkConfig::num_iterations</a></div><div class="ttdeci">int num_iterations</div><div class="ttdoc">Number of iterations per test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00063">Framework.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">arm_compute::test::framework::Profiler</a></div><div class="ttdoc">Profiler class to collect benchmark numbers.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00045">Profiler.h:45</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_aa0ce7e1d2541479293f9ec29f92da6f3"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aa0ce7e1d2541479293f9ec29f92da6f3">arm_compute::test::framework::FrameworkConfig::print_rerun_cmd</a></div><div class="ttdeci">bool print_rerun_cmd</div><div class="ttdoc">Print the command to rerun the failed testcase.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00067">Framework.h:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5f16ced78873ee3a193490197fbf57a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">arm_compute::test::framework::Framework::add_printer</a></div><div class="ttdeci">void add_printer(Printer *printer)</div><div class="ttdoc">Set the printer used for the output of test results.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00678">Framework.cpp:678</a></div></div>
<div class="ttc" id="a_test_case_factory_8h_xhtml"><div class="ttname"><a href="_test_case_factory_8h.xhtml">TestCaseFactory.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a2899d3c2cd558569c0fd015419fe7a20"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">arm_compute::test::framework::Framework::print_test_info</a></div><div class="ttdeci">void print_test_info(std::ostream &amp;os) const</div><div class="ttdoc">Print test info.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00173">Framework.cpp:173</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ad8e7764125fcd790e0b151d26cfe949c"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">arm_compute::test::framework::Framework::add_test_case</a></div><div class="ttdeci">void add_test_case(std::string test_name, DatasetMode mode, TestCaseFactory::Status status)</div><div class="ttdoc">Add a test case to the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00376">Framework.h:376</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::test::framework::TestResult::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">Execution status of a test.</div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00042">TestResult.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aacd94676ebb33ecba00dfebe12c9392d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">arm_compute::test::framework::Framework::test_infos</a></div><div class="ttdeci">std::vector&lt; TestInfo &gt; test_infos() const</div><div class="ttdoc">List of TestInfo's.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00683">Framework.cpp:683</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_test_error_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">arm_compute::test::framework::TestError</a></div><div class="ttdoc">Error class for failures during test execution.</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00078">Exceptions.h:78</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_aadbc5003f5cc399930b16ddb89b16cdc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">arm_compute::test::framework::FrameworkConfig::mode</a></div><div class="ttdeci">DatasetMode mode</div><div class="ttdoc">Dataset mode.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00062">Framework.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab4b7e9757ad7e9d23b608b617c5dffa6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">arm_compute::test::framework::Framework::set_stop_on_error</a></div><div class="ttdeci">void set_stop_on_error(bool stop_on_error)</div><div class="ttdoc">Set whether to stop execution after the first failed test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00277">Framework.cpp:277</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a955c72412a010bb3ea68a363c5c682d4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a955c72412a010bb3ea68a363c5c682d4">arm_compute::test::framework::Framework::configure_only</a></div><div class="ttdeci">bool configure_only() const</div><div class="ttdoc">Get the configure only flag.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00715">Framework.cpp:715</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab803db44aeb4ad8cd93193be5eaf0fb7"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">arm_compute::test::framework::Framework::num_iterations</a></div><div class="ttdeci">int num_iterations() const</div><div class="ttdoc">Number of iterations per test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00257">Framework.cpp:257</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a2fac8e2013fb935c058fb09ffd972b54"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2fac8e2013fb935c058fb09ffd972b54">arm_compute::test::framework::Framework::print_test_results</a></div><div class="ttdeci">void print_test_results(Printer &amp;printer) const</div><div class="ttdoc">Use the specified printer to output test results from the last run.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00634">Framework.cpp:634</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aedbe6ac82569518fedc4a08718f8aa93"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aedbe6ac82569518fedc4a08718f8aa93">arm_compute::test::framework::Framework::pop_suite</a></div><div class="ttdeci">void pop_suite()</div><div class="ttdoc">Remove innermost test suite.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00153">Framework.cpp:153</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a16fda368866c2a2e2d5a54eda52050f9"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">arm_compute::test::framework::FrameworkConfig::log_level</a></div><div class="ttdeci">LogLevel log_level</div><div class="ttdoc">Verbosity of the output.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00065">Framework.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::test::framework::TestCaseFactory::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">Test case status.</div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00049">TestCaseFactory.h:49</a></div></div>
<div class="ttc" id="atests_2framework_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9e590b7d913d38286ab0916c38bb600f"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">arm_compute::test::framework::TestInfo::status</a></div><div class="ttdeci">TestCaseFactory::Status status</div><div class="ttdoc">Test status.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00085">Framework.h:85</a></div></div>
<div class="ttc" id="a_test_case_8h_xhtml"><div class="ttname"><a href="_test_case_8h.xhtml">TestCase.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a41183a1a8909c9f852acd99d3b69626d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">arm_compute::test::framework::Framework::error_on_missing_assets</a></div><div class="ttdeci">bool error_on_missing_assets() const</div><div class="ttdoc">Indicates if a test should be marked as failed when its assets are missing.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00292">Framework.cpp:292</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="a_profiler_8h_xhtml"><div class="ttname"><a href="_profiler_8h.xhtml">Profiler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ae0b69f2142100651d022d5af576f42cf"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ae0b69f2142100651d022d5af576f42cf">arm_compute::test::framework::Framework::set_num_iterations</a></div><div class="ttdeci">void set_num_iterations(int num_iterations)</div><div class="ttdoc">Set number of iterations per test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00262">Framework.cpp:262</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00097">Framework.h:97</a></div></div>
<div class="ttc" id="a_dataset_modes_8h_xhtml"><div class="ttname"><a href="_dataset_modes_8h.xhtml">DatasetModes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a0fa5f7d6bcff8bfd18ec2aadf660a489"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">arm_compute::test::framework::Framework::stop_on_error</a></div><div class="ttdeci">bool stop_on_error() const</div><div class="ttdoc">Indicates if test execution is stopped after the first failed test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00282">Framework.cpp:282</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a47e7a1a6baab80560c11a9ee8f8a0636"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">arm_compute::test::framework::Framework::get_profiler</a></div><div class="ttdeci">Profiler get_profiler() const</div><div class="ttdoc">Factory method to obtain a configured profiler.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00649">Framework.cpp:649</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ae702b5e08d44b9130a674277503d1af1"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">arm_compute::test::framework::FrameworkConfig::configure_only</a></div><div class="ttdeci">bool configure_only</div><div class="ttdoc">Only configure kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00066">Framework.h:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a755837a8f4938f8013f4251014a958e4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">arm_compute::test::framework::Framework::set_instruments_info</a></div><div class="ttdeci">void set_instruments_info(InstrumentsInfo instr_info)</div><div class="ttdoc">Sets instruments info.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00709">Framework.cpp:709</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::LogLevel::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a2b9042cf824009ba61c37b0c99b3eab7"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">arm_compute::test::framework::FrameworkConfig::id_filter</a></div><div class="ttdeci">std::string id_filter</div><div class="ttdoc">String to match selected test ids.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00061">Framework.h:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5e61ba4403f0d2bd4f755f59193af692"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">arm_compute::test::framework::Framework::set_throw_errors</a></div><div class="ttdeci">void set_throw_errors(bool throw_errors)</div><div class="ttdoc">Set whether errors are caught or thrown by the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00267">Framework.cpp:267</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a4ad3b7ba69599b41ab0954a39d7e7cbc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">arm_compute::test::framework::FrameworkConfig::instruments</a></div><div class="ttdeci">std::vector&lt; framework::InstrumentsDescription &gt; instruments</div><div class="ttdoc">Instrument types that will be used for benchmarking.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00059">Framework.h:59</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::ScaleFactor::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">arm_compute::test::framework::Printer</a></div><div class="ttdoc">Abstract printer class used by the Framework to present output.</div><div class="ttdef"><b>Definition:</b> <a href="_printer_8h_source.xhtml#l00043">Printer.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a149ad6701e3e2414cb566bb414029841"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">arm_compute::test::framework::Framework::run</a></div><div class="ttdeci">bool run()</div><div class="ttdoc">Run all enabled test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00546">Framework.cpp:546</a></div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a46a0cefc3b9a13645548ec705f438ce9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">arm_compute::test::framework::Framework::set_error_on_missing_assets</a></div><div class="ttdeci">void set_error_on_missing_assets(bool error_on_missing_assets)</div><div class="ttdoc">Set whether a test should be considered as failed if its assets cannot be found.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00287">Framework.cpp:287</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a60b060774255916807ef1cca44bfbfe1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">arm_compute::test::framework::Framework::log_info</a></div><div class="ttdeci">void log_info(const std::string &amp;info)</div><div class="ttdoc">Print the debug information that has already been logged.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00246">Framework.cpp:246</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5a2d19934af27623634c5ab3c47a9446"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">arm_compute::test::framework::Framework::log_test_skipped</a></div><div class="ttdeci">void log_test_skipped(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that a test case is skipped.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00203">Framework.cpp:203</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a9ec753fd569ec1bf169e26013898eb4a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">arm_compute::test::framework::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const TestInfo &amp;lhs, const TestInfo &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00088">Framework.h:88</a></div></div>
<div class="ttc" id="a_exceptions_8h_xhtml"><div class="ttname"><a href="_exceptions_8h.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a_instruments_8h_xhtml"><div class="ttname"><a href="_instruments_8h.xhtml">Instruments.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a4494f098cda45f40105c454d0ffa9147"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">arm_compute::test::framework::Framework::set_test_result</a></div><div class="ttdeci">void set_test_result(TestInfo info, TestResult result)</div><div class="ttdoc">Set the result for an executed test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00629">Framework.cpp:629</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00124">Framework.cpp:124</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a1c1f2b12dae229a936fcbb6c54b7ee24"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c1f2b12dae229a936fcbb6c54b7ee24">arm_compute::test::framework::Framework::set_new_fixture_call</a></div><div class="ttdeci">void set_new_fixture_call(bool val)</div><div class="ttdoc">Set the new fixture call flag.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00725">Framework.cpp:725</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_instruments_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">arm_compute::test::framework::InstrumentsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8h_source.xhtml#l00063">Instruments.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab2cd8b6e8e0aac442fc1e35ad9e1ac45"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">arm_compute::test::framework::Framework::log_test_end</a></div><div class="ttdeci">void log_test_end(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that a test case finished.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00208">Framework.cpp:208</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a543c34e4b882beda4230fbb8e9b99bfc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">arm_compute::test::framework::FrameworkConfig::name_filter</a></div><div class="ttdeci">std::string name_filter</div><div class="ttdoc">Regular expression to filter tests by name.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00060">Framework.h:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">arm_compute::test::framework::TestCaseFactory</a></div><div class="ttdoc">Abstract factory class to create test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00040">TestCaseFactory.h:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a7441ef0865bcb3db9b8064dd7375c1ea"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a7441ef0865bcb3db9b8064dd7375c1ea">arm_compute::test::framework::TestInfo::id</a></div><div class="ttdeci">int id</div><div class="ttdoc">Test ID.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00082">Framework.h:82</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab5eae10e0a4067cff9e87fdcb186eca8"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab5eae10e0a4067cff9e87fdcb186eca8">arm_compute::test::framework::Framework::add_test_info</a></div><div class="ttdeci">void add_test_info(std::string info)</div><div class="ttdoc">Add info string for the next expectation/assertion.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00158">Framework.cpp:158</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_result_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">arm_compute::test::framework::TestResult</a></div><div class="ttdoc">Class to store results of a test.</div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00039">TestResult.h:39</a></div></div>
<div class="ttc" id="anamespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00196">clang_tidy_rules.py:196</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aff39a3b89865624b6579d6980fb88654"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aff39a3b89865624b6579d6980fb88654">arm_compute::test::framework::Framework::add_data_test_case</a></div><div class="ttdeci">void add_data_test_case(std::string test_name, DatasetMode mode, TestCaseFactory::Status status, std::string description, D &amp;&amp;data)</div><div class="ttdoc">Add a data test case to the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00382">Framework.h:382</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">arm_compute::test::framework::SimpleTestCaseFactory</a></div><div class="ttdoc">Implementation of a test case factory to create non-data test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00103">TestCaseFactory.h:103</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::InstrumentType::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_afb6a973ccd27225a87d59d93ca458720"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">arm_compute::test::framework::Framework::clear_test_info</a></div><div class="ttdeci">void clear_test_info()</div><div class="ttdoc">Clear the collected test info.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00163">Framework.cpp:163</a></div></div>
<div class="ttc" id="a_printer_8h_xhtml"><div class="ttname"><a href="_printer_8h.xhtml">Printer.h</a></div></div>
<div class="ttc" id="a_test_result_8h_xhtml"><div class="ttname"><a href="_test_result_8h.xhtml">TestResult.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a6f786ac52185e75dfb58b386d006c078"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6f786ac52185e75dfb58b386d006c078">arm_compute::test::framework::Framework::available_instruments</a></div><div class="ttdeci">std::set&lt; InstrumentsDescription &gt; available_instruments() const</div><div class="ttdoc">Supported instrument types for benchmarking.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00100">Framework.cpp:100</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a01e3aa67ceaeae837e9a68050d850724"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">arm_compute::test::framework::Framework::init</a></div><div class="ttdeci">void init(const FrameworkConfig &amp;config)</div><div class="ttdoc">Init the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00130">Framework.cpp:130</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a621f62a02364fc584cf86a8f221e715d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a621f62a02364fc584cf86a8f221e715d">arm_compute::test::framework::Framework::log_level</a></div><div class="ttdeci">LogLevel log_level() const</div><div class="ttdoc">Get the current logging level.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00704">Framework.cpp:704</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_aadbc5003f5cc399930b16ddb89b16cdc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">arm_compute::test::framework::TestInfo::mode</a></div><div class="ttdeci">DatasetMode mode</div><div class="ttdoc">Test data set mode.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00084">Framework.h:84</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00080">Framework.h:80</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ae21f357c223957d36046a0d71cc6aed7"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae21f357c223957d36046a0d71cc6aed7">arm_compute::test::framework::FrameworkConfig::seed</a></div><div class="ttdeci">unsigned int seed</div><div class="ttdoc">The seed that is used to fill tensors with random values.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00068">Framework.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8135a21178dd34ec3b334b83381269a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">arm_compute::test::framework::Framework::log_test_start</a></div><div class="ttdeci">void log_test_start(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that execution of a test starts.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00192">Framework.cpp:192</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a1455a5b0439d88e4e1f4e344fb0f9113"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">arm_compute::test::framework::FrameworkConfig::cooldown_sec</a></div><div class="ttdeci">float cooldown_sec</div><div class="ttdoc">Delay between tests in seconds.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00064">Framework.h:64</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">arm_compute::test::framework::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Severity of the information.</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00050">Exceptions.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a0128e62cd67888b56078dac05dd59761"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0128e62cd67888b56078dac05dd59761">arm_compute::test::framework::Framework::log_failed_expectation</a></div><div class="ttdeci">void log_failed_expectation(const TestError &amp;error)</div><div class="ttdoc">Tell the framework that the currently running test case failed a non-fatal expectation.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00228">Framework.cpp:228</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af2086722b11ed9e777db00a74cdecfc1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">arm_compute::test::framework::Framework::throw_errors</a></div><div class="ttdeci">bool throw_errors() const</div><div class="ttdoc">Should errors be caught or thrown by the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00272">Framework.cpp:272</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a1c5c063edcdae06657674308ceae80fe"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c5c063edcdae06657674308ceae80fe">arm_compute::test::framework::Framework::new_fixture_call</a></div><div class="ttdeci">bool new_fixture_call() const</div><div class="ttdoc">Return whether the new fixture has been called.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00720">Framework.cpp:720</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::test::framework::TestInfo::name</a></div><div class="ttdeci">std::string name</div><div class="ttdoc">Test name.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00083">Framework.h:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a6ad85a69f028cf3f5030666babd7e8e7"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6ad85a69f028cf3f5030666babd7e8e7">arm_compute::test::framework::Framework::has_test_info</a></div><div class="ttdeci">bool has_test_info() const</div><div class="ttdoc">Check if any info has been registered.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00168">Framework.cpp:168</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="_framework_8h.xhtml">Framework.h</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
