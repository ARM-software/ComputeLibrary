<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/mlgo/HeuristicTree.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_heuristic_tree_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">HeuristicTree.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_heuristic_tree_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_heuristic_tree_8h.xhtml">src/runtime/CL/mlgo/HeuristicTree.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_log_8h.xhtml">arm_compute/core/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;deque&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">bool</span> evaluate(GEMMShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, Condition cond)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// PRE: all features and ConditionalOps are valid</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    constexpr <span class="keywordtype">float</span> eps = 0.0001f;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment">// Calculate all secondary features</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    std::vector&lt;std::pair&lt;std::string, float&gt;&gt; cond_values</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        { <span class="stringliteral">&quot;m&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.m) },</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        { <span class="stringliteral">&quot;n&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.n) },</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        { <span class="stringliteral">&quot;k&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.k) },</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        { <span class="stringliteral">&quot;b&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.b) },</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        { <span class="stringliteral">&quot;r_mn&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.m) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.n },</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        { <span class="stringliteral">&quot;r_mk&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.m) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.k },</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        { <span class="stringliteral">&quot;r_nk&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.n) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.k },</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        { <span class="stringliteral">&quot;r_mnk&quot;</span>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.m) / (<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.n) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.k) },</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        { <span class="stringliteral">&quot;workload&quot;</span>, (<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.m) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.n * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.b) / 20.0 }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    };</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">auto</span> cond_value_pair_it = std::find_if(cond_values.begin(), cond_values.end(),</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                           [&amp;cond](decltype(*cond_values.begin()) it)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        return it.first == cond.feature;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    });</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(cond_value_pair_it == cond_values.end());</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> cond_value = cond_value_pair_it-&gt;second;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">switch</span>(cond.op)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">ConditionalOp::LT</a>:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">return</span> cond_value &lt; cond.threshold;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">ConditionalOp::LE</a>:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span> cond_value &lt;= cond.threshold;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">ConditionalOp::GT</a>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span> cond_value &gt; cond.threshold;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">ConditionalOp::GE</a>:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">return</span> cond_value &gt;= cond.threshold;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">ConditionalOp::EQ</a>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">return</span> std::abs(cond_value - cond.threshold) &lt; eps;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;constexpr <span class="keywordtype">size_t</span>                HeuristicTree::_max_num_nodes;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;constexpr <span class="keywordtype">size_t</span>                HeuristicTree::_max_query_depth;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;constexpr <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">HeuristicTree::NodeID</a> HeuristicTree::_root;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">   95</a></span>&#160;<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree::HeuristicTree</a>()</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    : <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a>(0, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a>::<a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832">GEMM_Type</a>, <span class="stringliteral">&quot;&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>::<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">F32</a>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ac82117f20004c81ccb8b21445e813659">  100</a></span>&#160;<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree::HeuristicTree</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">TreeID</a> <span class="keywordtype">id</span>, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a> h_type, <span class="keyword">const</span> std::string &amp;ip_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    : _id{ <span class="keywordtype">id</span> }, _heuristic_type{ h_type }, _ip_target{ ip_target }, _data_type{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> }, _tree{}</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a53d45213a730d052997de2f15d6324ab">  106</a></span>&#160;std::pair&lt;bool, T&gt; <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a53d45213a730d052997de2f15d6324ab">HeuristicTree::query</a>(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// Root ID = 0;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">auto</span>   cur_node = _tree.at(_root).get();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">size_t</span> depth    = 0;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">while</span>(cur_node-&gt;type() != <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">NodeType::Leaf</a>)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span>(depth &gt; _max_query_depth)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Exceeding max query depth: %zu. Is the tree too deep?&quot;</span>, _max_query_depth);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> std::make_pair(<span class="keyword">false</span>, T{});</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(cur_node-&gt;type() != <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">NodeType::Branch</a>, <span class="stringliteral">&quot;Unexpected NodeType&quot;</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">auto</span> br_node = utils::cast::polymorphic_downcast&lt;BranchNode *&gt;(cur_node);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">if</span>(evaluate(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, br_node-&gt;condition))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            cur_node = _tree.at(br_node-&gt;true_node).get();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            cur_node = _tree.at(br_node-&gt;false_node).get();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        ++depth;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(cur_node-&gt;type() != <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">NodeType::Leaf</a>, <span class="stringliteral">&quot;Unexpected NodeType&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">auto</span> l_node = utils::cast::polymorphic_downcast&lt;LeafNode&lt;T&gt; *&gt;(cur_node);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> std::make_pair(<span class="keyword">true</span>, l_node-&gt;value);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">  136</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">HeuristicTree::add_leaf</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, T val)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span>(_tree.size() &gt;= _max_num_nodes)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Exceeding the maximum number of nodes allowed %zu&quot;</span>, _max_num_nodes);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span>(_tree.find(<span class="keywordtype">id</span>) != _tree.end())</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Cannot add node; node id %zu already exists&quot;</span>, <span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    _tree[<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">id</a>] = std::make_unique&lt;LeafNode&lt;T&gt;&gt;(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">id</a>, val);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#aa133e1d9d7080a4071bbe101bc350f22">  152</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#aa133e1d9d7080a4071bbe101bc350f22">HeuristicTree::add_branch</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> cond, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> t_node, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> f_node)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span>(_tree.size() &gt;= _max_num_nodes)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Exceeding the maximum number of nodes allowed %zu&quot;</span>, _max_num_nodes);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">const</span> std::set&lt;std::string&gt; supported_features =</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="stringliteral">&quot;m&quot;</span>, <span class="stringliteral">&quot;n&quot;</span>, <span class="stringliteral">&quot;k&quot;</span>, <span class="stringliteral">&quot;b&quot;</span>, <span class="stringliteral">&quot;r_mn&quot;</span>, <span class="stringliteral">&quot;r_mk&quot;</span>, <span class="stringliteral">&quot;r_nk&quot;</span>, <span class="stringliteral">&quot;r_mnk&quot;</span>, <span class="stringliteral">&quot;workload&quot;</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> orig_feature = cond.<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::transform(cond.<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>.begin(), cond.<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>.end(), cond.<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>.begin(), [](<span class="keywordtype">char</span> c)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        return std::tolower(c);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    });</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">if</span>(supported_features.find(cond.<a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>) == supported_features.end())</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Unsupported feature %s&quot;</span>, orig_feature.c_str());</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span>(_tree.find(<span class="keywordtype">id</span>) != _tree.end())</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Cannot add node; node id %zu already exists&quot;</span>, <span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    _tree[<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">id</a>] = std::make_unique&lt;BranchNode&gt;(<span class="keywordtype">id</span>, cond, t_node, f_node);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">bool</span> HeuristicTree::check_if_structurally_correct()<span class="keyword"> const</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    std::set&lt;NodeID&gt;   visited;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    std::deque&lt;NodeID&gt; to_visit{ _root };</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">while</span>(!to_visit.empty())</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">auto</span> <span class="keywordtype">id</span> = to_visit.front();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        to_visit.pop_front();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">if</span>(_tree.find(<span class="keywordtype">id</span>) == _tree.end())</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Missing node %zu&quot;</span>, <span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keyword">auto</span> not_seen_before = visited.insert(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">if</span>(!not_seen_before.second)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <a class="code" href="arm__compute_2core_2_log_8h.xhtml#a14f4c3a00d20ad742642767c9449993e">ARM_COMPUTE_LOG_INFO_MSG_CORE</a>(<span class="stringliteral">&quot;Not a tree; contains cycles or loops&quot;</span>);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">auto</span> cur_node = _tree.at(<span class="keywordtype">id</span>).get();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span>(cur_node-&gt;type() == <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">NodeType::Branch</a>)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keyword">auto</span> br_node = utils::cast::polymorphic_downcast&lt;BranchNode *&gt;(cur_node);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            to_visit.push_back(br_node-&gt;true_node);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            to_visit.push_back(br_node-&gt;false_node);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">if</span>(visited.size() != _tree.size())</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#a14f4c3a00d20ad742642767c9449993e">ARM_COMPUTE_LOG_INFO_MSG_CORE</a>(<span class="stringliteral">&quot;Contains disjoint nodes&quot;</span>);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ae1ee541bb22588b6a71650c807efca90">  220</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ae1ee541bb22588b6a71650c807efca90">HeuristicTree::check</a>()</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">if</span>(_tree.empty())</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#a14f4c3a00d20ad742642767c9449993e">ARM_COMPUTE_LOG_INFO_MSG_CORE</a>(<span class="stringliteral">&quot;Empty tree encountered&quot;</span>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span>(_tree.find(_root) == _tree.end())</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a>(<span class="stringliteral">&quot;Missing root. Root must have a Node ID of %zu&quot;</span>, _root);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> check_if_structurally_correct();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keyword">template</span> std::pair&lt;bool, GEMMType&gt; HeuristicTree::query&lt;GEMMType&gt;(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span> std::pair&lt;bool, GEMMConfigNative&gt; HeuristicTree::query&lt;GEMMConfigNative&gt;(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">template</span> std::pair&lt;bool, GEMMConfigReshapedOnlyRHS&gt; HeuristicTree::query&lt;GEMMConfigReshapedOnlyRHS&gt;(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword">template</span> std::pair&lt;bool, GEMMConfigReshaped&gt; HeuristicTree::query&lt;GEMMConfigReshaped&gt;(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">template</span> <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">HeuristicTree::add_leaf</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">GEMMType</a> val);<span class="comment"></span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">template</span> <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">HeuristicTree::add_leaf</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">GEMMConfigNative</a> val);<span class="comment"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">template</span> <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">HeuristicTree::add_leaf</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">GEMMConfigReshapedOnlyRHS</a> val);<span class="comment"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">/** Explicit template instantiation @relates HeuristicTree */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">template</span> <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">HeuristicTree::add_leaf</a>(<a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">GEMMConfigReshaped</a> val);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;} <span class="comment">// namespace mlgo</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">arm_compute::mlgo::HeuristicTree::NodeType::Branch</a></div><div class="ttdeci">@ Branch</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">arm_compute::mlgo::ConditionalOp::LE</a></div><div class="ttdeci">@ LE</div><div class="ttdoc">Less than or equal to.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">arm_compute::mlgo::ConditionalOp::EQ</a></div><div class="ttdeci">@ EQ</div><div class="ttdoc">Equal.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml_ab52b8c461b445ab0e3f4274f0ce6961e"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">arm_compute::mlgo::Condition::feature</a></div><div class="ttdeci">std::string feature</div><div class="ttdoc">Feature name.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00052">HeuristicTree.h:52</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_log_8h_xhtml_af641430e72aa4c9f28d83131bb8e0fb9"><div class="ttname"><a href="arm__compute_2core_2_log_8h.xhtml#af641430e72aa4c9f28d83131bb8e0fb9">ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_MSG_WITH_FORMAT_CORE(fmt,...)</div><div class="ttdoc">Log information level formatted message to the core system logger.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_log_8h_source.xhtml#l00099">Log.h:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_afdbbde2bc0640d1aea22a1cbbc2ac59c"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">arm_compute::mlgo::HeuristicTree::TreeID</a></div><div class="ttdeci">size_t TreeID</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00071">HeuristicTree.h:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6f7d2fe6b41e36d408375ad6bf9a612a"><div class="ttname"><a href="namespacearm__compute.xhtml#a6f7d2fe6b41e36d408375ad6bf9a612a">arm_compute::CLGEMMKernelType</a></div><div class="ttdeci">CLGEMMKernelType</div><div class="ttdoc">OpenCL GEMM kernel types.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_types_8h_source.xhtml#l00031">CLTypes.h:31</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a63d163d35294f57ea6bea903892616df"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">arm_compute::mlgo::HeuristicTree::id</a></div><div class="ttdeci">TreeID id() const</div><div class="ttdoc">Get tree ID.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00161">HeuristicTree.h:161</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_only_r_h_s.xhtml">arm_compute::mlgo::GEMMConfigReshapedOnlyRHS</a></div><div class="ttdoc">GEMM Configuration for Reshaped Only RHS kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00054">Common.h:54</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_log_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00467">Error.h:467</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00457">Error.h:457</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">arm_compute::mlgo::HeuristicTree</a></div><div class="ttdoc">A binary decision tree based heuristic.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00067">HeuristicTree.h:67</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_reshaped.xhtml">arm_compute::mlgo::GEMMConfigReshaped</a></div><div class="ttdoc">GEMM Configuration for Reshaped kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00066">Common.h:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_afd73cff52d4133f4ecfa00f5699614d1"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">arm_compute::mlgo::HeuristicTree::add_leaf</a></div><div class="ttdeci">bool add_leaf(NodeID id, T leaf_value)</div><div class="ttdoc">Add a leaf node.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00136">HeuristicTree.cpp:136</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_aa133e1d9d7080a4071bbe101bc350f22"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#aa133e1d9d7080a4071bbe101bc350f22">arm_compute::mlgo::HeuristicTree::add_branch</a></div><div class="ttdeci">bool add_branch(NodeID id, Condition cond, NodeID true_node, NodeID false_node)</div><div class="ttdoc">Add a branch node.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00152">HeuristicTree.cpp:152</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml">arm_compute::mlgo::Condition</a></div><div class="ttdoc">A branch condition expression evaluating: feature op threshold.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00050">HeuristicTree.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">arm_compute::mlgo::ConditionalOp::LT</a></div><div class="ttdeci">@ LT</div><div class="ttdoc">Less than.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00223">Cast.cpp:223</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ad9caec94da8d468edbb0a0680fa20cff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">arm_compute::mlgo::parser::mlgo</a></div><div class="ttdeci">MLGOHeuristics mlgo(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00784">MLGOParser.cpp:784</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00073">Types.h:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">arm_compute::mlgo::ConditionalOp::GE</a></div><div class="ttdeci">@ GE</div><div class="ttdoc">Greater than or equal to.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">arm_compute::mlgo::HeuristicType</a></div><div class="ttdeci">HeuristicType</div><div class="ttdoc">Types of Heuristic (tree)</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00035">Common.h:35</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_log_8h_xhtml_a14f4c3a00d20ad742642767c9449993e"><div class="ttname"><a href="arm__compute_2core_2_log_8h.xhtml#a14f4c3a00d20ad742642767c9449993e">ARM_COMPUTE_LOG_INFO_MSG_CORE</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_MSG_CORE(msg)</div><div class="ttdoc">Log information level message to the core system logger.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_log_8h_source.xhtml#l00087">Log.h:87</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">1 channel, 1 F32 per channel</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">arm_compute::mlgo::ConditionalOp::GT</a></div><div class="ttdeci">@ GT</div><div class="ttdoc">Greater than.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_config_native_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_config_native.xhtml">arm_compute::mlgo::GEMMConfigNative</a></div><div class="ttdoc">GEMM Configuration for Native kernel.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00046">Common.h:46</a></div></div>
<div class="ttc" id="a_heuristic_tree_8h_xhtml"><div class="ttname"><a href="_heuristic_tree_8h.xhtml">HeuristicTree.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a16e3fff3e83ba8bbf7eef6887d9b153d"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">arm_compute::mlgo::HeuristicTree::NodeID</a></div><div class="ttdeci">size_t NodeID</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00070">HeuristicTree.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a9e7bd1393b35e766715ab934dfee7e40"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">arm_compute::mlgo::HeuristicTree::HeuristicTree</a></div><div class="ttdeci">HeuristicTree()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00095">HeuristicTree.cpp:95</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09a57ca8feb86455287489c64d4d2f92832">arm_compute::mlgo::HeuristicType::GEMM_Type</a></div><div class="ttdeci">@ GEMM_Type</div><div class="ttdoc">About the type of gemm.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00082">CoreTypes.h:82</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_ae1ee541bb22588b6a71650c807efca90"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ae1ee541bb22588b6a71650c807efca90">arm_compute::mlgo::HeuristicTree::check</a></div><div class="ttdeci">bool check()</div><div class="ttdoc">Check if tree is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00220">HeuristicTree.cpp:220</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">arm_compute::mlgo::GEMMShape</a></div><div class="ttdoc">GEMM Shape used for query.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00058">HeuristicTree.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">arm_compute::mlgo::HeuristicTree::NodeType::Leaf</a></div><div class="ttdeci">@ Leaf</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a53d45213a730d052997de2f15d6324ab"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a53d45213a730d052997de2f15d6324ab">arm_compute::mlgo::HeuristicTree::query</a></div><div class="ttdeci">std::pair&lt; bool, T &gt; query(GEMMShape shape) const</div><div class="ttdoc">Query a leaf value given a gemm shape.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00106">HeuristicTree.cpp:106</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_82e3926d996ac5aae32ffa787ec227cb.xhtml">mlgo</a></li><li class="navelem"><a class="el" href="_heuristic_tree_8cpp.xhtml">HeuristicTree.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
