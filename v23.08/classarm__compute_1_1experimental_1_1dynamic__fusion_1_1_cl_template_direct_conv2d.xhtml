<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClTemplateDirectConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClTemplateDirectConv2d Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml">ClTemplateDirectConv2d.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClTemplateDirectConv2d:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d__coll__graph.svg" width="238" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad968d7495213c20156e17fbfdf5531ac"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ad968d7495213c20156e17fbfdf5531ac">Attributes</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a16e2118618778baf41d73ac332567db4">ClComponentDirectConv2d::Attributes</a></td></tr>
<tr class="separator:ad968d7495213c20156e17fbfdf5531ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac767fa42a09ae14cd2e2e37e8f652e1b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac767fa42a09ae14cd2e2e37e8f652e1b">Settings</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a179c3070e74dc09cbb8bf4ab5c28448d">ClComponentDirectConv2d::Settings</a></td></tr>
<tr class="separator:ac767fa42a09ae14cd2e2e37e8f652e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a></td></tr>
<tr class="separator:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6be232baefc9feafb10e7737d5b61268"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a6be232baefc9feafb10e7737d5b61268">ClTemplateDirectConv2d</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ad968d7495213c20156e17fbfdf5531ac">Attributes</a> &amp;attributes, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac767fa42a09ae14cd2e2e37e8f652e1b">Settings</a> &amp;settings)</td></tr>
<tr class="memdesc:a6be232baefc9feafb10e7737d5b61268"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a6be232baefc9feafb10e7737d5b61268">More...</a><br /></td></tr>
<tr class="separator:a6be232baefc9feafb10e7737d5b61268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac144712e831a9e99a94e33a9aa36979e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac144712e831a9e99a94e33a9aa36979e">~ClTemplateDirectConv2d</a> () override=default</td></tr>
<tr class="memdesc:ac144712e831a9e99a94e33a9aa36979e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac144712e831a9e99a94e33a9aa36979e">More...</a><br /></td></tr>
<tr class="separator:ac144712e831a9e99a94e33a9aa36979e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2da8a2fa18a133fcad92cc281968df8c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a2da8a2fa18a133fcad92cc281968df8c">ClTemplateDirectConv2d</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;direct_conv2d)=delete</td></tr>
<tr class="memdesc:a2da8a2fa18a133fcad92cc281968df8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a2da8a2fa18a133fcad92cc281968df8c">More...</a><br /></td></tr>
<tr class="separator:a2da8a2fa18a133fcad92cc281968df8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a0a8c0eaf5b641fa80cea3e43d18e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a76a0a8c0eaf5b641fa80cea3e43d18e3">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;direct_conv2d)=delete</td></tr>
<tr class="memdesc:a76a0a8c0eaf5b641fa80cea3e43d18e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a76a0a8c0eaf5b641fa80cea3e43d18e3">More...</a><br /></td></tr>
<tr class="separator:a76a0a8c0eaf5b641fa80cea3e43d18e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addeb5b0cb0d813b9e1c9daab203256fa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#addeb5b0cb0d813b9e1c9daab203256fa">ClTemplateDirectConv2d</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&amp;direct_conv2d)=default</td></tr>
<tr class="memdesc:addeb5b0cb0d813b9e1c9daab203256fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#addeb5b0cb0d813b9e1c9daab203256fa">More...</a><br /></td></tr>
<tr class="separator:addeb5b0cb0d813b9e1c9daab203256fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1399e590ef220f12a8bd474029a6bdb3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a1399e590ef220f12a8bd474029a6bdb3">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&amp;direct_conv2d)=default</td></tr>
<tr class="memdesc:a1399e590ef220f12a8bd474029a6bdb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a1399e590ef220f12a8bd474029a6bdb3">More...</a><br /></td></tr>
<tr class="separator:a1399e590ef220f12a8bd474029a6bdb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">get_name</a> () const override</td></tr>
<tr class="memdesc:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component name.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">More...</a><br /></td></tr>
<tr class="separator:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7812833059e15b739d8dafe7c462df48"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a7812833059e15b739d8dafe7c462df48">get_component_code</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a7812833059e15b739d8dafe7c462df48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component code template.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a7812833059e15b739d8dafe7c462df48">More...</a><br /></td></tr>
<tr class="separator:a7812833059e15b739d8dafe7c462df48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24095ca4db22e95bd86cd88a8ff28615"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a24095ca4db22e95bd86cd88a8ff28615">declare_variables</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a24095ca4db22e95bd86cd88a8ff28615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declare all variables used by the component in the <code>vtable</code>.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a24095ca4db22e95bd86cd88a8ff28615">More...</a><br /></td></tr>
<tr class="separator:a24095ca4db22e95bd86cd88a8ff28615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add98b8afc43f270c3195a39f47eca5a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#add98b8afc43f270c3195a39f47eca5a7">get_tag_lut</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:add98b8afc43f270c3195a39f47eca5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the tag look-up table used to instantiate the component code.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#add98b8afc43f270c3195a39f47eca5a7">More...</a><br /></td></tr>
<tr class="separator:add98b8afc43f270c3195a39f47eca5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">get_build_options</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the build options used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">More...</a><br /></td></tr>
<tr class="separator:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c20dda39067d96aa659c5729ccebf34"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a9c20dda39067d96aa659c5729ccebf34">get_config_id</a> () const override</td></tr>
<tr class="memdesc:a9c20dda39067d96aa659c5729ccebf34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the component config id string used for tuning.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a9c20dda39067d96aa659c5729ccebf34">More...</a><br /></td></tr>
<tr class="separator:a9c20dda39067d96aa659c5729ccebf34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283deece00423ed5bd0c9486f305a6f4"><td class="memItemLeft" align="right" valign="top">std::set&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a283deece00423ed5bd0c9486f305a6f4">get_headers_list</a> () const override</td></tr>
<tr class="memdesc:a283deece00423ed5bd0c9486f305a6f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the header list used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#a283deece00423ed5bd0c9486f305a6f4">More...</a><br /></td></tr>
<tr class="separator:a283deece00423ed5bd0c9486f305a6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a> () const override</td></tr>
<tr class="memdesc:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the execution window for the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">More...</a><br /></td></tr>
<tr class="separator:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>)</td></tr>
<tr class="memdesc:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">More...</a><br /></td></tr>
<tr class="separator:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">~IGpuTemplateComponentWriter</a> ()</td></tr>
<tr class="memdesc:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">More...</a><br /></td></tr>
<tr class="separator:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">get_additional_macros</a> () const</td></tr>
<tr class="memdesc:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate additional macros used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">More...</a><br /></td></tr>
<tr class="separator:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> () const</td></tr>
<tr class="memdesc:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor arguments.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">More...</a><br /></td></tr>
<tr class="separator:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a> () const</td></tr>
<tr class="memdesc:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">More...</a><br /></td></tr>
<tr class="separator:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></td></tr>
<tr class="memdesc:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">For now all kernel intermeditate/destination tensors are expected to be of type Tensor_4D_t_Buffer.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">More...</a><br /></td></tr>
<tr class="separator:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml">ClTemplateDirectConv2d.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad968d7495213c20156e17fbfdf5531ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad968d7495213c20156e17fbfdf5531ac">&#9670;&nbsp;</a></span>Attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ad968d7495213c20156e17fbfdf5531ac">Attributes</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a16e2118618778baf41d73ac332567db4">ClComponentDirectConv2d::Attributes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml">ClTemplateDirectConv2d.h</a>.</p>

</div>
</div>
<a id="ac767fa42a09ae14cd2e2e37e8f652e1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac767fa42a09ae14cd2e2e37e8f652e1b">&#9670;&nbsp;</a></span>Settings</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac767fa42a09ae14cd2e2e37e8f652e1b">Settings</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#a179c3070e74dc09cbb8bf4ab5c28448d">ClComponentDirectConv2d::Settings</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml">ClTemplateDirectConv2d.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6be232baefc9feafb10e7737d5b61268"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6be232baefc9feafb10e7737d5b61268">&#9670;&nbsp;</a></span>ClTemplateDirectConv2d() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ad968d7495213c20156e17fbfdf5531ac">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml#ac767fa42a09ae14cd2e2e37e8f652e1b">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d.xhtml#ab0614c4d6aa01bfe9898432d426a9adc">ClComponentDirectConv2d::validate()</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Component id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> arguments to the components </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td>Component attributes </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Component settings </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a>{ <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> },</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      _src{},</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      _weight{},</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      _bias{},</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      _dst{},</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      _attributes{ attributes },</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      _settings{ settings }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    _src    = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _weight = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">if</span>(this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>))</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        _bias = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _dst = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _weight, _dst);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, and <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter::tensors()</a>.</p>

</div>
</div>
<a id="ac144712e831a9e99a94e33a9aa36979e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac144712e831a9e99a94e33a9aa36979e">&#9670;&nbsp;</a></span>~ClTemplateDirectConv2d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<a id="a2da8a2fa18a133fcad92cc281968df8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2da8a2fa18a133fcad92cc281968df8c">&#9670;&nbsp;</a></span>ClTemplateDirectConv2d() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&#160;</td>
          <td class="paramname"><em>direct_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="addeb5b0cb0d813b9e1c9daab203256fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addeb5b0cb0d813b9e1c9daab203256fa">&#9670;&nbsp;</a></span>ClTemplateDirectConv2d() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>direct_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a24095ca4db22e95bd86cd88a8ff28615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24095ca4db22e95bd86cd88a8ff28615">&#9670;&nbsp;</a></span>declare_variables()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void declare_variables </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Declare all variables used by the component in the <code>vtable</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ab4ca142dbeec40d6a4ab2a0b14b6f72f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        comp_group,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        _src,</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        GpuKernelArgumentInfo(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>),</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a> weight_type = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#a5b3b33333341fa25be66166a9b201544">export_to_cl_image</a>() ? <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        comp_group,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        _weight,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        GpuKernelArgumentInfo(weight_type),</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="stringliteral">&quot;weight&quot;</span>);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">if</span>(_bias &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>()) <span class="comment">// optional bias</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        vtable.declare_variable(</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            comp_group,</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            _bias,</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            GpuKernelArgumentInfo(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">GpuKernelArgumentInfo::Type::Vector</a>),</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="stringliteral">&quot;bias&quot;</span>);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        comp_group,</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        _dst,</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        GpuKernelArgumentInfo(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a>),</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00052">IGpuTemplateComponentWriter::common_tensor_type</a>, <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00035">GpuKernelVariableTable::declare_variable()</a>, <a class="el" href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00044">ClComponentDirectConv2dSettings::export_to_cl_image()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00312">ITensorInfo::has_valid_id()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Tensor_4D_t_Buffer</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Tensor_4D_t_Image</a>, and <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">GpuKernelArgumentInfo::Vector</a>.</p>

</div>
</div>
<a id="acd5efd9e0abf91fc8eb0afdbd5cebff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd5efd9e0abf91fc8eb0afdbd5cebff2">&#9670;&nbsp;</a></span>get_build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> get_build_options </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the build options used in the component. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" title="Build options.">CLBuildOptions</a> Build options </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a0a8d4ac3734eec83ef8ba51d632dd659">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00323">323</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;{</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channel_idx = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         root_window      = comp_group.get_root_component()-&gt;template_writer()-&gt;get_window();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0               = root_window.x().step();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0               = root_window.y().step();</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k0               = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#aee2c74e40edb43d60c17854d2dbeb889">direct_conv_descriptor</a>().k0, _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(channel_idx));</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partial_store_n0 = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) % n0;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    CLBuildOptions build_opts{};</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">if</span>(_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#a6c32b23397235e3aa500dcc0b51a7c40">fast_relaxed_math</a>())</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-cl-fast-relaxed-math&quot;</span>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="comment">// -cl-fast-relaxed-math also sets -cl-finite-math-only and -cl-unsafe-math-optimizations</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="comment">// to disable -cl-finite-math-only, we only include -cl-unsafe-math-optimizations</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        build_opts.add_option(<span class="stringliteral">&quot;-cl-unsafe-math-optimizations&quot;</span>);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DN0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0));</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0));</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DK0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(k0));</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DPARTIAL_N0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(partial_store_n0));</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="keywordflow">return</span> build_opts;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00041">CLBuildOptions::add_option()</a>, <a class="el" href="_adjust_vec_size_8h_source.xhtml#l00038">arm_compute::adjust_vec_size()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">ITensorInfo::data_layout()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00060">ClComponentDirectConv2dSettings::direct_conv_descriptor()</a>, <a class="el" href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00049">ClComponentDirectConv2dSettings::fast_relaxed_math()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00203">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00305">GpuKernelComponentGroup::get_root_component()</a>, <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00118">IGpuTemplateComponentWriter::get_window()</a>, <a class="el" href="_window_8h_source.xhtml#l00107">Window::Dimension::step()</a>, <a class="el" href="_i_gpu_kernel_component_8h_source.xhtml#l00108">IGpuKernelComponent::template_writer()</a>, <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>, and <a class="el" href="_window_8h_source.xhtml#l00159">Window::x()</a>.</p>

</div>
</div>
<a id="a7812833059e15b739d8dafe7c462df48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7812833059e15b739d8dafe7c462df48">&#9670;&nbsp;</a></span>get_component_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_component_code </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component code template. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::string Component code </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad06f63230f584c0cb20ffbff6779c5e">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(comp_group);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> channel_idx   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> k0            = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(_settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#aee2c74e40edb43d60c17854d2dbeb889">direct_conv_descriptor</a>().k0, _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(channel_idx));</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> leftover_loop = (_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(channel_idx) % k0) != 0;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::string code = R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">//------------------ START KERNEL {{meta_kernel_id}} ---------------------</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">// IN_0(src)            {{src}}</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">// IN_1(wei)            {{weight}}</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(_bias &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>())</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">// IN_1(bia)            {{bias}}</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">// OUT(dst, accum)      {{dst}}</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">TILE(uint, M0, 1, g_dst_indirect_y);</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">{</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">#define _IWEI_WIDTH {{WEI_WIDTH}}</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">#define _IWEI_HEIGHT {{WEI_HEIGHT}}</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">#define _ISRC_WIDTH {{SRC_WIDTH}}</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">#define _ISRC_HEIGHT {{SRC_HEIGHT}}</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">#define _ISRC_CHANNELS {{SRC_CHANNELS}}</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">#define _IDST_WIDTH {{DST_WIDTH}}</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">#define _IDST_HEIGHT {{DST_HEIGHT}}</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">#define _IDST_CHANNELS {{DST_CHANNELS}}</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">#define _IY_MULTIPLIER (_IWEI_WIDTH * _IWEI_HEIGHT)</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">    TILE(int, M0, 1, xi);</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">    TILE(int, M0, 1, yi);</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">    // Convert the linear index to coordinate</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">        xi[0].s[i] = ((g_ind_1 + i) % _IDST_WIDTH) * {{STRIDE_X}};</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">        yi[0].s[i] = ((g_ind_1 + i) / _IDST_WIDTH) * {{STRIDE_Y}};</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">        xi[0].s[i] -= {{PAD_LEFT}};</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">        yi[0].s[i] -= {{PAD_TOP}};</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">        {{dst}}[i].v = 0;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">    for(int i = 0; i &lt; (_IWEI_WIDTH * _IWEI_HEIGHT); ++i)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">        int xk = i % _IWEI_WIDTH;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">        int yk = i / _IWEI_WIDTH;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">        TILE(int, 1, M0, my);</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">        LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">        {</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">            int x_s    = xi[0].s[i] + xk;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">            int y_s    = yi[0].s[i] + yk;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">            my[0].s[i] = x_s + y_s *_ISRC_WIDTH;</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral">            my[0].s[i] = my[0].s[i] + g_ind_2 * (int)(_ISRC_WIDTH * _ISRC_HEIGHT);</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">            my[0].s[i] = select(-1, my[0].s[i], x_s &gt;= 0);</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">            my[0].s[i] = select(-1, my[0].s[i], x_s &lt; _ISRC_WIDTH);</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">            my[0].s[i] = select(-1, my[0].s[i], y_s &gt;= 0);</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">            my[0].s[i] = select(-1, my[0].s[i], y_s &lt; _ISRC_HEIGHT);</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        })</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">        int ck = 0;</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral">        for(; ck &lt;= (_ISRC_CHANNELS - K0); ck += K0)</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        {</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">            TILE({{SRC_DATA_TYPE}}, M0, K0, a);</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">            TILE({{WEI_DATA_TYPE}}, N0, K0, b);</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">            LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">            {</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">                a[i].v = {{ZERO_VALUE}};</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">            })</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">            LOOP_UNROLLING(int, i, 0, 1, N0,</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">            {</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">                b[i].v = {{ZERO_VALUE}};</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">            })</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral">            T_LOAD2D_INDIRECT({{SRC_DATA_TYPE}}, M0, K0, {{SRC_TENSOR_TYPE}}, {{src}}, ck, {{src}}_stride_y, my, a);</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="stringliteral">            T_LOAD({{WEI_DATA_TYPE}}, N0, K0, {{WEI_TENSOR_TYPE}}, {{weight}}, ck, g_ind_0 * _IY_MULTIPLIER + i, _IY_MULTIPLIER, {{weight}}_stride_y, b);</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="stringliteral">            T_MMUL({{SRC_DATA_TYPE}}, {{WEI_DATA_TYPE}}, {{ACC_DATA_TYPE}}, M0, N0, K0, NT, T, a, b, {{dst}});</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="stringliteral">        }</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(leftover_loop)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="stringliteral">        for(; ck &lt; _ISRC_CHANNELS; ++ck)</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="stringliteral">        {</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral">            TILE({{SRC_DATA_TYPE}}, M0, 1, a);</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">            TILE({{WEI_DATA_TYPE}}, N0, 1, b);</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral">            LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="stringliteral">            {</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">                a[i].v = {{ZERO_VALUE}};</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral">            })</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">            LOOP_UNROLLING(int, i, 0, 1, N0,</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">            {</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">                b[i].v = {{ZERO_VALUE}};</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">            })</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral">            T_LOAD2D_INDIRECT({{SRC_DATA_TYPE}}, M0, 1, {{SRC_TENSOR_TYPE}}, {{src}}, ck, {{src}}_stride_y, my, a);</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">            T_LOAD({{WEI_DATA_TYPE}}, N0, 1, BUFFER, {{weight}}, ck, g_ind_0 * _IY_MULTIPLIER + i, _IY_MULTIPLIER, {{weight}}_stride_y, b);</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">            T_MMUL({{SRC_DATA_TYPE}}, {{WEI_DATA_TYPE}}, {{ACC_DATA_TYPE}}, M0, N0, 1, NT, T, a, b, {{dst}});</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">        }</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">    )_&quot;;</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral">#undef _I_WEI_WIDTH</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="stringliteral">#undef _I_WEI_HEIGHT</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="stringliteral">#undef _ISRC_WIDTH</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="stringliteral">#undef _ISRC_HEIGHT</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="stringliteral">#undef _ISRC_CHANNELS</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral">#undef _IDST_WIDTH</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="stringliteral">#undef _IDST_HEIGHT</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="stringliteral">#undef _IDST_CHANNELS</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral">#undef _IY_MULTIPLIER</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(_bias &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>())</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="stringliteral">        TILE({{BIA_DATA_TYPE}}, 1, N0, bias0);</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="stringliteral">        T_LOAD({{BIA_DATA_TYPE}}, 1, N0, BUFFER, {{bias}}, g_ind_0, 0, 1, 0, bias0);</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="stringliteral">        T_ELTWISE_BROADCAST_ADD_X({{ACC_DATA_TYPE}}, M0, N0, {{dst}}, bias0, {{dst}});</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="stringliteral">    )_&quot;;</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="stringliteral">code += R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral">    LOOP_UNROLLING(int, i, 0, 1, M0,</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v = (uint)min(g_ind_1 + i, (int)({{DST_WIDTH}} * {{DST_HEIGHT}}) - 1);</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="stringliteral">        g_dst_indirect_y[i].v += g_ind_2 * (int)({{DST_WIDTH}} * {{DST_HEIGHT}});</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="stringliteral">    })</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="stringliteral">}</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="stringliteral">//------------------ END KERNEL {{meta_kernel_id}} ---------------------</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">return</span> code;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_adjust_vec_size_8h_source.xhtml#l00038">arm_compute::adjust_vec_size()</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">ITensorInfo::data_layout()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00060">ClComponentDirectConv2dSettings::direct_conv_descriptor()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00203">arm_compute::get_data_layout_dimension_index()</a>, and <a class="el" href="_i_tensor_info_8h_source.xhtml#l00312">ITensorInfo::has_valid_id()</a>.</p>

</div>
</div>
<a id="a9c20dda39067d96aa659c5729ccebf34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c20dda39067d96aa659c5729ccebf34">&#9670;&nbsp;</a></span>get_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the component config id string used for tuning. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a3acb4e6418931303bfda3962e4d78288">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00353">353</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>();</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width_idx  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height_idx = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_size = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(width_idx);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    std::string config_id{};</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>));</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(kernel_size);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().x());</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().y());</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(width_idx));</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(height_idx));</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">string_from_data_layout</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">return</span> config_id;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">ITensorInfo::data_layout()</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">arm_compute::test::validation::data_layout</a>, <a class="el" href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00223">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00203">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="_string_utils_8cpp_source.xhtml#l00038">arm_compute::lower_string()</a>, <a class="el" href="_conv2d_attributes_8cpp_source.xhtml#l00042">Conv2dAttributes::stride()</a>, <a class="el" href="_data_layout_utils_8cpp_source.xhtml#l00030">arm_compute::string_from_data_layout()</a>, <a class="el" href="_data_type_utils_8cpp_source.xhtml#l00031">arm_compute::string_from_data_type()</a>, <a class="el" href="_string_support_8h_source.xhtml#l00168">arm_compute::support::cpp11::to_string()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

</div>
</div>
<a id="a283deece00423ed5bd0c9486f305a6f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283deece00423ed5bd0c9486f305a6f4">&#9670;&nbsp;</a></span>get_headers_list()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::set&lt; std::string &gt; get_headers_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the header list used in the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ad7a3eb170866dfc737d0a8842fe47fd1">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00380">380</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;{</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keywordflow">return</span> std::set&lt;std::string&gt;{ <span class="stringliteral">&quot;helpers.h&quot;</span>, <span class="stringliteral">&quot;tile_helpers.h&quot;</span> };</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aea9b04d36ad2b9a4e1c166589ecb0326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9b04d36ad2b9a4e1c166589ecb0326">&#9670;&nbsp;</a></span>get_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component name. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a9752bfc9dd39aab02fc9487067abf9a9">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;direct_conv2d&quot;</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="add98b8afc43f270c3195a39f47eca5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add98b8afc43f270c3195a39f47eca5a7">&#9670;&nbsp;</a></span>get_tag_lut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> get_tag_lut </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the tag look-up table used to instantiate the component code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TagLUT Tag lookup table </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aead1fdded337d81d7f18473d4dd7fbb3">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;{</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> lut{};</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    lut[<span class="stringliteral">&quot;src&quot;</span>]    = vtable.get_variable(_src);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    lut[<span class="stringliteral">&quot;weight&quot;</span>] = vtable.get_variable(_weight);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">if</span>(_bias &amp;&amp; _bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">has_valid_id</a>()) <span class="comment">// optional bias</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        lut[<span class="stringliteral">&quot;bias&quot;</span>]          = vtable.get_variable(_bias);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        lut[<span class="stringliteral">&quot;BIA_DATA_TYPE&quot;</span>] = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    lut[<span class="stringliteral">&quot;dst&quot;</span>] = vtable.get_variable(_dst);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dst_argument = vtable.get_variable(comp_group.get_any_dst_tensor());</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    lut[<span class="stringliteral">&quot;arg_dst&quot;</span>]          = dst_argument.uniq_name;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="comment">// Local build options</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>();</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    lut[<span class="stringliteral">&quot;ACC_DATA_TYPE&quot;</span>]  = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    lut[<span class="stringliteral">&quot;SRC_DATA_TYPE&quot;</span>]  = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    lut[<span class="stringliteral">&quot;WEI_DATA_TYPE&quot;</span>]  = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    lut[<span class="stringliteral">&quot;SRC_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">switch</span>(vtable.get_variable(_weight).kernel_argument_info.type)</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">GpuKernelArgumentInfo::Type::Image_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">GpuKernelArgumentInfo::Type::Image_3D_Export_To_ClImage2D</a>:</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a>:</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;IMAGE&quot;</span>;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> width_idx  = 1;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> height_idx = 2;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> channel_idx = 0;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    lut[<span class="stringliteral">&quot;SRC_WIDTH&quot;</span>] = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(width_idx);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    lut[<span class="stringliteral">&quot;SRC_HEIGHT&quot;</span>] = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(height_idx);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    lut[<span class="stringliteral">&quot;SRC_CHANNELS&quot;</span>] = _src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(channel_idx);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    lut[<span class="stringliteral">&quot;WEI_WIDTH&quot;</span>]      = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(width_idx);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    lut[<span class="stringliteral">&quot;WEI_HEIGHT&quot;</span>]     = _weight-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(height_idx);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    lut[<span class="stringliteral">&quot;DST_WIDTH&quot;</span>] = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(width_idx);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    lut[<span class="stringliteral">&quot;DST_HEIGHT&quot;</span>] = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(height_idx);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    lut[<span class="stringliteral">&quot;DST_CHANNELS&quot;</span>] = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(channel_idx);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_X&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().x();</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_Y&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">stride</a>().y();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    lut[<span class="stringliteral">&quot;PAD_LEFT&quot;</span>] = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().left;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    lut[<span class="stringliteral">&quot;PAD_TOP&quot;</span>]  = _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">pad</a>().top;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    lut[<span class="stringliteral">&quot;ZERO_VALUE&quot;</span>] = 0;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> lut;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00293">GpuKernelComponentGroup::get_any_dst_tensor()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00040">arm_compute::get_cl_type_from_data_type()</a>, <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00073">GpuKernelVariableTable::get_variable()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00312">ITensorInfo::has_valid_id()</a>, <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">GpuKernelArgumentInfo::Image_3D_Export_To_ClImage2D</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">GpuKernelArgumentInfo::Image_Export_To_ClImage2D</a>, <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00063">GpuKernelVariableTable::TensorVariable::kernel_argument_info</a>, <a class="el" href="_conv2d_attributes_8cpp_source.xhtml#l00033">Conv2dAttributes::pad()</a>, <a class="el" href="_conv2d_attributes_8cpp_source.xhtml#l00042">Conv2dAttributes::stride()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">GpuKernelArgumentInfo::Tensor_4D_t_Image</a>, <a class="el" href="_gpu_kernel_argument_8h_source.xhtml#l00068">GpuKernelArgumentInfo::type</a>, and <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00062">GpuKernelVariableTable::TensorVariable::uniq_name</a>.</p>

</div>
</div>
<a id="ae744fb5fb66aa1ce9db14ba93eab24e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae744fb5fb66aa1ce9db14ba93eab24e3">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the execution window for the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a66df3fbb8781a4dfa011885356e1495f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00385">385</a> of file <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0U, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160; </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> desc         = _settings.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#aee2c74e40edb43d60c17854d2dbeb889">direct_conv_descriptor</a>();</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160; </div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0 = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(desc.n0, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[0]);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0 = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(desc.m0, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[1] * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[2]);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="comment">// Create and configure kernel window</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>, Steps(n0, m0));</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> dim_y_collapsed = <a class="code" href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">ceil_to_multiple</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[1] * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>[2], m0);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    win.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, dim_y_collapsed, m0));</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    win.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, Window::Dimension(0, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.total_size_upper(3), 1));</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160; </div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">return</span> win;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_adjust_vec_size_8h_source.xhtml#l00038">arm_compute::adjust_vec_size()</a>, <a class="el" href="_error_8h_source.xhtml#l00457">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_window_helpers_8cpp_source.xhtml#l00028">arm_compute::calculate_max_window()</a>, <a class="el" href="_math_8h_source.xhtml#l00050">arm_compute::ceil_to_multiple()</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_window_8h_source.xhtml#l00047">Window::DimZ</a>, <a class="el" href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00060">ClComponentDirectConv2dSettings::direct_conv_descriptor()</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00411">arm_compute::test::validation::output_shape</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00176">TensorShape::total_size()</a>, and <a class="el" href="_saturate_cast_8h_source.xhtml#l00064">arm_compute::utils::cast::U</a>.</p>

</div>
</div>
<a id="a1399e590ef220f12a8bd474029a6bdb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1399e590ef220f12a8bd474029a6bdb3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>direct_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a76a0a8c0eaf5b641fa80cea3e43d18e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76a0a8c0eaf5b641fa80cea3e43d18e3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a> &amp;&#160;</td>
          <td class="paramname"><em>direct_conv2d</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_direct_conv2d_8h_source.xhtml">ClTemplateDirectConv2d.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml">ClTemplateDirectConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da836beefb9de19f8c238c707251af46a7">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Image_Export_To_ClImage2D</a></div><div class="ttdeci">@ Image_Export_To_ClImage2D</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml_a6177244142d86cabba1c4f7991d1e091"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#a6177244142d86cabba1c4f7991d1e091">arm_compute::experimental::dynamic_fusion::Conv2dAttributes::pad</a></div><div class="ttdeci">Conv2dAttributes &amp; pad(const Padding2D &amp;pad)</div><div class="ttdoc">Set padding.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8cpp_source.xhtml#l00033">Conv2dAttributes.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00109">CoreTypes.h:109</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdeci">@ CHANNEL</div><div class="ttdoc">channel</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00411">ConvolutionLayer.cpp:411</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b489e3eb9e7156def886030fd588e42"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::common_tensor_type</a></div><div class="ttdeci">static constexpr GpuKernelArgumentInfo::Type common_tensor_type</div><div class="ttdoc">For now all kernel intermeditate/destination tensors are expected to be of type Tensor_4D_t_Buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00052">IGpuTemplateComponentWriter.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00127">GpuKernelVariableTable.h:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings_xhtml_a6c32b23397235e3aa500dcc0b51a7c40"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#a6c32b23397235e3aa500dcc0b51a7c40">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2dSettings::fast_relaxed_math</a></div><div class="ttdeci">ClComponentDirectConv2dSettings &amp; fast_relaxed_math(bool fast_relaxed_math)</div><div class="ttdoc">Set fast_relaxed_math flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00049">ClComponentDirectConv2d.cpp:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_utils_8cpp_source.xhtml#l00038">StringUtils.cpp:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings_xhtml_a5b3b33333341fa25be66166a9b201544"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#a5b3b33333341fa25be66166a9b201544">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2dSettings::export_to_cl_image</a></div><div class="ttdeci">bool export_to_cl_image() const</div><div class="ttdoc">Get export_to_cl_image flag.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00044">ClComponentDirectConv2d.cpp:44</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da57dea6f5039281b7fee517fc43bf3110">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Vector</a></div><div class="ttdeci">@ Vector</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_aad5a9787ce3cca66f6155f1f2cf14a66"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::IGpuTemplateComponentWriter</a></div><div class="ttdeci">IGpuTemplateComponentWriter(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00060">IGpuTemplateComponentWriter.h:60</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da89e1a66e65ce2fc93995b94f32d9d928">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Tensor_4D_t_Image</a></div><div class="ttdeci">@ Tensor_4D_t_Image</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8cpp_source.xhtml#l00031">DataTypeUtils.cpp:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdeci">@ ACL_SRC_2</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">ConvolutionLayer.cpp:406</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml_acb4fc314422ba7c6bc7a761ba7c6111d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml#acb4fc314422ba7c6bc7a761ba7c6111d">arm_compute::experimental::dynamic_fusion::Conv2dAttributes::stride</a></div><div class="ttdeci">Conv2dAttributes &amp; stride(const Size2D &amp;stride)</div><div class="ttdoc">Set stride.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8cpp_source.xhtml#l00042">Conv2dAttributes.cpp:42</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_ac3b745acece5fb22971e8888f1d5b4a6"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac3b745acece5fb22971e8888f1d5b4a6">arm_compute::ITensorInfo::has_valid_id</a></div><div class="ttdeci">bool has_valid_id() const</div><div class="ttdoc">Check if the tensor id is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00312">ITensorInfo.h:312</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter.h:123</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00457">Error.h:457</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00176">TensorShape.h:176</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter.h:128</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00223">Cast.cpp:223</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab237a0a375cf382d52b61653248d3d4a"><div class="ttname"><a href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">arm_compute::ceil_to_multiple</a></div><div class="ttdeci">auto ceil_to_multiple(S value, T divisor) -&gt; decltype(((value+divisor - 1)/divisor) *divisor)</div><div class="ttdoc">Computes the smallest number larger or equal to value that is a multiple of divisor.</div><div class="ttdef"><b>Definition:</b> <a href="_math_8h_source.xhtml#l00050">Math.h:50</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a56b9e25c2e8731ca5488e7b3ccd66f58"><div class="ttname"><a href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">arm_compute::string_from_data_layout</a></div><div class="ttdeci">const std::string &amp; string_from_data_layout(DataLayout dl)</div><div class="ttdoc">Convert a data layout identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_utils_8cpp_source.xhtml#l00030">DataLayoutUtils.cpp:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00040">CLHelpers.cpp:40</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></div><div class="ttdeci">@ Tensor_4D_t_Buffer</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00203">Helpers.inl:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings_xhtml_aee2c74e40edb43d60c17854d2dbeb889"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_direct_conv2d_settings.xhtml#aee2c74e40edb43d60c17854d2dbeb889">arm_compute::experimental::dynamic_fusion::ClComponentDirectConv2dSettings::direct_conv_descriptor</a></div><div class="ttdeci">ClComponentDirectConv2dSettings &amp; direct_conv_descriptor(const DirectConvComputeKernelInfo &amp;desc)</div><div class="ttdoc">Set direct convolution descriptor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_direct_conv2d_8cpp_source.xhtml#l00060">ClComponentDirectConv2d.cpp:60</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">Enumerate all the tensor arguments variants used by all kernel implementations.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00041">GpuKernelArgument.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00082">CoreTypes.h:82</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info_xhtml_a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1da853491c5ec1b4957adf256ed3fbc18e0">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentInfo::Type::Image_3D_Export_To_ClImage2D</a></div><div class="ttdeci">@ Image_3D_Export_To_ClImage2D</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_direct_conv2d.xhtml">ClTemplateDirectConv2d</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:23 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
