<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/printers/PrettyPrinter.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_pretty_printer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PrettyPrinter.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_pretty_printer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019,2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pretty_printer_8h.xhtml">PrettyPrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;../Framework.h&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;../instruments/InstrumentsStats.h&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;../instruments/Measurement.h&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;std::string PrettyPrinter::begin_color(<span class="keyword">const</span> std::string &amp;color)<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">if</span>(!_color_output)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[0;3&quot;</span> + color + <span class="stringliteral">&quot;m&quot;</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;std::string PrettyPrinter::end_color()<span class="keyword"> const</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span>(!_color_output)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[m&quot;</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">   58</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">PrettyPrinter::set_color_output</a>(<span class="keywordtype">bool</span> color_output)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _color_output = color_output;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">   63</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">PrettyPrinter::print_entry</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, <span class="keyword">const</span> std::string &amp;value)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;4&quot;</span>) &lt;&lt; <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; value &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">   68</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">PrettyPrinter::print_global_header</a>()</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">   72</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">PrettyPrinter::print_global_footer</a>()</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">   76</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">PrettyPrinter::print_run_header</a>()</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">   80</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">PrettyPrinter::print_run_footer</a>()</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">   84</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">PrettyPrinter::print_test_header</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;2&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;Running [&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.id &lt;&lt; <span class="stringliteral">&quot;] &#39;&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.name &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span> &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">   89</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">PrettyPrinter::print_test_footer</a>()</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">   93</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">PrettyPrinter::print_errors_header</a>()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">   97</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">PrettyPrinter::print_errors_footer</a>()</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">  101</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">PrettyPrinter::print_info</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;1&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;INFO: &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">PrettyPrinter::print_error</a>(<span class="keyword">const</span> std::exception &amp;error, <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::string prefix = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a> ? <span class="stringliteral">&quot;EXPECTED ERROR: &quot;</span> : <span class="stringliteral">&quot;ERROR: &quot;</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;1&quot;</span>) &lt;&lt; prefix &lt;&lt; error.what() &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a3109b7e2d037aafe5422e92c7388d89f">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a3109b7e2d037aafe5422e92c7388d89f">PrettyPrinter::print_list_tests</a>(<span class="keyword">const</span> std::vector&lt;TestInfo&gt; &amp;infos)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> <span class="keyword">const</span> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> : infos)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.id &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.mode &lt;&lt; <span class="stringliteral">&quot;, &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.status &lt;&lt; <span class="stringliteral">&quot;] &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.name &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4ec43bf1c7310539aeca691909a62de2">  120</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4ec43bf1c7310539aeca691909a62de2">PrettyPrinter::print_profiler_header</a>(<span class="keyword">const</span> std::string &amp;header_data)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(header_data);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">PrettyPrinter::print_measurements</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a06c89e23a39ce6f2e8e8a1de5bb7002a">Profiler::MeasurementsMap</a> &amp;measurements)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;instrument : measurements)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        *_stream &lt;&lt; begin_color(<span class="stringliteral">&quot;3&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;  &quot;</span> &lt;&lt; instrument.first &lt;&lt; <span class="stringliteral">&quot;:&quot;</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">InstrumentsStats</a> stats(instrument.second);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;    &quot;</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        *_stream &lt;&lt; <span class="stringliteral">&quot;AVG=&quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#ac480db792238cc08ac172a5503101f8c">mean</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a549818ca69a3bd602b38701d13ef5294">max</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span>(instrument.second.size() &gt; 1)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;, STDDEV=&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a93690f80f7fb88ea733fdc6f9f3b3ada">arithmetic_to_string</a>(stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#aae553cf57322b9e4e22ecc325233e1e8">relative_standard_deviation</a>(), 2) &lt;&lt; <span class="stringliteral">&quot; %&quot;</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;, MIN=&quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a73fed91ed99e2b505f25304d29924fac">min</a>();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;, MAX=&quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a549818ca69a3bd602b38701d13ef5294">max</a>();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            *_stream &lt;&lt; <span class="stringliteral">&quot;, MEDIAN=&quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a9cdbaf223d36f6bc0afbe1a5933300cd">median</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a>() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; stats.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a9cdbaf223d36f6bc0afbe1a5933300cd">median</a>().<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">unit</a>();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        *_stream &lt;&lt; end_color() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_a2ae8373fc56f956b1988b85963b3904c"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#a2ae8373fc56f956b1988b85963b3904c">arm_compute::test::framework::Measurement::unit</a></div><div class="ttdeci">const std::string &amp; unit() const</div><div class="ttdoc">Accessor for the unit of the measurement.</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00283">Measurement.h:283</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a906cf0547c72a5e2c38697c7d6c669ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a906cf0547c72a5e2c38697c7d6c669ba">arm_compute::test::framework::PrettyPrinter::print_run_footer</a></div><div class="ttdeci">void print_run_footer() override</div><div class="ttdoc">Print footer after running all tests.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00080">PrettyPrinter.cpp:80</a></div></div>
<div class="ttc" id="a_pretty_printer_8h_xhtml"><div class="ttname"><a href="_pretty_printer_8h.xhtml">PrettyPrinter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1989aab0187e56f1cf45e92e892c9d2d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1989aab0187e56f1cf45e92e892c9d2d">arm_compute::test::framework::PrettyPrinter::print_measurements</a></div><div class="ttdeci">void print_measurements(const Profiler::MeasurementsMap &amp;measurements) override</div><div class="ttdoc">Print measurements for a test.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00125">PrettyPrinter.cpp:125</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">arm_compute::test::framework::InstrumentsStats</a></div><div class="ttdoc">Generate common statistics for a set of measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00039">InstrumentsStats.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a2a3ad8a62c2d169ba98b99fc849cb8c0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a2a3ad8a62c2d169ba98b99fc849cb8c0">arm_compute::test::framework::PrettyPrinter::print_entry</a></div><div class="ttdeci">void print_entry(const std::string &amp;name, const std::string &amp;value) override</div><div class="ttdoc">Print an entry consisting of a (name, value) pair.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00063">PrettyPrinter.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1012b95505daaa0be227d812b7329dc0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1012b95505daaa0be227d812b7329dc0">arm_compute::test::framework::PrettyPrinter::print_test_footer</a></div><div class="ttdeci">void print_test_footer() override</div><div class="ttdoc">Print footer after a test.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00089">PrettyPrinter.cpp:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml_a73fed91ed99e2b505f25304d29924fac"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a73fed91ed99e2b505f25304d29924fac">arm_compute::test::framework::InstrumentsStats::min</a></div><div class="ttdeci">const Measurement &amp; min() const</div><div class="ttdoc">The measurement with the minimum value.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00049">InstrumentsStats.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a0bd164e8c3de0910183bdb50315ab282"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a0bd164e8c3de0910183bdb50315ab282">arm_compute::test::framework::PrettyPrinter::print_test_header</a></div><div class="ttdeci">void print_test_header(const TestInfo &amp;info) override</div><div class="ttdoc">Print header before a test.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00084">PrettyPrinter.cpp:84</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a1b8f26a11ed27e8d4af56b4b297e5cd2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a1b8f26a11ed27e8d4af56b4b297e5cd2">arm_compute::test::framework::PrettyPrinter::print_info</a></div><div class="ttdeci">void print_info(const std::string &amp;info) override</div><div class="ttdoc">Print test log info.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00101">PrettyPrinter.cpp:101</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a3109b7e2d037aafe5422e92c7388d89f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a3109b7e2d037aafe5422e92c7388d89f">arm_compute::test::framework::PrettyPrinter::print_list_tests</a></div><div class="ttdeci">void print_list_tests(const std::vector&lt; TestInfo &gt; &amp;infos) override</div><div class="ttdoc">Print the list of all the tests.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00112">PrettyPrinter.cpp:112</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_af2a8c2db065f7afb4dbaa382d2ecd5be"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">arm_compute::test::framework::Measurement::value</a></div><div class="ttdeci">const Value &amp; value() const</div><div class="ttdoc">Accessor for the stored value.</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00301">Measurement.h:301</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a4e3955a20faf3bcda615ae62b0b24efa"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4e3955a20faf3bcda615ae62b0b24efa">arm_compute::test::framework::PrettyPrinter::print_global_header</a></div><div class="ttdeci">void print_global_header() override</div><div class="ttdoc">Print global header.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00068">PrettyPrinter.cpp:68</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_a93690f80f7fb88ea733fdc6f9f3b3ada"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a93690f80f7fb88ea733fdc6f9f3b3ada">arm_compute::test::arithmetic_to_string</a></div><div class="ttdeci">std::string arithmetic_to_string(T val, int decimal_places=0)</div><div class="ttdoc">Create a string with the arithmetic value in full precision.</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00164">Utils.h:164</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a69ca6fda3763ffa3dd7a18ed70eb685b"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a69ca6fda3763ffa3dd7a18ed70eb685b">arm_compute::test::framework::PrettyPrinter::print_errors_header</a></div><div class="ttdeci">void print_errors_header() override</div><div class="ttdoc">Print header before errors.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00093">PrettyPrinter.cpp:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a06c89e23a39ce6f2e8e8a1de5bb7002a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a06c89e23a39ce6f2e8e8a1de5bb7002a">arm_compute::test::framework::Profiler::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, std::vector&lt; Measurement &gt; &gt; MeasurementsMap</div><div class="ttdoc">Mapping from instrument ids to their measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00049">Profiler.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a4ec43bf1c7310539aeca691909a62de2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a4ec43bf1c7310539aeca691909a62de2">arm_compute::test::framework::PrettyPrinter::print_profiler_header</a></div><div class="ttdeci">void print_profiler_header(const std::string &amp;header_data) override</div><div class="ttdoc">Print header data.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00120">PrettyPrinter.cpp:120</a></div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_afb8becd7931a06d74a77ee9b51a67dd6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afb8becd7931a06d74a77ee9b51a67dd6">arm_compute::test::framework::PrettyPrinter::print_error</a></div><div class="ttdeci">void print_error(const std::exception &amp;error, bool expected) override</div><div class="ttdoc">Print test error.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00106">PrettyPrinter.cpp:106</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml_a549818ca69a3bd602b38701d13ef5294"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a549818ca69a3bd602b38701d13ef5294">arm_compute::test::framework::InstrumentsStats::max</a></div><div class="ttdeci">const Measurement &amp; max() const</div><div class="ttdoc">The measurement with the maximum value.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00055">InstrumentsStats.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml_a9cdbaf223d36f6bc0afbe1a5933300cd"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#a9cdbaf223d36f6bc0afbe1a5933300cd">arm_compute::test::framework::InstrumentsStats::median</a></div><div class="ttdeci">const Measurement &amp; median() const</div><div class="ttdoc">The median measurement.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00061">InstrumentsStats.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml_ac480db792238cc08ac172a5503101f8c"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#ac480db792238cc08ac172a5503101f8c">arm_compute::test::framework::InstrumentsStats::mean</a></div><div class="ttdeci">const Measurement::Value &amp; mean() const</div><div class="ttdoc">The average of all the measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00067">InstrumentsStats.h:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b69631535313e83809cd7746027cc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">arm_compute::test::validation::expected</a></div><div class="ttdeci">expected</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00166">BatchNormalizationLayer.cpp:166</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00080">Framework.h:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a73c2cb1847e4110041efe047cb9421e6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a73c2cb1847e4110041efe047cb9421e6">arm_compute::test::framework::PrettyPrinter::print_global_footer</a></div><div class="ttdeci">void print_global_footer() override</div><div class="ttdoc">Print global footer.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00072">PrettyPrinter.cpp:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instruments_stats_xhtml_aae553cf57322b9e4e22ecc325233e1e8"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#aae553cf57322b9e4e22ecc325233e1e8">arm_compute::test::framework::InstrumentsStats::relative_standard_deviation</a></div><div class="ttdeci">double relative_standard_deviation() const</div><div class="ttdoc">The relative standard deviation of the measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_stats_8h_source.xhtml#l00073">InstrumentsStats.h:73</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_afcf598578056fcc9e9ed8916b68e28a2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#afcf598578056fcc9e9ed8916b68e28a2">arm_compute::test::framework::PrettyPrinter::set_color_output</a></div><div class="ttdeci">void set_color_output(bool color_output)</div><div class="ttdoc">Set if the output is colored.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00058">PrettyPrinter.cpp:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_a09777172c75440fb57577f538c3354fa"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#a09777172c75440fb57577f538c3354fa">arm_compute::test::framework::PrettyPrinter::print_errors_footer</a></div><div class="ttdeci">void print_errors_footer() override</div><div class="ttdoc">Print footer after errors.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00097">PrettyPrinter.cpp:97</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_pretty_printer_xhtml_aa520a585d43bb30a6c483e69d40f01a1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#aa520a585d43bb30a6c483e69d40f01a1">arm_compute::test::framework::PrettyPrinter::print_run_header</a></div><div class="ttdeci">void print_run_header() override</div><div class="ttdoc">Print header before running all tests.</div><div class="ttdef"><b>Definition:</b> <a href="_pretty_printer_8cpp_source.xhtml#l00076">PrettyPrinter.cpp:76</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_68cb0bded1cc5601c88ddaacbb31e482.xhtml">printers</a></li><li class="navelem"><a class="el" href="_pretty_printer_8cpp.xhtml">PrettyPrinter.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
