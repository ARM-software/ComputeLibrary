<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/CL/CLTuningParams.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_tuning_params_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLTuningParams.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_tuning_params_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CLTUNING_PARAMS_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CLTUNING_PARAMS_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tuner_types_8h.xhtml">arm_compute/runtime/CL/CLTunerTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_support_8h.xhtml">support/StringSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/**&lt; OpenCL tuner parameters */</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml">   36</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">   39</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">CLTuningParams</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;tuning_params)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : _lws(tuning_params._lws), _wbsm(tuning_params._wbsm)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#aaaef6cf401958345e698d643cabc8f9d">   44</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#aaaef6cf401958345e698d643cabc8f9d">CLTuningParams</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_x = 0, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_y = 0, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_z = 0, <span class="keywordtype">int</span> wbsm = 0)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        : _lws(lws_x, lws_y, lws_z), _wbsm(wbsm)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a4be152c6064cbf534155cbfae105e4e6">   48</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a4be152c6064cbf534155cbfae105e4e6">CLTuningParams</a>(cl::NDRange lws, cl_int wbsm = 0)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        : _lws(lws), _wbsm(wbsm)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2f13b4d04ab1a4bfc4b49f4467f6b989">   53</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2f13b4d04ab1a4bfc4b49f4467f6b989">CLTuningParams</a>(cl_int wbsm)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a>(<a class="code" href="namespacecl.xhtml">cl</a>::NullRange, wbsm)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2bc6bd390277f08a64fdf865dc8e2933">   57</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a>&amp; <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2bc6bd390277f08a64fdf865dc8e2933">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml">CLTuningParams</a> &amp;other)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        _lws = other._lws;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        _wbsm = other._wbsm;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab2d66c6ccbd49d09857ef55c61aa84ea">   64</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab2d66c6ccbd49d09857ef55c61aa84ea">set_lws</a>(cl::NDRange lws)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        _lws = lws;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a722b1a9a06026623079b291d4a6c752f">   69</a></span>&#160;    cl::NDRange <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a722b1a9a06026623079b291d4a6c752f">get_lws</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> _lws;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a589c67583be1aca669d760445ec131a1">   74</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a589c67583be1aca669d760445ec131a1">set_wbsm</a>(cl_int wbsm)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        _wbsm = wbsm;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a911324ec4a6233263cccbea220d2cdb8">   79</a></span>&#160;    cl_int <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a911324ec4a6233263cccbea220d2cdb8">get_wbsm</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> _wbsm;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a7083e56d3e75863f33ef692b167b2caf">   84</a></span>&#160;    std::string <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#a7083e56d3e75863f33ef692b167b2caf">to_string</a>(<a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        std::string tuning_params_string = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        tuning_params_string += <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[0]) + <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[1]) + <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_lws[2]);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span>(tuning_info.<a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml#a93490954be8daf7e7326c5375e122259">tune_wbsm</a>)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            tuning_params_string += <span class="stringliteral">&quot;;&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(_wbsm);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> tuning_params_string;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab91e266c6153d568c897ca15656913de">   95</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab91e266c6153d568c897ca15656913de">from_string</a>(<a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml">CLTuningInfo</a> tuning_info, std::string tuning_params_string)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        std::replace(tuning_params_string.begin(), tuning_params_string.end(), <span class="charliteral">&#39;;&#39;</span>, <span class="charliteral">&#39; &#39;</span>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        std::vector&lt;std::string&gt; array;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        std::stringstream        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>(tuning_params_string);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        std::string              temp;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">while</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &gt;&gt; temp)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            array.push_back(temp);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment">// Read 3 values for lws</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span>(array.size() &lt; 3)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_0 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[0]);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_1 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[1]);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lws_2 = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[2]);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span>(lws_0 == 0 &amp;&amp; lws_1 == 0 &amp;&amp; lws_2 == 0)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="comment">// If lws values are 0, cl::NullRange has to be used</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="comment">// otherwise the lws object will be badly created</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            _lws = cl::NullRange;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            _lws = cl::NDRange(lws_0, lws_1, lws_2);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        array.erase(array.begin(), array.begin() + 3);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span>(tuning_info.<a class="code" href="structarm__compute_1_1_c_l_tuning_info.xhtml#a93490954be8daf7e7326c5375e122259">tune_wbsm</a>)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span>(array.size() &lt; 1)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            _wbsm = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">support::cpp11::stoi</a>(array[0]);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            array.erase(array.begin());</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    cl::NDRange _lws;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    cl_int      _wbsm;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;};</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_CLTUNING_PARAMS_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="a_string_support_8h_xhtml"><div class="ttname"><a href="_string_support_8h.xhtml">StringSupport.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a722b1a9a06026623079b291d4a6c752f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a722b1a9a06026623079b291d4a6c752f">arm_compute::CLTuningParams::get_lws</a></div><div class="ttdeci">cl::NDRange get_lws() const</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00069">CLTuningParams.h:69</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a038ae93c4fcf4cf49ac011394c8b4aa4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a038ae93c4fcf4cf49ac011394c8b4aa4">arm_compute::CLTuningParams::CLTuningParams</a></div><div class="ttdeci">CLTuningParams(const CLTuningParams &amp;tuning_params)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00039">CLTuningParams.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a2f13b4d04ab1a4bfc4b49f4467f6b989"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2f13b4d04ab1a4bfc4b49f4467f6b989">arm_compute::CLTuningParams::CLTuningParams</a></div><div class="ttdeci">CLTuningParams(cl_int wbsm)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00053">CLTuningParams.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a911324ec4a6233263cccbea220d2cdb8"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a911324ec4a6233263cccbea220d2cdb8">arm_compute::CLTuningParams::get_wbsm</a></div><div class="ttdeci">cl_int get_wbsm() const</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00079">CLTuningParams.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_ab2d66c6ccbd49d09857ef55c61aa84ea"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab2d66c6ccbd49d09857ef55c61aa84ea">arm_compute::CLTuningParams::set_lws</a></div><div class="ttdeci">void set_lws(cl::NDRange lws)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00064">CLTuningParams.h:64</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a4be152c6064cbf534155cbfae105e4e6"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a4be152c6064cbf534155cbfae105e4e6">arm_compute::CLTuningParams::CLTuningParams</a></div><div class="ttdeci">CLTuningParams(cl::NDRange lws, cl_int wbsm=0)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00048">CLTuningParams.h:48</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_tuning_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_c_l_tuning_info.xhtml">arm_compute::CLTuningInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_types_8h_source.xhtml#l00043">CLTunerTypes.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml">arm_compute::CLTuningParams</a></div><div class="ttdoc">&lt; OpenCL tuner parameters</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00036">CLTuningParams.h:36</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a7083e56d3e75863f33ef692b167b2caf"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a7083e56d3e75863f33ef692b167b2caf">arm_compute::CLTuningParams::to_string</a></div><div class="ttdeci">std::string to_string(CLTuningInfo tuning_info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00084">CLTuningParams.h:84</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a589c67583be1aca669d760445ec131a1"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a589c67583be1aca669d760445ec131a1">arm_compute::CLTuningParams::set_wbsm</a></div><div class="ttdeci">void set_wbsm(cl_int wbsm)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00074">CLTuningParams.h:74</a></div></div>
<div class="ttc" id="a_c_l_tuner_types_8h_xhtml"><div class="ttname"><a href="_c_l_tuner_types_8h.xhtml">CLTunerTypes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_a2bc6bd390277f08a64fdf865dc8e2933"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#a2bc6bd390277f08a64fdf865dc8e2933">arm_compute::CLTuningParams::operator=</a></div><div class="ttdeci">CLTuningParams &amp; operator=(const CLTuningParams &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00057">CLTuningParams.h:57</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_abdba606a789b8d664774f17d18f45cfe"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">arm_compute::support::cpp11::stoi</a></div><div class="ttdeci">int stoi(const std::string &amp;str, std::size_t *pos=0, NumericBase base=NumericBase::BASE_10)</div><div class="ttdoc">Convert string values to integer.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00055">StringSupport.h:55</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_c_l_tuning_info_xhtml_a93490954be8daf7e7326c5375e122259"><div class="ttname"><a href="structarm__compute_1_1_c_l_tuning_info.xhtml#a93490954be8daf7e7326c5375e122259">arm_compute::CLTuningInfo::tune_wbsm</a></div><div class="ttdeci">bool tune_wbsm</div><div class="ttdoc">Flag to tune the batches of work groups distributed to compute units.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_types_8h_source.xhtml#l00046">CLTunerTypes.h:46</a></div></div>
<div class="ttc" id="anamespacecl_xhtml"><div class="ttname"><a href="namespacecl.xhtml">cl</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00033">ICLTensor.h:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_aaaef6cf401958345e698d643cabc8f9d"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#aaaef6cf401958345e698d643cabc8f9d">arm_compute::CLTuningParams::CLTuningParams</a></div><div class="ttdeci">CLTuningParams(unsigned int lws_x=0, unsigned int lws_y=0, unsigned int lws_z=0, int wbsm=0)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00044">CLTuningParams.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuning_params_xhtml_ab91e266c6153d568c897ca15656913de"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuning_params.xhtml#ab91e266c6153d568c897ca15656913de">arm_compute::CLTuningParams::from_string</a></div><div class="ttdeci">bool from_string(CLTuningInfo tuning_info, std::string tuning_params_string)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuning_params_8h_source.xhtml#l00095">CLTuningParams.h:95</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_b986aa98f9b6490bb4fc7918500346fb.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_tuning_params_8h.xhtml">CLTuningParams.h</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:06 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
