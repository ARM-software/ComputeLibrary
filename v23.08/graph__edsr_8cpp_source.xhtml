<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_edsr.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('graph__edsr_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_edsr.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__edsr_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_utils_8h.xhtml">arm_compute/graph/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph__edsr_8h.xhtml">graph_edsr.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>GraphEdsrExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    GraphEdsrExample()</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : cmd_parser(), common_opts(cmd_parser), common_params()</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        expected_output_filename = cmd_parser.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;expected-output-filename&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        expected_output_filename-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Name of npy file containing the expected output to validate the graph output.&quot;</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    GraphEdsrExample(<span class="keyword">const</span> GraphEdsrExample &amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    GraphEdsrExample &amp;operator=(<span class="keyword">const</span> GraphEdsrExample &amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    ~GraphEdsrExample() <span class="keyword">override</span>                          = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// Parse arguments</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        cmd_parser.parse(argc, argv);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        cmd_parser.validate();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// Consume common parameters</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        common_params = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">consume_common_graph_parameters</a>(common_opts);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">// Return when help menu is requested</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span>(common_params.help)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            cmd_parser.print_help(argv[0]);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a>(common_params.data_type != <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <span class="stringliteral">&quot;Only QASYMM8 is supported for this graph example&quot;</span>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// Print parameter values</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        std::cout &lt;&lt; common_params &lt;&lt; std::endl;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        model.setup(common_params, *expected_output_filename);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> config;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a> = common_params.threads;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">use_tuner</a>   = common_params.enable_tuner;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">tuner_mode</a>  = common_params.tuner_mode;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>  = common_params.tuner_file;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">mlgo_file</a>   = common_params.mlgo_file;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.set_config(config);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keyword">auto</span> pass_manager = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a0a2d08174e24bcb1dfdf9d8893cd9363">create_default_pass_manager</a>(common_params.target, config);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        manager.finalize_graph(model.graph(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>, pass_manager, common_params.target);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        manager.execute_graph(model.graph());</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a>  cmd_parser;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> common_opts;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a>  common_params;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>{};</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">GraphManager</a> manager{};</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;std::string&gt;</a> *expected_output_filename{ <span class="keyword">nullptr</span> };</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="class_graph_edsr.xhtml">GraphEdsr</a> model{};</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/** Internal implementation of UINT8 EDSR with some modifications from the paper.</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * The sub-pixel convolution has been replaced with a deconvolution layer. This</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> * operation is mathematically the same.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> * Convolution replaced by deconvolution:</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> *      https://arxiv.org/abs/1609.07009</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"> *      &quot;Is the deconvolution layer the same as a convolutional layer?&quot;</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"> *      Wenzhe Shi, Jose Caballero, Lucas Theis, Ferenc Huszar, Andrew Aitken, Christian Ledig, Zehan Wang</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"> * Original model is:</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> *      https://arxiv.org/abs/1707.02921</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> *      &quot;Enhanced Deep Residual Networks for Single Image Super-Resolution&quot;</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> *      Bee Lim, Sanghyun Son, Heewon Kim, Seungjun Nah, Kyoung Mu Lee</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"> * @note To list all the possible arguments execute the binary appended with the --help option</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"> * @return Return code</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="graph__edsr_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  127</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__edsr_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> run_example&lt;GraphEdsrExample&gt;(argc, argv);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a9da74af255a3e6ea61180d4a03192a48"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">arm_compute::graph::GraphConfig::use_tuner</a></div><div class="ttdeci">bool use_tuner</div><div class="ttdoc">Use a tuner in tunable backends.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00093">Types.h:93</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::graph::GraphConfig::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdoc">Number of threads to use (thread capable backends), if 0 the backend will auto-initialize,...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00097">Types.h:97</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a11c0bd1d663fbaa516fac9160ec96d4b"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">arm_compute::graph::GraphConfig::mlgo_file</a></div><div class="ttdeci">std::string mlgo_file</div><div class="ttdoc">Filename to load MLGO heuristics from.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00099">Types.h:99</a></div></div>
<div class="ttc" id="agraph__edsr_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__edsr_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Internal implementation of UINT8 EDSR with some modifications from the paper.</div><div class="ttdef"><b>Definition:</b> <a href="graph__edsr_8cpp_source.xhtml#l00127">graph_edsr.cpp:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_manager_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">arm_compute::graph::GraphManager</a></div><div class="ttdoc">Graph manager class.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_manager_8h_source.xhtml#l00045">GraphManager.h:45</a></div></div>
<div class="ttc" id="a_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a249f3f713c6ea8f564e760559cf509f4"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">arm_compute::graph::GraphConfig::tuner_mode</a></div><div class="ttdeci">CLTunerMode tuner_mode</div><div class="ttdoc">Tuner mode to be used by the CL tuner.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00096">Types.h:96</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml">arm_compute::graph::GraphConfig</a></div><div class="ttdoc">Graph configuration structure.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00088">Types.h:88</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00045">CommandLineParser.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_common_graph_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">arm_compute::utils::CommonGraphOptions</a></div><div class="ttdoc">Common command line options used to configure the graph examples.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00134">CommonGraphOptions.h:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a2593e1f13f425f627658900657f73dc3"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">arm_compute::utils::consume_common_graph_parameters</a></div><div class="ttdeci">void consume_common_graph_parameters(CommonGraphValidateOptions &amp;options, CommonParams &amp;common_params)</div><div class="ttdoc">Consumes the consume_common_graph_parameters graph options and creates a structure containing any inf...</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00313">graph_validate_utils.h:313</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a292b758f9eba8b487d71eae4b37326fc"><div class="ttname"><a href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_EXIT_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, the given message is printed and program exits.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00380">Error.h:380</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00160">DirectConv2d.cpp:160</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_option_xhtml_a48a2672f362eeed9a3e93403f4d3de37"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">arm_compute::utils::Option::set_help</a></div><div class="ttdeci">void set_help(std::string help)</div><div class="ttdoc">Set the help message for the option.</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00125">Option.h:125</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_topological_sort_8h_source.xhtml#l00033">TopologicalSort.h:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a0a2d08174e24bcb1dfdf9d8893cd9363"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a0a2d08174e24bcb1dfdf9d8893cd9363">arm_compute::graph::create_default_pass_manager</a></div><div class="ttdeci">PassManager create_default_pass_manager(Target target, const GraphConfig &amp;cfg)</div><div class="ttdoc">Creates a default PassManager.</div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_utils_8cpp_source.xhtml#l00073">Utils.cpp:73</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:74</a></div></div>
<div class="ttc" id="a_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="aclass_graph_edsr_xhtml"><div class="ttname"><a href="class_graph_edsr.xhtml">GraphEdsr</a></div><div class="ttdef"><b>Definition:</b> <a href="graph__edsr_8h_source.xhtml#l00032">graph_edsr.h:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00034">SafeOps.h:34</a></div></div>
<div class="ttc" id="agraph__edsr_8h_xhtml"><div class="ttname"><a href="graph__edsr_8h.xhtml">graph_edsr.h</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_context.xhtml">arm_compute::graph::GraphContext</a></div><div class="ttdoc">Graph context.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_context_8h_source.xhtml#l00057">GraphContext.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml">arm_compute::utils::SimpleOption&lt; std::string &gt;</a></div></div>
<div class="ttc" id="astructarm__compute_1_1utils_1_1_common_graph_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">arm_compute::utils::CommonGraphParams</a></div><div class="ttdoc">Structure holding all the common graph parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00093">CommonGraphOptions.h:93</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_graph_config_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::graph::GraphConfig::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdoc">File to load/store tuning values from.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00098">Types.h:98</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__edsr_8cpp.xhtml">graph_edsr.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
