<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/dynamic_fusion/gpu/Integration.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_integration_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Integration.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_integration_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">arm_compute/core/CL/CLKernelLibrary.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantization_info_8h.xhtml">arm_compute/core/QuantizationInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_runtime_8h.xhtml">arm_compute/dynamic_fusion/runtime/gpu/cl/ClWorkloadRuntime.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_attributes_8h.xhtml">arm_compute/dynamic_fusion/sketch/attributes/CastAttributes.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_conv2d_attributes_8h.xhtml">arm_compute/dynamic_fusion/sketch/attributes/Conv2dAttributes.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depthwise_conv2d_attributes_8h.xhtml">arm_compute/dynamic_fusion/sketch/attributes/DepthwiseConv2dAttributes.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_workload_sketch_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/GpuWorkloadSketch.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_add_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuAdd.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_cast_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuCast.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_conv2d_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuConv2d.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_depthwise_conv2d_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuDepthwiseConv2d.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_mul_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuMul.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_output_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuOutput.h</a>&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_sigmoid_8h.xhtml">arm_compute/dynamic_fusion/sketch/gpu/operators/GpuSigmoid.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_accessor_8h.xhtml">tests/CL/CLAccessor.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2validation_2dynamic__fusion_2_utils_8h.xhtml">tests/validation/dynamic_fusion/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_activation_layer_8h.xhtml">tests/validation/reference/ActivationLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution_layer_8h.xhtml">tests/validation/reference/ConvolutionLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depth_convert_layer_8h.xhtml">tests/validation/reference/DepthConvertLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depthwise_convolution_layer_8h.xhtml">tests/validation/reference/DepthwiseConvolutionLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_elementwise_operations_8h.xhtml">tests/validation/reference/ElementwiseOperations.h</a>&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_permute_8h.xhtml">tests/validation/reference/Permute.h</a>&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pixel_wise_multiplication_8h.xhtml">tests/validation/reference/PixelWiseMultiplication.h</a>&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">namespace </span>validation</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(CL)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(INTEGRATION)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(DYNAMIC_FUSION)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#ifndef ACL_INTERNAL_TEST_CKW_IN_DF // Conv2d is not ported to ckw yet. COMPMID-6259</span></div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#acfb6e71b954dc5703d74e6c10f774dd3">   67</a></span>&#160;<a class="code" href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a>(Conv2d, framework::DatasetMode::ALL)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">/* Computation:</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * out = conv2d1x1(direct_conv)(input, weights, bias)</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>      = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>    = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape  = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 12, 12);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_weight_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 1, 1, 16);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_dst_shape    = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(16, 12, 12);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// Create a new workload sketch</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">auto</span>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>{ &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a> };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// Fuse conv2d</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> conv2d_attr{};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>       weight_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *conv_out_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuConv2d::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, conv2d_attr);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> dst_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, conv_out_info, &amp;dst_info);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// Configure runtime</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// (Important) Allocate auxiliary tensor memory if there are any</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Instead of using ACL allocated memory, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">get_auxiliary_tensors</a>())</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>     *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = std::get&lt;0&gt;(data);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>        = std::get&lt;1&gt;(data);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> aux_mem_req = std::get&lt;2&gt;(data);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;init(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, aux_mem_req.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;allocate(); <span class="comment">// Use ACL allocated memory</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">// auto buf = cl::Buffer();</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// tensor-&gt;allocator()-&gt;import_memory(buf);  // Or, import external memory</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// Construct user tensors</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_input{};</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_weight{};</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_dst{};</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Initialize user tensors</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    t_input.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    t_weight.allocator()-&gt;init(weight_info);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    t_dst.allocator()-&gt;init(dst_info);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// Allocate and fill user tensors</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Instead of using ACL allocator, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    t_input.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    t_weight.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    t_dst.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_input), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_weight), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Run runtime</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">run</a>({ &amp;t_input, &amp;t_weight, &amp;t_dst });</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Create reference</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_input{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_weight{ t_weight_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_bias_placeholder{ t_dst_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a> };</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Fill reference</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    fill&lt;float&gt;(ref_t_input, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    fill&lt;float&gt;(ref_t_weight, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">auto</span> ref_t_input_nchw            = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_input, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">auto</span> ref_t_weight_nchw           = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_weight, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">auto</span> ref_t_bias_placeholder_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_bias_placeholder, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">auto</span> t_dst_shape_nchw            = t_dst_shape;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(t_dst_shape_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> legacy_pad_stride(conv2d_attr.stride().x(), conv2d_attr.stride().y(), conv2d_attr.pad().left, conv2d_attr.pad().right, conv2d_attr.pad().top, conv2d_attr.pad().bottom,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                    <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>{});</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">auto</span>       ref_t_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">reference::convolution_layer</a>(ref_t_input_nchw, ref_t_weight_nchw, ref_t_bias_placeholder_nchw, t_dst_shape_nchw, legacy_pad_stride, conv2d_attr.dilation());</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_dst      = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_t_dst_nchw, <a class="code" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f); <span class="comment">/**&lt; Tolerance value for comparing reference&#39;s output against implementation&#39;s output for floating point data types */</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_dst), ref_t_dst_nchw, <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">#endif // ACL_INTERNAL_TEST_CKW_IN_DF</span></div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#af74b478c2a4411f6e52ac572c7a4efd3">  157</a></span>&#160;<a class="code" href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a>(Add_Output_Add_Output, framework::DatasetMode::ALL)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">/* Computation:</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     *   out_0 = in_0 + in_1</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     *   out_1 = out_0 + in_2</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>     = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(33, 3, 2);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// Create a new workload sketch</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">auto</span>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>{ &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a> };</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_0_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_1_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_2_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> out_0_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> out_1_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_0_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#aef431fdc62152e5f81afb258274659ba">GpuAdd::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, &amp;in_0_info, &amp;in_1_info);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_0_info, &amp;out_0_info);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_1_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#aef431fdc62152e5f81afb258274659ba">GpuAdd::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_0_info, &amp;in_2_info);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_1_info, &amp;out_1_info);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// Configure runtime</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment">// (Important) Allocate auxiliary tensor memory if there are any</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Instead of using ACL allocated memory, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">get_auxiliary_tensors</a>())</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>     *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = std::get&lt;0&gt;(data);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>        = std::get&lt;1&gt;(data);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> aux_mem_req = std::get&lt;2&gt;(data);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;init(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, aux_mem_req.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;allocate(); <span class="comment">// Use ACL allocated memory</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="comment">// auto buf = cl::Buffer();</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="comment">// tensor-&gt;allocator()-&gt;import_memory(buf);  // Or, import external memory</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// Construct user tensors</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_0{};</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_1{};</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_2{};</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_out_0{};</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_out_1{};</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">// Initialize user tensors</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    t_in_0.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(in_0_info);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    t_in_1.allocator()-&gt;init(in_1_info);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    t_in_2.allocator()-&gt;init(in_2_info);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    t_out_0.allocator()-&gt;init(out_0_info);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    t_out_1.allocator()-&gt;init(out_1_info);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="comment">// Allocate and fill user tensors</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="comment">// Instead of using ACL allocator, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    t_in_0.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    t_in_1.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    t_in_2.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    t_out_0.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    t_out_1.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_0), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_1), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_2), 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="comment">// Run runtime</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">run</a>({ &amp;t_in_0, &amp;t_in_1, &amp;t_in_2, &amp;t_out_0, &amp;t_out_1 });</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="comment">// Create reference</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_0{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_1{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_2{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_out_0{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_out_1{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="comment">// Fill reference</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    fill&lt;float&gt;(ref_t_in_0, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    fill&lt;float&gt;(ref_t_in_1, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    fill&lt;float&gt;(ref_t_in_2, 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, ref_t_in_0, ref_t_in_1, ref_t_out_0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, ref_t_out_0, ref_t_in_2, ref_t_out_1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>(0.001f); <span class="comment">/**&lt; Tolerance value for comparing reference&#39;s output against implementation&#39;s output for floating point data types */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_out_0), ref_t_out_0, <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_out_1), ref_t_out_1, <a class="code" href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a>);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1db552386b110a09461c246d194d56f">  254</a></span>&#160;<a class="code" href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a>(Add_Output_Add_Cast_Cast_Output, framework::DatasetMode::ALL)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;{</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="comment">/* Computation:</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     *   out_0 = in_0 + in_1</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     *   out_1 = float(int32_t(out_0 + in_2))</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>     = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3, 8, 5);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="comment">// Create a new workload sketch</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">auto</span>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>{ &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a> };</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_0_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_1_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> in_2_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> out_0_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> out_1_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">CastAttributes</a> cast_0_attr;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    cast_0_attr.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#ab7037b6fa1572f421dc90262aacd3a18">data_type</a>(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>).<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">convert_policy</a>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">CastAttributes</a> cast_1_attr;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    cast_1_attr.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#ab7037b6fa1572f421dc90262aacd3a18">data_type</a>(<a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>).<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">convert_policy</a>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_0_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#aef431fdc62152e5f81afb258274659ba">GpuAdd::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, &amp;in_0_info, &amp;in_1_info);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_0_info, &amp;out_0_info);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_1_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#aef431fdc62152e5f81afb258274659ba">GpuAdd::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_0_info, &amp;in_2_info);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_2_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast.xhtml#aa17a575405ad713d1456004383894ce2">GpuCast::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_1_info, cast_0_attr);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *ans_3_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast.xhtml#aa17a575405ad713d1456004383894ce2">GpuCast::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_2_info, cast_1_attr);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, ans_3_info, &amp;out_1_info);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// Configure runtime</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="comment">// (Important) Allocate auxiliary tensor memory if there are any</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="comment">// Instead of using ACL allocated memory, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">get_auxiliary_tensors</a>())</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a>     *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = std::get&lt;0&gt;(data);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>        = std::get&lt;1&gt;(data);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> aux_mem_req = std::get&lt;2&gt;(data);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;init(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, aux_mem_req.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a>);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;allocate(); <span class="comment">// Use ACL allocated memory</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="comment">// auto buf = cl::Buffer();</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="comment">// tensor-&gt;allocator()-&gt;import_memory(buf);  // Or, import external memory</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">// Construct user tensors</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_0{};</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_1{};</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_in_2{};</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_out_0{};</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> t_out_1{};</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="comment">// Initialize user tensors</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    t_in_0.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(in_0_info);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    t_in_1.allocator()-&gt;init(in_1_info);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    t_in_2.allocator()-&gt;init(in_2_info);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    t_out_0.allocator()-&gt;init(out_0_info);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    t_out_1.allocator()-&gt;init(out_1_info);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Allocate and fill user tensors</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="comment">// Instead of using ACL allocator, the user can choose to import memory into the tensors</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    t_in_0.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    t_in_1.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    t_in_2.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    t_out_0.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    t_out_1.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_0), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_1), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_in_2), 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="comment">// Run runtime</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    runtime.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">run</a>({ &amp;t_in_0, &amp;t_in_1, &amp;t_in_2, &amp;t_out_0, &amp;t_out_1 });</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="comment">// Create reference</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_0{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_1{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_in_2{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_out_0{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_t_ans_1{ t_input_shape, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>() };</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="comment">// Fill reference</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    fill&lt;float&gt;(ref_t_in_0, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    fill&lt;float&gt;(ref_t_in_1, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    fill&lt;float&gt;(ref_t_in_2, 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, ref_t_in_0, ref_t_in_1, ref_t_out_0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">reference::arithmetic_operation</a>(<a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>, ref_t_out_0, ref_t_in_2, ref_t_ans_1, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">ConvertPolicy::WRAP</a>);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_ans_2 = reference::depth_convert&lt;float, int32_t&gt;(ref_t_ans_1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, 0);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_t_out_1 = reference::depth_convert&lt;int32_t, float&gt;(ref_t_ans_2, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, 0);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> tolerance_add_f32(0.001f);</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml">AbsoluteTolerance&lt;float&gt;</a> tolerance_cast_f32(1.0f);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_out_0), ref_t_out_0, tolerance_add_f32);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(t_out_1), ref_t_out_1, tolerance_cast_f32);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="preprocessor">#ifndef ACL_INTERNAL_TEST_CKW_IN_DF // Conv2d is not ported to ckw yet. COMPMID-6259</span></div>
<div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b672f4cf5e9737f0a292f182176734f">  364</a></span>&#160;<a class="code" href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a>(Conv2d_Sigmoid_DepthwiseConv2d_Mul, framework::DatasetMode::ALL)</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;{</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="comment">//   (tensor0)</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="comment">//       |</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">// ======|============================================== Sketch 0</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">//       |     (tensor1)     +---- (tensor2)</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="comment">//       |         |         |         |</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="comment">// +-- input -- weights -- biases --+  |</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="comment">// |                                |  |</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">// |            Conv2d              |  |</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// |                                |  |</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="comment">// +----------- output -------------+  |</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="comment">//                |                    |</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">//          +-- input ---+             |</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="comment">//          |            |             |</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">//          |  Sigmoid   |             |</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">//          |            |             |</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">//          +-- output --+             |</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="comment">//                |                    |</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="comment">//          +-- input ---+             |</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="comment">//          |            |             |</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="comment">//          |   Output   |             |</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="comment">//          |            |             |</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="comment">//          +-- output --+             |</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="comment">//                |                    |</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="comment">//            (tensor5)                |</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="comment">//                |                    |</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">//       +--------+                    |</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="comment">// ======|=============================|================ Sketch 1</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment">//       |     (tensor3) (tensor4)     |</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="comment">//       |         |         |         |</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="comment">// +-- input -- weights -- biases --+  |</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="comment">// |                                |  |</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="comment">// |        DepthwiseConv2d         |  |</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="comment">// |                                |  |</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">// +----------- output -------------+  |</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="comment">//                |                    |</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="comment">//             +--+   +----------------+</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">//             |      |</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="comment">//        +-- lhs -- rhs --+</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="comment">//        |                |</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="comment">//        |    Multiply    |</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="comment">//        |                |</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">//        +---- output ----+</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="comment">//                |</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="comment">//          +-- input ---+</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="comment">//          |            |</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="comment">//          |   Output   |</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="comment">//          |            |</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="comment">//          +-- output --+</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="comment">//                |</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="comment">//            (tensor6)</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> conv2d_src_shape(10, 20, 30);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> conv2d_wei_shape(10, 3, 3, 5);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> conv2d_bia_shape(5);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> conv2d_dst_shape(5, 18, 28);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> dwc_wei_shape(5, 3, 3);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> dwc_bia_shape(5);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> dwc_dst_shape(5, 16, 26);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="comment">// Initialize the context.</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keyword">auto</span>               cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>(&amp;cl_compile_ctx);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160; </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keyword">auto</span> tensor0_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(conv2d_src_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="comment">// Create the first sketch: conv2d + cast + output.</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> sketch0(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; </div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> conv2d_attr;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keyword">auto</span>             tensor1_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(conv2d_wei_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keyword">auto</span>             tensor2_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(conv2d_bia_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuConv2d::validate_op</a>(sketch0, &amp;tensor0_info, &amp;tensor1_info, &amp;tensor2_info, conv2d_attr), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="keyword">auto</span> ans_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuConv2d::create_op</a>(sketch0, &amp;tensor0_info, &amp;tensor1_info, &amp;tensor2_info, conv2d_attr);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml#a626543d94a4ec70219546d44954d5d7d">GpuSigmoid::validate_op</a>(sketch0, ans_info), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    ans_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml#aad4150373f8ac22b02075920fbd2033c">GpuSigmoid::create_op</a>(sketch0, ans_info);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml">DepthwiseConv2dAttributes</a> dwc_attr;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keyword">auto</span>                      tensor3_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(dwc_wei_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keyword">auto</span>                      tensor4_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(dwc_bia_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(!<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuDepthwiseConv2d::validate_op</a>(sketch0, ans_info, &amp;tensor3_info, &amp;tensor4_info, dwc_attr), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keyword">auto</span> tensor5_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">GpuOutput::validate_op</a>(sketch0, ans_info, &amp;tensor5_info), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(sketch0, ans_info, &amp;tensor5_info);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="comment">// Create the first workload runtime.</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime0;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    runtime0.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(sketch0);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="comment">// Create the second sketch: dwc + sigmoid + output.</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> sketch1(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160; </div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuDepthwiseConv2d::validate_op</a>(sketch1, &amp;tensor5_info, &amp;tensor3_info, &amp;tensor4_info, dwc_attr), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    ans_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuDepthwiseConv2d::create_op</a>(sketch1, &amp;tensor5_info, &amp;tensor3_info, &amp;tensor4_info, dwc_attr);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml#a94e0ee686d6aa0e586457653cabd265c">GpuMul::validate_op</a>(sketch1, ans_info, &amp;tensor2_info), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    ans_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml#aef431fdc62152e5f81afb258274659ba">GpuMul::create_op</a>(sketch1, ans_info, &amp;tensor2_info);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keyword">auto</span> tensor6_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info();</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">GpuOutput::validate_op</a>(sketch1, ans_info, &amp;tensor6_info), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">GpuOutput::create_op</a>(sketch1, ans_info, &amp;tensor6_info);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="comment">// Create the second workload runtime.</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">ClWorkloadRuntime</a> runtime1;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    runtime1.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">configure</a>(sketch1);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160; </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="comment">// Create the user tensors.</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor0;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor1;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor2;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor3;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor4;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor5;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml">CLTensor</a> tensor6;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    tensor0.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor0_info);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    tensor1.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor1_info);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    tensor2.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor2_info);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    tensor3.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor3_info);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    tensor4.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor4_info);</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    tensor5.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor5_info);</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    tensor6.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">init</a>(tensor6_info);</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160; </div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    tensor0.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    tensor1.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    tensor2.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    tensor3.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    tensor4.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    tensor5.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    tensor6.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160; </div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">// Allocate the auxiliary tensors.</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime0.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">get_auxiliary_tensors</a>())</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keyword">auto</span>  <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = std::get&lt;0&gt;(data);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keyword">auto</span> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> = std::get&lt;1&gt;(data);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <span class="keyword">auto</span>  mem_req     = std::get&lt;2&gt;(data);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160; </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;init(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, mem_req.alignment);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;allocate();</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    }</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160; </div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;data : runtime1.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">get_auxiliary_tensors</a>())</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="keyword">auto</span>  <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>      = std::get&lt;0&gt;(data);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="keyword">auto</span> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> = std::get&lt;1&gt;(data);</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keyword">auto</span>  mem_req     = std::get&lt;2&gt;(data);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160; </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;init(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, mem_req.alignment);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;allocator()-&gt;allocate();</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160; </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="comment">// Fill the input tensors with random data.</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor0), 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor1), 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor2), 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor3), 3, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    fill&lt;float&gt;(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor4), 4, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="comment">// Run each runtime.</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    runtime0.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">run</a>({ &amp;tensor0, &amp;tensor1, &amp;tensor2, &amp;tensor5 });</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    runtime1.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">run</a>({ &amp;tensor5, &amp;tensor3, &amp;tensor4, &amp;tensor2, &amp;tensor6 });</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160; </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="comment">// Compute the reference result.</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_conv2d_src(conv2d_src_shape, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_conv2d_wei(conv2d_wei_shape, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_conv2d_bia(conv2d_bia_shape, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_dwc_wei(dwc_wei_shape, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;float&gt;</a> ref_dwc_bia(dwc_bia_shape, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 1, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    fill&lt;float&gt;(ref_conv2d_src, 0, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    fill&lt;float&gt;(ref_conv2d_wei, 1, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    fill&lt;float&gt;(ref_conv2d_bia, 2, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    fill&lt;float&gt;(ref_dwc_wei, 3, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    fill&lt;float&gt;(ref_dwc_bia, 4, <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>.get());</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160; </div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a> nhwc_to_nchw(1, 2, 0);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160; </div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keyword">auto</span> conv2d_dst_shape_nchw = conv2d_dst_shape;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(conv2d_dst_shape_nchw, nhwc_to_nchw);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_conv2d_src_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_conv2d_src, nhwc_to_nchw);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_conv2d_wei_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_conv2d_wei, nhwc_to_nchw);</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_conv2d_bia_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_conv2d_bia, nhwc_to_nchw);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_conv2d_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">reference::convolution_layer</a>(ref_conv2d_src_nchw, ref_conv2d_wei_nchw, ref_conv2d_bia_nchw, conv2d_dst_shape_nchw, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>());</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160; </div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_sigmoid_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3802a0604503a4f9c4eb7189db69f11d">reference::activation_layer</a>(ref_conv2d_dst_nchw, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(ActivationLayerInfo::ActivationFunction::LOGISTIC));</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160; </div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="keyword">auto</span> dwc_dst_shape_nchw = dwc_dst_shape;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">permute</a>(dwc_dst_shape_nchw, nhwc_to_nchw);</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_dwc_wei_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_dwc_wei, nhwc_to_nchw);</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_dwc_bia_nchw = <a class="code" href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">reference::permute</a>(ref_dwc_bia, nhwc_to_nchw);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_dwc_dst_nchw = <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa8c74ba65c903552897b2158aed34c0f">reference::depthwise_convolution</a>(ref_sigmoid_dst_nchw, ref_dwc_wei_nchw, ref_dwc_bia_nchw, dwc_dst_shape_nchw, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(), 1);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160; </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> ref_mul_dst_nchw = reference::pixel_wise_multiplication&lt;float, float, float&gt;(ref_dwc_dst_nchw, ref_conv2d_bia_nchw, 1.0, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea8c0084566b290fa9e5e429f4ae241f95">RoundingPolicy::TO_NEAREST_UP</a>,</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                                                                            <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160; </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    constexpr <a class="code" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt;float&gt;</a> tolerance(0.001f);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>(<a class="code" href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">CLAccessor</a>(tensor6), ref_mul_dst_nchw, tolerance);</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;}</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="preprocessor">#endif // ACL_INTERNAL_TEST_CKW_IN_DF</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160; </div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a>(Invalid_Fusion_Should_Fail)</div>
<div class="line"><a name="l00571"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e4b859e2b12a827b4c239703ebafac6">  571</a></span>&#160;<a class="code" href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a>(Multiple_Complex_Ops_0, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL)</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;{</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="comment">/* Computation:</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">     * out = conv2d(conv2d(l0_input, l0_weight), l1_weight)</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">default_reinit</a>();</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160; </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>      = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>    = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_input_shape  = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 12, 12);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_weight_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(384, 1, 1, 16);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keyword">auto</span>       t_input_info   = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keyword">auto</span>       t_weight_info  = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keyword">auto</span>       t_dst_info     = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>();</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160; </div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">Conv2dAttributes</a> conv2d_attr{};</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="comment">// Create a new workload sketch</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keyword">auto</span>              cl_compile_ctx = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a>();</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keyword">auto</span>              <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>        = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a>{ &amp;cl_compile_ctx };</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>{ &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a> };</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160; </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="comment">// Create tensor infos</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>   <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_input_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>   weight_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(t_weight_shape, 1, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>));</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst_info;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160; </div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="comment">// Fuse conv2d into the workload</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    {</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="comment">// Validate operator</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> success = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuConv2d::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, conv2d_attr);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(<span class="keywordtype">bool</span>(success), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160; </div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        dst_info = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuConv2d::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a>, &amp;weight_info, <span class="keyword">nullptr</span>, conv2d_attr);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    }</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160; </div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="comment">// Create tensor infos</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> weight_info_2 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>.create_tensor_info(t_weight_info);</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160; </div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="comment">// Fuse conv2d into the workload</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="comment">// Validate operator, should fail</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> success            = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuConv2d::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, dst_info, &amp;weight_info_2, <span class="keyword">nullptr</span>, conv2d_attr);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   expected_error_str = <span class="stringliteral">&quot;Operator fusion test failed. This operator cannot be fused into the workload&quot;</span>;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160; </div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>(!<span class="keywordtype">bool</span>(success), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        <a class="code" href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a>((success.<a class="code" href="classarm__compute_1_1_status.xhtml#ac8ba59c07d56602367dae64035abb1ef">error_description</a>().find(expected_error_str) != std::string::npos), framework::LogLevel::ERRORS);</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    }</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;}</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// Invalid_Fusion_Should_Fail</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// DYNAMIC_FUSION</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// INTEGRATION</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<a class="code" href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a>() <span class="comment">// CL</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;} <span class="comment">// namespace validation</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_depth_convert_layer_8h_xhtml"><div class="ttname"><a href="_depth_convert_layer_8h.xhtml">DepthConvertLayer.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml_a2f5d0d8276356bdd3d33cf2a23d8ffaa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">arm_compute::experimental::dynamic_fusion::CastAttributes::convert_policy</a></div><div class="ttdeci">CastAttributes &amp; convert_policy(const ConvertPolicy &amp;policy)</div><div class="ttdoc">Set Policy.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8cpp_source.xhtml#l00044">CastAttributes.cpp:44</a></div></div>
<div class="ttc" id="a_pixel_wise_multiplication_8h_xhtml"><div class="ttname"><a href="_pixel_wise_multiplication_8h.xhtml">PixelWiseMultiplication.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ae008e90eb6906fa3526213bc860f6cc5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">arm_compute::test::validation::input_info</a></div><div class="ttdeci">input_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00068">QuantizationInfo.h:68</a></div></div>
<div class="ttc" id="a_cast_attributes_8h_xhtml"><div class="ttname"><a href="_cast_attributes_8h.xhtml">CastAttributes.h</a></div></div>
<div class="ttc" id="a_gpu_conv2d_8h_xhtml"><div class="ttname"><a href="_gpu_conv2d_8h.xhtml">GpuConv2d.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1utils.xhtml">arm_compute::test::validation::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2dynamic__fusion_2_utils_8h_source.xhtml#l00041">Utils.h:41</a></div></div>
<div class="ttc" id="a_asserts_8h_xhtml_adc60af942e951dc93e22b97b41809b51"><div class="ttname"><a href="_asserts_8h.xhtml#adc60af942e951dc93e22b97b41809b51">ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">#define ARM_COMPUTE_EXPECT(X, LEVEL)</div><div class="ttdef"><b>Definition:</b> <a href="_asserts_8h_source.xhtml#l00131">Asserts.h:131</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_af36143939a43fa124312e395975091ed"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#af36143939a43fa124312e395975091ed">arm_compute::ITensorAllocator::init</a></div><div class="ttdeci">void init(const TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based on the passed TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00033">ITensorAllocator.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">arm_compute::experimental::dynamic_fusion::CastAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8h_source.xhtml#l00039">CastAttributes.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00161">DirectConv2d.cpp:161</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="a_depthwise_conv2d_attributes_8h_xhtml"><div class="ttname"><a href="_depthwise_conv2d_attributes_8h.xhtml">DepthwiseConv2dAttributes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_ad4e17c0743b60efaf3be59f8e85a5aa2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">arm_compute::experimental::dynamic_fusion::GpuConv2d::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, ITensorInfo *wei, ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00181">GpuConv2d.cpp:181</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a21c3e11887f3acf9284ca763372c7da0"><div class="ttname"><a href="namespacearm__compute.xhtml#a21c3e11887f3acf9284ca763372c7da0">arm_compute::permute</a></div><div class="ttdeci">void permute(Dimensions&lt; T &gt; &amp;dimensions, const PermutationVector &amp;perm)</div><div class="ttdoc">Permutes given Dimensions according to a permutation vector.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00146">Helpers.h:146</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml_ac8ba59c07d56602367dae64035abb1ef"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml#ac8ba59c07d56602367dae64035abb1ef">arm_compute::Status::error_description</a></div><div class="ttdeci">std::string error_description() const</div><div class="ttdoc">Gets error description if any.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00097">Error.h:97</a></div></div>
<div class="ttc" id="a_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="a_gpu_output_8h_xhtml"><div class="ttname"><a href="_gpu_output_8h.xhtml">GpuOutput.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">arm_compute::DimensionRoundingType</a></div><div class="ttdeci">DimensionRoundingType</div><div class="ttdoc">Dimension rounding type when down-scaling on CNNs.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00132">CoreTypes.h:132</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml">arm_compute::CLTensor</a></div><div class="ttdoc">Basic implementation of the OpenCL tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml#l00041">CLTensor.h:41</a></div></div>
<div class="ttc" id="a_permute_8h_xhtml"><div class="ttname"><a href="_permute_8h.xhtml">Permute.h</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8h_xhtml"><div class="ttname"><a href="_cl_workload_runtime_8h.xhtml">ClWorkloadRuntime.h</a></div></div>
<div class="ttc" id="a_gpu_mul_8h_xhtml"><div class="ttname"><a href="_gpu_mul_8h.xhtml">GpuMul.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_c_l_2_c_l_kernel_library_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">CLKernelLibrary.h</a></div><div class="ttdoc">Manages all the OpenCL kernels compilation and caching, provides accessors for the OpenCL Context.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00406">ConvolutionLayer.cpp:406</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_aa8c74ba65c903552897b2158aed34c0f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa8c74ba65c903552897b2158aed34c0f">arm_compute::test::validation::reference::depthwise_convolution</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; depthwise_convolution(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier, const Size2D &amp;dilation, const QuantizationInfo &amp;out_quant_info)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_depthwise_convolution_layer_8cpp_source.xhtml#l00238">DepthwiseConvolutionLayer.cpp:238</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00055">ActivationLayerInfo.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_attributes.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_attributes_8h_source.xhtml#l00041">Conv2dAttributes.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:38</a></div></div>
<div class="ttc" id="a_c_l_accessor_8h_xhtml"><div class="ttname"><a href="_c_l_accessor_8h.xhtml">CLAccessor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_ac0c93a82ec0a274eb57334b36db9f889"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ac0c93a82ec0a274eb57334b36db9f889">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::get_auxiliary_tensors</a></div><div class="ttdeci">std::vector&lt; std::tuple&lt; CLTensor *, TensorInfo, AuxMemoryInfo &gt; &gt; get_auxiliary_tensors()</div><div class="ttdoc">Get auxiliary tensors of the workload and their memory requirement.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00358">ClWorkloadRuntime.cpp:358</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea8c0084566b290fa9e5e429f4ae241f95"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea8c0084566b290fa9e5e429f4ae241f95">arm_compute::RoundingPolicy::TO_NEAREST_UP</a></div><div class="ttdeci">@ TO_NEAREST_UP</div><div class="ttdoc">Rounds to nearest value; half rounds away from zero.</div></div>
<div class="ttc" id="a_gpu_workload_sketch_8h_xhtml"><div class="ttname"><a href="_gpu_workload_sketch_8h.xhtml">GpuWorkloadSketch.h</a></div></div>
<div class="ttc" id="a_activation_layer_8h_xhtml"><div class="ttname"><a href="_activation_layer_8h.xhtml">ActivationLayer.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00064">SaturateCast.h:64</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a33e65be485104e2e9e69fca551d6f492"><div class="ttname"><a href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">arm_compute::PermutationVector</a></div><div class="ttdeci">Strides PermutationVector</div><div class="ttdoc">Permutation vector.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00037">CoreTypes.h:37</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fae1c8555fcf0ea2bb648a6fd527d658c0">arm_compute::ConvertPolicy::WRAP</a></div><div class="ttdeci">@ WRAP</div><div class="ttdoc">Wrap around.</div></div>
<div class="ttc" id="a_depthwise_convolution_layer_8h_xhtml"><div class="ttname"><a href="_depthwise_convolution_layer_8h.xhtml">DepthwiseConvolutionLayer.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1_c_l_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_c_l_accessor.xhtml">arm_compute::test::CLAccessor</a></div><div class="ttdoc">Accessor implementation for CLTensor objects.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_accessor_8h_source.xhtml#l00036">CLAccessor.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a3afda29223eeda35afd21a6c5e121ba2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::alignment</a></div><div class="ttdeci">size_t alignment</div><div class="ttdoc">Memory alignment in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_descriptor_8h_source.xhtml#l00080">MemoryDescriptor.h:80</a></div></div>
<div class="ttc" id="a_gpu_cast_8h_xhtml"><div class="ttname"><a href="_gpu_cast_8h.xhtml">GpuCast.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_acf9af191573bdcb8e1b0be4b10ba5954"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#acf9af191573bdcb8e1b0be4b10ba5954">arm_compute::test::validation::reference::arithmetic_operation</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; arithmetic_operation(ArithmeticOperation op, const SimpleTensor&lt; T &gt; &amp;src1, const SimpleTensor&lt; T &gt; &amp;src2, SimpleTensor&lt; T &gt; &amp;dst, ConvertPolicy convert_policy)</div><div class="ttdef"><b>Definition:</b> <a href="_arithmetic_operations_8cpp_source.xhtml#l00092">ArithmeticOperations.cpp:92</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch</a></div><div class="ttdoc">A descriptor of a workload of operators.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8h_source.xhtml#l00042">GpuWorkloadSketch.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_ae0237ff2579d4a80ea42f8ed5b1f7e9c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#ae0237ff2579d4a80ea42f8ed5b1f7e9c">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::run</a></div><div class="ttdeci">Status run(const std::vector&lt; CLTensor * &gt; &amp;tensors)</div><div class="ttdoc">Perform run workload.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00340">ClWorkloadRuntime.cpp:340</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext</a></div><div class="ttdoc">Provide context necessary for the creation and configuration of a workload e.g.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8h_source.xhtml#l00057">GpuWorkloadContext.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul_xhtml_aef431fdc62152e5f81afb258274659ba"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml#aef431fdc62152e5f81afb258274659ba">arm_compute::experimental::dynamic_fusion::GpuMul::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *lhs, ITensorInfo *rhs)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_mul_8cpp_source.xhtml#l00063">GpuMul.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_a10a0137545ce1771423fbde2ce494a81"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">arm_compute::CLKernelLibrary::get_compile_context</a></div><div class="ttdeci">CLCompileContext &amp; get_compile_context()</div><div class="ttdoc">Gets the compile context used.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00130">CLKernelLibrary.cpp:130</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdeci">@ SATURATE</div><div class="ttdoc">Saturate.</div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a038d136792f815c57fcdf93b0a59f5f1"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a038d136792f815c57fcdf93b0a59f5f1">arm_compute::CLScheduler::default_reinit</a></div><div class="ttdeci">void default_reinit(ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr, CLBackendType cl_backend_type=CLBackendType::Native)</div><div class="ttdoc">Re-initializes the context and command queue used by the scheduler to default values and sets a defau...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00141">CLScheduler.cpp:141</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00127">CLTensorAllocator.cpp:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add_xhtml_aef431fdc62152e5f81afb258274659ba"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#aef431fdc62152e5f81afb258274659ba">arm_compute::experimental::dynamic_fusion::GpuAdd::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *lhs, ITensorInfo *rhs)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_add_8cpp_source.xhtml#l00063">GpuAdd.cpp:63</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00160">DirectConv2d.cpp:160</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00138">CoreTypes.h:138</a></div></div>
<div class="ttc" id="atests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp_xhtml_a32e7922d3ac511bb2984b31ae4e00be4"><div class="ttname"><a href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp.xhtml#a32e7922d3ac511bb2984b31ae4e00be4">TEST_CASE</a></div><div class="ttdeci">TEST_CASE(RethrowException, framework::DatasetMode::ALL)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2validation_2_u_n_i_t_2_c_p_p_scheduler_8cpp_source.xhtml#l00073">CPPScheduler.cpp:73</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler.cpp:103</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">arm_compute::experimental::dynamic_fusion</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8h_source.xhtml#l00038">ClWorkloadRuntime.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00223">Cast.cpp:223</a></div></div>
<div class="ttc" id="a_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00077">main.cpp:77</a></div></div>
<div class="ttc" id="atests_2validation_2dynamic__fusion_2_utils_8h_xhtml"><div class="ttname"><a href="tests_2validation_2dynamic__fusion_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="a_elementwise_operations_8h_xhtml"><div class="ttname"><a href="_elementwise_operations_8h.xhtml">ElementwiseOperations.h</a></div></div>
<div class="ttc" id="a_gpu_depthwise_conv2d_8h_xhtml"><div class="ttname"><a href="_gpu_depthwise_conv2d_8h.xhtml">GpuDepthwiseConv2d.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory information for tensors with MemoryType::Auxiliary.</div><div class="ttdef"><b>Definition:</b> <a href="_memory_descriptor_8h_source.xhtml#l00065">MemoryDescriptor.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime</a></div><div class="ttdoc">OpenCL runtime to run a workload.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8h_source.xhtml#l00045">ClWorkloadRuntime.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a06499781c05df8148544ecffbd6b7192"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a06499781c05df8148544ecffbd6b7192">arm_compute::test::validation::reference::convolution_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; TW &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const Size2D &amp;dilation, unsigned int num_groups, QuantizationInfo out_quant_info)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_convolution_layer_8cpp_source.xhtml#l00111">ConvolutionLayer.cpp:111</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor</a></div><div class="ttdoc">Simple tensor object that stores elements in a consecutive chunk of memory.</div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_8h_source.xhtml#l00058">SimpleTensor.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00042">TensorInfo.h:42</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml_a603cb7f45efd81606e51686da9aeebd9"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a603cb7f45efd81606e51686da9aeebd9">TEST_SUITE_END</a></div><div class="ttdeci">#define TEST_SUITE_END()</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00039">Macros.h:39</a></div></div>
<div class="ttc" id="a_gpu_sigmoid_8h_xhtml"><div class="ttname"><a href="_gpu_sigmoid_8h.xhtml">GpuSigmoid.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output_xhtml_a4c4b6f72d75bad45e832807ff12fba01"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#a4c4b6f72d75bad45e832807ff12fba01">arm_compute::experimental::dynamic_fusion::GpuOutput::create_op</a></div><div class="ttdeci">static void create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, ITensorInfo *dst)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_output_8cpp_source.xhtml#l00093">GpuOutput.cpp:93</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="a_gpu_add_8h_xhtml"><div class="ttname"><a href="_gpu_add_8h.xhtml">GpuAdd.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a3802a0604503a4f9c4eb7189db69f11d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3802a0604503a4f9c4eb7189db69f11d">arm_compute::test::validation::reference::activation_layer</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; activation_layer(const SimpleTensor&lt; T &gt; &amp;src, ActivationLayerInfo info, const QuantizationInfo &amp;oq_info)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_activation_layer_8cpp_source.xhtml#l00038">ActivationLayer.cpp:38</a></div></div>
<div class="ttc" id="acl__gemm_8cpp_xhtml_ae7f215e412cfa0dae5a983b0bf4071a1"><div class="ttname"><a href="cl__gemm_8cpp.xhtml#ae7f215e412cfa0dae5a983b0bf4071a1">tolerance_f32</a></div><div class="ttdeci">RelativeTolerance&lt; float &gt; tolerance_f32(0.001f)</div><div class="ttdoc">F32 Tolerance value for comparing reference's output against implementation's output for floating poi...</div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml_acd09bed517e43d28823e69494f259835"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#acd09bed517e43d28823e69494f259835">TEST_SUITE</a></div><div class="ttdeci">#define TEST_SUITE(SUITE_NAME)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00034">Macros.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="a_convolution_layer_8h_xhtml"><div class="ttname"><a href="_convolution_layer_8h.xhtml">ConvolutionLayer.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">arm_compute::ArithmeticOperation::ADD</a></div><div class="ttdeci">@ ADD</div><div class="ttdoc">(x + y)</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast_xhtml_aa17a575405ad713d1456004383894ce2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_cast.xhtml#aa17a575405ad713d1456004383894ce2">arm_compute::experimental::dynamic_fusion::GpuCast::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, const Attributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_cast_8cpp_source.xhtml#l00130">GpuCast.cpp:130</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a4feaaa70771629f4b5dcf3b219c8b647"><div class="ttname"><a href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">arm_compute::validate</a></div><div class="ttdeci">Status validate(const ITensorInfo *scores_in, const ITensorInfo *boxes_in, const ITensorInfo *batch_splits_in, const ITensorInfo *scores_out, const ITensorInfo *boxes_out, const ITensorInfo *classes, const ITensorInfo *batch_splits_out, const ITensorInfo *keeps, const ITensorInfo *keeps_size, const BoxNMSLimitInfo info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00214">CPPBoxWithNonMaximaSuppressionLimit.cpp:214</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid_xhtml_aad4150373f8ac22b02075920fbd2033c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml#aad4150373f8ac22b02075920fbd2033c">arm_compute::experimental::dynamic_fusion::GpuSigmoid::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_sigmoid_8cpp_source.xhtml#l00115">GpuSigmoid.cpp:115</a></div></div>
<div class="ttc" id="a_conv2d_attributes_8h_xhtml"><div class="ttname"><a href="_conv2d_attributes_8h.xhtml">Conv2dAttributes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00043">ITensorInfo.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml">arm_compute::experimental::dynamic_fusion::DepthwiseConv2dAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_conv2d_attributes_8h_source.xhtml#l00041">DepthwiseConv2dAttributes.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul_xhtml_a94e0ee686d6aa0e586457653cabd265c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_mul.xhtml#a94e0ee686d6aa0e586457653cabd265c">arm_compute::experimental::dynamic_fusion::GpuMul::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *rhs, const ITensorInfo *lhs)</div><div class="ttdoc">Validate the operator and check if the configuration is supported and if it can be fused into the wor...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_mul_8cpp_source.xhtml#l00035">GpuMul.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d_xhtml_a6d9bc018fa740e80cfd915c2d0dd3c08"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">arm_compute::experimental::dynamic_fusion::GpuDepthwiseConv2d::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported and if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00150">GpuDepthwiseConv2d.cpp:150</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1validation_1_1_relative_tolerance_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">arm_compute::test::validation::RelativeTolerance</a></div><div class="ttdoc">Class reprensenting a relative tolerance value.</div><div class="ttdef"><b>Definition:</b> <a href="_validation_8h_source.xhtml#l00097">Validation.h:97</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1validation_1_1_absolute_tolerance_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml">arm_compute::test::validation::AbsoluteTolerance</a></div><div class="ttdoc">Class reprensenting an absolute tolerance value.</div><div class="ttdef"><b>Definition:</b> <a href="_validation_8h_source.xhtml#l00061">Validation.h:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d_xhtml_ad4e17c0743b60efaf3be59f8e85a5aa2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">arm_compute::experimental::dynamic_fusion::GpuDepthwiseConv2d::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *src, ITensorInfo *wei, ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00188">GpuDepthwiseConv2d.cpp:188</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="a_quantization_info_8h_xhtml"><div class="ttname"><a href="_quantization_info_8h.xhtml">QuantizationInfo.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d_xhtml_a6d9bc018fa740e80cfd915c2d0dd3c08"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">arm_compute::experimental::dynamic_fusion::GpuConv2d::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported and if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_conv2d_8cpp_source.xhtml#l00141">GpuConv2d.cpp:141</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output_xhtml_ae17fde78fbdef146347b12085749a838"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_output.xhtml#ae17fde78fbdef146347b12085749a838">arm_compute::experimental::dynamic_fusion::GpuOutput::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdoc">Validate the operator and check if the its configuration is supported and if it can be fused into the...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_output_8cpp_source.xhtml#l00063">GpuOutput.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml_ab7037b6fa1572f421dc90262aacd3a18"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#ab7037b6fa1572f421dc90262aacd3a18">arm_compute::experimental::dynamic_fusion::CastAttributes::data_type</a></div><div class="ttdeci">CastAttributes &amp; data_type(const DataType &amp;data_type)</div><div class="ttdoc">Set Data Type to be casted to.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8cpp_source.xhtml#l00033">CastAttributes.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime_xhtml_a8665c744767b2ab05d269ef0980ff3aa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_runtime.xhtml#a8665c744767b2ab05d269ef0980ff3aa">arm_compute::experimental::dynamic_fusion::ClWorkloadRuntime::configure</a></div><div class="ttdeci">Status configure(const GpuWorkloadSketch &amp;sketch)</div><div class="ttdoc">Configure ClWorkloadRuntime.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00286">ClWorkloadRuntime.cpp:286</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid_xhtml_a626543d94a4ec70219546d44954d5d7d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sigmoid.xhtml#a626543d94a4ec70219546d44954d5d7d">arm_compute::experimental::dynamic_fusion::GpuSigmoid::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src)</div><div class="ttdoc">Validate the operator and check if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_sigmoid_8cpp_source.xhtml#l00089">GpuSigmoid.cpp:89</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_d178b4fe845b8ce36c704432820c8c40.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_36525c4f440e1302e710dd3570052bdf.xhtml">gpu</a></li><li class="navelem"><a class="el" href="_integration_8cpp.xhtml">Integration.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
