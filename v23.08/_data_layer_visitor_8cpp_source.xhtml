<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/DataLayerVisitor.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_data_layer_visitor_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DataLayerVisitor.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_data_layer_visitor_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_data_layer_visitor_8h.xhtml">arm_compute/graph/DataLayerVisitor.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_type_printer_8h.xhtml">arm_compute/graph/TypePrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_nodes_8h.xhtml">arm_compute/graph/nodes/Nodes.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">void</span> add_convolution_layer_data(<a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">DataLayerVisitor::LayerData</a> &amp;layer_data, T &amp;node)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    PadStrideInfo ps_info = node.convolution_info();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>    layout  = node.output(0)-&gt;desc().layout;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment">// Add data layout</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    layer_data[<span class="stringliteral">&quot;data_layout&quot;</span>] = <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(layout);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// Add padding info</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::ostringstream padding;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    padding &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.pad_left()) &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.pad_top()) &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.pad_bottom()) &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.pad_right()) &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    layer_data[<span class="stringliteral">&quot;pad&quot;</span>] = padding.str();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// Add stride info</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::ostringstream stride;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    stride &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.stride().first) &lt;&lt; <span class="stringliteral">&quot;,&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;           &lt;&lt; <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(ps_info.stride().second) &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    layer_data[<span class="stringliteral">&quot;stride&quot;</span>] = stride.str();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Add dilation info</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// graph api does not support dilation &gt; 1</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    layer_data[<span class="stringliteral">&quot;dilation&quot;</span>] = <span class="stringliteral">&quot;[1,1]&quot;</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// Add bias enabled?</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// Assumes three inputs (input, weights, bias)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::string bias_enabled   = node.input(2) == <span class="keyword">nullptr</span> ? <span class="stringliteral">&quot;0&quot;</span> : <span class="stringliteral">&quot;1&quot;</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    layer_data[<span class="stringliteral">&quot;bias_enabled&quot;</span>] = bias_enabled;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// Change input names for weights / bias (if applicable)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Assumes input(1) is weights and input(2) is bias</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span>(layer_data.count(<span class="stringliteral">&quot;input_shape1&quot;</span>))</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        layer_data[<span class="stringliteral">&quot;weights_shape&quot;</span>] = layer_data[<span class="stringliteral">&quot;input_shape1&quot;</span>];</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        layer_data.erase(<span class="stringliteral">&quot;input_shape1&quot;</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">if</span>(layer_data.count(<span class="stringliteral">&quot;input_shape2&quot;</span>))</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        layer_data[<span class="stringliteral">&quot;bias_shape&quot;</span>] = layer_data[<span class="stringliteral">&quot;input_shape2&quot;</span>];</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        layer_data.erase(<span class="stringliteral">&quot;input_shape2&quot;</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">void</span> add_convolution_layer_method(<a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">DataLayerVisitor::LayerData</a> &amp;layer_data, T &amp;node)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    std::ostringstream method;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    method &lt;&lt; node.convolution_method();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    layer_data[<span class="stringliteral">&quot;convolution_method&quot;</span>] = method.str();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">void</span> add_generic_layer_data(<a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">DataLayerVisitor::LayerData</a> &amp;layer_data, T &amp;node)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Loop over each input tensor</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> tensor_no = 0; tensor_no &lt; node.num_inputs(); ++tensor_no)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="comment">// Add input tensor shapes</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span>(node.input(tensor_no) != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            layer_data[<span class="stringliteral">&quot;input_shape&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(tensor_no)] = <span class="stringliteral">&quot;[&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(node.input(tensor_no)-&gt;desc().shape) + <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Add output tensor shape</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span>(node.output(0) != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        layer_data[<span class="stringliteral">&quot;output_shape0&quot;</span>] = <span class="stringliteral">&quot;[&quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">to_string</a>(node.output(0)-&gt;desc().shape) + <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">  111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    add_generic_layer_data&lt;ConvolutionLayerNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    add_convolution_layer_data&lt;ConvolutionLayerNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    add_convolution_layer_method&lt;ConvolutionLayerNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#aed4fc061f50c81e08328eeead9f6ca3c">  119</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    add_generic_layer_data&lt;DepthwiseConvolutionLayerNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    add_convolution_layer_data&lt;DepthwiseConvolutionLayerNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a8e3f67935e124ab096533434b188d66b">  126</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">FusedConvolutionBatchNormalizationNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    add_generic_layer_data&lt;FusedConvolutionBatchNormalizationNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    add_convolution_layer_data&lt;FusedConvolutionBatchNormalizationNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    add_convolution_layer_method&lt;FusedConvolutionBatchNormalizationNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ab1e673366798d3b6bd8dbb5053e33831">  134</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml">FusedConvolutionBatchNormalizationWithPostOpsNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    add_generic_layer_data&lt;FusedConvolutionBatchNormalizationWithPostOpsNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    add_convolution_layer_data&lt;FusedConvolutionBatchNormalizationWithPostOpsNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    add_convolution_layer_method&lt;FusedConvolutionBatchNormalizationWithPostOpsNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a955a9cfeee8b1105851ada5c27f1189c">  142</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">FusedDepthwiseConvolutionBatchNormalizationNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    add_generic_layer_data&lt;FusedDepthwiseConvolutionBatchNormalizationNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    add_convolution_layer_data&lt;FusedDepthwiseConvolutionBatchNormalizationNode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a24f300446a8ef6103772680e5c578dc1">  149</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">DataLayerVisitor::visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_output_node.xhtml">OutputNode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">  155</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">DataLayerVisitor::default_visit</a>(<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    _layer_data.clear();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    add_generic_layer_data&lt;INode&gt;(_layer_data, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#aa75047a3bc7c8d442c8adf116c948d10">  161</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">DataLayerVisitor::LayerData</a> &amp;<a class="code" href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#aa75047a3bc7c8d442c8adf116c948d10">DataLayerVisitor::layer_data</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> _layer_data;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00109">CoreTypes.h:109</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_data_layer_visitor_xhtml_ac4310bc8ea513b536edc0a34db19ff9e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#ac4310bc8ea513b536edc0a34db19ff9e">arm_compute::graph::DataLayerVisitor::LayerData</a></div><div class="ttdeci">std::map&lt; std::string, std::string &gt; LayerData</div><div class="ttdef"><b>Definition:</b> <a href="_data_layer_visitor_8h_source.xhtml#l00039">DataLayerVisitor.h:39</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_output_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_output_node.xhtml">arm_compute::graph::OutputNode</a></div><div class="ttdoc">Output Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_output_node_8h_source.xhtml#l00034">OutputNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">arm_compute::graph::ConvolutionLayerNode</a></div><div class="ttdoc">Convolution Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_convolution_layer_node_8h_source.xhtml#l00034">ConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_type_printer_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00046">INode.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_node.xhtml">arm_compute::graph::FusedConvolutionBatchNormalizationNode</a></div><div class="ttdoc">Batch Normalization node.</div><div class="ttdef"><b>Definition:</b> <a href="_fused_convolution_batch_normalization_node_8h_source.xhtml#l00034">FusedConvolutionBatchNormalizationNode.h:34</a></div></div>
<div class="ttc" id="a_data_layer_visitor_8h_xhtml"><div class="ttname"><a href="_data_layer_visitor_8h.xhtml">DataLayerVisitor.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="a_nodes_8h_xhtml"><div class="ttname"><a href="_nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a062b90d0a8defe70b0cd19300fee2825"><div class="ttname"><a href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const ClComponentElementwiseBinary::Attributes::ElementwiseOp &amp;op)</div><div class="ttdoc">Formatted output of the arm_compute::experimental::dynamic_fusion::ClComponentElementwiseBinary::Attr...</div><div class="ttdef"><b>Definition:</b> <a href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00070">ElementwiseBinary.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_data_layer_visitor_xhtml_a7ae346d50c25d5008291185396e5c54e"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a7ae346d50c25d5008291185396e5c54e">arm_compute::graph::DataLayerVisitor::default_visit</a></div><div class="ttdeci">void default_visit(INode &amp;n) override</div><div class="ttdoc">Function to be overloaded by the client and implement default behavior for the non-overloaded visitor...</div><div class="ttdef"><b>Definition:</b> <a href="_data_layer_visitor_8cpp_source.xhtml#l00155">DataLayerVisitor.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_data_layer_visitor_xhtml_a9f9ccf9586c79250a79c85fb562cc2f5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#a9f9ccf9586c79250a79c85fb562cc2f5">arm_compute::graph::DataLayerVisitor::visit</a></div><div class="ttdeci">void visit(ConvolutionLayerNode &amp;n) override</div><div class="ttdoc">Visit ConvolutionLayerNode.</div><div class="ttdef"><b>Definition:</b> <a href="_data_layer_visitor_8cpp_source.xhtml#l00111">DataLayerVisitor.cpp:111</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fused_convolution_batch_normalization_with_post_ops_node.xhtml">arm_compute::graph::FusedConvolutionBatchNormalizationWithPostOpsNode</a></div><div class="ttdoc">Batch Normalization node.</div><div class="ttdef"><b>Definition:</b> <a href="_fused_convolution_batch_normalization_with_post_ops_node_8h_source.xhtml#l00034">FusedConvolutionBatchNormalizationWithPostOpsNode.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_data_layer_visitor_xhtml_aa75047a3bc7c8d442c8adf116c948d10"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_data_layer_visitor.xhtml#aa75047a3bc7c8d442c8adf116c948d10">arm_compute::graph::DataLayerVisitor::layer_data</a></div><div class="ttdeci">const LayerData &amp; layer_data() const</div><div class="ttdef"><b>Definition:</b> <a href="_data_layer_visitor_8cpp_source.xhtml#l00161">DataLayerVisitor.cpp:161</a></div></div>
<div class="ttc" id="agraph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_depthwise_convolution_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">arm_compute::graph::DepthwiseConvolutionLayerNode</a></div><div class="ttdoc">Depthwise Convolution Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution_layer_node_8h_source.xhtml#l00034">DepthwiseConvolutionLayerNode.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_fused_depthwise_convolution_batch_normalization_node.xhtml">arm_compute::graph::FusedDepthwiseConvolutionBatchNormalizationNode</a></div><div class="ttdoc">Fused Depthwise Convolution Batch Normalization node.</div><div class="ttdef"><b>Definition:</b> <a href="_fused_depthwise_convolution_batch_normalization_node_8h_source.xhtml#l00034">FusedDepthwiseConvolutionBatchNormalizationNode.h:34</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="_data_layer_visitor_8cpp.xhtml">DataLayerVisitor.cpp</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:13 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
