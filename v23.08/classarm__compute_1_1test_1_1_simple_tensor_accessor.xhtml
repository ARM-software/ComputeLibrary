<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: SimpleTensorAccessor&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">SimpleTensorAccessor&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a> objects.  
 <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for SimpleTensorAccessor&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1test_1_1_simple_tensor_accessor__coll__graph.svg" width="216" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a109300d319628a8d2c9fdea0ecc43772"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a109300d319628a8d2c9fdea0ecc43772">SimpleTensorAccessor</a> (<a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a>&lt; T &gt; &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:a109300d319628a8d2c9fdea0ecc43772"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an accessor for the given <code>tensor</code>.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a109300d319628a8d2c9fdea0ecc43772">More...</a><br /></td></tr>
<tr class="separator:a109300d319628a8d2c9fdea0ecc43772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5057940c111764c4843d22d17e59d8a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5057940c111764c4843d22d17e59d8a1">SimpleTensorAccessor</a> (const <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a5057940c111764c4843d22d17e59d8a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5057940c111764c4843d22d17e59d8a1">More...</a><br /></td></tr>
<tr class="separator:a5057940c111764c4843d22d17e59d8a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99ea43d2c968c9f61e6a7bda49ca03e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a99ea43d2c968c9f61e6a7bda49ca03e3">operator=</a> (const <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;)=delete</td></tr>
<tr class="memdesc:a99ea43d2c968c9f61e6a7bda49ca03e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a99ea43d2c968c9f61e6a7bda49ca03e3">More...</a><br /></td></tr>
<tr class="separator:a99ea43d2c968c9f61e6a7bda49ca03e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d20b25cdb875a18837aa037e67ce382"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a7d20b25cdb875a18837aa037e67ce382">SimpleTensorAccessor</a> (<a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a7d20b25cdb875a18837aa037e67ce382"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a7d20b25cdb875a18837aa037e67ce382">More...</a><br /></td></tr>
<tr class="separator:a7d20b25cdb875a18837aa037e67ce382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae643853e4a0cddd65e1f35bc759fd01c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ae643853e4a0cddd65e1f35bc759fd01c">operator=</a> (<a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae643853e4a0cddd65e1f35bc759fd01c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ae643853e4a0cddd65e1f35bc759fd01c">More...</a><br /></td></tr>
<tr class="separator:ae643853e4a0cddd65e1f35bc759fd01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d518df352fbf0907c187cddeeb0e24"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aa6d518df352fbf0907c187cddeeb0e24">data</a> () const</td></tr>
<tr class="memdesc:aa6d518df352fbf0907c187cddeeb0e24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the tensor data.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aa6d518df352fbf0907c187cddeeb0e24">More...</a><br /></td></tr>
<tr class="separator:aa6d518df352fbf0907c187cddeeb0e24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f2c67dc864c6b6e705710853b5568ef"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a3f2c67dc864c6b6e705710853b5568ef">data</a> ()</td></tr>
<tr class="memdesc:a3f2c67dc864c6b6e705710853b5568ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the tensor data.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a3f2c67dc864c6b6e705710853b5568ef">More...</a><br /></td></tr>
<tr class="separator:a3f2c67dc864c6b6e705710853b5568ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba5871b3e4a65d057ec1c28fce8b00ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">shape</a> () const override</td></tr>
<tr class="memdesc:aba5871b3e4a65d057ec1c28fce8b00ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shape of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aba5871b3e4a65d057ec1c28fce8b00ba">More...</a><br /></td></tr>
<tr class="separator:aba5871b3e4a65d057ec1c28fce8b00ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b67b578f684c4d516843c9dea86a23"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">element_size</a> () const override</td></tr>
<tr class="memdesc:a62b67b578f684c4d516843c9dea86a23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of each element in the tensor in bytes.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a62b67b578f684c4d516843c9dea86a23">More...</a><br /></td></tr>
<tr class="separator:a62b67b578f684c4d516843c9dea86a23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7701a09a964eab360a8e51fa7ad2c16"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">size</a> () const override</td></tr>
<tr class="memdesc:ad7701a09a964eab360a8e51fa7ad2c16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total size of the tensor in bytes.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ad7701a09a964eab360a8e51fa7ad2c16">More...</a><br /></td></tr>
<tr class="separator:ad7701a09a964eab360a8e51fa7ad2c16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">format</a> () const override</td></tr>
<tr class="memdesc:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> format of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ac4b36cc1e56b0b7e579bb4b7196490db">More...</a><br /></td></tr>
<tr class="separator:ac4b36cc1e56b0b7e579bb4b7196490db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f63b63606dbbbe54474e6e970a6738c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a> () const override</td></tr>
<tr class="memdesc:a5f63b63606dbbbe54474e6e970a6738c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data layout of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c">More...</a><br /></td></tr>
<tr class="separator:a5f63b63606dbbbe54474e6e970a6738c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3e72153aeb3ed212e9c3698774e881"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a> () const override</td></tr>
<tr class="memdesc:a9a3e72153aeb3ed212e9c3698774e881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data type of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881">More...</a><br /></td></tr>
<tr class="separator:a9a3e72153aeb3ed212e9c3698774e881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdd3637f2bbde9d7d0cc0b7bbd8400bb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">num_channels</a> () const override</td></tr>
<tr class="memdesc:abdd3637f2bbde9d7d0cc0b7bbd8400bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of channels of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#abdd3637f2bbde9d7d0cc0b7bbd8400bb">More...</a><br /></td></tr>
<tr class="separator:abdd3637f2bbde9d7d0cc0b7bbd8400bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedcfdd4c3b92fe0d63b5463c7ad1d21e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">num_elements</a> () const override</td></tr>
<tr class="memdesc:aedcfdd4c3b92fe0d63b5463c7ad1d21e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of elements of the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#aedcfdd4c3b92fe0d63b5463c7ad1d21e">More...</a><br /></td></tr>
<tr class="separator:aedcfdd4c3b92fe0d63b5463c7ad1d21e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e20eacb1e963e24a21ebd7369effd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">padding</a> () const override</td></tr>
<tr class="memdesc:a79e20eacb1e963e24a21ebd7369effd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available padding around the tensor.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a79e20eacb1e963e24a21ebd7369effd7">More...</a><br /></td></tr>
<tr class="separator:a79e20eacb1e963e24a21ebd7369effd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac74736e3863207232a23b7181c1d0f44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a> () const override</td></tr>
<tr class="memdesc:ac74736e3863207232a23b7181c1d0f44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Quantization info in case of asymmetric quantized type.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#ac74736e3863207232a23b7181c1d0f44">More...</a><br /></td></tr>
<tr class="separator:ac74736e3863207232a23b7181c1d0f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39537b09ccc3ce3d17922f4ef49a123f"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">operator()</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord) const override</td></tr>
<tr class="memdesc:a39537b09ccc3ce3d17922f4ef49a123f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read only access to the specified element.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a39537b09ccc3ce3d17922f4ef49a123f">More...</a><br /></td></tr>
<tr class="separator:a39537b09ccc3ce3d17922f4ef49a123f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df95f7046b81e69a1265a42202ea068"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">operator()</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;coord) override</td></tr>
<tr class="memdesc:a2df95f7046b81e69a1265a42202ea068"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access to the specified element.  <a href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml#a2df95f7046b81e69a1265a42202ea068">More...</a><br /></td></tr>
<tr class="separator:a2df95f7046b81e69a1265a42202ea068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1test_1_1_i_accessor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1test_1_1_i_accessor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml">IAccessor</a></td></tr>
<tr class="memitem:a04e5197de7318cec1ebfd3cea50f5de5 inherit pub_methods_classarm__compute_1_1test_1_1_i_accessor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a04e5197de7318cec1ebfd3cea50f5de5">~IAccessor</a> ()=default</td></tr>
<tr class="memdesc:a04e5197de7318cec1ebfd3cea50f5de5 inherit pub_methods_classarm__compute_1_1test_1_1_i_accessor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a04e5197de7318cec1ebfd3cea50f5de5">More...</a><br /></td></tr>
<tr class="separator:a04e5197de7318cec1ebfd3cea50f5de5 inherit pub_methods_classarm__compute_1_1test_1_1_i_accessor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class arm_compute::test::SimpleTensorAccessor&lt; T &gt;</h3>

<p><a class="el" href="classarm__compute_1_1test_1_1_accessor.xhtml" title="Accessor implementation for Tensor objects.">Accessor</a> implementation for <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a> objects. </p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a109300d319628a8d2c9fdea0ecc43772"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a109300d319628a8d2c9fdea0ecc43772">&#9670;&nbsp;</a></span>SimpleTensorAccessor() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an accessor for the given <code>tensor</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td>To be accessed tensor. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00084">84</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    : _tensor{ <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00066">tensor</a>.</p>

</div>
</div>
<a id="a5057940c111764c4843d22d17e59d8a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5057940c111764c4843d22d17e59d8a1">&#9670;&nbsp;</a></span>SimpleTensorAccessor() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a7d20b25cdb875a18837aa037e67ce382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d20b25cdb875a18837aa037e67ce382">&#9670;&nbsp;</a></span>SimpleTensorAccessor() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3f2c67dc864c6b6e705710853b5568ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f2c67dc864c6b6e705710853b5568ef">&#9670;&nbsp;</a></span>data() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the tensor data. </p>
<dl class="section return"><dt>Returns</dt><dd>a pointer to the tensor data. </dd></dl>

</div>
</div>
<a id="aa6d518df352fbf0907c187cddeeb0e24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6d518df352fbf0907c187cddeeb0e24">&#9670;&nbsp;</a></span>data() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * data</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the tensor data. </p>
<dl class="section return"><dt>Returns</dt><dd>a constant pointer to the tensor data. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00150">150</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> _tensor.data();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f63b63606dbbbe54474e6e970a6738c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f63b63606dbbbe54474e6e970a6738c">&#9670;&nbsp;</a></span>data_layout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> data_layout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data layout of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the data layout of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a367b5090ab432bc7de2c32369e087ab1">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00114">114</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> _tensor.data_layout();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9a3e72153aeb3ed212e9c3698774e881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a3e72153aeb3ed212e9c3698774e881">&#9670;&nbsp;</a></span>data_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data type of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the data type of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00120">120</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">return</span> _tensor.data_type();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a62b67b578f684c4d516843c9dea86a23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62b67b578f684c4d516843c9dea86a23">&#9670;&nbsp;</a></span>element_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t element_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of each element in the tensor in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of each element in the tensor in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#aa459796b5489eca8a9160cb5dcf1a103">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00096">96</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> _tensor.element_size();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac4b36cc1e56b0b7e579bb4b7196490db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4b36cc1e56b0b7e579bb4b7196490db">&#9670;&nbsp;</a></span>format()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> format of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the format of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a57360dd9ca408834c0ea1a8ef70a11f4">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00108">108</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> _tensor.format();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="abdd3637f2bbde9d7d0cc0b7bbd8400bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdd3637f2bbde9d7d0cc0b7bbd8400bb">&#9670;&nbsp;</a></span>num_channels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int num_channels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of channels of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of channels of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#ac492280ef2d7889f1226d34743b74459">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00126">126</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> _tensor.num_channels();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aedcfdd4c3b92fe0d63b5463c7ad1d21e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedcfdd4c3b92fe0d63b5463c7ad1d21e">&#9670;&nbsp;</a></span>num_elements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int num_elements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of elements of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of elements of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a7596bc2928432a0ac2271bc9184d692e">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00132">132</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> _tensor.num_elements();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a39537b09ccc3ce3d17922f4ef49a123f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39537b09ccc3ce3d17922f4ef49a123f">&#9670;&nbsp;</a></span>operator()() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const void * operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>coord</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Read only access to the specified element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coord</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item.">Coordinates</a> of the desired element.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the desired element. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a583a35e4fd72f072a6b76ce58c2e3998">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00162">162</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">return</span> _tensor(coord);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2df95f7046b81e69a1265a42202ea068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2df95f7046b81e69a1265a42202ea068">&#9670;&nbsp;</a></span>operator()() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>coord</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access to the specified element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coord</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item.">Coordinates</a> of the desired element.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the desired element. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a9fd1359f2b5ea45a31bd79b381281eb4">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00168">168</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> _tensor(coord);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a99ea43d2c968c9f61e6a7bda49ca03e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99ea43d2c968c9f61e6a7bda49ca03e3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ae643853e4a0cddd65e1f35bc759fd01c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae643853e4a0cddd65e1f35bc759fd01c">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a79e20eacb1e963e24a21ebd7369effd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79e20eacb1e963e24a21ebd7369effd7">&#9670;&nbsp;</a></span>padding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">PaddingSize</a> padding </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Available padding around the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the available padding around the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a07b929c34ad1dc823d8315876aa403ce">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00138">138</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> _tensor.padding();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac74736e3863207232a23b7181c1d0f44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac74736e3863207232a23b7181c1d0f44">&#9670;&nbsp;</a></span>quantization_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quantization_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Quantization info in case of asymmetric quantized type. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a3f3e1a3200223e6a304a533b1016e749">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00144">144</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> _tensor.quantization_info();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aba5871b3e4a65d057ec1c28fce8b00ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba5871b3e4a65d057ec1c28fce8b00ba">&#9670;&nbsp;</a></span>shape()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shape of the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the shape of the tensor. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#a1c5e120ea2712b21296aa8f62421d3c1">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00090">90</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> _tensor.shape();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad7701a09a964eab360a8e51fa7ad2c16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7701a09a964eab360a8e51fa7ad2c16">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Total size of the tensor in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>the total size of the tensor in bytes. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1_i_accessor.xhtml#aa983ddaeded5756189f46428be79c631">IAccessor</a>.</p>

<p class="definition">Definition at line <a class="el" href="_simple_tensor_accessor_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> _tensor.num_elements() * _tensor.element_size();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>tests/<a class="el" href="_simple_tensor_accessor_8h_source.xhtml">SimpleTensorAccessor.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1_simple_tensor_accessor.xhtml">SimpleTensorAccessor</a></li>
    <li class="footer">Generated on Wed Aug 23 2023 13:07:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
