<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/CL/CLMemoryRegion.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_memory_region_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLMemoryRegion.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_memory_region_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_RUNTIME_CL_CL_MEMORY_REGION_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RUNTIME_CL_CL_MEMORY_REGION_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_region_8h.xhtml">arm_compute/runtime/IMemoryRegion.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/** OpenCL memory region interface */</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">     * @param[in] size Region size</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a>(<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>);<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /** Default Destructor */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a04ae87317614a2332dea02ad30eaced5">~ICLMemoryRegion</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Default move constructor */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">operator=</a>(<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Returns the underlying CL buffer</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @return CL memory buffer object</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> cl::Buffer &amp;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">cl_data</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">    /** Host/SVM pointer accessor</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * @return Host/SVM pointer base</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">ptr</a>() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /** Enqueue a map operation of the allocated buffer on the given queue.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     * @param[in,out] q        The CL command queue to use for the mapping operation.</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in]     blocking If true, then the mapping will be ready to use by the time</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     *                         this method returns, else it is the caller&#39;s responsibility</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     *                         to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * @return The mapping address.</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a929af627a6a0430539998d12024d6c69">map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /** Enqueue an unmap operation of the allocated buffer on the given queue.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @note This method simply enqueue the unmap operation, it is the caller&#39;s responsibility to flush the queue and make sure the unmap is finished before</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *       the memory is accessed by the device.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @param[in,out] q The CL command queue to use for the mapping operation.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0ee6b952accaff0f7e8e61bda7889102">unmap</a>(cl::CommandQueue &amp;q) = 0;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// Inherited methods overridden :</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span>                          *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span>                    *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    std::unique_ptr&lt;IMemoryRegion&gt; <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">extract_subregion</a>(<span class="keywordtype">size_t</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    cl::Context _ctx;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span>       *_mapping;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    cl::Buffer  _mem;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">/** OpenCL buffer memory region implementation */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">   94</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @param[in] flags Memory flags</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     * @param[in] size  Region size</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">CLBufferMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>);<span class="comment"></span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @param[in] buffer Buffer to be used as a memory region</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">CLBufferMemoryRegion</a>(<span class="keyword">const</span> cl::Buffer &amp;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">~CLBufferMemoryRegion</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Inherited methods overridden :</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">ptr</a>() <span class="keyword">final</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span>  <a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">unmap</a>(cl::CommandQueue &amp;q) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">/** OpenCL SVM memory region interface */</span></div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">  117</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @param[in] flags     Memory flags</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @param[in] size      Region size</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @param[in] alignment Alignment</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>, <span class="keywordtype">size_t</span> alignment);<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    /** Destructor */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>();<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    /** Default move constructor */</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;operator=(<a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Inherited methods overridden :</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">void</span> *ptr() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> *_ptr;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;};</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">/** OpenCL coarse-grain SVM memory region implementation */</span></div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml">  146</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml">CLCoarseSVMMemoryRegion</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @param[in] flags     Memory flags</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     * @param[in] size      Region size</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     * @param[in] alignment Alignment</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a87b20fb80c64fce743137a9c24b81e87">CLCoarseSVMMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>, <span class="keywordtype">size_t</span> alignment);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// Inherited methods overridden :</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">void</span>  <a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">unmap</a>(cl::CommandQueue &amp;q) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;};</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">/** OpenCL fine-grain SVM memory region implementation */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml">  163</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml">CLFineSVMMemoryRegion</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     * @param[in] flags     Memory flags</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">     * @param[in] size      Region size</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">     * @param[in] alignment Alignment</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a322777fe48f83f5eeb8083499a578aaa">CLFineSVMMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>, <span class="keywordtype">size_t</span> alignment);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Inherited methods overridden :</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">void</span>  <a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">unmap</a>(cl::CommandQueue &amp;q) <span class="keyword">final</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;};</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_RUNTIME_CL_CL_MEMORY_REGION_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00072">IMemoryRegion.h:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml">arm_compute::IMemoryRegion</a></div><div class="ttdoc">Memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00033">IMemoryRegion.h:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLCoarseSVMMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00148">CLMemoryRegion.cpp:148</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLFineSVMMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00170">CLMemoryRegion.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_ac7e247b94ceae35db2a172961ab83df9"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">arm_compute::ICLMemoryRegion::cl_data</a></div><div class="ttdeci">const cl::Buffer &amp; cl_data() const</div><div class="ttdoc">Returns the underlying CL buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00036">CLMemoryRegion.cpp:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_ab8777d03065e8c7146157148a5355dd1"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">arm_compute::ICLMemoryRegion::ptr</a></div><div class="ttdeci">virtual void * ptr()=0</div><div class="ttdoc">Host/SVM pointer accessor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">arm_compute::CLBufferMemoryRegion::CLBufferMemoryRegion</a></div><div class="ttdeci">CLBufferMemoryRegion(cl_mem_flags flags, size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00057">CLMemoryRegion.cpp:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a0ee6b952accaff0f7e8e61bda7889102"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0ee6b952accaff0f7e8e61bda7889102">arm_compute::ICLMemoryRegion::unmap</a></div><div class="ttdeci">virtual void unmap(cl::CommandQueue &amp;q)=0</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml">arm_compute::CLCoarseSVMMemoryRegion</a></div><div class="ttdoc">OpenCL coarse-grain SVM memory region implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00146">CLMemoryRegion.h:146</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLFineSVMMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00160">CLMemoryRegion.cpp:160</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLBufferMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00090">CLMemoryRegion.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLCoarseSVMMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00139">CLMemoryRegion.cpp:139</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml">arm_compute::ICLMemoryRegion</a></div><div class="ttdoc">OpenCL memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00035">CLMemoryRegion.h:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml">arm_compute::CLFineSVMMemoryRegion</a></div><div class="ttdoc">OpenCL fine-grain SVM memory region implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00163">CLMemoryRegion.h:163</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a95a318ceefc8e9ec4057343e31fc29e9"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">arm_compute::CLBufferMemoryRegion::~CLBufferMemoryRegion</a></div><div class="ttdeci">virtual ~CLBufferMemoryRegion() override</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00070">CLMemoryRegion.cpp:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a0a9140a4eab3cacf1ccd4f0ea82d51a7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">arm_compute::ICLMemoryRegion::ICLMemoryRegion</a></div><div class="ttdeci">ICLMemoryRegion(size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00031">CLMemoryRegion.cpp:31</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a04ae87317614a2332dea02ad30eaced5"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a04ae87317614a2332dea02ad30eaced5">arm_compute::ICLMemoryRegion::~ICLMemoryRegion</a></div><div class="ttdeci">virtual ~ICLMemoryRegion()=default</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01128">helpers.h:1128</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a87b20fb80c64fce743137a9c24b81e87"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a87b20fb80c64fce743137a9c24b81e87">arm_compute::CLCoarseSVMMemoryRegion::CLCoarseSVMMemoryRegion</a></div><div class="ttdeci">CLCoarseSVMMemoryRegion(cl_mem_flags flags, size_t size, size_t alignment)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00134">CLMemoryRegion.cpp:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_s_v_m_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">arm_compute::ICLSVMMemoryRegion</a></div><div class="ttdoc">OpenCL SVM memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00117">CLMemoryRegion.h:117</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_aba791ecf7c921e9a1c8d84baa7dd270e"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">arm_compute::ICLMemoryRegion::operator=</a></div><div class="ttdeci">ICLMemoryRegion &amp; operator=(const ICLMemoryRegion &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLBufferMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00083">CLMemoryRegion.cpp:83</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a000cbaa76e2cb0ae0aeee0b95b6470b7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">arm_compute::ICLMemoryRegion::extract_subregion</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryRegion &gt; extract_subregion(size_t offset, size_t size) override</div><div class="ttdoc">Extract a sub-region from the memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00051">CLMemoryRegion.cpp:51</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a322777fe48f83f5eeb8083499a578aaa"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a322777fe48f83f5eeb8083499a578aaa">arm_compute::CLFineSVMMemoryRegion::CLFineSVMMemoryRegion</a></div><div class="ttdeci">CLFineSVMMemoryRegion(cl_mem_flags flags, size_t size, size_t alignment)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00155">CLMemoryRegion.cpp:155</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a490c935b104197bbd29bd1f917f1ed47"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">arm_compute::ICLMemoryRegion::buffer</a></div><div class="ttdeci">void * buffer() override</div><div class="ttdoc">Returns the pointer to the allocated data.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00041">CLMemoryRegion.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a929af627a6a0430539998d12024d6c69"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a929af627a6a0430539998d12024d6c69">arm_compute::ICLMemoryRegion::map</a></div><div class="ttdeci">virtual void * map(cl::CommandQueue &amp;q, bool blocking)=0</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">arm_compute::CLBufferMemoryRegion</a></div><div class="ttdoc">OpenCL buffer memory region implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00094">CLMemoryRegion.h:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a567fad71aedc47306dbf7b0c020257d8"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">arm_compute::CLBufferMemoryRegion::ptr</a></div><div class="ttdeci">void * ptr() final</div><div class="ttdoc">Host/SVM pointer accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00078">CLMemoryRegion.cpp:78</a></div></div>
<div class="ttc" id="a_i_memory_region_8h_xhtml"><div class="ttname"><a href="_i_memory_region_8h.xhtml">IMemoryRegion.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_b986aa98f9b6490bb4fc7918500346fb.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_memory_region_8h.xhtml">CLMemoryRegion.h</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:30:58 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
