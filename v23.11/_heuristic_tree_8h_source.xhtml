<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/mlgo/HeuristicTree.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_heuristic_tree_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">HeuristicTree.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_heuristic_tree_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_RUNTIME_CL_MLGO_HEURISTIC_TREE_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_RUNTIME_CL_MLGO_HEURISTIC_TREE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_c_l_2mlgo_2_common_8h.xhtml">src/runtime/CL/mlgo/Common.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Conditional ops */</span></div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">   41</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">ConditionalOp</a></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">EQ</a>, <span class="comment">/**&lt; Equal */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">LT</a>, <span class="comment">/**&lt; Less than */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">LE</a>, <span class="comment">/**&lt; Less than or equal to */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">GT</a>, <span class="comment">/**&lt; Greater than */</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">GE</a>, <span class="comment">/**&lt; Greater than or equal to */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/** A branch condition expression evaluating: feature op threshold */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">   51</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">   53</a></span>&#160;    std::string   <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">feature</a>;   <span class="comment">/**&lt; Feature name */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a1ec7f10a2fe0440b1acc5b2944a179bb">   54</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">ConditionalOp</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a1ec7f10a2fe0440b1acc5b2944a179bb">op</a>;        <span class="comment">/**&lt; Condtional op */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a376acef8954eadc70f4b55e8e0588e13">   55</a></span>&#160;    <span class="keywordtype">float</span>         <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a376acef8954eadc70f4b55e8e0588e13">threshold</a>; <span class="comment">/**&lt; Threshold value */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;};</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">/** GEMM Shape used for query */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">   59</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a4033037df26775dd60840e66d38a08ba">   61</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a4033037df26775dd60840e66d38a08ba">m</a>; <span class="comment">/**&lt; Number of rows for the lhs matrix. Lhs matrix NOT transposed */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a7d46b74409bd32b539089ef4721ea544">   62</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a7d46b74409bd32b539089ef4721ea544">n</a>; <span class="comment">/**&lt; Number of columns for the rhs matrix. Rhs matrix NOT transposed */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a90e096a39cfc6da042e02d27a346f2d3">   63</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a90e096a39cfc6da042e02d27a346f2d3">k</a>; <span class="comment">/**&lt; Number of rows for the rhs matrix. Rhs matrix NOT transposed */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a790d5baa17ec7aaf7bb49750a16e9c29">   64</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a790d5baa17ec7aaf7bb49750a16e9c29">b</a>; <span class="comment">/**&lt; Batch size */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;};</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/** A binary decision tree based heuristic */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">   68</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">   71</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> = size_t;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">   72</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">TreeID</a> = size_t;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a4c77363b9aae279f1e6a9fdabf1f927f">   73</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a4c77363b9aae279f1e6a9fdabf1f927f">Index</a>  = std::tuple&lt;HeuristicType, std::string, DataType&gt;;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">   74</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">Branch</a>,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">Leaf</a></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    };</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">   79</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">Node</a></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml#a6b2d83e561886647467f86c20ce39bec">type</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml#aa39dab4d8faf3f7245f678b6899cd2d2">~Node</a>()               = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml">   85</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml">BranchNode</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">Node</a></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#aad5bbc2e059e702a583b32720572ebd7">   87</a></span>&#160;        <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#aad5bbc2e059e702a583b32720572ebd7">BranchNode</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> cond, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> t_node, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> f_node)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            : <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">id</a>{<span class="keywordtype">id</span>}, <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#affaeb8d048ccc2fa3933024e634d3d30">condition</a>{cond}, <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a721cf2f4c5f19e399573b2759ef788dd">true_node</a>{t_node}, <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#ae5c92fde3bfc32dcfbfb62df712fa52c">false_node</a>{f_node}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">   91</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">type</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">NodeType::Branch</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">   95</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a>    <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">id</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#affaeb8d048ccc2fa3933024e634d3d30">   96</a></span>&#160;        <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#affaeb8d048ccc2fa3933024e634d3d30">condition</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a721cf2f4c5f19e399573b2759ef788dd">   97</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a>    <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a721cf2f4c5f19e399573b2759ef788dd">true_node</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#ae5c92fde3bfc32dcfbfb62df712fa52c">   98</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a>    <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#ae5c92fde3bfc32dcfbfb62df712fa52c">false_node</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    };</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml">  102</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml">LeafNode</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">Node</a></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a2ccb51bcf3e6aba24af44f8930d3524a">  104</a></span>&#160;        <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a2ccb51bcf3e6aba24af44f8930d3524a">LeafNode</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, T val) : <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">id</a>{<span class="keywordtype">id</span>}, <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a4fc7f59e3113e19697159919a5aad095">value</a>{val}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">  107</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">type</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">NodeType::Leaf</a>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">  111</a></span>&#160;        <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">id</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a4fc7f59e3113e19697159919a5aad095">  112</a></span>&#160;        T      <a class="code" href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a4fc7f59e3113e19697159919a5aad095">value</a>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    };</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** Constructor */</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree</a>();<span class="comment"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /** Constructor */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">TreeID</a> <span class="keywordtype">id</span>, <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a> h_type, <span class="keyword">const</span> std::string &amp;ip_target, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// Since the HeuristicTree is a handle that owns the the nodes, it is move-only</span><span class="comment"></span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /** Prevent copy construction */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /** Prevent copy assignment */</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a740760ee5d91c2d4ab7815c7bc3cd185">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /** Move constructor */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">HeuristicTree</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;&amp;other) noexcept = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    /** Move assignment */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a740760ee5d91c2d4ab7815c7bc3cd185">operator=</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">HeuristicTree</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /** Query a leaf value given a gemm shape</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @tparam T           Leaf value type</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @param shape        A @ref GEMMShape for the query</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * @return std::pair&lt;bool, T&gt; Outcome contains bool, signalling if the query succeeded or not</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    std::pair&lt;bool, T&gt; <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a53d45213a730d052997de2f15d6324ab">query</a>(<a class="code" href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">GEMMShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">    /** Add a leaf node</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @tparam T  Leaf value type</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param id  Leaf node ID</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @param leaf_value Leaf node value</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     * @return bool  If the addition succeeded or not</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">add_leaf</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, T leaf_value);<span class="comment"></span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">    /** Add a branch node</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @param id  Branch node ID</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @param cond Branch node @ref Condition</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     * @param true_node  True node&#39;s ID</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     * @param false_node  False node&#39;s ID</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     * @return bool  If the addition succeeded or not</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#aa133e1d9d7080a4071bbe101bc350f22">add_branch</a>(<a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1mlgo_1_1_condition.xhtml">Condition</a> cond, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> true_node, <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> false_node);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">    /** Get tree ID</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @return TreeID</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">  161</a></span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">TreeID</a> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">id</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">return</span> _id;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    /** Get tree index</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     * @return Index</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a70df641c5212f2d7cd26b31595daa5b2">  169</a></span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a4c77363b9aae279f1e6a9fdabf1f927f">Index</a> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a70df641c5212f2d7cd26b31595daa5b2">index</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> std::make_tuple(_heuristic_type, _ip_target, _data_type);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /** Check if tree is valid</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     * @return bool</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ae1ee541bb22588b6a71650c807efca90">check</a>();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> _max_query_depth{1000}; <span class="comment">// Maximum depth of query</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> _max_num_nodes{100000}; <span class="comment">// Maximum number of nodes contained by the tree</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">static</span> constexpr <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">NodeID</a> _root{0};               <span class="comment">// Root tree ID</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">bool</span> check_if_structurally_correct() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">TreeID</a>                                  _id;             <span class="comment">/**&lt; Heuristic tree ID */</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">HeuristicType</a>                           _heuristic_type; <span class="comment">/**&lt; Heuristic type */</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    std::string                             _ip_target;      <span class="comment">/**&lt; IP target associated with the tree */</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>                                _data_type;      <span class="comment">/**&lt; Data type associated with the tree */</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    std::map&lt;NodeID, std::unique_ptr&lt;Node&gt;&gt; _tree;           <span class="comment">/**&lt; Tree representation */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;};</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;} <span class="comment">// namespace mlgo</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif //SRC_RUNTIME_CL_MLGO_HEURISTIC_TREE_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml_a7d46b74409bd32b539089ef4721ea544"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a7d46b74409bd32b539089ef4721ea544">arm_compute::mlgo::GEMMShape::n</a></div><div class="ttdeci">unsigned int n</div><div class="ttdoc">Number of columns for the rhs matrix.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00062">HeuristicTree.h:62</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml_a90e096a39cfc6da042e02d27a346f2d3"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a90e096a39cfc6da042e02d27a346f2d3">arm_compute::mlgo::GEMMShape::k</a></div><div class="ttdeci">unsigned int k</div><div class="ttdoc">Number of rows for the rhs matrix.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00063">HeuristicTree.h:63</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_a65d13dc93e2df5e8ab725263cf9f4ac5"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">arm_compute::mlgo::HeuristicTree::BranchNode::type</a></div><div class="ttdeci">NodeType type() const override</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00091">HeuristicTree.h:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_acac9cbaeea226ed297804c012dc12b16"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16">arm_compute::mlgo::HeuristicTree::NodeType</a></div><div class="ttdeci">NodeType</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00074">HeuristicTree.h:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16adacdb83ade6c4e8878717e206175dfd8">arm_compute::mlgo::HeuristicTree::NodeType::Branch</a></div><div class="ttdeci">@ Branch</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml_a376acef8954eadc70f4b55e8e0588e13"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a376acef8954eadc70f4b55e8e0588e13">arm_compute::mlgo::Condition::threshold</a></div><div class="ttdeci">float threshold</div><div class="ttdoc">Threshold value.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00055">HeuristicTree.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acfe6055d2e0503be378bb63449ec7ba6">arm_compute::mlgo::ConditionalOp::LE</a></div><div class="ttdeci">@ LE</div><div class="ttdoc">Less than or equal to.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node_xhtml_a65d13dc93e2df5e8ab725263cf9f4ac5"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">arm_compute::mlgo::HeuristicTree::LeafNode::type</a></div><div class="ttdeci">NodeType type() const override</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00107">HeuristicTree.h:107</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml">arm_compute::mlgo::HeuristicTree::BranchNode</a></div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00085">HeuristicTree.h:85</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_aad5bbc2e059e702a583b32720572ebd7"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#aad5bbc2e059e702a583b32720572ebd7">arm_compute::mlgo::HeuristicTree::BranchNode::BranchNode</a></div><div class="ttdeci">BranchNode(NodeID id, Condition cond, NodeID t_node, NodeID f_node)</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00087">HeuristicTree.h:87</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml_a790d5baa17ec7aaf7bb49750a16e9c29"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a790d5baa17ec7aaf7bb49750a16e9c29">arm_compute::mlgo::GEMMShape::b</a></div><div class="ttdeci">unsigned int b</div><div class="ttdoc">Batch size.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00064">HeuristicTree.h:64</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_a721cf2f4c5f19e399573b2759ef788dd"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a721cf2f4c5f19e399573b2759ef788dd">arm_compute::mlgo::HeuristicTree::BranchNode::true_node</a></div><div class="ttdeci">NodeID true_node</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00097">HeuristicTree.h:97</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079a2dcbad7477fd40561e8b8198f173bd47">arm_compute::mlgo::ConditionalOp::EQ</a></div><div class="ttdeci">@ EQ</div><div class="ttdoc">Equal.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml_ab52b8c461b445ab0e3f4274f0ce6961e"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml#ab52b8c461b445ab0e3f4274f0ce6961e">arm_compute::mlgo::Condition::feature</a></div><div class="ttdeci">std::string feature</div><div class="ttdoc">Feature name.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00053">HeuristicTree.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_afdbbde2bc0640d1aea22a1cbbc2ac59c"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afdbbde2bc0640d1aea22a1cbbc2ac59c">arm_compute::mlgo::HeuristicTree::TreeID</a></div><div class="ttdeci">size_t TreeID</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00072">HeuristicTree.h:72</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_affaeb8d048ccc2fa3933024e634d3d30"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#affaeb8d048ccc2fa3933024e634d3d30">arm_compute::mlgo::HeuristicTree::BranchNode::condition</a></div><div class="ttdeci">Condition condition</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00096">HeuristicTree.h:96</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a63d163d35294f57ea6bea903892616df"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a63d163d35294f57ea6bea903892616df">arm_compute::mlgo::HeuristicTree::id</a></div><div class="ttdeci">TreeID id() const</div><div class="ttdoc">Get tree ID.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00161">HeuristicTree.h:161</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node_xhtml_a6b2d83e561886647467f86c20ce39bec"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml#a6b2d83e561886647467f86c20ce39bec">arm_compute::mlgo::HeuristicTree::Node::type</a></div><div class="ttdeci">virtual NodeType type() const =0</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml">arm_compute::mlgo::HeuristicTree::Node</a></div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00079">HeuristicTree.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a70df641c5212f2d7cd26b31595daa5b2"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a70df641c5212f2d7cd26b31595daa5b2">arm_compute::mlgo::HeuristicTree::index</a></div><div class="ttdeci">Index index() const</div><div class="ttdoc">Get tree index.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00169">HeuristicTree.h:169</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_ae5c92fde3bfc32dcfbfb62df712fa52c"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#ae5c92fde3bfc32dcfbfb62df712fa52c">arm_compute::mlgo::HeuristicTree::BranchNode::false_node</a></div><div class="ttdeci">NodeID false_node</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00098">HeuristicTree.h:98</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml">arm_compute::mlgo::HeuristicTree</a></div><div class="ttdoc">A binary decision tree based heuristic.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00068">HeuristicTree.h:68</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node_xhtml_a1b923c5555bd0f98e5e441f7931354d0"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">arm_compute::mlgo::HeuristicTree::LeafNode::id</a></div><div class="ttdeci">NodeID id</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00111">HeuristicTree.h:111</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node_xhtml_a1b923c5555bd0f98e5e441f7931354d0"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_branch_node.xhtml#a1b923c5555bd0f98e5e441f7931354d0">arm_compute::mlgo::HeuristicTree::BranchNode::id</a></div><div class="ttdeci">NodeID id</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00095">HeuristicTree.h:95</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node_xhtml_a2ccb51bcf3e6aba24af44f8930d3524a"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a2ccb51bcf3e6aba24af44f8930d3524a">arm_compute::mlgo::HeuristicTree::LeafNode::LeafNode</a></div><div class="ttdeci">LeafNode(NodeID id, T val)</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00104">HeuristicTree.h:104</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml_a4033037df26775dd60840e66d38a08ba"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml#a4033037df26775dd60840e66d38a08ba">arm_compute::mlgo::GEMMShape::m</a></div><div class="ttdeci">unsigned int m</div><div class="ttdoc">Number of rows for the lhs matrix.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00061">HeuristicTree.h:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_afd73cff52d4133f4ecfa00f5699614d1"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#afd73cff52d4133f4ecfa00f5699614d1">arm_compute::mlgo::HeuristicTree::add_leaf</a></div><div class="ttdeci">bool add_leaf(NodeID id, T leaf_value)</div><div class="ttdoc">Add a leaf node.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00133">HeuristicTree.cpp:133</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_aa133e1d9d7080a4071bbe101bc350f22"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#aa133e1d9d7080a4071bbe101bc350f22">arm_compute::mlgo::HeuristicTree::add_branch</a></div><div class="ttdeci">bool add_branch(NodeID id, Condition cond, NodeID true_node, NodeID false_node)</div><div class="ttdoc">Add a branch node.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00149">HeuristicTree.cpp:149</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml">arm_compute::mlgo::Condition</a></div><div class="ttdoc">A branch condition expression evaluating: feature op threshold.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00051">HeuristicTree.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079ac562607189d77eb9dfb707464c1e7b0b">arm_compute::mlgo::ConditionalOp::LT</a></div><div class="ttdeci">@ LT</div><div class="ttdoc">Less than.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00222">Cast.cpp:222</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ad9caec94da8d468edbb0a0680fa20cff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">arm_compute::mlgo::parser::mlgo</a></div><div class="ttdeci">MLGOHeuristics mlgo(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00778">MLGOParser.cpp:778</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079af803729628adf4199f224c2a225038e9">arm_compute::mlgo::ConditionalOp::GE</a></div><div class="ttdeci">@ GE</div><div class="ttdoc">Greater than or equal to.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_abf73f846abd6dfb414f6b51f8286ba09"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#abf73f846abd6dfb414f6b51f8286ba09">arm_compute::mlgo::HeuristicType</a></div><div class="ttdeci">HeuristicType</div><div class="ttdoc">Types of Heuristic (tree)</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2mlgo_2_common_8h_source.xhtml#l00035">Common.h:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a4c77363b9aae279f1e6a9fdabf1f927f"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a4c77363b9aae279f1e6a9fdabf1f927f">arm_compute::mlgo::HeuristicTree::Index</a></div><div class="ttdeci">std::tuple&lt; HeuristicType, std::string, DataType &gt; Index</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00073">HeuristicTree.h:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml">arm_compute::mlgo::HeuristicTree::LeafNode</a></div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00102">HeuristicTree.h:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079acd6a9bd2a175104eed40f0d33a8b4020">arm_compute::mlgo::ConditionalOp::GT</a></div><div class="ttdeci">@ GT</div><div class="ttdoc">Greater than.</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a740760ee5d91c2d4ab7815c7bc3cd185"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a740760ee5d91c2d4ab7815c7bc3cd185">arm_compute::mlgo::HeuristicTree::operator=</a></div><div class="ttdeci">HeuristicTree &amp; operator=(const HeuristicTree &amp;)=delete</div><div class="ttdoc">Prevent copy assignment.</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a16e3fff3e83ba8bbf7eef6887d9b153d"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a16e3fff3e83ba8bbf7eef6887d9b153d">arm_compute::mlgo::HeuristicTree::NodeID</a></div><div class="ttdeci">size_t NodeID</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00071">HeuristicTree.h:71</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a9e7bd1393b35e766715ab934dfee7e40"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a9e7bd1393b35e766715ab934dfee7e40">arm_compute::mlgo::HeuristicTree::HeuristicTree</a></div><div class="ttdeci">HeuristicTree()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00092">HeuristicTree.cpp:92</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node_xhtml_aa39dab4d8faf3f7245f678b6899cd2d2"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_node.xhtml#aa39dab4d8faf3f7245f678b6899cd2d2">arm_compute::mlgo::HeuristicTree::Node::~Node</a></div><div class="ttdeci">virtual ~Node()=default</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node_xhtml_a4fc7f59e3113e19697159919a5aad095"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_heuristic_tree_1_1_leaf_node.xhtml#a4fc7f59e3113e19697159919a5aad095">arm_compute::mlgo::HeuristicTree::LeafNode::value</a></div><div class="ttdeci">T value</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00112">HeuristicTree.h:112</a></div></div>
<div class="ttc" id="aruntime_2_c_l_2mlgo_2_common_8h_xhtml"><div class="ttname"><a href="runtime_2_c_l_2mlgo_2_common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_condition_xhtml_a1ec7f10a2fe0440b1acc5b2944a179bb"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_condition.xhtml#a1ec7f10a2fe0440b1acc5b2944a179bb">arm_compute::mlgo::Condition::op</a></div><div class="ttdeci">ConditionalOp op</div><div class="ttdoc">Condtional op.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00054">HeuristicTree.h:54</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:83</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_xhtml_a1169278c54b2e2f0c3e6656b902da079"><div class="ttname"><a href="namespacearm__compute_1_1mlgo.xhtml#a1169278c54b2e2f0c3e6656b902da079">arm_compute::mlgo::ConditionalOp</a></div><div class="ttdeci">ConditionalOp</div><div class="ttdoc">Conditional ops.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00041">HeuristicTree.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_ae1ee541bb22588b6a71650c807efca90"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#ae1ee541bb22588b6a71650c807efca90">arm_compute::mlgo::HeuristicTree::check</a></div><div class="ttdeci">bool check()</div><div class="ttdoc">Check if tree is valid.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00212">HeuristicTree.cpp:212</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1_g_e_m_m_shape_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1_g_e_m_m_shape.xhtml">arm_compute::mlgo::GEMMShape</a></div><div class="ttdoc">GEMM Shape used for query.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8h_source.xhtml#l00059">HeuristicTree.h:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#acac9cbaeea226ed297804c012dc12b16ac3b5e1f7de11d645fb1da6c5415b1fa5">arm_compute::mlgo::HeuristicTree::NodeType::Leaf</a></div><div class="ttdeci">@ Leaf</div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1_heuristic_tree_xhtml_a53d45213a730d052997de2f15d6324ab"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1_heuristic_tree.xhtml#a53d45213a730d052997de2f15d6324ab">arm_compute::mlgo::HeuristicTree::query</a></div><div class="ttdeci">std::pair&lt; bool, T &gt; query(GEMMShape shape) const</div><div class="ttdoc">Query a leaf value given a gemm shape.</div><div class="ttdef"><b>Definition:</b> <a href="_heuristic_tree_8cpp_source.xhtml#l00102">HeuristicTree.cpp:102</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_82e3926d996ac5aae32ffa787ec227cb.xhtml">mlgo</a></li><li class="navelem"><a class="el" href="_heuristic_tree_8h.xhtml">HeuristicTree.h</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
