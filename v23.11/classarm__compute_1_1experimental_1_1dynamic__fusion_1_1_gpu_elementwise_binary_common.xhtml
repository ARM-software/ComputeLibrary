<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuElementwiseBinaryCommon Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuElementwiseBinaryCommon Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_elementwise_binary_common_8h_source.xhtml">GpuElementwiseBinaryCommon.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8e01fcc1b6f567760ee1f96e996796ec"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a8e01fcc1b6f567760ee1f96e996796ec">create_op</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:a8e01fcc1b6f567760ee1f96e996796ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an operator and fuse it into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a8e01fcc1b6f567760ee1f96e996796ec">More...</a><br /></td></tr>
<tr class="separator:a8e01fcc1b6f567760ee1f96e996796ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0b567c2c34a4971624fc113de466a4a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#ac0b567c2c34a4971624fc113de466a4a">is_supported_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;context, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:ac0b567c2c34a4971624fc113de466a4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the operator configuration is supported, irrespective of fusion.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#ac0b567c2c34a4971624fc113de466a4a">More...</a><br /></td></tr>
<tr class="separator:ac0b567c2c34a4971624fc113de466a4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228d9706bf41416a7081ce9f3405d70c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">validate_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:a228d9706bf41416a7081ce9f3405d70c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate the operator and check if it can be fused into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">More...</a><br /></td></tr>
<tr class="separator:a228d9706bf41416a7081ce9f3405d70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_elementwise_binary_common_8h_source.xhtml#l00067">67</a> of file <a class="el" href="_gpu_elementwise_binary_common_8h_source.xhtml">GpuElementwiseBinaryCommon.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8e01fcc1b6f567760ee1f96e996796ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e01fcc1b6f567760ee1f96e996796ec">&#9670;&nbsp;</a></span>create_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * create_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an operator and fuse it into the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">validate_op()</a> fails, the creation also fails and may throw an error. </dd>
<dd>
If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">validate_op()</a> fails, <code>sketch</code> remains unchanged and valid.</dd></dl>
<p>Valid data type configurations are checked at the operator level i.e. <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_add.xhtml#a94e0ee686d6aa0e586457653cabd265c" title="Validate the operator and check if the its configuration is supported and if it can be fused into the...">GpuAdd::validate_op()</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#a94e0ee686d6aa0e586457653cabd265c" title="Validate the operator and check if its configuration is supported and if it can be fused into the wor...">GpuSub::validate_op()</a>, ... etc.</p>
<p>Valid data layouts:</p><ul>
<li>Any</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sketch</td><td>Workload sketch into which the operator will be fused </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>Left hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>Right hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> containing the operator type: ADD, SUB, DIV, ... etc.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer for the destination tensor info </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml">GpuElementwiseBinaryCommon.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(lhs, rhs);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(lhs, rhs);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">GpuElementwiseBinaryCommon::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, lhs, rhs, attributes));</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">create_virtual_tensor</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// Auto initialize dst tensor</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    calculate_and_init_dst_if_empty(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, lhs, rhs);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// Translate into components and add to component graph</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">auto</span> &amp;comp_graph = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> sketch_ctx = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">if</span> (sketch_ctx-&gt;gpu_language() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">GpuLanguage::OpenCL</a>)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(sketch_ctx-&gt;cl_compile_context());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment">// Add ElementwiseBinary Component</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">auto</span> properties = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">IGpuKernelComponent::Properties</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            properties.stage(UnitWorkloadStage{<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a>});</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            ArgumentPack&lt;ITensorInfo&gt; arguments;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, lhs);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            comp_graph.add_new_component&lt;ClComponentElementwiseBinary&gt;(properties, arguments, attributes);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unimplemented Gpu language&quot;</span>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// Set up fusion test by adding to the Operator Group</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// Note this has to be performed after all the components have been successfully added to the component graph</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">// Pack tensor infos</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, lhs);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    tensors.add_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">add_operator</a>(op);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00108">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00141">GpuOperatorGroup::add_operator()</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00099">ArgumentPack&lt; T &gt;::add_tensor()</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00035">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00067">GpuWorkloadSketch::Implementation::component_graph()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketch::Implementation::context()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00100">GpuWorkloadSketch::Implementation::create_virtual_tensor()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00046">GpuWorkloadSketch::implementation()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup::new_operator()</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::OpenCL</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00077">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Run</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00157">arm_compute::test::validation::sketch</a>, and <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">GpuElementwiseBinaryCommon::validate_op()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_mul_8cpp_source.xhtml#l00060">GpuMul::create_op()</a>, <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00062">GpuSub::create_op()</a>, and <a class="el" href="_gpu_add_8cpp_source.xhtml#l00062">GpuAdd::create_op()</a>.</p>

</div>
</div>
<a id="ac0b567c2c34a4971624fc113de466a4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0b567c2c34a4971624fc113de466a4a">&#9670;&nbsp;</a></span>is_supported_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> is_supported_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the operator configuration is supported, irrespective of fusion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Workload context within which the operator is running </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>Left hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>Right hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> containing the operator type: ADD, SUB, DIV, ... etc.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml">GpuElementwiseBinaryCommon.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>, lhs, rhs, <span class="keyword">nullptr</span>, attributes);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00156">arm_compute::test::validation::context</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_mul_8cpp_source.xhtml#l00048">GpuMul::is_supported_op()</a>, <a class="el" href="_gpu_add_8cpp_source.xhtml#l00049">GpuAdd::is_supported_op()</a>, and <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00049">GpuSub::is_supported_op()</a>.</p>

</div>
</div>
<a id="a228d9706bf41416a7081ce9f3405d70c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a228d9706bf41416a7081ce9f3405d70c">&#9670;&nbsp;</a></span>validate_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml">ElementwiseBinaryCommonAttributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate the operator and check if it can be fused into the workload sketch. </p>
<p>Parameters are similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a8e01fcc1b6f567760ee1f96e996796ec">GpuElementwiseBinaryCommon::create_op()</a></p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">115</a> of file <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml">GpuElementwiseBinaryCommon.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lhs, rhs);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!lhs-&gt;has_valid_id() || !rhs-&gt;has_valid_id());</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Refer to GpuConv2d::validate_op() for id-validness of this TensorInfo object</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    TensorInfo dst_info_to_validate;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">// Auto initialize dst tensor info</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    calculate_and_init_dst_if_empty(&amp;dst_info_to_validate, lhs, rhs);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">// Perform fusion test</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Pack tensor infos</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, lhs);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, rhs);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, &amp;dst_info_to_validate);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">new_operator</a>(operator_type, tensors);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#aaafd71070c18da8190d445b43de84c22">try_add_operator</a>(op),</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                    <span class="stringliteral">&quot;Operator fusion test failed. This operator cannot be fused into the workload&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Check if configuration is supported</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">gpu_context</a>(), lhs, rhs, &amp;dst_info_to_validate, attributes);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00108">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_error_8h_source.xhtml#l00298">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00041">GpuWorkloadSketch::gpu_context()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00313">ITensorInfo::has_valid_id()</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00046">GpuWorkloadSketch::implementation()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup::new_operator()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00077">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00157">arm_compute::test::validation::sketch</a>, and <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00066">GpuOperatorGroup::try_add_operator()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, <a class="el" href="_gpu_mul_8cpp_source.xhtml#l00036">GpuMul::validate_op()</a>, <a class="el" href="_gpu_add_8cpp_source.xhtml#l00036">GpuAdd::validate_op()</a>, and <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00036">GpuSub::validate_op()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/operators/internal/<a class="el" href="_gpu_elementwise_binary_common_8h_source.xhtml">GpuElementwiseBinaryCommon.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/operators/internal/<a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml">GpuElementwiseBinaryCommon.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_ac3be1f04870ebf4c5fa052d5f77e0920"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#ac3be1f04870ebf4c5fa052d5f77e0920">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::new_operator</a></div><div class="ttdeci">Operator new_operator(const GpuOperatorType &amp;operator_type, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors) const</div><div class="ttdoc">Create a new operator.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00149">GpuOperatorGroup.cpp:149</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdeci">@ Run</div><div class="ttdoc">Run every time after the first time.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a57128473b45c636d96d321805f217e79"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::create_virtual_tensor</a></div><div class="ttdeci">ITensorInfo * create_virtual_tensor()</div><div class="ttdoc">Create a virtual (see MemoryType) tensor info and save it.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00100">GpuWorkloadSketchImpl.h:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00157">DirectConv2d.cpp:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aeca25ed142be5cb241f375c6f79638e0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::operator_group</a></div><div class="ttdeci">const GpuOperatorGroup &amp; operator_group() const</div><div class="ttdoc">Get operator group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00077">GpuWorkloadSketchImpl.h:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_aaafd71070c18da8190d445b43de84c22"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#aaafd71070c18da8190d445b43de84c22">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::try_add_operator</a></div><div class="ttdeci">bool try_add_operator(const Operator &amp;op, bool is_output=false) const</div><div class="ttdoc">Try adding (without actually adding) an operator to the group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00066">GpuOperatorGroup.cpp:66</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_a84bbb323392f1211944a9c32066a1d7f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a84bbb323392f1211944a9c32066a1d7f">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::gpu_context</a></div><div class="ttdeci">const GpuWorkloadContext * gpu_context() const</div><div class="ttdoc">Get the gpu workload context of this sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00041">GpuWorkloadSketch.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_xhtml_a8908bd4e3667b458f53bb21b5e564b4f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a8908bd4e3667b458f53bb21b5e564b4f">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::implementation</a></div><div class="ttdeci">Implementation &amp; implementation()</div><div class="ttdoc">Get the implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_8cpp_source.xhtml#l00046">GpuWorkloadSketch.cpp:46</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00067">GpuWorkloadSketchImpl.h:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketchImpl.h:62</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00156">DirectConv2d.cpp:156</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a12747697b67a54dfad1bfb740b5a1482"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::Properties</a></div><div class="ttdeci">KernelProperties Properties</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00070">IGpuKernelComponent.h:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group_xhtml_a2395670f670bd1cad21fba418566f4d0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml#a2395670f670bd1cad21fba418566f4d0">arm_compute::experimental::dynamic_fusion::GpuOperatorGroup::add_operator</a></div><div class="ttdeci">void add_operator(const Operator &amp;op, bool is_output=false)</div><div class="ttdoc">Add an operator to the group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_operator_group_8cpp_source.xhtml#l00141">GpuOperatorGroup.cpp:141</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::GpuLanguage::OpenCL</a></div><div class="ttdeci">@ OpenCL</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common_xhtml_a228d9706bf41416a7081ce9f3405d70c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">arm_compute::experimental::dynamic_fusion::GpuElementwiseBinaryCommon::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *rhs, const ITensorInfo *lhs, const ElementwiseBinaryCommonAttributes &amp;attributes)</div><div class="ttdoc">Validate the operator and check if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">GpuElementwiseBinaryCommon.cpp:115</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml">GpuElementwiseBinaryCommon</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
