<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/sketch/gpu/ckw_driver/components/GpuCkwCast.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_gpu_ckw_cast_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GpuCkwCast.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gpu_ckw_cast_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_cast_8h.xhtml">GpuCkwCast.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_adjust_vec_size_8h.xhtml">arm_compute/core/utils/helpers/AdjustVecSize.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;ckw/TensorTileSampler.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/components/utils/type_converter/Common.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_kernel_writer_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwKernelWriter.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_scoped_kernel_writer_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwScopedKernelWriter.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_variable_table_8h.xhtml">src/dynamic_fusion/sketch/gpu/ckw_driver/GpuCkwVariableTable.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_argument_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelArgument.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_component_group_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelComponentGroup.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespaceckw.xhtml">ckw</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/** Create a simple sampler from tile of dimension [m0, n0]</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">inline</span> TensorTileSampler create_sampler(GpuCkwScopedKernelWriter &amp;writer, int32_t m0, int32_t n0)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    TensorTileSampler sampler;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> &amp;gid_0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_0&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span> &amp;gid_1 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_1&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">auto</span> &amp;gid_2 = writer-&gt;declare_tile(<span class="stringliteral">&quot;gid_2&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">auto</span> &amp;const_0 = writer-&gt;declare_tile(<span class="stringliteral">&quot;0&quot;</span>, 0);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    writer-&gt;op_get_global_id(gid_0, 0);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    writer-&gt;op_get_global_id(gid_1, 1);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    writer-&gt;op_get_global_id(gid_2, 2);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">auto</span> &amp;x_coord = writer-&gt;declare_tile(<span class="stringliteral">&quot;x_coord&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">auto</span> &amp;y_coord = writer-&gt;declare_tile(<span class="stringliteral">&quot;y_coord&quot;</span>, ckw::DataType::Int32);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">auto</span> &amp;m0_t    = writer-&gt;declare_tile(<span class="stringliteral">&quot;m0&quot;</span>, m0);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> &amp;n0_t    = writer-&gt;declare_tile(<span class="stringliteral">&quot;n0&quot;</span>, n0);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    writer-&gt;op_binary_expression(x_coord, gid_0, BinaryOp::Mul, n0_t);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    writer-&gt;op_binary_expression(y_coord, gid_1, BinaryOp::Mul, m0_t);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    sampler.x(x_coord);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    sampler.y(y_coord);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    sampler.z(const_0); <span class="comment">// 3rd dimension collapsed with 2nd dimension</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    sampler.b(gid_2);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    sampler.width(n0);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    sampler.height(m0);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    sampler.format(TensorSamplerFormat::C_WH_1); <span class="comment">// 3rd dimension collapsed with 2nd dimension</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    sampler.address_mode_x(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">TensorSamplerAddressModeX::None</a>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    sampler.address_mode_y(TensorSamplerAddressModeY::ClampToBorder);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    sampler.address_mode_z(TensorSamplerAddressModeZ::Skip); <span class="comment">// Dimensions higher than 3 not supported yet</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> sampler;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#af693fb55aa5e8850f94b5962be997ddb">   89</a></span>&#160;GpuCkwCast::GpuCkwCast(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack&lt;ITensorInfo&gt;</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">Attributes</a> &amp;attributes)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">IGpuCkwComponentDriver</a>{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>}, _src{}, _dst{}, _attributes{attributes}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    _src = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _dst = this-&gt;tensors().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ac794f053c37af9bdaf61039dbff80cac">   97</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ac794f053c37af9bdaf61039dbff80cac">GpuCkwCast::write_component_code</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">ComponentGroup</a>    &amp;comp_group,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                      <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">GpuCkwVariableTable</a>     &amp;vtable,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                      <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">GpuCkwScopedKernelWriter</a> writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         root_window = comp_group.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">get_root_component</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a7b0b398a61f9445132382fd9c065435b">ckw_component_driver</a>()-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a66df3fbb8781a4dfa011885356e1495f">get_window</a>();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0          = root_window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">step</a>();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0          = root_window.y().step();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_component_argument.xhtml">GpuCkwComponentArgument</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> =</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml#a8f0011b59fc660a6e9a34d4e56b48175">declare_variable</a>(comp_group, writer, _src, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;src&quot;</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_component_argument.xhtml">GpuCkwComponentArgument</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> =</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml#a8f0011b59fc660a6e9a34d4e56b48175">declare_variable</a>(comp_group, writer, _dst, TensorStorageType::ClBufferUint8Ptr, <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Load the source tile and prepare the sampler.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;has_tile())</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> sampler = create_sampler(writer, m0, n0);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        writer-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_kernel_writer.xhtml#a24194a93eb654bcef394f820d28be8ec">op_load_once</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, sampler);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;sampler = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tile_sampler();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        writer-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_kernel_writer.xhtml#a24194a93eb654bcef394f820d28be8ec">op_load_once</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, sampler);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;src_tile = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tile();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;sampler  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tile_sampler();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// Prepare the output tile.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;has_tile())</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// Get Target datatype and convert it to ckw::DataType.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <a class="code" href="namespaceacl.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">ckw::DataType</a> target_dt = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">dynamic_fusion::to_ckw</a>(_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#ab7037b6fa1572f421dc90262aacd3a18">data_type</a>());</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">// Create dst_tile based on src_tile dimensions and with target DataType.</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keyword">const</span> TileInfo src_tile_info = src_tile.tile_info();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keyword">const</span> TileInfo dst_tile_info = TileInfo(target_dt, src_tile_info.height(), src_tile_info.width());</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="comment">// Declare dst_tile</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">auto</span> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3744347976f5c2cb8f3ecd016a588454">tile</a> = writer-&gt;declare_tile(<span class="stringliteral">&quot;dst_tile&quot;</span>, dst_tile_info);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;init_virtual_tensor(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3744347976f5c2cb8f3ecd016a588454">tile</a>, sampler);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;dst_tile = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;tile();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Check if this op is cast-down or cast-up</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> src_size  = <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> dst_size  = <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>   <a class="code" href="cast_8cl.xhtml#a057e82f8a5277468a0dd5d3e4c1c584e">cast_down</a> = (src_size &gt;= dst_size);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="cast_8cl.xhtml#a057e82f8a5277468a0dd5d3e4c1c584e">cast_down</a> &amp;&amp; <a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;constant_x80 = writer-&gt;declare_tile(<span class="stringliteral">&quot;0x80&quot;</span>, 0x80);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        writer-&gt;op_binary_expression(src_tile, src_tile, BinaryOp::BitwiseXOR, constant_x80);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ckw::ConvertPolicy</a> convert_policy = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">ckw::ConvertPolicy::None</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="cast_8cl.xhtml#a057e82f8a5277468a0dd5d3e4c1c584e">cast_down</a> &amp;&amp; (<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(_src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()) || _attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">convert_policy</a>() == <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>))</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        convert_policy = ckw::ConvertPolicy::Saturate;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    writer-&gt;op_cast_expression(dst_tile, src_tile, convert_policy);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">  163</a></span>&#160;<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">GpuCkwCast::get_window</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">total_size</a>() == 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, <span class="stringliteral">&quot;Destination tensor is not initialized&quot;</span>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// Collapse Dim 1 (W) and Dim 2 (H) together, leave Dim 0 (C) unchanged</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// This is in line with the collapsing convention used by operators like Conv2d</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">collapse</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">vector_size_byte_opencl</a> = 16;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>     <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> =</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">vector_size_byte_opencl</a> / _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a>));</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> win;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="anamespaceckw_xhtml"><div class="ttname"><a href="namespaceckw.xhtml">ckw</a></div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_component_argument_8h_source.xhtml#l00030">GpuCkwComponentArgument.h:30</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml_a2f5d0d8276356bdd3d33cf2a23d8ffaa"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#a2f5d0d8276356bdd3d33cf2a23d8ffaa">arm_compute::experimental::dynamic_fusion::CastAttributes::convert_policy</a></div><div class="ttdeci">CastAttributes &amp; convert_policy(const ConvertPolicy &amp;policy)</div><div class="ttdoc">Set Policy.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8cpp_source.xhtml#l00044">CastAttributes.cpp:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a229f7c437acf59940c4723fce78c6d5c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a229f7c437acf59940c4723fce78c6d5c">arm_compute::experimental::dynamic_fusion::vector_size_byte_opencl</a></div><div class="ttdeci">constexpr unsigned int vector_size_byte_opencl</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00041">ClTemplateElementwiseBinary.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="a_adjust_vec_size_8h_xhtml"><div class="ttname"><a href="_adjust_vec_size_8h.xhtml">AdjustVecSize.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00029">WindowHelpers.cpp:29</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">TensorShape output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00469">LSTMLayerQuantized.cpp:469</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml_a918580dc9188825d67dbb203a43d02fe"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a918580dc9188825d67dbb203a43d02fe">arm_compute::Window::Dimension::step</a></div><div class="ttdeci">constexpr int step() const</div><div class="ttdoc">Return the step of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00106">Window.h:106</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml_a132a3a85495f9c5fe8ef684035cd94c8"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml#a132a3a85495f9c5fe8ef684035cd94c8">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup::get_root_component</a></div><div class="ttdeci">ComponentPtr get_root_component() const</div><div class="ttdoc">Get the root (first) component of this group.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8cpp_source.xhtml#l00304">GpuKernelComponentGroup.cpp:304</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml">arm_compute::experimental::dynamic_fusion::CastAttributes</a></div><div class="ttdoc">Attributes are backend-agnostic parameters (in addition to the input/output tensors) of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8h_source.xhtml#l00039">CastAttributes.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels()</div></div>
<div class="ttc" id="a_gpu_ckw_kernel_writer_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_kernel_writer_8h.xhtml">GpuCkwKernelWriter.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_component_argument_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_component_argument.xhtml">arm_compute::experimental::dynamic_fusion::GpuCkwComponentArgument</a></div><div class="ttdoc">The argument of a dynamic fusion component which can be either user tensor or virtual tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_component_argument_8h_source.xhtml#l00044">GpuCkwComponentArgument.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a3744347976f5c2cb8f3ecd016a588454"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3744347976f5c2cb8f3ecd016a588454">arm_compute::test::validation::reference::tile</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; tile(const SimpleTensor&lt; T &gt; &amp;src, const Multiples &amp;multiples)</div><div class="ttdef"><b>Definition:</b> <a href="reference_2_tile_8cpp_source.xhtml#l00038">Tile.cpp:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::GpuCkwCast::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdoc">Generate the execution window for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_cast_8cpp_source.xhtml#l00163">GpuCkwCast.cpp:163</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">arm_compute::experimental::dynamic_fusion::ArgumentPack</a></div><div class="ttdoc">This is a generic class that packs the arguments of an operator.</div><div class="ttdef"><b>Definition:</b> <a href="_argument_pack_8h_source.xhtml#l00046">ArgumentPack.h:46</a></div></div>
<div class="ttc" id="anamespaceacl_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespaceacl.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">acl::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00482">Acl.hpp:482</a></div></div>
<div class="ttc" id="a_gpu_kernel_component_group_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_component_group_8h.xhtml">GpuKernelComponentGroup.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00127">IGpuCkwComponentDriver.h:127</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml">arm_compute::experimental::dynamic_fusion::GpuCkwVariableTable</a></div><div class="ttdoc">A table of all the variables used in the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_variable_table_8h_source.xhtml#l00049">GpuCkwVariableTable.h:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00038">DataTypeUtils.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a7b0b398a61f9445132382fd9c065435b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a7b0b398a61f9445132382fd9c065435b">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::ckw_component_driver</a></div><div class="ttdeci">virtual const IGpuCkwComponentDriver * ckw_component_driver() const</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00107">IGpuKernelComponent.h:107</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a0fdcb923dfd4c74858cc2bc326321efb"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a0fdcb923dfd4c74858cc2bc326321efb">arm_compute::TensorShape::total_size</a></div><div class="ttdeci">size_t total_size() const</div><div class="ttdoc">Collapses all dimensions to a single linear total size.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00175">TensorShape.h:175</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast_xhtml_ac794f053c37af9bdaf61039dbff80cac"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_cast.xhtml#ac794f053c37af9bdaf61039dbff80cac">arm_compute::experimental::dynamic_fusion::GpuCkwCast::write_component_code</a></div><div class="ttdeci">virtual void write_component_code(const ComponentGroup &amp;comp_group, GpuCkwVariableTable &amp;vtable, GpuCkwScopedKernelWriter writer) const override</div><div class="ttdoc">Generate kernel component code.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_cast_8cpp_source.xhtml#l00097">GpuCkwCast.cpp:97</a></div></div>
<div class="ttc" id="a_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdeci">@ SATURATE</div><div class="ttdoc">Saturate.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver</a></div><div class="ttdoc">An interface used by GpuCkwDriver to write source code for a kernel component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00066">IGpuCkwComponentDriver.h:66</a></div></div>
<div class="ttc" id="a_gpu_ckw_cast_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_cast_8h.xhtml">GpuCkwCast.h</a></div></div>
<div class="ttc" id="acast_8cl_xhtml_a057e82f8a5277468a0dd5d3e4c1c584e"><div class="ttname"><a href="cast_8cl.xhtml#a057e82f8a5277468a0dd5d3e4c1c584e">cast_down</a></div><div class="ttdeci">__kernel void cast_down(__global uchar *in_ptr, uint in_stride_x, uint in_step_x, uint in_stride_y, uint in_step_y, uint in_stride_z, uint in_step_z, uint in_offset_first_element_in_bytes, __global uchar *out_ptr, uint out_stride_x, uint out_step_x, uint out_stride_y, uint out_step_y, uint out_stride_z, uint out_step_z, uint out_offset_first_element_in_bytes)</div><div class="ttdoc">This function performs a down-casting.</div><div class="ttdef"><b>Definition:</b> <a href="cast_8cl_source.xhtml#l00060">cast.cl:60</a></div></div>
<div class="ttc" id="a_gpu_ckw_scoped_kernel_writer_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_scoped_kernel_writer_8h.xhtml">GpuCkwScopedKernelWriter.h</a></div></div>
<div class="ttc" id="a_gpu_kernel_argument_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_argument_8h.xhtml">GpuKernelArgument.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afff13da4ff0bb0cd14e24f19743c8225"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">arm_compute::experimental::dynamic_fusion::ComponentId</a></div><div class="ttdeci">int32_t ComponentId</div><div class="ttdoc">Uniquely identifies a kernel component within a workload.</div><div class="ttdef"><b>Definition:</b> <a href="src_2dynamic__fusion_2sketch_2gpu_2components_2_types_8h_source.xhtml#l00037">Types.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a66df3fbb8781a4dfa011885356e1495f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a66df3fbb8781a4dfa011885356e1495f">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::get_window</a></div><div class="ttdeci">virtual Window get_window() const</div><div class="ttdoc">Generate the execution window for the component.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00101">IGpuCkwComponentDriver.h:101</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_acbae697336efd01a1b964274b4212767"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#acbae697336efd01a1b964274b4212767">arm_compute::experimental::dynamic_fusion::to_ckw</a></div><div class="ttdeci">ckw::DataType to_ckw(DataType dt)</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h_source.xhtml#l00040">Common.h:40</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_ac7485dcc8d256a6f197ed7802687f252"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">tf_frozen_model_extractor.None</a></div><div class="ttdeci">None</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00041">tf_frozen_model_extractor.py:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle integer overflow.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00353">Types.h:353</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input's first dimension,...</div><div class="ttdef"><b>Definition:</b> <a href="_adjust_vec_size_8h_source.xhtml#l00038">AdjustVecSize.h:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00304">DataTypeUtils.h:304</a></div></div>
<div class="ttc" id="adynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h_xhtml"><div class="ttname"><a href="dynamic__fusion_2sketch_2gpu_2ckw__driver_2components_2utils_2type__converter_2_common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_ckw_component_driver.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuCkwComponentDriver::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_ckw_component_driver_8h_source.xhtml#l00096">IGpuCkwComponentDriver.h:96</a></div></div>
<div class="ttc" id="a_gpu_ckw_variable_table_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_variable_table_8h.xhtml">GpuCkwVariableTable.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table_xhtml_a8f0011b59fc660a6e9a34d4e56b48175"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_variable_table.xhtml#a8f0011b59fc660a6e9a34d4e56b48175">arm_compute::experimental::dynamic_fusion::GpuCkwVariableTable::declare_variable</a></div><div class="ttdeci">GpuCkwComponentArgument * declare_variable(const GpuKernelComponentGroup &amp;comp_group, GpuCkwScopedKernelWriter &amp;writer, const ITensorInfo *tensor, TensorStorageType storage, const std::string &amp;alias=&quot;unnamed&quot;)</div><div class="ttdoc">Declare a kernel component variable(argument) for the corresponding tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_variable_table_8cpp_source.xhtml#l00040">GpuCkwVariableTable.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGroup</a></div><div class="ttdoc">A group of gpu kernel components to be fused together PRECONDITIONS:</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_group_8h_source.xhtml#l00061">GpuKernelComponentGroup.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a4e45c1f5e4280813a78a77dda71d8799"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a></div><div class="ttdeci">unsigned int num_elems_processed_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00060">ClIm2ColKernel.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00158">Window.h:158</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes_xhtml_ab7037b6fa1572f421dc90262aacd3a18"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cast_attributes.xhtml#ab7037b6fa1572f421dc90262aacd3a18">arm_compute::experimental::dynamic_fusion::CastAttributes::data_type</a></div><div class="ttdeci">CastAttributes &amp; data_type(const DataType &amp;data_type)</div><div class="ttdoc">Set Data Type to be casted to.</div><div class="ttdef"><b>Definition:</b> <a href="_cast_attributes_8cpp_source.xhtml#l00033">CastAttributes.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_kernel_writer_xhtml_a24194a93eb654bcef394f820d28be8ec"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_kernel_writer.xhtml#a24194a93eb654bcef394f820d28be8ec">arm_compute::experimental::dynamic_fusion::GpuCkwKernelWriter::op_load_once</a></div><div class="ttdeci">void op_load_once(GpuCkwComponentArgument *tensor_or_tile, const ckw::TensorTileSampler &amp;sampler)</div><div class="ttdoc">Load the user tensor to the tile in the same component argument if it hasn't been loaded.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_kernel_writer_8cpp_source.xhtml#l00043">GpuCkwKernelWriter.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml_a8e15e87871211f98c2b566137e38ef99"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">arm_compute::TensorShape::collapse</a></div><div class="ttdeci">void collapse(size_t n, size_t first=0)</div><div class="ttdoc">Collapse the first n dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00136">TensorShape.h:136</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_ckw_scoped_kernel_writer.xhtml">arm_compute::experimental::dynamic_fusion::GpuCkwScopedKernelWriter</a></div><div class="ttdoc">Helper to automatically manage kernel writer ID space.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_scoped_kernel_writer_8h_source.xhtml#l00040">GpuCkwScopedKernelWriter.h:40</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_729ca8b25cabcdcb8b11b571ea7b237a.xhtml">sketch</a></li><li class="navelem"><a class="el" href="dir_df94d166e0e6f49d063cb29fea25a88b.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_41286eb82ab9bcc453374927cfc10252.xhtml">ckw_driver</a></li><li class="navelem"><a class="el" href="dir_510767539347664ee40808f8989f21cf.xhtml">components</a></li><li class="navelem"><a class="el" href="_gpu_ckw_cast_8cpp.xhtml">GpuCkwCast.cpp</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:05 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
