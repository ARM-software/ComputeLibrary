<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/graph/detail/ExecutionHelpers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_execution_helpers_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ExecutionHelpers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_execution_helpers_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2019 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_GRAPH_DETAIL_EXECUTION_HELPERS_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_GRAPH_DETAIL_EXECUTION_HELPERS_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_types_8h.xhtml">arm_compute/graph/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">// Forward declarations</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">class </span>Graph;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">class </span>GraphContext;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">struct </span>ExecutionWorkload;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span><a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">class </span>INode;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>detail</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/** Validates all nodes</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * @param[in] g Graph to validate</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa1d326a80e16fe0d4034637672d3b122">validate_all_nodes</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">/** Configures all nodes of a graph</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * @param[in] g Graph to configure</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a68c7ebb89adc0c2b21449cd15f6e8eba">configure_all_tensors</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">/** Allocates all input tensors of a node.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> * @param[in] node Node to allocate the input tensor of</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a4312e5b00714a9de04fc54d2a5dcc119">allocate_all_input_tensors</a>(INode &amp;node);<span class="comment"></span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/** Allocates all output tensors of a node.</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * @param[in] node Node to allocate the output tensor of</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa39e0698b2de495c235129b12fa39b08">allocate_all_output_tensors</a>(INode &amp;node);<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">/** Allocates const tensor of a given graph</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * @param[in] g Graph to allocate the tensors</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a3ef7cb28de6aea7026a1e8572639f300">allocate_const_tensors</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/** Allocates all tensors of a graph</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @param[in] g Graph to allocate the tensors</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a766bb5055ef388455c941869b32981ed">allocate_all_tensors</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">/** Configures all nodes of graph</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * @param[in, out] g          Graph to configure the nodes</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> * @param[in]      ctx        Graph context to use</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * @param[in]      node_order The order to configure the nodes</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @return The execution workload</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;ExecutionWorkload <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a82d07d3d612bee8ff703226ff9d5d452">configure_all_nodes</a>(Graph &amp;g, GraphContext &amp;ctx, <span class="keyword">const</span> std::vector&lt;NodeID&gt; &amp;node_order);<span class="comment"></span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">/** Release the memory of all unused const nodes</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> * @param[in] g Graph to release the memory from</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a28280ac6b0db4c2385ac8c18a4ad8f3c">release_unused_tensors</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">/** Calls accessor of a given tensor</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> * @param[in] tensor The tensor of which the accessor should be called</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa2dc91a4b4f5ad19935984344f1b67a1">call_tensor_accessor</a>(Tensor *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);<span class="comment"></span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">/** Call all const node accessors</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> * @param[in] g Graph containing the const nodes</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a6f2e226c8b1e478b0162c3d9327b032e">call_all_const_node_accessors</a>(Graph &amp;g);<span class="comment"></span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/** Call all input node accessors</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> * @param[in] workload Workload to execute</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"> * @return  True if all the accesses were valid</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#adff00463fb88bf00a886e0ecef6c0b6a">call_all_input_node_accessors</a>(ExecutionWorkload &amp;workload);<span class="comment"></span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">/** Call all output node accessors</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"> * @param[in] workload Workload to execute</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> * @return  True if all the accessors expect more data</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#aaf7f4e1e2142802dd1c5a983ee156e77">call_all_output_node_accessors</a>(ExecutionWorkload &amp;workload);<span class="comment"></span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">/** Prepares all tasks for execution</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"> * @param[in] workload Workload to prepare</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a17b5e700b317feb19fc3cefd23a1d8bb">prepare_all_tasks</a>(ExecutionWorkload &amp;workload);<span class="comment"></span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">/** Executes all tasks of a workload</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> * @param[in] workload Workload to execute</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1graph_1_1detail.xhtml#a7641ee3c6374e97c597ce6ee05545b59">call_all_tasks</a>(ExecutionWorkload &amp;workload);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;} <span class="comment">// namespace detail</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_GRAPH_DETAIL_EXECUTION_HELPERS_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a3ef7cb28de6aea7026a1e8572639f300"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a3ef7cb28de6aea7026a1e8572639f300">arm_compute::graph::detail::allocate_const_tensors</a></div><div class="ttdeci">void allocate_const_tensors(Graph &amp;g)</div><div class="ttdoc">Allocates const tensor of a given graph.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00099">ExecutionHelpers.cpp:99</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_aaf7f4e1e2142802dd1c5a983ee156e77"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#aaf7f4e1e2142802dd1c5a983ee156e77">arm_compute::graph::detail::call_all_output_node_accessors</a></div><div class="ttdeci">bool call_all_output_node_accessors(ExecutionWorkload &amp;workload)</div><div class="ttdoc">Call all output node accessors.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00261">ExecutionHelpers.cpp:261</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_aa39e0698b2de495c235129b12fa39b08"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa39e0698b2de495c235129b12fa39b08">arm_compute::graph::detail::allocate_all_output_tensors</a></div><div class="ttdeci">void allocate_all_output_tensors(INode &amp;node)</div><div class="ttdoc">Allocates all output tensors of a node.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00086">ExecutionHelpers.cpp:86</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a17b5e700b317feb19fc3cefd23a1d8bb"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a17b5e700b317feb19fc3cefd23a1d8bb">arm_compute::graph::detail::prepare_all_tasks</a></div><div class="ttdeci">void prepare_all_tasks(ExecutionWorkload &amp;workload)</div><div class="ttdoc">Prepares all tasks for execution.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00222">ExecutionHelpers.cpp:222</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a68c7ebb89adc0c2b21449cd15f6e8eba"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a68c7ebb89adc0c2b21449cd15f6e8eba">arm_compute::graph::detail::configure_all_tensors</a></div><div class="ttdeci">void configure_all_tensors(Graph &amp;g)</div><div class="ttdoc">Configures all nodes of a graph.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00056">ExecutionHelpers.cpp:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_adff00463fb88bf00a886e0ecef6c0b6a"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#adff00463fb88bf00a886e0ecef6c0b6a">arm_compute::graph::detail::call_all_input_node_accessors</a></div><div class="ttdeci">bool call_all_input_node_accessors(ExecutionWorkload &amp;workload)</div><div class="ttdoc">Call all input node accessors.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00210">ExecutionHelpers.cpp:210</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a766bb5055ef388455c941869b32981ed"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a766bb5055ef388455c941869b32981ed">arm_compute::graph::detail::allocate_all_tensors</a></div><div class="ttdeci">void allocate_all_tensors(Graph &amp;g)</div><div class="ttdoc">Allocates all tensors of a graph.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00120">ExecutionHelpers.cpp:120</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div><div class="ttdeci">@ Tensor</div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_aa1d326a80e16fe0d4034637672d3b122"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa1d326a80e16fe0d4034637672d3b122">arm_compute::graph::detail::validate_all_nodes</a></div><div class="ttdeci">void validate_all_nodes(Graph &amp;g)</div><div class="ttdoc">Validates all nodes.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00039">ExecutionHelpers.cpp:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a4312e5b00714a9de04fc54d2a5dcc119"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a4312e5b00714a9de04fc54d2a5dcc119">arm_compute::graph::detail::allocate_all_input_tensors</a></div><div class="ttdeci">void allocate_all_input_tensors(INode &amp;node)</div><div class="ttdoc">Allocates all input tensors of a node.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00073">ExecutionHelpers.cpp:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a82d07d3d612bee8ff703226ff9d5d452"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a82d07d3d612bee8ff703226ff9d5d452">arm_compute::graph::detail::configure_all_nodes</a></div><div class="ttdeci">ExecutionWorkload configure_all_nodes(Graph &amp;g, GraphContext &amp;ctx, const std::vector&lt; NodeID &gt; &amp;node_order)</div><div class="ttdoc">Configures all nodes of graph.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00134">ExecutionHelpers.cpp:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a7641ee3c6374e97c597ce6ee05545b59"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a7641ee3c6374e97c597ce6ee05545b59">arm_compute::graph::detail::call_all_tasks</a></div><div class="ttdeci">void call_all_tasks(ExecutionWorkload &amp;workload)</div><div class="ttdoc">Executes all tasks of a workload.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00232">ExecutionHelpers.cpp:232</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a28280ac6b0db4c2385ac8c18a4ad8f3c"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a28280ac6b0db4c2385ac8c18a4ad8f3c">arm_compute::graph::detail::release_unused_tensors</a></div><div class="ttdeci">void release_unused_tensors(Graph &amp;g)</div><div class="ttdoc">Release the memory of all unused const nodes.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00177">ExecutionHelpers.cpp:177</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_aa2dc91a4b4f5ad19935984344f1b67a1"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#aa2dc91a4b4f5ad19935984344f1b67a1">arm_compute::graph::detail::call_tensor_accessor</a></div><div class="ttdeci">void call_tensor_accessor(Tensor *tensor)</div><div class="ttdoc">Calls accessor of a given tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00188">ExecutionHelpers.cpp:188</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1detail_xhtml_a6f2e226c8b1e478b0162c3d9327b032e"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1detail.xhtml#a6f2e226c8b1e478b0162c3d9327b032e">arm_compute::graph::detail::call_all_const_node_accessors</a></div><div class="ttdeci">void call_all_const_node_accessors(Graph &amp;g)</div><div class="ttdoc">Call all const node accessors.</div><div class="ttdef"><b>Definition:</b> <a href="_execution_helpers_8cpp_source.xhtml#l00194">ExecutionHelpers.cpp:194</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_99ae3712d1eecd2a93fc4d38b59a99ba.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_7d9e792b56b44fd84901d9e18064c5a8.xhtml">detail</a></li><li class="navelem"><a class="el" href="_execution_helpers_8h.xhtml">ExecutionHelpers.h</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:30:58 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
