<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/LSTMLayerQuantized.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_l_s_t_m_layer_quantized_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">LSTMLayerQuantized.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_n_e_l_s_t_m_layer_quantized_8h_source.xhtml">arm_compute/runtime/NEON/functions/NELSTMLayerQuantized.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2_utils_8h_source.xhtml">tests/Utils.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LSTMLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &lt;vector&gt;</code><br />
</div>
<p><a href="_n_e_o_n_2_l_s_t_m_layer_quantized_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af4d01266da3e1c10a8146a7438e69bbb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af4d01266da3e1c10a8146a7438e69bbb">TEST_CASE</a> (RunSmall, framework::DatasetMode::PRECOMMIT)</td></tr>
<tr class="separator:af4d01266da3e1c10a8146a7438e69bbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4922610ae45534483d94b0b964e7e8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed4922610ae45534483d94b0b964e7e8">TEST_CASE</a> (RunLarge, framework::DatasetMode::PRECOMMIT)</td></tr>
<tr class="separator:aed4922610ae45534483d94b0b964e7e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee13fc8e41cf0443bbeab64e23eee1ec"><td class="memItemLeft" align="right" valign="top">QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aee13fc8e41cf0443bbeab64e23eee1ec">qasymm</a> (1.f/128.f, 128)</td></tr>
<tr class="separator:aee13fc8e41cf0443bbeab64e23eee1ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add0cebf7f56d2fb24512082e80eb00dc"><td class="memItemLeft" align="right" valign="top">QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#add0cebf7f56d2fb24512082e80eb00dc">qweights</a> (1.f/16.f, 16)</td></tr>
<tr class="separator:add0cebf7f56d2fb24512082e80eb00dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c95b3935143dddbf37176fa0562685"><td class="memItemLeft" align="right" valign="top">QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20c95b3935143dddbf37176fa0562685">qsymm_3</a> (8.f/32768.f, 0)</td></tr>
<tr class="separator:a20c95b3935143dddbf37176fa0562685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66b9829d1b2750c8f7bd6dad961cdc62"><td class="memItemLeft" align="right" valign="top">QuantizationInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a66b9829d1b2750c8f7bd6dad961cdc62">qsymm_4</a> (16.f/32768.f, 0)</td></tr>
<tr class="separator:a66b9829d1b2750c8f7bd6dad961cdc62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d45498be87235b5165d9972b2d0644d"><td class="memItemLeft" align="right" valign="top">input&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3d45498be87235b5165d9972b2d0644d">allocator</a> () -&gt; allocate()</td></tr>
<tr class="separator:a3d45498be87235b5165d9972b2d0644d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5eef7d8485a2b8c04bf9b4638a90e9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a> (input_to_input_weights, std::vector&lt; uint8_t &gt;{ 122, 130, 124, 134, 120, 122, 134, 134 })</td></tr>
<tr class="separator:a6a5eef7d8485a2b8c04bf9b4638a90e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad525527457f35ed9a67ebcc814984ad6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad525527457f35ed9a67ebcc814984ad6">fill_tensor</a> (input_to_forget_weights, std::vector&lt; uint8_t &gt; { 204, 193, 148, 59, 113, 17, 66, 197 })</td></tr>
<tr class="separator:ad525527457f35ed9a67ebcc814984ad6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e8b177bd794dbc910bb85e352340bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a88e8b177bd794dbc910bb85e352340bb">fill_tensor</a> (input_to_cell_weights, std::vector&lt; uint8_t &gt; { 172, 101, 184, 209, 165, 82, 108, 209 })</td></tr>
<tr class="separator:a88e8b177bd794dbc910bb85e352340bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a250f3740a8833484dfa320cad4b3c4ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a250f3740a8833484dfa320cad4b3c4ca">fill_tensor</a> (input_to_output_weights, std::vector&lt; uint8_t &gt; { 203, 244, 219, 114, 130, 16, 163, 222 })</td></tr>
<tr class="separator:a250f3740a8833484dfa320cad4b3c4ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bb4ab3817a5bf7c596a3a7774c891d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1bb4ab3817a5bf7c596a3a7774c891d9">fill_tensor</a> (recurrent_to_input_weights, std::vector&lt; uint8_t &gt; { 162, 168, 7, 95, 91, 155, 108, 216, 255, 100, 48, 188, 58, 37, 186, 147 })</td></tr>
<tr class="separator:a1bb4ab3817a5bf7c596a3a7774c891d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5df2a08cafce46510e8e4e0bb159a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aea5df2a08cafce46510e8e4e0bb159a9">fill_tensor</a> (recurrent_to_forget_weights, std::vector&lt; uint8_t &gt; { 46, 58, 47, 170, 246, 96, 12, 99, 68, 23, 186, 161, 237, 164, 89, 6 })</td></tr>
<tr class="separator:aea5df2a08cafce46510e8e4e0bb159a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21add955bc89a90ead36e55eb6ea1596"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a21add955bc89a90ead36e55eb6ea1596">fill_tensor</a> (recurrent_to_cell_weights, std::vector&lt; uint8_t &gt; { 234, 99, 71, 206, 205, 159, 64, 253, 191, 148, 116, 8, 209, 136, 59, 138 })</td></tr>
<tr class="separator:a21add955bc89a90ead36e55eb6ea1596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a9297ab52d890fea3722425f5616101"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a9297ab52d890fea3722425f5616101">fill_tensor</a> (recurrent_to_output_weights, std::vector&lt; uint8_t &gt; { 23, 241, 137, 36, 206, 5, 227, 56, 254, 176, 231, 47, 18, 201, 161, 11 })</td></tr>
<tr class="separator:a0a9297ab52d890fea3722425f5616101"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4de2d793bc7e5a822aabc41c9af3b762"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4de2d793bc7e5a822aabc41c9af3b762">fill_tensor</a> (input_gate_bias, std::vector&lt; int &gt; {-103038, 30525, 115255, -38154 })</td></tr>
<tr class="separator:a4de2d793bc7e5a822aabc41c9af3b762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e8c77fbfef699c0d6a7bd040e3b4d02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8e8c77fbfef699c0d6a7bd040e3b4d02">fill_tensor</a> (forget_gate_bias, std::vector&lt; int &gt; { -23428, 126970, 116806, 46307 })</td></tr>
<tr class="separator:a8e8c77fbfef699c0d6a7bd040e3b4d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac939daebf223bbe0410f9b5504d0e93a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac939daebf223bbe0410f9b5504d0e93a">fill_tensor</a> (cell_gate_bias, std::vector&lt; int &gt; { 128006, 69949, -42808, 42568 })</td></tr>
<tr class="separator:ac939daebf223bbe0410f9b5504d0e93a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3606df91c5d768f8b8d313aceaa4546f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3606df91c5d768f8b8d313aceaa4546f">fill_tensor</a> (output_gate_bias, std::vector&lt; int &gt; { -67066, -53607, 47233, 7300 })</td></tr>
<tr class="separator:a3606df91c5d768f8b8d313aceaa4546f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3282db950e83868e3e9e02b9b420b3"><td class="memItemLeft" align="right" valign="top">SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7f3282db950e83868e3e9e02b9b420b3">expected_output</a> (output_shape, DataType::QASYMM8, 1, qasymm)</td></tr>
<tr class="separator:a7f3282db950e83868e3e9e02b9b420b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a265868c870f02b4b368d2a39c9af7c6d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a265868c870f02b4b368d2a39c9af7c6d">fill_tensor</a> (output_state, std::vector&lt; uint8_t &gt; { 128, 128, 128, 128, 128, 128, 128, 128 })</td></tr>
<tr class="separator:a265868c870f02b4b368d2a39c9af7c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a82974e88872f5e6ba4161ba0591c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a10a82974e88872f5e6ba4161ba0591c8">fill_tensor</a> (cell_state, std::vector&lt; int16_t &gt; { 0, 0, 0, 0, 0, 0, 0, 0 })</td></tr>
<tr class="separator:a10a82974e88872f5e6ba4161ba0591c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b28ba7f650f3ac50beae4b6b47c1a4c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1b28ba7f650f3ac50beae4b6b47c1a4c">fill_tensor</a> (input, std::vector&lt; uint8_t &gt; { 106, 193, 155, 150 })</td></tr>
<tr class="separator:a1b28ba7f650f3ac50beae4b6b47c1a4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a924cb272ca88beabaf2f262731d226fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a924cb272ca88beabaf2f262731d226fd">fill_tensor</a> (expected_output, std::vector&lt; uint8_t &gt; { 128, 128, 31, 128, 128, 128, 31, 128 })</td></tr>
<tr class="separator:a924cb272ca88beabaf2f262731d226fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06403ad5596b5405787cfca12e5b815e"><td class="memItemLeft" align="right" valign="top">lstmq&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run</a> ()</td></tr>
<tr class="separator:a06403ad5596b5405787cfca12e5b815e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693baec4ac06bdc2d2bd6475239eba6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a693baec4ac06bdc2d2bd6475239eba6c">validate</a> (Accessor(output_state), expected_output)</td></tr>
<tr class="separator:a693baec4ac06bdc2d2bd6475239eba6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5137ad657487c587281934aacd58235"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae5137ad657487c587281934aacd58235">fill_tensor</a> (expected_output, std::vector&lt; uint8_t &gt; { 128, 128, 5, 128, 128, 128, 5, 128 })</td></tr>
<tr class="separator:ae5137ad657487c587281934aacd58235"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f6c95b4e824ee8826f8b578317158d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a12f6c95b4e824ee8826f8b578317158d">fill_tensor</a> (expected_output, std::vector&lt; uint8_t &gt; { 128, 128, 1, 128, 128, 128, 1, 128, })</td></tr>
<tr class="separator:a12f6c95b4e824ee8826f8b578317158d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_l_s_t_m_layer_quantized_8cpp.xhtml">LSTMLayerQuantized.cpp</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
