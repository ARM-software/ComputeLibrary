<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Logger Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1logging_1_1_logger.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Logger Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> class.  
 <a href="classarm__compute_1_1logging_1_1_logger.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml">Logger.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a421744d0932b362cbff55c07488c1356"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a> (std::string <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, <a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt; printer)</td></tr>
<tr class="memdesc:a421744d0932b362cbff55c07488c1356"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">More...</a><br /></td></tr>
<tr class="separator:a421744d0932b362cbff55c07488c1356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01f79c5a395126e28073498412c67df6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a01f79c5a395126e28073498412c67df6">Logger</a> (std::string <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, <a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, std::vector&lt; std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&gt; printers={})</td></tr>
<tr class="memdesc:a01f79c5a395126e28073498412c67df6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a01f79c5a395126e28073498412c67df6">More...</a><br /></td></tr>
<tr class="separator:a01f79c5a395126e28073498412c67df6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbbbc3fb4ed100c21f274a9862c63ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#afcbbbc3fb4ed100c21f274a9862c63ae">Logger</a> (std::string <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, <a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, std::vector&lt; std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&gt; printers, std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml">IDecorator</a> &gt;&gt; decorators)</td></tr>
<tr class="memdesc:afcbbbc3fb4ed100c21f274a9862c63ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#afcbbbc3fb4ed100c21f274a9862c63ae">More...</a><br /></td></tr>
<tr class="separator:afcbbbc3fb4ed100c21f274a9862c63ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f49292d95d30b860d000005cf179a1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a75f49292d95d30b860d000005cf179a1">Logger</a> (<a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a75f49292d95d30b860d000005cf179a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a75f49292d95d30b860d000005cf179a1">More...</a><br /></td></tr>
<tr class="separator:a75f49292d95d30b860d000005cf179a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7f3dbfbd2426b4874750f08bd23bd7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#aa7f3dbfbd2426b4874750f08bd23bd7f">Logger</a> (const <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;)=delete</td></tr>
<tr class="memdesc:aa7f3dbfbd2426b4874750f08bd23bd7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#aa7f3dbfbd2426b4874750f08bd23bd7f">More...</a><br /></td></tr>
<tr class="separator:aa7f3dbfbd2426b4874750f08bd23bd7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab18882a3175cd53305509643329a400a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">operator=</a> (const <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab18882a3175cd53305509643329a400a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">More...</a><br /></td></tr>
<tr class="separator:ab18882a3175cd53305509643329a400a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f823d85882db15d1dd140a21ca391e2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a3f823d85882db15d1dd140a21ca391e2">operator=</a> (<a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3f823d85882db15d1dd140a21ca391e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a3f823d85882db15d1dd140a21ca391e2">More...</a><br /></td></tr>
<tr class="separator:a3f823d85882db15d1dd140a21ca391e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50292ee16d3334856912eb89cffbcf83"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">log</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, const std::string &amp;msg)</td></tr>
<tr class="memdesc:a50292ee16d3334856912eb89cffbcf83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logs a message.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">More...</a><br /></td></tr>
<tr class="separator:a50292ee16d3334856912eb89cffbcf83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2359a792f2d9a5c74d58017912a9fe24"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:a2359a792f2d9a5c74d58017912a9fe24"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a2359a792f2d9a5c74d58017912a9fe24">log</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, const std::string &amp;fmt, Ts &amp;&amp;...args)</td></tr>
<tr class="memdesc:a2359a792f2d9a5c74d58017912a9fe24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logs a formatted message.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a2359a792f2d9a5c74d58017912a9fe24">More...</a><br /></td></tr>
<tr class="separator:a2359a792f2d9a5c74d58017912a9fe24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41691397975dfad51e3a2f6b55aef749"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">set_log_level</a> (<a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>)</td></tr>
<tr class="memdesc:a41691397975dfad51e3a2f6b55aef749"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets log level of the logger.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">More...</a><br /></td></tr>
<tr class="separator:a41691397975dfad51e3a2f6b55aef749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621f62a02364fc584cf86a8f221e715d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a> () const</td></tr>
<tr class="memdesc:a621f62a02364fc584cf86a8f221e715d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns logger's log level.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">More...</a><br /></td></tr>
<tr class="separator:a621f62a02364fc584cf86a8f221e715d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d89c28bd42ba9a52da008bb69367171"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a> () const</td></tr>
<tr class="memdesc:a1d89c28bd42ba9a52da008bb69367171"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns logger's name.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">More...</a><br /></td></tr>
<tr class="separator:a1d89c28bd42ba9a52da008bb69367171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a5b7c4d38c6f9fd1550c62441b69648"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">add_printer</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt; printer)</td></tr>
<tr class="memdesc:a1a5b7c4d38c6f9fd1550c62441b69648"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a printer to the logger.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">More...</a><br /></td></tr>
<tr class="separator:a1a5b7c4d38c6f9fd1550c62441b69648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0de1bc76119d77831c0b1d58a20f4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">add_decorator</a> (std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml">IDecorator</a> &gt; decorator)</td></tr>
<tr class="memdesc:aca0de1bc76119d77831c0b1d58a20f4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a log message decorator to the logger.  <a href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">More...</a><br /></td></tr>
<tr class="separator:aca0de1bc76119d77831c0b1d58a20f4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> class. </p>

<p class="definition">Definition at line <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml#l00042">42</a> of file <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml">Logger.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a421744d0932b362cbff55c07488c1356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a421744d0932b362cbff55c07488c1356">&#9670;&nbsp;</a></span>Logger() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&#160;</td>
          <td class="paramname"><em>printer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the logger </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> log level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">printer</td><td><a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml" title="Base printer class to be inherited by other printer classes.">Printer</a> to push the messages </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00032">32</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    : _name(std::move(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>)), _log_level(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>), _printers({std::move(printer)}), _decorators()</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="comment">// Check printer</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(printer == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// Set default message decorators</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    set_default_decorators();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a01f79c5a395126e28073498412c67df6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01f79c5a395126e28073498412c67df6">&#9670;&nbsp;</a></span>Logger() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&gt;&#160;</td>
          <td class="paramname"><em>printers</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the logger </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> log level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">printers</td><td>Printers to push the messages </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    : _name(std::move(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>)), _log_level(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>), _printers(std::move(printers)), _decorators()</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// Check printers</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : _printers)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(p);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(p == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Set default message decorators</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    set_default_decorators();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>.</p>

</div>
</div>
<a id="afcbbbc3fb4ed100c21f274a9862c63ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcbbbc3fb4ed100c21f274a9862c63ae">&#9670;&nbsp;</a></span>Logger() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&gt;&#160;</td>
          <td class="paramname"><em>printers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml">IDecorator</a> &gt;&gt;&#160;</td>
          <td class="paramname"><em>decorators</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the logger </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a> log level </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">printers</td><td>Printers to push the messages </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">decorators</td><td>Message decorators, which append information in the logged message </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    : _name(std::move(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>)), _log_level(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>), _printers(std::move(printers)), _decorators(std::move(decorators))</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// Check printers</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : _printers)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(p);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(p == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// Check decorators</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;d : _decorators)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(d);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(d == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, and <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>.</p>

</div>
</div>
<a id="a75f49292d95d30b860d000005cf179a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f49292d95d30b860d000005cf179a1">&#9670;&nbsp;</a></span>Logger() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="aa7f3dbfbd2426b4874750f08bd23bd7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7f3dbfbd2426b4874750f08bd23bd7f">&#9670;&nbsp;</a></span>Logger() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aca0de1bc76119d77831c0b1d58a20f4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0de1bc76119d77831c0b1d58a20f4d">&#9670;&nbsp;</a></span>add_decorator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_decorator </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_i_decorator.xhtml">IDecorator</a> &gt;&#160;</td>
          <td class="paramname"><em>decorator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a log message decorator to the logger. </p>
<dl class="section warning"><dt>Warning</dt><dd>Not thread-safe</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">decorator</td><td></td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(decorator == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    _decorators.push_back(std::move(decorator));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a1a5b7c4d38c6f9fd1550c62441b69648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a5b7c4d38c6f9fd1550c62441b69648">&#9670;&nbsp;</a></span>add_printer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_printer </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1logging_1_1_printer.xhtml">Printer</a> &gt;&#160;</td>
          <td class="paramname"><em>printer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a printer to the logger. </p>
<dl class="section warning"><dt>Warning</dt><dd>Not thread-safe</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">printer</td><td></td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(printer == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    _printers.push_back(std::move(printer));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a2359a792f2d9a5c74d58017912a9fe24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2359a792f2d9a5c74d58017912a9fe24">&#9670;&nbsp;</a></span>log() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void log </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Logs a formatted message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Log level of the message </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fmt</td><td>Message format </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Message arguments </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml#l00162">162</a> of file <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml">Logger.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Return if message shouldn&#39;t be logged</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// i.e. if log level does not match the logger&#39;s</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> (!is_loggable(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>))</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Print message to all printers</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    print_all(create_log_msg(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">string_with_format</a>(fmt, <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>...), <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>));</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="_logger_8cpp_source.xhtml#l00093">Logger::log_level()</a>, and <a class="el" href="arm__compute_2core_2utils_2logging_2_helpers_8h_source.xhtml#l00049">arm_compute::logging::string_with_format()</a>.</p>

</div>
</div>
<a id="a50292ee16d3334856912eb89cffbcf83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50292ee16d3334856912eb89cffbcf83">&#9670;&nbsp;</a></span>log() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void log </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>msg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Logs a message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Log level of the message </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">msg</td><td>Message to log </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// Return if message shouldn&#39;t be logged</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// i.e. if log level does not match the logger&#39;s</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">if</span> (!is_loggable(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// Print message to all printers</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    print_all(create_log_msg(msg, <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_logger_8cpp_source.xhtml#l00093">Logger::log_level()</a>.</p>

</div>
</div>
<a id="a621f62a02364fc584cf86a8f221e715d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a621f62a02364fc584cf86a8f221e715d">&#9670;&nbsp;</a></span>log_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> log_level </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns logger's log level. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a>'s log level </dd></dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> _log_level;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml#l00162">Logger::log()</a>, and <a class="el" href="_logger_8cpp_source.xhtml#l00088">Logger::set_log_level()</a>.</p>

</div>
</div>
<a id="a1d89c28bd42ba9a52da008bb69367171"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d89c28bd42ba9a52da008bb69367171">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns logger's name. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml" title="Logger class.">Logger</a>'s name </dd></dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> _name;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab18882a3175cd53305509643329a400a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab18882a3175cd53305509643329a400a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a3f823d85882db15d1dd140a21ca391e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f823d85882db15d1dd140a21ca391e2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a41691397975dfad51e3a2f6b55aef749"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41691397975dfad51e3a2f6b55aef749">&#9670;&nbsp;</a></span>set_log_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_log_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>log_level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets log level of the logger. </p>
<dl class="section warning"><dt>Warning</dt><dd>Not thread-safe</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Log level to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_logger_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    _log_level = <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_logger_8cpp_source.xhtml#l00093">Logger::log_level()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/utils/logging/<a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml">Logger.h</a></li>
<li>src/core/utils/logging/<a class="el" href="_logger_8cpp_source.xhtml">Logger.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1logging_xhtml_a9dd6c32b3cab7dfb3e20c0800969e795"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">arm_compute::logging::string_with_format</a></div><div class="ttdeci">std::string string_with_format(const std::string &amp;fmt, Ts &amp;&amp;...args)</div><div class="ttdoc">Create a string given a format.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_helpers_8h_source.xhtml#l00049">Helpers.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a621f62a02364fc584cf86a8f221e715d"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">arm_compute::logging::Logger::log_level</a></div><div class="ttdeci">LogLevel log_level() const</div><div class="ttdoc">Returns logger's log level.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00093">Logger.cpp:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::logging::Logger::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns logger's name.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00098">Logger.cpp:98</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1logging.xhtml">logging</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
