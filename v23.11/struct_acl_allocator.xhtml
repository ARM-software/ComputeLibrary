<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: AclAllocator Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_acl_allocator.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">AclAllocator Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a66e74c5f7dee07b2c12a032a74798704"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_allocator.xhtml#a66e74c5f7dee07b2c12a032a74798704">alloc</a> )(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, size_t size)</td></tr>
<tr class="memdesc:a66e74c5f7dee07b2c12a032a74798704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a block of size bytes of memory.  <a href="struct_acl_allocator.xhtml#a66e74c5f7dee07b2c12a032a74798704">More...</a><br /></td></tr>
<tr class="separator:a66e74c5f7dee07b2c12a032a74798704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabaea8b6911c70fe781173575d0fb70b"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_allocator.xhtml#aabaea8b6911c70fe781173575d0fb70b">free</a> )(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, void *ptr)</td></tr>
<tr class="memdesc:aabaea8b6911c70fe781173575d0fb70b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release a block of size bytes of memory.  <a href="struct_acl_allocator.xhtml#aabaea8b6911c70fe781173575d0fb70b">More...</a><br /></td></tr>
<tr class="separator:aabaea8b6911c70fe781173575d0fb70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c565c5aa3682e262737dfbc868a30f0"><td class="memItemLeft" align="right" valign="top">void *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_allocator.xhtml#a9c565c5aa3682e262737dfbc868a30f0">aligned_alloc</a> )(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, size_t size, size_t alignment)</td></tr>
<tr class="memdesc:a9c565c5aa3682e262737dfbc868a30f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a block of size bytes of memory.  <a href="struct_acl_allocator.xhtml#a9c565c5aa3682e262737dfbc868a30f0">More...</a><br /></td></tr>
<tr class="separator:a9c565c5aa3682e262737dfbc868a30f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bfd619c8403697c65a2a0178930eb65"><td class="memItemLeft" align="right" valign="top">void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_allocator.xhtml#a7bfd619c8403697c65a2a0178930eb65">aligned_free</a> )(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, void *ptr)</td></tr>
<tr class="memdesc:a7bfd619c8403697c65a2a0178930eb65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate a block of size bytes of memory.  <a href="struct_acl_allocator.xhtml#a7bfd619c8403697c65a2a0178930eb65">More...</a><br /></td></tr>
<tr class="separator:a7bfd619c8403697c65a2a0178930eb65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f53d287ac7c064d1a49d4bd93ca1cb9"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a></td></tr>
<tr class="separator:a0f53d287ac7c064d1a49d4bd93ca1cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00099">99</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a9c565c5aa3682e262737dfbc868a30f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c565c5aa3682e262737dfbc868a30f0">&#9670;&nbsp;</a></span>aligned_alloc</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void*(* aligned_alloc(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, size_t size, size_t alignment)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate a block of size bytes of memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">user_data</td><td>User provided data that can be used by the allocator </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the allocation</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the allocated block if successfull else NULL </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00122">122</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00047">AllocatorWrapper::aligned_alloc()</a>.</p>

</div>
</div>
<a id="a7bfd619c8403697c65a2a0178930eb65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bfd619c8403697c65a2a0178930eb65">&#9670;&nbsp;</a></span>aligned_free</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* aligned_free(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate a block of size bytes of memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">user_data</td><td>User provided data that can be used by the allocator </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the allocation User provided information </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00053">AllocatorWrapper::aligned_free()</a>.</p>

</div>
</div>
<a id="a66e74c5f7dee07b2c12a032a74798704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66e74c5f7dee07b2c12a032a74798704">&#9670;&nbsp;</a></span>alloc</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void*(* alloc(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, size_t size)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate a block of size bytes of memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">user_data</td><td>User provided data that can be used by the allocator </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the allocation</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the allocated block if successfull else NULL </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00108">108</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00035">AllocatorWrapper::alloc()</a>.</p>

</div>
</div>
<a id="aabaea8b6911c70fe781173575d0fb70b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabaea8b6911c70fe781173575d0fb70b">&#9670;&nbsp;</a></span>free</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void(* free(void *<a class="el" href="struct_acl_allocator.xhtml#a0f53d287ac7c064d1a49d4bd93ca1cb9">user_data</a>, void *ptr)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release a block of size bytes of memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">user_data</td><td>User provided data that can be used by the allocator </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the allocation </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00114">114</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00041">AllocatorWrapper::free()</a>.</p>

</div>
</div>
<a id="a0f53d287ac7c064d1a49d4bd93ca1cb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f53d287ac7c064d1a49d4bd93ca1cb9">&#9670;&nbsp;</a></span>user_data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* user_data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_acl_types_8h_source.xhtml#l00131">131</a> of file <a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00047">AllocatorWrapper::aligned_alloc()</a>, <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00053">AllocatorWrapper::aligned_free()</a>, <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00035">AllocatorWrapper::alloc()</a>, <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00041">AllocatorWrapper::free()</a>, and <a class="el" href="_allocator_wrapper_8cpp_source.xhtml#l00059">AllocatorWrapper::set_user_data()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>arm_compute/<a class="el" href="_acl_types_8h_source.xhtml">AclTypes.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="struct_acl_allocator.xhtml">AclAllocator</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
