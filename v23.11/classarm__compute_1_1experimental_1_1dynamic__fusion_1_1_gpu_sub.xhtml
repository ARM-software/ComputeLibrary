<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuSub Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuSub Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_sub_8h_source.xhtml">GpuSub.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aef431fdc62152e5f81afb258274659ba"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#aef431fdc62152e5f81afb258274659ba">create_op</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs)</td></tr>
<tr class="memdesc:aef431fdc62152e5f81afb258274659ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an operator and fuse it into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#aef431fdc62152e5f81afb258274659ba">More...</a><br /></td></tr>
<tr class="separator:aef431fdc62152e5f81afb258274659ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5100e51c788634ba3783478860eeaf5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#ae5100e51c788634ba3783478860eeaf5">is_supported_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;context, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs)</td></tr>
<tr class="memdesc:ae5100e51c788634ba3783478860eeaf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the operator configuration is supported, irrespective of fusion.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#ae5100e51c788634ba3783478860eeaf5">More...</a><br /></td></tr>
<tr class="separator:ae5100e51c788634ba3783478860eeaf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94e0ee686d6aa0e586457653cabd265c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#a94e0ee686d6aa0e586457653cabd265c">validate_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs)</td></tr>
<tr class="memdesc:a94e0ee686d6aa0e586457653cabd265c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate the operator and check if its configuration is supported and if it can be fused into the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#a94e0ee686d6aa0e586457653cabd265c">More...</a><br /></td></tr>
<tr class="separator:a94e0ee686d6aa0e586457653cabd265c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion.">Operator</a> interface. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_sub_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_gpu_sub_8h_source.xhtml">GpuSub.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aef431fdc62152e5f81afb258274659ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef431fdc62152e5f81afb258274659ba">&#9670;&nbsp;</a></span>create_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * create_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an operator and fuse it into the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#a94e0ee686d6aa0e586457653cabd265c">validate_op()</a> fails, the creation also fails and may throw an error. </dd>
<dd>
If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#a94e0ee686d6aa0e586457653cabd265c">validate_op()</a> fails, <code>sketch</code> remains unchanged and valid.</dd></dl>
<p>Valid data type configurations: </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadLeft">lhs </th><th class="markdownTableHeadLeft">rhs </th><th class="markdownTableHeadLeft">dst  </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16 </td><td class="markdownTableBodyLeft">F16  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32 </td><td class="markdownTableBodyLeft">F32  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32 </td><td class="markdownTableBodyLeft">S32  </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyLeft">S16 </td><td class="markdownTableBodyLeft">S16 </td><td class="markdownTableBodyLeft">S16  </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyLeft">U8 </td><td class="markdownTableBodyLeft">U8 </td><td class="markdownTableBodyLeft">U8  </td></tr>
</table>
<p>Valid data layouts:</p><ul>
<li>Any</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sketch</td><td>Workload sketch into which the operator will be fused </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>Left hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>Right hand side tensor info. Same as <code>lhs</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer for the destination tensor info </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_gpu_sub_8cpp_source.xhtml">GpuSub.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// No need to log or validate as they&#39;ll be handled inside GpuElementwiseBinaryCommon::create_op()</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// Set the elementwise operation to Sub then call the elementwise common create_op</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    ElementwiseBinaryCommonAttributes common_attributes{};</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    common_attributes.operation(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::ElementwiseOp::Sub</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a8e01fcc1b6f567760ee1f96e996796ec">GpuElementwiseBinaryCommon::create_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, lhs, rhs, common_attributes);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00096">ElementwiseBinaryCommonAttributes::operation()</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00157">arm_compute::test::validation::sketch</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::Sub</a>.</p>

</div>
</div>
<a id="ae5100e51c788634ba3783478860eeaf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5100e51c788634ba3783478860eeaf5">&#9670;&nbsp;</a></span>is_supported_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> is_supported_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the operator configuration is supported, irrespective of fusion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Workload context within which the operator is running </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lhs</td><td>Left hand side tensor info. Data types supported: U8/S16/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rhs</td><td>Right hand side tensor info. Same as <code>lhs</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_gpu_sub_8cpp_source.xhtml">GpuSub.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lhs, rhs);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lhs, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lhs-&gt;data_type() != rhs-&gt;data_type(), <span class="stringliteral">&quot;Input tensors must be the same data type&quot;</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// Set the elementwise operation to Sub then call the elementwise common is_supported_op</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    ElementwiseBinaryCommonAttributes common_attributes{};</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    common_attributes.operation(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::ElementwiseOp::Sub</a>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#ac0b567c2c34a4971624fc113de466a4a">GpuElementwiseBinaryCommon::is_supported_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>, lhs, rhs, common_attributes);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00156">arm_compute::test::validation::context</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00107">GpuElementwiseBinaryCommon::is_supported_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00096">ElementwiseBinaryCommonAttributes::operation()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::S16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::Sub</a>, and <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>.</p>

</div>
</div>
<a id="a94e0ee686d6aa0e586457653cabd265c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94e0ee686d6aa0e586457653cabd265c">&#9670;&nbsp;</a></span>validate_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>rhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>lhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate the operator and check if its configuration is supported and if it can be fused into the workload sketch. </p>
<p>Parameters are similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml#aef431fdc62152e5f81afb258274659ba">GpuSub::create_op()</a></p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class.">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_sub_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_gpu_sub_8cpp_source.xhtml">GpuSub.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lhs, rhs);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lhs, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lhs-&gt;data_type() != rhs-&gt;data_type(), <span class="stringliteral">&quot;Input tensors must be the same data type&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// Set the elementwise operation to Sub then call the elementwise common validate_op</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    ElementwiseBinaryCommonAttributes common_attributes{};</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    common_attributes.operation(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::ElementwiseOp::Sub</a>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">GpuElementwiseBinaryCommon::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, lhs, rhs, common_attributes);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_error_8h_source.xhtml#l00245">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00096">ElementwiseBinaryCommonAttributes::operation()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::S16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00157">arm_compute::test::validation::sketch</a>, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">ElementwiseBinaryCommonAttributes::Sub</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, and <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">GpuElementwiseBinaryCommon::validate_op()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_sub_8h_source.xhtml">GpuSub.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_sub_8cpp_source.xhtml">GpuSub.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common_xhtml_a8e01fcc1b6f567760ee1f96e996796ec"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a8e01fcc1b6f567760ee1f96e996796ec">arm_compute::experimental::dynamic_fusion::GpuElementwiseBinaryCommon::create_op</a></div><div class="ttdeci">static ITensorInfo * create_op(GpuWorkloadSketch &amp;sketch, ITensorInfo *lhs, ITensorInfo *rhs, const ElementwiseBinaryCommonAttributes &amp;attributes)</div><div class="ttdoc">Create an operator and fuse it into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon.cpp:143</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00157">DirectConv2d.cpp:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes_xhtml_a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">arm_compute::experimental::dynamic_fusion::ElementwiseBinaryCommonAttributes::ElementwiseOp::Sub</a></div><div class="ttdeci">@ Sub</div><div class="ttdoc">(x - y)</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::DataType::S16</a></div><div class="ttdeci">@ S16</div><div class="ttdoc">signed 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00156">DirectConv2d.cpp:156</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common_xhtml_a228d9706bf41416a7081ce9f3405d70c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#a228d9706bf41416a7081ce9f3405d70c">arm_compute::experimental::dynamic_fusion::GpuElementwiseBinaryCommon::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *rhs, const ITensorInfo *lhs, const ElementwiseBinaryCommonAttributes &amp;attributes)</div><div class="ttdoc">Validate the operator and check if it can be fused into the workload sketch.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">GpuElementwiseBinaryCommon.cpp:115</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common_xhtml_ac0b567c2c34a4971624fc113de466a4a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_elementwise_binary_common.xhtml#ac0b567c2c34a4971624fc113de466a4a">arm_compute::experimental::dynamic_fusion::GpuElementwiseBinaryCommon::is_supported_op</a></div><div class="ttdeci">static Status is_supported_op(const GpuWorkloadContext &amp;context, const ITensorInfo *lhs, const ITensorInfo *rhs, const ElementwiseBinaryCommonAttributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported, irrespective of fusion.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00107">GpuElementwiseBinaryCommon.cpp:107</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_sub.xhtml">GpuSub</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
