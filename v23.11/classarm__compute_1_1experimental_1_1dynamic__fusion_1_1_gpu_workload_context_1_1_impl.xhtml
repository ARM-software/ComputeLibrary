<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuWorkloadContext::Impl Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuWorkloadContext::Impl Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Internal implementation of workload context.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_workload_context_impl_8h_source.xhtml">GpuWorkloadContextImpl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4562ef60eb40b4b86e0f55c4022371de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a4562ef60eb40b4b86e0f55c4022371de">Impl</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1d">GpuLanguage</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a9e7e0490811678cc8185650bad2b218b">gpu_language</a>, <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> *cl_compile_ctx)</td></tr>
<tr class="memdesc:a4562ef60eb40b4b86e0f55c4022371de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a4562ef60eb40b4b86e0f55c4022371de">More...</a><br /></td></tr>
<tr class="separator:a4562ef60eb40b4b86e0f55c4022371de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5868eb3281482e1aea08b32fb22166"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a0b5868eb3281482e1aea08b32fb22166">Impl</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> &amp;)=default</td></tr>
<tr class="memdesc:a0b5868eb3281482e1aea08b32fb22166"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a0b5868eb3281482e1aea08b32fb22166">More...</a><br /></td></tr>
<tr class="separator:a0b5868eb3281482e1aea08b32fb22166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1a051995d22eff0b66c03ba9378f31"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#afa1a051995d22eff0b66c03ba9378f31">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> &amp;)=default</td></tr>
<tr class="memdesc:afa1a051995d22eff0b66c03ba9378f31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#afa1a051995d22eff0b66c03ba9378f31">More...</a><br /></td></tr>
<tr class="separator:afa1a051995d22eff0b66c03ba9378f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7e0490811678cc8185650bad2b218b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1d">GpuLanguage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a9e7e0490811678cc8185650bad2b218b">gpu_language</a> () const</td></tr>
<tr class="memdesc:a9e7e0490811678cc8185650bad2b218b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get target GPU language.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a9e7e0490811678cc8185650bad2b218b">More...</a><br /></td></tr>
<tr class="separator:a9e7e0490811678cc8185650bad2b218b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b52eff757cb062107b174b8ab900073"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a6b52eff757cb062107b174b8ab900073">cl_compile_context</a> () const</td></tr>
<tr class="memdesc:a6b52eff757cb062107b174b8ab900073"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get CL compile context.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a6b52eff757cb062107b174b8ab900073">More...</a><br /></td></tr>
<tr class="separator:a6b52eff757cb062107b174b8ab900073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d139f57a5611bce4b04bbd85e24d81e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abe5718c3616edd5134e3058a1bb50b76">MemoryDescriptorMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a5d139f57a5611bce4b04bbd85e24d81e">mem_map</a> () const</td></tr>
<tr class="memdesc:a5d139f57a5611bce4b04bbd85e24d81e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get memory descriptor registry.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a5d139f57a5611bce4b04bbd85e24d81e">More...</a><br /></td></tr>
<tr class="separator:a5d139f57a5611bce4b04bbd85e24d81e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabc91b2302ced230614e15ff2324c64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#adabc91b2302ced230614e15ff2324c64">register_user_tensor</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</td></tr>
<tr class="memdesc:adabc91b2302ced230614e15ff2324c64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set a new ID and register the user tensor info.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#adabc91b2302ced230614e15ff2324c64">More...</a><br /></td></tr>
<tr class="separator:adabc91b2302ced230614e15ff2324c64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0a58cb48d418781cc30f3888b94faa5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#aa0a58cb48d418781cc30f3888b94faa5">create_virtual_tensor</a> ()</td></tr>
<tr class="memdesc:aa0a58cb48d418781cc30f3888b94faa5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#aa0a58cb48d418781cc30f3888b94faa5">More...</a><br /></td></tr>
<tr class="separator:aa0a58cb48d418781cc30f3888b94faa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1c8057ae41bdb9a0f4805b4e2b2de6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#af1c8057ae41bdb9a0f4805b4e2b2de6a">create_auxiliary_tensor</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</td></tr>
<tr class="memdesc:af1c8057ae41bdb9a0f4805b4e2b2de6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#af1c8057ae41bdb9a0f4805b4e2b2de6a">More...</a><br /></td></tr>
<tr class="separator:af1c8057ae41bdb9a0f4805b4e2b2de6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3691b3f274db1d7e8d2c3d8f8443cf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ac3691b3f274db1d7e8d2c3d8f8443cf1">get_tensor_info</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a> id)</td></tr>
<tr class="memdesc:ac3691b3f274db1d7e8d2c3d8f8443cf1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor info created by this context, from id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ac3691b3f274db1d7e8d2c3d8f8443cf1">More...</a><br /></td></tr>
<tr class="separator:ac3691b3f274db1d7e8d2c3d8f8443cf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6666c5f182821fca35b6dcf3f2e0658"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ab6666c5f182821fca35b6dcf3f2e0658">get_tensor_info</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a> id) const</td></tr>
<tr class="memdesc:ab6666c5f182821fca35b6dcf3f2e0658"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor info created by this context, from id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ab6666c5f182821fca35b6dcf3f2e0658">More...</a><br /></td></tr>
<tr class="separator:ab6666c5f182821fca35b6dcf3f2e0658"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Internal implementation of workload context. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_impl_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_gpu_workload_context_impl_8h_source.xhtml">GpuWorkloadContextImpl.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4562ef60eb40b4b86e0f55c4022371de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4562ef60eb40b4b86e0f55c4022371de">&#9670;&nbsp;</a></span>Impl() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1d">GpuLanguage</a>&#160;</td>
          <td class="paramname"><em>gpu_language</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> *&#160;</td>
          <td class="paramname"><em>cl_compile_ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gpu_language</td><td>Target GPU language. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cl_compile_ctx</td><td>CL compile context. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    : _gpu_language(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a9e7e0490811678cc8185650bad2b218b">gpu_language</a>),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      _cl_compile_ctx(cl_compile_ctx),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      _next_tensor_id(1),</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      _mem_map(),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      _managed_tensor_info()</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0b5868eb3281482e1aea08b32fb22166"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b5868eb3281482e1aea08b32fb22166">&#9670;&nbsp;</a></span>Impl() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6b52eff757cb062107b174b8ab900073"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b52eff757cb062107b174b8ab900073">&#9670;&nbsp;</a></span>cl_compile_context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> * cl_compile_context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get CL compile context. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> _cl_compile_ctx;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="af1c8057ae41bdb9a0f4805b4e2b2de6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1c8057ae41bdb9a0f4805b4e2b2de6a">&#9670;&nbsp;</a></span>create_auxiliary_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * create_auxiliary_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_info</td><td><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> to copy from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created auxiliary tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00125">125</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> = std::make_unique&lt;TensorInfo&gt;(itensor_info);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tensor_id   = next_tensor_id();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;set_id(tensor_id);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    _mem_map[tensor_id] = MemoryDescriptor{<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">MemoryType::Auxiliary</a>, AuxMemoryInfo{<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;total_size()}};</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">auto</span> inserted       = _managed_tensor_info.emplace(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;id(), std::move(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>));</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> inserted.first-&gt;second.get();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::Auxiliary</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00068">tensor_info</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00110">GpuWorkloadSketch::Implementation::create_auxiliary_tensor()</a>.</p>

</div>
</div>
<a id="aa0a58cb48d418781cc30f3888b94faa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0a58cb48d418781cc30f3888b94faa5">&#9670;&nbsp;</a></span>create_virtual_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * create_virtual_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created virtual tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00115">115</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> = std::make_unique&lt;TensorInfo&gt;();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tensor_id   = -next_tensor_id();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;set_id(tensor_id);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    _mem_map[tensor_id] = MemoryDescriptor{<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">MemoryType::Virtual</a>};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">auto</span> inserted       = _managed_tensor_info.emplace(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;id(), std::move(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>));</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">return</span> inserted.first-&gt;second.get();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00068">tensor_info</a>, and <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">arm_compute::experimental::dynamic_fusion::Virtual</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00100">GpuWorkloadSketch::Implementation::create_virtual_tensor()</a>.</p>

</div>
</div>
<a id="ac3691b3f274db1d7e8d2c3d8f8443cf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3691b3f274db1d7e8d2c3d8f8443cf1">&#9670;&nbsp;</a></span>get_tensor_info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * get_tensor_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get tensor info created by this context, from id. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">return</span> _managed_tensor_info.at(<span class="keywordtype">id</span>).get();</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00115">GpuWorkloadSketch::Implementation::get_tensor_info()</a>.</p>

</div>
</div>
<a id="ab6666c5f182821fca35b6dcf3f2e0658"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6666c5f182821fca35b6dcf3f2e0658">&#9670;&nbsp;</a></span>get_tensor_info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * get_tensor_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get tensor info created by this context, from id. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00140">140</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> _managed_tensor_info.at(<span class="keywordtype">id</span>).get();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9e7e0490811678cc8185650bad2b218b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e7e0490811678cc8185650bad2b218b">&#9670;&nbsp;</a></span>gpu_language()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1d">GpuLanguage</a> gpu_language </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get target GPU language. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> _gpu_language;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5d139f57a5611bce4b04bbd85e24d81e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d139f57a5611bce4b04bbd85e24d81e">&#9670;&nbsp;</a></span>mem_map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abe5718c3616edd5134e3058a1bb50b76">MemoryDescriptorMap</a> &amp; mem_map </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get memory descriptor registry. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> _mem_map;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00091">GpuWorkloadSketch::Implementation::generate_source_code()</a>.</p>

</div>
</div>
<a id="afa1a051995d22eff0b66c03ba9378f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa1a051995d22eff0b66c03ba9378f31">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assignment. </p>

</div>
</div>
<a id="adabc91b2302ced230614e15ff2324c64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adabc91b2302ced230614e15ff2324c64">&#9670;&nbsp;</a></span>register_user_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void register_user_tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set a new ID and register the user tensor info. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor_info</td><td>The tensor info to be registered. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>.has_valid_id());</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> tensor_id = next_tensor_id();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>.set_id(tensor_id);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _mem_map[tensor_id] = MemoryDescriptor{<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a8f9bfe9d1345237cb3b2b205864da075">MemoryType::User</a>};</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Save a *copy* of the user tensor info in workload context for future reference</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Note that this means if the user modifies the @p tensor_info, the change will not be reflected in the context</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    _managed_tensor_info.emplace(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>.id(), std::make_unique&lt;TensorInfo&gt;(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00068">tensor_info</a>, and <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a8f9bfe9d1345237cb3b2b205864da075">arm_compute::experimental::dynamic_fusion::User</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_workload_context_impl_8h_source.xhtml">GpuWorkloadContextImpl.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_workload_context_8cpp_source.xhtml">GpuWorkloadContext.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::MemoryType::Auxiliary</a></div><div class="ttdeci">@ Auxiliary</div><div class="ttdoc">Additional memory required by the workload tensor, e.g.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">arm_compute::experimental::dynamic_fusion::MemoryType::Virtual</a></div><div class="ttdeci">@ Virtual</div><div class="ttdoc">Virtual type is of No-Alloc type.</div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a8f9bfe9d1345237cb3b2b205864da075"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a8f9bfe9d1345237cb3b2b205864da075">arm_compute::experimental::dynamic_fusion::MemoryType::User</a></div><div class="ttdeci">@ User</div><div class="ttdoc">Both User and Auxiliary types are of Alloc type.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl_xhtml_a9e7e0490811678cc8185650bad2b218b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a9e7e0490811678cc8185650bad2b218b">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::Impl::gpu_language</a></div><div class="ttdeci">GpuLanguage gpu_language() const</div><div class="ttdoc">Get target GPU language.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00087">GpuWorkloadContext.cpp:87</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00068">ClWorkloadRuntime.cpp:68</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml">Impl</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
