<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validate_examples/RunExample.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('validate__examples_2_run_example_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RunExample.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="validate__examples_2_run_example_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="validate__examples_2_run_example_8cpp.xhtml#a52eaea3b77da32680581ca0f003d4cc0">   26</a></span>&#160;<span class="preprocessor">#define BENCHMARK_EXAMPLES</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_utils_8cpp.xhtml">utils/Utils.cpp</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_example_8h.xhtml">ValidateExample.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/runtime/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_assets_library_8h.xhtml">tests/AssetsLibrary.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_globals_8h.xhtml">tests/Globals.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_framework_8h.xhtml">tests/framework/Framework.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_options_8h.xhtml">tests/framework/command_line/CommonOptions.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instruments_8h.xhtml">tests/framework/instruments/Instruments.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_parser_8h.xhtml">utils/command_line/CommandLineParser.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;libgen.h&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;std::unique_ptr&lt;AssetsLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">static</span> constexpr uint32_t      fixed_seed = 1;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;std::unique_ptr&lt;AssetsLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">fixed_library</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">namespace </span>utils</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">static</span> std::unique_ptr&lt;ValidateExample&gt; g_example      = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">static</span> std::vector&lt;char *&gt;              g_example_argv = {};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;std::string command_line(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; argc; i++)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; argv[i] &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> val<span class="keywordtype">id</span>ate&gt;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">class </span>ExampleTest : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml">arm_compute::test::framework::TestCase</a></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    ExampleTest() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">void</span> do_setup()<span class="keyword"> override</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(g_example.get());</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        _is_setup = g_example-&gt;do_setup(g_example_argv.size(), &amp;g_example_argv[0]);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span>(_is_setup)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            g_example-&gt;do_run();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> do_teardown()<span class="keyword"> override</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span>(_is_setup)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                g_example-&gt;do_validate();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            g_example-&gt;do_teardown();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        g_example = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">bool</span> _is_setup{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;};</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1utils.xhtml#afdb36468694a529fa7c5389b278aa14b">  109</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1utils.xhtml#afdb36468694a529fa7c5389b278aa14b">run_example</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv, std::unique_ptr&lt;ValidateExample&gt; example)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">utils::CommandLineParser</a> <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">framework::CommonOptions</a> options(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">auto</span>                     example_args = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_list_option.xhtml">utils::ListOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;example_args&quot;</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    example_args-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Arguments to pass to the example separated by commas (e.g: arg0,arg1,arg2)&quot;</span>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> seed = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::random_device::result_type&gt;</a>&gt;(<span class="stringliteral">&quot;seed&quot;</span>, std::random_device()());</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    seed-&gt;set_help(<span class="stringliteral">&quot;Global seed for random number generation&quot;</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">auto</span> <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a> = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;validate&quot;</span>, 1);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>-&gt;set_help(<span class="stringliteral">&quot;Enable / disable output validation (0/1)&quot;</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">framework::Framework</a> &amp;framework = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">framework::Framework::get</a>();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.parse(argc, argv);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">help</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a8d75095e0ce4d0cc3ed6bc4733664a74">is_set</a>() &amp;&amp; options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">help</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>())</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.print_help(argv[0]);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    std::vector&lt;std::unique_ptr&lt;framework::Printer&gt;&gt; printers = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a0ecd10cc93de5d317347eab52ede1775">create_printers</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    g_example                                                 = std::move(example);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    g_example_argv.clear();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    g_example_argv.emplace_back(argv[0]);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;arg : example_args-&gt;value())</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        g_example_argv.emplace_back(<span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(arg.c_str())); <span class="comment">// NOLINT</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>       = std::make_unique&lt;AssetsLibrary&gt;(<span class="stringliteral">&quot;.&quot;</span> <span class="comment">/* Only using random values */</span>, seed-&gt;value());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">fixed_library</a> = std::make_unique&lt;AssetsLibrary&gt;(<span class="stringliteral">&quot;.&quot;</span>, fixed_seed);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            p-&gt;print_global_header();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>())</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdd">CLBackendType</a> backend_type = <a class="code" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">CLBackendType::Native</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;arg : example_args-&gt;value())</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span>(arg.find(<span class="stringliteral">&quot;--target=clvk&quot;</span>) != std::string::npos)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                backend_type = <a class="code" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda0a6798f16ee70831a001417215fb28d1">CLBackendType::Clvk</a>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">auto</span> ctx_dev_err = <a class="code" href="namespacearm__compute.xhtml#a419153497f83b7db0c19112371b10a3f">create_opencl_context_and_device</a>(backend_type);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(std::get&lt;2&gt;(ctx_dev_err) != CL_SUCCESS, <span class="stringliteral">&quot;Failed to create OpenCL context&quot;</span>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ab74ade35e03d97dc260789e541a157ef">default_init_with_context</a>(std::get&lt;1&gt;(ctx_dev_err), std::get&lt;0&gt;(ctx_dev_err), <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">framework::LogLevel::CONFIG</a>)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            p-&gt;print_entry(<span class="stringliteral">&quot;Version&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#a64c17a5a42d2499a1626222ff9753b4d">build_information</a>());</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            p-&gt;print_entry(<span class="stringliteral">&quot;CommandLine&quot;</span>, command_line(argc, argv));</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            p-&gt;print_entry(<span class="stringliteral">&quot;Seed&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(seed-&gt;value()));</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>())</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;CL_DEVICE_VERSION&quot;</span>, <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_device_version());</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;CL_DEVICE_VERSION&quot;</span>, <span class="stringliteral">&quot;Unavailable&quot;</span>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            p-&gt;print_entry(<span class="stringliteral">&quot;Iterations&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">iterations</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>()));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            g_example-&gt;print_parameters(*p);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Initialize framework</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">framework::FrameworkConfig</a> fconfig;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">instruments</a>    = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a1f6f1e0b49987b1449fc7c293d19a383">instruments</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml#a0aeb5d3910631c64f1370af7b0f19c26">value</a>();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">num_iterations</a> = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">iterations</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>();</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">log_level</a>      = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">init</a>(fconfig);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">add_printer</a>(p.get());</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">set_throw_errors</a>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#acfa78593a32c16d1b3f397a68bbd1c29">throw_errors</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>());</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml">arm_compute::test::framework::detail::TestSuiteRegistrar</a> suite{ <span class="stringliteral">&quot;Examples&quot;</span> };</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">validate</a>-&gt;value() != 0)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">add_test_case</a>&lt;ExampleTest&lt;true&gt;&gt;(basename(argv[0]), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba18ff74f43da410c5529f7d6fca84f115">arm_compute::test::framework::TestCaseFactory::Status::ACTIVE</a>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">add_test_case</a>&lt;ExampleTest&lt;false&gt;&gt;(basename(argv[0]), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba18ff74f43da410c5529f7d6fca84f115">arm_compute::test::framework::TestCaseFactory::Status::ACTIVE</a>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="comment">//func(argc, argv);</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">bool</span> success = framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">run</a>();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            p-&gt;print_global_footer();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> (success ? 0 : 1);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;} <span class="comment">// namespace utils</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00208">OpenCL.cpp:208</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">arm_compute::test::framework::FrameworkConfig</a></div><div class="ttdoc">Framework configuration structure.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00057">Framework.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">arm_compute::test::framework::CommonOptions</a></div><div class="ttdoc">Common command line options used to configure the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00054">CommonOptions.h:54</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ab702e2f7530d6172eea3780d8923bd71"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">arm_compute::test::framework::FrameworkConfig::num_iterations</a></div><div class="ttdeci">int num_iterations</div><div class="ttdoc">Number of iterations per test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00063">Framework.h:63</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_afdb36468694a529fa7c5389b278aa14b"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#afdb36468694a529fa7c5389b278aa14b">arm_compute::utils::run_example</a></div><div class="ttdeci">int run_example(int argc, char **argv, std::unique_ptr&lt; ValidateExample &gt; example)</div><div class="ttdoc">Run an example and handle the potential exceptions it throws.</div><div class="ttdef"><b>Definition:</b> <a href="validate__examples_2_run_example_8cpp_source.xhtml#l00109">RunExample.cpp:109</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5f16ced78873ee3a193490197fbf57a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">arm_compute::test::framework::Framework::add_printer</a></div><div class="ttdeci">void add_printer(Printer *printer)</div><div class="ttdoc">Set the printer used for the output of test results.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00678">Framework.cpp:678</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_8dox_source.xhtml#l00026">tests.dox:26</a></div></div>
<div class="ttc" id="a_assets_library_8h_xhtml"><div class="ttname"><a href="_assets_library_8h.xhtml">AssetsLibrary.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a419153497f83b7db0c19112371b10a3f"><div class="ttname"><a href="namespacearm__compute.xhtml#a419153497f83b7db0c19112371b10a3f">arm_compute::create_opencl_context_and_device</a></div><div class="ttdeci">std::tuple&lt; cl::Context, cl::Device, cl_int &gt; create_opencl_context_and_device(CLBackendType cl_backend_type)</div><div class="ttdoc">This function creates an OpenCL context and a device.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00121">CLHelpers.cpp:121</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ad8e7764125fcd790e0b151d26cfe949c"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ad8e7764125fcd790e0b151d26cfe949c">arm_compute::test::framework::Framework::add_test_case</a></div><div class="ttdeci">void add_test_case(std::string test_name, DatasetMode mode, TestCaseFactory::Status status)</div><div class="ttdoc">Add a test case to the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00376">Framework.h:376</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba18ff74f43da410c5529f7d6fca84f115"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba18ff74f43da410c5529f7d6fca84f115">arm_compute::test::framework::TestCaseFactory::Status::ACTIVE</a></div><div class="ttdeci">@ ACTIVE</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a8941b8f8c3adf13bdd7ecd43deac39f2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">arm_compute::test::framework::CommonOptions::help</a></div><div class="ttdeci">arm_compute::utils::ToggleOption * help</div><div class="ttdoc">Show help option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00074">CommonOptions.h:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">GemmTuner.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00640">GemmTuner.py:640</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary.cpp:41</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a16fda368866c2a2e2d5a54eda52050f9"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">arm_compute::test::framework::FrameworkConfig::log_level</a></div><div class="ttdeci">LogLevel log_level</div><div class="ttdoc">Verbosity of the output.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00065">Framework.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_list_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_list_option.xhtml">arm_compute::utils::ListOption</a></div><div class="ttdoc">Implementation of an option that accepts any number of values.</div><div class="ttdef"><b>Definition:</b> <a href="_list_option_8h_source.xhtml#l00040">ListOption.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a0ecd10cc93de5d317347eab52ede1775"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a0ecd10cc93de5d317347eab52ede1775">arm_compute::test::framework::CommonOptions::create_printers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Printer &gt; &gt; create_printers()</div><div class="ttdoc">Create the printers based on parsed command line options.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8cpp_source.xhtml#l00102">CommonOptions.cpp:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a94eb95e47316e7dc5af7615592d26bdda0a6798f16ee70831a001417215fb28d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda0a6798f16ee70831a001417215fb28d1">arm_compute::CLBackendType::Clvk</a></div><div class="ttdeci">@ Clvk</div><div class="ttdoc">CLVK backend.</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00044">CommandLineParser.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_enum_list_option_xhtml_a0aeb5d3910631c64f1370af7b0f19c26"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml#a0aeb5d3910631c64f1370af7b0f19c26">arm_compute::utils::EnumListOption::value</a></div><div class="ttdeci">const std::vector&lt; T &gt; &amp; value() const</div><div class="ttdoc">Get the values of the option.</div><div class="ttdef"><b>Definition:</b> <a href="_enum_list_option_8h_source.xhtml#l00147">EnumListOption.h:147</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00097">Framework.h:97</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="a_command_line_parser_8h_xhtml"><div class="ttname"><a href="_command_line_parser_8h.xhtml">CommandLineParser.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5e61ba4403f0d2bd4f755f59193af692"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">arm_compute::test::framework::Framework::set_throw_errors</a></div><div class="ttdeci">void set_throw_errors(bool throw_errors)</div><div class="ttdoc">Set whether errors are caught or thrown by the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00267">Framework.cpp:267</a></div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a4ad3b7ba69599b41ab0954a39d7e7cbc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">arm_compute::test::framework::FrameworkConfig::instruments</a></div><div class="ttdeci">std::vector&lt; framework::InstrumentsDescription &gt; instruments</div><div class="ttdoc">Instrument types that will be used for benchmarking.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00059">Framework.h:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a149ad6701e3e2414cb566bb414029841"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">arm_compute::test::framework::Framework::run</a></div><div class="ttdeci">bool run()</div><div class="ttdoc">Run all enabled test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00546">Framework.cpp:546</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_option_xhtml_a8d75095e0ce4d0cc3ed6bc4733664a74"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a8d75095e0ce4d0cc3ed6bc4733664a74">arm_compute::utils::Option::is_set</a></div><div class="ttdeci">bool is_set() const</div><div class="ttdoc">Has a value been assigned to the option?</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00134">Option.h:134</a></div></div>
<div class="ttc" id="a_instruments_8h_xhtml"><div class="ttname"><a href="_instruments_8h.xhtml">Instruments.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_enum_option_xhtml_ab5d906b55180c260032ce43d6c5d4d06"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">arm_compute::utils::EnumOption::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdoc">Get the selected value.</div><div class="ttdef"><b>Definition:</b> <a href="_enum_option_8h_source.xhtml#l00129">EnumOption.h:129</a></div></div>
<div class="ttc" id="aruntime_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="autils_2_utils_8cpp_xhtml"><div class="ttname"><a href="utils_2_utils_8cpp.xhtml">Utils.cpp</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00124">Framework.cpp:124</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_af90c2445eb8a45fd74b11c574c8cb6b9"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">arm_compute::test::fixed_library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; fixed_library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00080">main.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="a_common_options_8h_xhtml"><div class="ttname"><a href="_common_options_8h.xhtml">CommonOptions.h</a></div></div>
<div class="ttc" id="a_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a94eb95e47316e7dc5af7615592d26bdd"><div class="ttname"><a href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdd">arm_compute::CLBackendType</a></div><div class="ttdeci">CLBackendType</div><div class="ttdoc">List the possible OpenCL backends.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_types_8h_source.xhtml#l00055">CLTypes.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_option_xhtml_a48a2672f362eeed9a3e93403f4d3de37"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">arm_compute::utils::Option::set_help</a></div><div class="ttdeci">void set_help(std::string help)</div><div class="ttdoc">Set the help message for the option.</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00124">Option.h:124</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00077">main.cpp:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1detail_1_1_test_suite_registrar.xhtml">arm_compute::test::framework::detail::TestSuiteRegistrar</a></div><div class="ttdoc">Helper class to statically begin and end a test suite.</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_registrars_8h_source.xhtml#l00066">Registrars.h:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_test_case_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml">arm_compute::test::framework::TestCase</a></div><div class="ttdoc">Abstract test case class.</div><div class="ttdef"><b>Definition:</b> <a href="_test_case_8h_source.xhtml#l00040">TestCase.h:40</a></div></div>
<div class="ttc" id="a_globals_8h_xhtml"><div class="ttname"><a href="_globals_8h.xhtml">Globals.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_ab74ade35e03d97dc260789e541a157ef"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ab74ade35e03d97dc260789e541a157ef">arm_compute::CLScheduler::default_init_with_context</a></div><div class="ttdeci">void default_init_with_context(cl::Device &amp;device, cl::Context &amp;ctx, ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr)</div><div class="ttdoc">Initialises the scheduler with context and device provided by the user.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00119">CLScheduler.cpp:119</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826"><div class="ttname"><a href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">arm_compute::CLBackendType::Native</a></div><div class="ttdeci">@ Native</div><div class="ttdoc">OpenCL native backend.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">arm_compute::test::framework::LogLevel::CONFIG</a></div><div class="ttdeci">@ CONFIG</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a64c17a5a42d2499a1626222ff9753b4d"><div class="ttname"><a href="namespacearm__compute.xhtml#a64c17a5a42d2499a1626222ff9753b4d">arm_compute::build_information</a></div><div class="ttdeci">std::string build_information()</div><div class="ttdoc">Returns the arm_compute library build information.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_afcea4ca06109422a01d4d844c92ce6d1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">arm_compute::test::framework::CommonOptions::iterations</a></div><div class="ttdeci">arm_compute::utils::SimpleOption&lt; int &gt; * iterations</div><div class="ttdoc">Number of iterations option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00076">CommonOptions.h:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_simple_option_xhtml_ab5d906b55180c260032ce43d6c5d4d06"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">arm_compute::utils::SimpleOption::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdoc">Get the option value.</div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00111">SimpleOption.h:111</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a1f6f1e0b49987b1449fc7c293d19a383"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a1f6f1e0b49987b1449fc7c293d19a383">arm_compute::test::framework::CommonOptions::instruments</a></div><div class="ttdeci">arm_compute::utils::EnumListOption&lt; InstrumentsDescription &gt; * instruments</div><div class="ttdoc">Instruments option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00075">CommonOptions.h:75</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a4feaaa70771629f4b5dcf3b219c8b647"><div class="ttname"><a href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">arm_compute::validate</a></div><div class="ttdeci">Status validate(const ITensorInfo *scores_in, const ITensorInfo *boxes_in, const ITensorInfo *batch_splits_in, const ITensorInfo *scores_out, const ITensorInfo *boxes_out, const ITensorInfo *classes, const ITensorInfo *batch_splits_out, const ITensorInfo *keeps, const ITensorInfo *keeps_size, const BoxNMSLimitInfo info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00243">CPPBoxWithNonMaximaSuppressionLimit.cpp:243</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_aa6a7c74a5e00e3846338fbcd5ea57094"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">arm_compute::test::framework::CommonOptions::log_level</a></div><div class="ttdeci">arm_compute::utils::EnumOption&lt; LogLevel &gt; * log_level</div><div class="ttdoc">Logging level option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00079">CommonOptions.h:79</a></div></div>
<div class="ttc" id="a_validate_example_8h_xhtml"><div class="ttname"><a href="_validate_example_8h.xhtml">ValidateExample.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a01e3aa67ceaeae837e9a68050d850724"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">arm_compute::test::framework::Framework::init</a></div><div class="ttdeci">void init(const FrameworkConfig &amp;config)</div><div class="ttdoc">Init the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00130">Framework.cpp:130</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_acfa78593a32c16d1b3f397a68bbd1c29"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#acfa78593a32c16d1b3f397a68bbd1c29">arm_compute::test::framework::CommonOptions::throw_errors</a></div><div class="ttdeci">arm_compute::utils::ToggleOption * throw_errors</div><div class="ttdoc">Throw errors option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00080">CommonOptions.h:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml">arm_compute::utils::SimpleOption</a></div><div class="ttdoc">Implementation of an option that accepts a single value.</div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00038">SimpleOption.h:38</a></div></div>
<div class="ttc" id="a_framework_8h_xhtml"><div class="ttname"><a href="_framework_8h.xhtml">Framework.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_c17e235a7be576fb898bcc8e94f529de.xhtml">validate_examples</a></li><li class="navelem"><a class="el" href="validate__examples_2_run_example_8cpp.xhtml">RunExample.cpp</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
