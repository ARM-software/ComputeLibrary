<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ITensorPack Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_tensor_pack.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ITensorPack Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service.  
 <a href="classarm__compute_1_1_i_tensor_pack.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_i_tensor_pack_1_1_pack_element.xhtml">PackElement</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a0e01a567f0df623287c8f1bb6fbe26f7">ITensorPack</a> ()=default</td></tr>
<tr class="memdesc:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a0e01a567f0df623287c8f1bb6fbe26f7">More...</a><br /></td></tr>
<tr class="separator:a0e01a567f0df623287c8f1bb6fbe26f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18bc5cd3d60869caf1a8878ceca25a61"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a18bc5cd3d60869caf1a8878ceca25a61">ITensorPack</a> (std::initializer_list&lt; <a class="el" href="structarm__compute_1_1_i_tensor_pack_1_1_pack_element.xhtml">PackElement</a> &gt; l)</td></tr>
<tr class="memdesc:a18bc5cd3d60869caf1a8878ceca25a61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializer list Constructor.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a18bc5cd3d60869caf1a8878ceca25a61">More...</a><br /></td></tr>
<tr class="separator:a18bc5cd3d60869caf1a8878ceca25a61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8078b635739e84400cf8240a2993e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a> (int id, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:a6d8078b635739e84400cf8240a2993e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add tensor to the pack.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">More...</a><br /></td></tr>
<tr class="separator:a6d8078b635739e84400cf8240a2993e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0354c0e680cff7f7f89f217def8616c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a0354c0e680cff7f7f89f217def8616c3">add_tensor</a> (int id, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:a0354c0e680cff7f7f89f217def8616c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add const tensor to the pack.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a0354c0e680cff7f7f89f217def8616c3">More...</a><br /></td></tr>
<tr class="separator:a0354c0e680cff7f7f89f217def8616c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa23dcee239e241566abce6dfceac704d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a> (int id, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</td></tr>
<tr class="memdesc:aa23dcee239e241566abce6dfceac704d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add const tensor to the pack.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">More...</a><br /></td></tr>
<tr class="separator:aa23dcee239e241566abce6dfceac704d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341a4c8a24d190d39504656989573d91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a> (int id)</td></tr>
<tr class="memdesc:a341a4c8a24d190d39504656989573d91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor of a given id from the pac.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">More...</a><br /></td></tr>
<tr class="separator:a341a4c8a24d190d39504656989573d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a000c70e9839ed364ab7343de880a4d35"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a> (int id) const</td></tr>
<tr class="memdesc:a000c70e9839ed364ab7343de880a4d35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get constant tensor of a given id.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">More...</a><br /></td></tr>
<tr class="separator:a000c70e9839ed364ab7343de880a4d35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a2475b3be2ed6a5ef5654491aa6b7ca48">remove_tensor</a> (int id)</td></tr>
<tr class="memdesc:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove the tensor stored with the given id.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a2475b3be2ed6a5ef5654491aa6b7ca48">More...</a><br /></td></tr>
<tr class="separator:a2475b3be2ed6a5ef5654491aa6b7ca48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pack size accessor.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a> () const</td></tr>
<tr class="memdesc:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if pack is empty.  <a href="classarm__compute_1_1_i_tensor_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">More...</a><br /></td></tr>
<tr class="separator:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> packing service. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0e01a567f0df623287c8f1bb6fbe26f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e01a567f0df623287c8f1bb6fbe26f7">&#9670;&nbsp;</a></span>ITensorPack() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a id="a18bc5cd3d60869caf1a8878ceca25a61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18bc5cd3d60869caf1a8878ceca25a61">&#9670;&nbsp;</a></span>ITensorPack() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; <a class="el" href="structarm__compute_1_1_i_tensor_pack_1_1_pack_element.xhtml">PackElement</a> &gt;&#160;</td>
          <td class="paramname"><em>l</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializer list Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                                           : _pack()</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;e : l)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        _pack[e.id] = e;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa23dcee239e241566abce6dfceac704d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa23dcee239e241566abce6dfceac704d">&#9670;&nbsp;</a></span>add_const_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_const_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add const tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<span class="keywordtype">id</span>, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00038">ITensorPack::add_tensor()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00223">CpuGemmDirectConv2d::prepare()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00422">CpuWinogradConv2d::prepare()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00634">ClFullyConnected::prepare()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00529">CpuFullyConnected::prepare()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00639">ClGemmConv2d::prepare()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00885">CpuGemmConv2d::prepare()</a>, <a class="el" href="_cpu_mat_mul_8cpp_source.xhtml#l00255">CpuMatMul::run()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00356">CpuWinogradConv2d::run()</a>, <a class="el" href="_cl_indirect_conv2d_8cpp_source.xhtml#l00121">ClIndirectConv2d::run()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00579">ClFullyConnected::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00786">ClGemm::run()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00490">CpuFullyConnected::run()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00579">ClGemmConv2d::run()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00552">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00403">CpuGemm::run()</a>, and <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00797">CpuGemmConv2d::run()</a>.</p>

</div>
</div>
<a id="a0354c0e680cff7f7f89f217def8616c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0354c0e680cff7f7f89f217def8616c3">&#9670;&nbsp;</a></span>add_tensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add const tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _pack[id] = PackElement(<span class="keywordtype">id</span>, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>.</p>

</div>
</div>
<a id="a6d8078b635739e84400cf8240a2993e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8078b635739e84400cf8240a2993e7">&#9670;&nbsp;</a></span>add_tensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add tensor to the pack. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID/type of the tensor to add </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to add </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    _pack[id] = PackElement(<span class="keywordtype">id</span>, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00048">ITensorPack::add_const_tensor()</a>, <a class="el" href="src_2common_2_tensor_pack_8cpp_source.xhtml#l00044">TensorPack::add_tensor()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00042">CLAuxTensorHandler::CLAuxTensorHandler()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="_memory_helpers_8h_source.xhtml#l00063">arm_compute::manage_workspace()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00296">ClWinogradConv2d::prepare()</a>, <a class="el" href="_cl_p_relu_8cpp_source.xhtml#l00050">ClPRelu::run()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00147">CpuConcatenate::run()</a>, <a class="el" href="_n_e_fill_8cpp_source.xhtml#l00056">NEFill::run()</a>, <a class="el" href="_cl_softmax_8cpp_source.xhtml#l00069">ClSoftmax::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00224">ClConcatenate::run()</a>, <a class="el" href="_n_e_copy_8cpp_source.xhtml#l00066">NECopy::run()</a>, <a class="el" href="_n_e_reshape_layer_8cpp_source.xhtml#l00066">NEReshapeLayer::run()</a>, <a class="el" href="_n_e_transpose_8cpp_source.xhtml#l00064">NETranspose::run()</a>, <a class="el" href="_n_e_floor_8cpp_source.xhtml#l00062">NEFloor::run()</a>, <a class="el" href="_n_e_elementwise_unary_layer_8cpp_source.xhtml#l00069">NEElementwiseUnaryLayer&lt; op &gt;::run()</a>, <a class="el" href="_n_e_flatten_layer_8cpp_source.xhtml#l00072">NEFlattenLayer::run()</a>, <a class="el" href="_n_e_quantization_layer_8cpp_source.xhtml#l00059">NEQuantizationLayer::run()</a>, <a class="el" href="_n_e_dequantization_layer_8cpp_source.xhtml#l00059">NEDequantizationLayer::run()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00176">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_n_e_convert_fully_connected_weights_8cpp_source.xhtml#l00064">NEConvertFullyConnectedWeights::run()</a>, <a class="el" href="_n_e_permute_8cpp_source.xhtml#l00063">NEPermute::run()</a>, <a class="el" href="_n_e_p_relu_layer_8cpp_source.xhtml#l00058">NEPReluLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00066">CLTranspose::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00067">CLRsqrtLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_floor_8cpp_source.xhtml#l00071">CLFloor::run()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00073">CLReshapeLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_logical_not_8cpp_source.xhtml#l00066">CLLogicalNot::run()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00134">NEScale::run()</a>, <a class="el" href="_c_l_flatten_layer_8cpp_source.xhtml#l00081">CLFlattenLayer::run()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00096">CLLogicalAnd::run()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00096">CLLogicalOr::run()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00070">CLDequantizationLayer::run()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00102">NESlice::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_fill_8cpp_source.xhtml#l00075">CLFill::run()</a>, <a class="el" href="_n_e_concatenate_layer_8cpp_source.xhtml#l00080">NEConcatenateLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_copy_8cpp_source.xhtml#l00075">CLCopy::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00069">NEElementwiseMax::run()</a>, <a class="el" href="_cpu_direct_conv3d_8cpp_source.xhtml#l00095">CpuDirectConv3d::run()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00074">CLPReluLayer::run()</a>, <a class="el" href="_n_e_max_unpooling_layer_8cpp_source.xhtml#l00080">NEMaxUnpoolingLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_permute_8cpp_source.xhtml#l00075">CLPermute::run()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00065">CLQuantizationLayer::run()</a>, <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00065">NEActivationLayer::run()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00356">CpuWinogradConv2d::run()</a>, <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00136">CpuDirectConv2d::run()</a>, <a class="el" href="_c_l_pooling3d_layer_8cpp_source.xhtml#l00070">CLPooling3dLayer::run()</a>, <a class="el" href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00071">NEArithmeticAddition::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_convert_fully_connected_weights_8cpp_source.xhtml#l00078">CLConvertFullyConnectedWeights::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_scale_8cpp_source.xhtml#l00069">CLScale::run()</a>, <a class="el" href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00071">NEArithmeticSubtraction::run()</a>, <a class="el" href="_c_l_pooling_layer_8cpp_source.xhtml#l00078">CLPoolingLayer::run()</a>, <a class="el" href="_n_e_strided_slice_8cpp_source.xhtml#l00094">NEStridedSlice::run()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00078">CLActivationLayer::run()</a>, <a class="el" href="_c_l_conv3_d_8cpp_source.xhtml#l00088">CLConv3D::run()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00111">CLSlice::run()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00088">CLConcatenateLayer::run()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00076">NEDirectConvolutionLayer::run()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00196">CLDeconvolutionLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_crop_8cpp_source.xhtml#l00096">CLCrop::run()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00579">ClGemmConv2d::run()</a>, <a class="el" href="_c_l_indirect_convolution_layer_8cpp_source.xhtml#l00091">CLIndirectConvolutionLayer::run()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00552">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_c_l_direct_convolution_layer_8cpp_source.xhtml#l00095">CLDirectConvolutionLayer::run()</a>, <a class="el" href="_c_l_strided_slice_8cpp_source.xhtml#l00128">CLStridedSlice::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00091">CLPixelWiseMultiplication::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00074">NEPixelWiseMultiplication::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00108">CLExpLayer::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00797">CpuGemmConv2d::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00081">CLArithmeticAddition::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00112">NEElementwiseMin::run()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00116">NEComplexPixelWiseMultiplication::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00148">CLNegLayer::run()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00146">CLComplexPixelWiseMultiplication::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00158">NEElementwiseSquaredDiff::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00188">CLSinLayer::run()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00822">CLLSTMLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00138">CLArithmeticSubtraction::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00204">NEElementwiseDivision::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00268">CLLogLayer::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00250">NEElementwisePower::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00192">CLArithmeticDivision::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00228">CLAbsLayer::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00340">NEElementwiseComparison::run()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00308">CLRoundLayer::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00246">CLElementwiseMax::run()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00299">NEElementwiseComparisonStatic&lt; op &gt;::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00300">CLElementwiseMin::run()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00354">CLElementwiseSquaredDiff::run()</a>, and <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00408">CLElementwisePower::run()</a>.</p>

</div>
</div>
<a id="a644718bb2fb240de962dc3c9a1fdf0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a644718bb2fb240de962dc3c9a1fdf0dc">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if pack is empty. </p>
<dl class="section return"><dt>Returns</dt><dd>True if empty else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> _pack.empty();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="src_2common_2_tensor_pack_8cpp_source.xhtml#l00055">TensorPack::empty()</a>, <a class="el" href="_cpu_dequantize_8cpp_source.xhtml#l00050">CpuDequantize::run()</a>, <a class="el" href="_cpu_quantize_8cpp_source.xhtml#l00055">CpuQuantize::run()</a>, <a class="el" href="_cpu_reshape_8cpp_source.xhtml#l00048">CpuReshape::run()</a>, <a class="el" href="_cl_dequantize_8cpp_source.xhtml#l00050">ClDequantize::run()</a>, <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00052">CpuActivation::run()</a>, <a class="el" href="_cl_quantize_8cpp_source.xhtml#l00050">ClQuantize::run()</a>, <a class="el" href="_c_l_operator_8cpp_source.xhtml#l00037">ICLOperator::run()</a>, <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00041">INEOperator::run()</a>, <a class="el" href="_cpu_scale_8cpp_source.xhtml#l00282">CpuScale::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_scale_8cpp_source.xhtml#l00061">ClScale::run()</a>, <a class="el" href="_cpu_pool3d_8cpp_source.xhtml#l00060">CpuPool3d::run()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00147">CpuConcatenate::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00224">ClConcatenate::run()</a>, <a class="el" href="_cpu_pool2d_8cpp_source.xhtml#l00111">CpuPool2d::run()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00105">CpuDepthwiseConv2dAssemblyDispatch::run()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00176">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_cpu_mul_8cpp_source.xhtml#l00065">CpuMul::run()</a>, <a class="el" href="_cpu_mul_8cpp_source.xhtml#l00094">CpuComplexMul::run()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00321">NELogicalKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00106">CpuFloorKernel::run_op()</a>, <a class="el" href="_cpu_gemm_interleave4x4_kernel_8cpp_source.xhtml#l00075">CpuGemmInterleave4x4Kernel::run_op()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00324">CpuActivationKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_addition_kernel_8cpp_source.xhtml#l00088">CpuGemmMatrixAdditionKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00318">CpuGemmLowpQuantizeDownInt32ScaleKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00159">CpuPool2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00182">CpuAddKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00212">CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00225">CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00224">CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00327">CpuDepthwiseConv2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_gemm_transpose1x_w_kernel_8cpp_source.xhtml#l00078">CpuGemmTranspose1xWKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_multiply_kernel_8cpp_source.xhtml#l00186">CpuGemmMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cpu_add_mul_add_kernel_8cpp_source.xhtml#l00178">CpuAddMulAddKernel::run_op()</a>, and <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00412">ClIm2ColKernel::run_op()</a>.</p>

</div>
</div>
<a id="a000c70e9839ed364ab7343de880a4d35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a000c70e9839ed364ab7343de880a4d35">&#9670;&nbsp;</a></span>get_const_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> * get_const_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get constant tensor of a given id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">if</span> (it != _pack.end())</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">return</span> it-&gt;second.ctensor != <span class="keyword">nullptr</span> ? it-&gt;second.ctensor : it-&gt;second.tensor;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_scale_8cpp_source.xhtml#l00213">CpuScale::prepare()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00216">CpuReshapeKernel::prepare()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00114">CpuDepthwiseConv2dAssemblyDispatch::prepare()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00223">CpuGemmDirectConv2d::prepare()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00422">CpuWinogradConv2d::prepare()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00634">ClFullyConnected::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00877">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00894">ClGemm::prepare()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00296">ClWinogradConv2d::prepare()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00529">CpuFullyConnected::prepare()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00639">ClGemmConv2d::prepare()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00694">CpuGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00885">CpuGemmConv2d::prepare()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00034">CpuElementwiseBase::run()</a>, <a class="el" href="_cpu_elementwise_unary_8cpp_source.xhtml#l00049">CpuElementwiseUnary::run()</a>, <a class="el" href="_cl_p_relu_8cpp_source.xhtml#l00050">ClPRelu::run()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00147">CpuConcatenate::run()</a>, <a class="el" href="_cpu_add_mul_add_8cpp_source.xhtml#l00104">CpuAddMulAdd::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00224">ClConcatenate::run()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00176">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_cpu_mat_mul_8cpp_source.xhtml#l00255">CpuMatMul::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00098">ClGemmLowpOutputStage::run()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00356">CpuWinogradConv2d::run()</a>, <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00136">CpuDirectConv2d::run()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00579">ClFullyConnected::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00759">ClGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00786">ClGemm::run()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00490">CpuFullyConnected::run()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00579">ClGemmConv2d::run()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00552">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00403">CpuGemm::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00797">CpuGemmConv2d::run()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00291">CpuElementwiseKernel&lt; CpuArithmeticKernel &gt;::run_op()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00324">ClElementwiseKernel::run_op()</a>, <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>, <a class="el" href="_cpu_dequantize_kernel_8cpp_source.xhtml#l00381">CpuDequantizeKernel::run_op()</a>, <a class="el" href="_cpu_transpose_kernel_8cpp_source.xhtml#l00787">CpuTransposeKernel::run_op()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00192">CpuReshapeKernel::run_op()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00122">CpuCopyKernel::run_op()</a>, <a class="el" href="_cl_dequantize_kernel_8cpp_source.xhtml#l00131">ClDequantizeKernel::run_op()</a>, <a class="el" href="_cl_floor_kernel_8cpp_source.xhtml#l00104">ClFloorKernel::run_op()</a>, <a class="el" href="_cl_reshape_kernel_8cpp_source.xhtml#l00105">ClReshapeKernel::run_op()</a>, <a class="el" href="_cl_transpose_kernel_8cpp_source.xhtml#l00128">ClTransposeKernel::run_op()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00256">CpuPermuteKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00202">CpuConcatenateBatchKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00125">CpuLogits1DMaxKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00079">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00085">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00147">ClWidthConcatenate2TensorsKernel::run_op()</a>, <a class="el" href="_cpu_quantize_kernel_8cpp_source.xhtml#l00289">CpuQuantizeKernel::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00038">CpuWinogradConv2dTransformInputKernel::run_op()</a>, <a class="el" href="_cl_copy_kernel_8cpp_source.xhtml#l00144">ClCopyKernel::run_op()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00170">ClElementWiseUnaryKernel::run_op()</a>, <a class="el" href="_cl_fill_kernel_8cpp_source.xhtml#l00104">ClFillKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate_kernel_8cpp_source.xhtml#l00123">ClWidthConcatenateKernel::run_op()</a>, <a class="el" href="_cl_height_concatenate_kernel_8cpp_source.xhtml#l00126">ClHeightConcatenateKernel::run_op()</a>, <a class="el" href="_cl_quantize_kernel_8cpp_source.xhtml#l00163">ClQuantizeKernel::run_op()</a>, <a class="el" href="_cl_scale_kernel_8cpp_source.xhtml#l00231">ClScaleKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00321">NELogicalKernel::run_op()</a>, <a class="el" href="_cl_pool3d_kernel_8cpp_source.xhtml#l00254">ClPool3dKernel::run_op()</a>, <a class="el" href="_cl_batch_concatenate_kernel_8cpp_source.xhtml#l00138">ClBatchConcatenateKernel::run_op()</a>, <a class="el" href="_cl_depth_concatenate_kernel_8cpp_source.xhtml#l00124">ClDepthConcatenateKernel::run_op()</a>, <a class="el" href="_cl_transposed_convolution_kernel_8cpp_source.xhtml#l00260">ClTransposedConvolutionKernel::run_op()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00250">ClActivationKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00200">CpuConcatenateDepthKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00106">CpuFloorKernel::run_op()</a>, <a class="el" href="_cl_permute_kernel_8cpp_source.xhtml#l00129">ClPermuteKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00195">CpuGemmLowpMatrixAReductionKernel::run_op()</a>, <a class="el" href="_cl_pool2d_kernel_8cpp_source.xhtml#l00330">ClPool2dKernel::run_op()</a>, <a class="el" href="_cl_softmax_kernel_8cpp_source.xhtml#l00184">ClSoftmaxKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_kernel_8cpp_source.xhtml#l00382">CpuPool2dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00752">CpuGemmLowpMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00248">CpuElementwiseUnaryKernel::run_op()</a>, <a class="el" href="_cpu_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00090">CpuConvertFullyConnectedWeightsKernel::run_op()</a>, <a class="el" href="_cpu_pool3d_kernel_8cpp_source.xhtml#l00161">CpuPool3dKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_lowp_native_m_m_u_l_kernel_8cpp_source.xhtml#l00230">ClMatMulLowpNativeMMULKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00182">ClWidthConcatenate4TensorsKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00147">CpuDirectConv2dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_interleave4x4_kernel_8cpp_source.xhtml#l00075">CpuGemmInterleave4x4Kernel::run_op()</a>, <a class="el" href="_cl_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00115">ClConvertFullyConnectedWeightsKernel::run_op()</a>, <a class="el" href="_cl_winograd_input_transform_kernel_8cpp_source.xhtml#l00264">ClWinogradInputTransformKernel::run_op()</a>, <a class="el" href="_cl_winograd_filter_transform_kernel_8cpp_source.xhtml#l00165">ClWinogradFilterTransformKernel::run_op()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00324">CpuActivationKernel::run_op()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00196">CpuSubKernel::run_op()</a>, <a class="el" href="_cpu_max_unpooling_layer_kernel_8cpp_source.xhtml#l00124">CpuMaxUnpoolingLayerKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv2d_output_stage_kernel_8cpp_source.xhtml#l00521">CpuDirectConv2dOutputStageKernel::run_op()</a>, <a class="el" href="_cl_gemm_reshape_lhs_matrix_kernel_8cpp_source.xhtml#l00193">ClGemmReshapeLhsMatrixKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_native_kernel_8cpp_source.xhtml#l00238">ClMatMulNativeKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_addition_kernel_8cpp_source.xhtml#l00088">CpuGemmMatrixAdditionKernel::run_op()</a>, <a class="el" href="_cl_cast_kernel_8cpp_source.xhtml#l00148">ClCastKernel::run_op()</a>, <a class="el" href="_cpu_col2_im_kernel_8cpp_source.xhtml#l00088">CpuCol2ImKernel::run_op()</a>, <a class="el" href="_cl_crop_kernel_8cpp_source.xhtml#l00130">ClCropKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_lowp_native_kernel_8cpp_source.xhtml#l00231">ClMatMulLowpNativeKernel::run_op()</a>, <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00271">CpuCastKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00303">ClGemmLowpMatrixMultiplyNativeKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00146">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00159">CpuPool2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00318">CpuGemmLowpQuantizeDownInt32ScaleKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00146">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00152">ClGemmLowpQuantizeDownInt32ScaleKernel::run_op()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00182">CpuAddKernel::run_op()</a>, <a class="el" href="_cl_gemm_reshape_rhs_matrix_kernel_8cpp_source.xhtml#l00169">ClGemmReshapeRhsMatrixKernel::run_op()</a>, <a class="el" href="_cl_winograd_output_transform_kernel_8cpp_source.xhtml#l00308">ClWinogradOutputTransformKernel::run_op()</a>, <a class="el" href="_cpu_weights_reshape_kernel_8cpp_source.xhtml#l00106">CpuWeightsReshapeKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00399">CpuGemmLowpOffsetContributionKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv3d_kernel_8cpp_source.xhtml#l00171">CpuDirectConv3dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00212">CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_native_kernel_8cpp_source.xhtml#l00166">CpuDepthwiseConv2dNativeKernel::run_op()</a>, <a class="el" href="_cl_col2_im_kernel_8cpp_source.xhtml#l00161">ClCol2ImKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_native_kernel_8cpp_source.xhtml#l00374">ClGemmMatrixMultiplyNativeKernel::run_op()</a>, <a class="el" href="_cl_indirect_conv2d_kernel_8cpp_source.xhtml#l00284">ClIndirectConv2dKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00273">ClGemmLowpMatrixMultiplyReshapedKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00224">CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00225">CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel_8cpp_source.xhtml#l00336">ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00327">CpuDepthwiseConv2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_gemm_transpose1x_w_kernel_8cpp_source.xhtml#l00078">CpuGemmTranspose1xWKernel::run_op()</a>, <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00500">CpuScaleKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_multiply_kernel_8cpp_source.xhtml#l00186">CpuGemmMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00194">ClGemmLowpOffsetContributionKernel::run_op()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00187">CLStridedSliceKernel::run_op()</a>, <a class="el" href="_cl_direct_conv3d_kernel_8cpp_source.xhtml#l00248">ClDirectConv3dKernel::run_op()</a>, <a class="el" href="_cpu_mul_kernel_8cpp_source.xhtml#l01945">CpuMulKernel::run_op()</a>, <a class="el" href="_cpu_add_mul_add_kernel_8cpp_source.xhtml#l00178">CpuAddMulAddKernel::run_op()</a>, <a class="el" href="_cl_weights_reshape_kernel_8cpp_source.xhtml#l00130">ClWeightsReshapeKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_native_m_m_u_l_kernel_8cpp_source.xhtml#l00199">ClMatMulNativeMMULKernel::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00072">CpuWinogradConv2dTransformOutputKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00141">ClGemmLowpMatrixAReductionKernel::run_op()</a>, <a class="el" href="_cl_direct_conv2d_kernel_8cpp_source.xhtml#l00455">ClDirectConv2dKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel_8cpp_source.xhtml#l00462">ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00253">ClGemmLowpOffsetContributionOutputStageKernel::run_op()</a>, <a class="el" href="_cl_mul_kernel_8cpp_source.xhtml#l00299">ClMulKernel::run_op()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00183">CLFillBorderKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00501">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00350">ClGemmMatrixMultiplyReshapedOnlyRhsKernel::run_op()</a>, <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00412">ClIm2ColKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00145">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_cpu_im2_col_kernel_8cpp_source.xhtml#l00396">CpuIm2ColKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00340">ClGemmMatrixMultiplyReshapedKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00272">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00961">CpuGemmLowpOffsetContributionOutputStageKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00400">CpuGemmLowpMatrixBReductionKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00219">ClGemmLowpMatrixBReductionKernel::run_op()</a>, <a class="el" href="_cl_mul_kernel_8cpp_source.xhtml#l00434">ClComplexMulKernel::run_op()</a>, and <a class="el" href="_cpu_mul_kernel_8cpp_source.xhtml#l02023">CpuComplexMulKernel::run_op()</a>.</p>

</div>
</div>
<a id="a341a4c8a24d190d39504656989573d91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a341a4c8a24d190d39504656989573d91">&#9670;&nbsp;</a></span>get_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> * get_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get tensor of a given id from the pac. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pointer to the tensor if exist and is non-const else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00063">63</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">auto</span> it = _pack.find(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> it != _pack.end() ? it-&gt;second.tensor : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00042">CLAuxTensorHandler::CLAuxTensorHandler()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="src_2common_2_tensor_pack_8cpp_source.xhtml#l00065">TensorPack::get_tensor()</a>, <a class="el" href="_cpu_scale_8cpp_source.xhtml#l00213">CpuScale::prepare()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00216">CpuReshapeKernel::prepare()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00114">CpuDepthwiseConv2dAssemblyDispatch::prepare()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00223">CpuGemmDirectConv2d::prepare()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00422">CpuWinogradConv2d::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00894">ClGemm::prepare()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00296">ClWinogradConv2d::prepare()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00639">ClGemmConv2d::prepare()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00694">CpuGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_cl_p_relu_8cpp_source.xhtml#l00050">ClPRelu::run()</a>, <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00147">CpuConcatenate::run()</a>, <a class="el" href="_cpu_add_mul_add_8cpp_source.xhtml#l00104">CpuAddMulAdd::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00224">ClConcatenate::run()</a>, <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00176">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>, <a class="el" href="_cpu_mat_mul_8cpp_source.xhtml#l00255">CpuMatMul::run()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00210">CpuGemmDirectConv2d::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00098">ClGemmLowpOutputStage::run()</a>, <a class="el" href="_cpu_direct_conv3d_8cpp_source.xhtml#l00095">CpuDirectConv3d::run()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00356">CpuWinogradConv2d::run()</a>, <a class="el" href="_cpu_direct_conv2d_8cpp_source.xhtml#l00136">CpuDirectConv2d::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00759">ClGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00786">ClGemm::run()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00579">ClGemmConv2d::run()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00552">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00403">CpuGemm::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00797">CpuGemmConv2d::run()</a>, <a class="el" href="_cpu_fill_kernel_8cpp_source.xhtml#l00051">CpuFillKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00291">CpuElementwiseKernel&lt; CpuArithmeticKernel &gt;::run_op()</a>, <a class="el" href="_cl_elementwise_kernel_8cpp_source.xhtml#l00324">ClElementwiseKernel::run_op()</a>, <a class="el" href="_cpu_dequantize_kernel_8cpp_source.xhtml#l00381">CpuDequantizeKernel::run_op()</a>, <a class="el" href="_cpu_convert_quantized_signedness_kernel_8cpp_source.xhtml#l00093">CpuConvertQuantizedSignednessKernel::run_op()</a>, <a class="el" href="_cpu_transpose_kernel_8cpp_source.xhtml#l00787">CpuTransposeKernel::run_op()</a>, <a class="el" href="_cpu_copy_kernel_8cpp_source.xhtml#l00122">CpuCopyKernel::run_op()</a>, <a class="el" href="_cpu_reshape_kernel_8cpp_source.xhtml#l00192">CpuReshapeKernel::run_op()</a>, <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00238">ClKernelRuntime::run_op()</a>, <a class="el" href="_cl_dequantize_kernel_8cpp_source.xhtml#l00131">ClDequantizeKernel::run_op()</a>, <a class="el" href="_cl_floor_kernel_8cpp_source.xhtml#l00104">ClFloorKernel::run_op()</a>, <a class="el" href="_cl_reshape_kernel_8cpp_source.xhtml#l00105">ClReshapeKernel::run_op()</a>, <a class="el" href="_cl_transpose_kernel_8cpp_source.xhtml#l00128">ClTransposeKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_batch_kernel_8cpp_source.xhtml#l00202">CpuConcatenateBatchKernel::run_op()</a>, <a class="el" href="_cpu_permute_kernel_8cpp_source.xhtml#l00256">CpuPermuteKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00125">CpuLogits1DMaxKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00085">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00079">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00147">ClWidthConcatenate2TensorsKernel::run_op()</a>, <a class="el" href="_cpu_quantize_kernel_8cpp_source.xhtml#l00289">CpuQuantizeKernel::run_op()</a>, <a class="el" href="_cl_copy_kernel_8cpp_source.xhtml#l00144">ClCopyKernel::run_op()</a>, <a class="el" href="_cl_elementwise_unary_kernel_8cpp_source.xhtml#l00170">ClElementWiseUnaryKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate_kernel_8cpp_source.xhtml#l00123">ClWidthConcatenateKernel::run_op()</a>, <a class="el" href="_cl_height_concatenate_kernel_8cpp_source.xhtml#l00126">ClHeightConcatenateKernel::run_op()</a>, <a class="el" href="_cl_quantize_kernel_8cpp_source.xhtml#l00163">ClQuantizeKernel::run_op()</a>, <a class="el" href="_cl_scale_kernel_8cpp_source.xhtml#l00231">ClScaleKernel::run_op()</a>, <a class="el" href="_n_e_logical_kernel_8cpp_source.xhtml#l00321">NELogicalKernel::run_op()</a>, <a class="el" href="_cl_pool3d_kernel_8cpp_source.xhtml#l00254">ClPool3dKernel::run_op()</a>, <a class="el" href="_cl_batch_concatenate_kernel_8cpp_source.xhtml#l00138">ClBatchConcatenateKernel::run_op()</a>, <a class="el" href="_cl_depth_concatenate_kernel_8cpp_source.xhtml#l00124">ClDepthConcatenateKernel::run_op()</a>, <a class="el" href="_cl_transposed_convolution_kernel_8cpp_source.xhtml#l00260">ClTransposedConvolutionKernel::run_op()</a>, <a class="el" href="_cl_activation_kernel_8cpp_source.xhtml#l00250">ClActivationKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_depth_kernel_8cpp_source.xhtml#l00200">CpuConcatenateDepthKernel::run_op()</a>, <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00106">CpuFloorKernel::run_op()</a>, <a class="el" href="_cl_permute_kernel_8cpp_source.xhtml#l00129">ClPermuteKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00195">CpuGemmLowpMatrixAReductionKernel::run_op()</a>, <a class="el" href="_cl_pool2d_kernel_8cpp_source.xhtml#l00330">ClPool2dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00752">CpuGemmLowpMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_kernel_8cpp_source.xhtml#l00382">CpuPool2dKernel::run_op()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00248">CpuElementwiseUnaryKernel::run_op()</a>, <a class="el" href="_cl_softmax_kernel_8cpp_source.xhtml#l00184">ClSoftmaxKernel::run_op()</a>, <a class="el" href="_cpu_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00090">CpuConvertFullyConnectedWeightsKernel::run_op()</a>, <a class="el" href="_cpu_pool3d_kernel_8cpp_source.xhtml#l00161">CpuPool3dKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_lowp_native_m_m_u_l_kernel_8cpp_source.xhtml#l00230">ClMatMulLowpNativeMMULKernel::run_op()</a>, <a class="el" href="_cl_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00182">ClWidthConcatenate4TensorsKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00147">CpuDirectConv2dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_interleave4x4_kernel_8cpp_source.xhtml#l00075">CpuGemmInterleave4x4Kernel::run_op()</a>, <a class="el" href="_cl_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00115">ClConvertFullyConnectedWeightsKernel::run_op()</a>, <a class="el" href="_cl_winograd_input_transform_kernel_8cpp_source.xhtml#l00264">ClWinogradInputTransformKernel::run_op()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00324">CpuActivationKernel::run_op()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00196">CpuSubKernel::run_op()</a>, <a class="el" href="_cl_winograd_filter_transform_kernel_8cpp_source.xhtml#l00165">ClWinogradFilterTransformKernel::run_op()</a>, <a class="el" href="_cpu_max_unpooling_layer_kernel_8cpp_source.xhtml#l00124">CpuMaxUnpoolingLayerKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv2d_output_stage_kernel_8cpp_source.xhtml#l00521">CpuDirectConv2dOutputStageKernel::run_op()</a>, <a class="el" href="_cl_gemm_reshape_lhs_matrix_kernel_8cpp_source.xhtml#l00193">ClGemmReshapeLhsMatrixKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_native_kernel_8cpp_source.xhtml#l00238">ClMatMulNativeKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_addition_kernel_8cpp_source.xhtml#l00088">CpuGemmMatrixAdditionKernel::run_op()</a>, <a class="el" href="_cl_cast_kernel_8cpp_source.xhtml#l00148">ClCastKernel::run_op()</a>, <a class="el" href="_cl_crop_kernel_8cpp_source.xhtml#l00130">ClCropKernel::run_op()</a>, <a class="el" href="_cpu_col2_im_kernel_8cpp_source.xhtml#l00088">CpuCol2ImKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_lowp_native_kernel_8cpp_source.xhtml#l00231">ClMatMulLowpNativeKernel::run_op()</a>, <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00271">CpuCastKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00303">ClGemmLowpMatrixMultiplyNativeKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00146">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00318">CpuGemmLowpQuantizeDownInt32ScaleKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00159">CpuPool2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00182">CpuAddKernel::run_op()</a>, <a class="el" href="_cl_gemm_reshape_rhs_matrix_kernel_8cpp_source.xhtml#l00169">ClGemmReshapeRhsMatrixKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00146">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::run_op()</a>, <a class="el" href="_cl_indirect_conv2d_address_precalculation_kernel_8cpp_source.xhtml#l00154">ClIndirectConv2dAddressPrecalculationKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00152">ClGemmLowpQuantizeDownInt32ScaleKernel::run_op()</a>, <a class="el" href="_cl_winograd_output_transform_kernel_8cpp_source.xhtml#l00308">ClWinogradOutputTransformKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00399">CpuGemmLowpOffsetContributionKernel::run_op()</a>, <a class="el" href="_cpu_weights_reshape_kernel_8cpp_source.xhtml#l00106">CpuWeightsReshapeKernel::run_op()</a>, <a class="el" href="_cpu_direct_conv3d_kernel_8cpp_source.xhtml#l00171">CpuDirectConv3dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int16_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00212">CpuGemmLowpQuantizeDownInt32ToInt16ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_native_kernel_8cpp_source.xhtml#l00166">CpuDepthwiseConv2dNativeKernel::run_op()</a>, <a class="el" href="_cl_col2_im_kernel_8cpp_source.xhtml#l00161">ClCol2ImKernel::run_op()</a>, <a class="el" href="_cl_indirect_conv2d_kernel_8cpp_source.xhtml#l00284">ClIndirectConv2dKernel::run_op()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00177">NEFillBorderKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_native_kernel_8cpp_source.xhtml#l00374">ClGemmMatrixMultiplyNativeKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00273">ClGemmLowpMatrixMultiplyReshapedKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00225">CpuGemmLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_to_int8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00224">CpuGemmLowpQuantizeDownInt32ToInt8ScaleByFixedPointKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00327">CpuDepthwiseConv2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel_8cpp_source.xhtml#l00336">ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel::run_op()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00187">CLStridedSliceKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00194">ClGemmLowpOffsetContributionKernel::run_op()</a>, <a class="el" href="_cpu_gemm_transpose1x_w_kernel_8cpp_source.xhtml#l00078">CpuGemmTranspose1xWKernel::run_op()</a>, <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00500">CpuScaleKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_multiply_kernel_8cpp_source.xhtml#l00186">CpuGemmMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cl_direct_conv3d_kernel_8cpp_source.xhtml#l00248">ClDirectConv3dKernel::run_op()</a>, <a class="el" href="_cpu_add_mul_add_kernel_8cpp_source.xhtml#l00178">CpuAddMulAddKernel::run_op()</a>, <a class="el" href="_cpu_mul_kernel_8cpp_source.xhtml#l01945">CpuMulKernel::run_op()</a>, <a class="el" href="_cl_weights_reshape_kernel_8cpp_source.xhtml#l00130">ClWeightsReshapeKernel::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00072">CpuWinogradConv2dTransformOutputKernel::run_op()</a>, <a class="el" href="_cl_mat_mul_native_m_m_u_l_kernel_8cpp_source.xhtml#l00199">ClMatMulNativeMMULKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00141">ClGemmLowpMatrixAReductionKernel::run_op()</a>, <a class="el" href="_cl_direct_conv2d_kernel_8cpp_source.xhtml#l00455">ClDirectConv2dKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel_8cpp_source.xhtml#l00462">ClGemmLowpMatrixMultiplyReshapedOnlyRhsMMULKernel::run_op()</a>, <a class="el" href="_cl_mul_kernel_8cpp_source.xhtml#l00299">ClMulKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00253">ClGemmLowpOffsetContributionOutputStageKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00501">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00350">ClGemmMatrixMultiplyReshapedOnlyRhsKernel::run_op()</a>, <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00412">ClIm2ColKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00145">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_cpu_im2_col_kernel_8cpp_source.xhtml#l00396">CpuIm2ColKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00340">ClGemmMatrixMultiplyReshapedKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00961">CpuGemmLowpOffsetContributionOutputStageKernel::run_op()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00272">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00400">CpuGemmLowpMatrixBReductionKernel::run_op()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00219">ClGemmLowpMatrixBReductionKernel::run_op()</a>, <a class="el" href="_cl_mul_kernel_8cpp_source.xhtml#l00434">ClComplexMulKernel::run_op()</a>, and <a class="el" href="_cpu_mul_kernel_8cpp_source.xhtml#l02023">CpuComplexMulKernel::run_op()</a>.</p>

</div>
</div>
<a id="a2475b3be2ed6a5ef5654491aa6b7ca48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2475b3be2ed6a5ef5654491aa6b7ca48">&#9670;&nbsp;</a></span>remove_tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void remove_tensor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove the tensor stored with the given id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>ID of tensor to remove </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    _pack.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00086">CLAuxTensorHandler::~CLAuxTensorHandler()</a>, and <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00097">CpuAuxTensorHandler::~CpuAuxTensorHandler()</a>.</p>

</div>
</div>
<a id="a259cb5a711406a8c3e5d937eb9350cca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259cb5a711406a8c3e5d937eb9350cca">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pack size accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of tensors registered to the pack </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> _pack.size();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_concatenate_8cpp_source.xhtml#l00147">CpuConcatenate::run()</a>, <a class="el" href="_cl_concatenate_8cpp_source.xhtml#l00224">ClConcatenate::run()</a>, and <a class="el" href="src_2common_2_tensor_pack_8cpp_source.xhtml#l00050">TensorPack::size()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_i_tensor_pack_8h_source.xhtml">ITensorPack.h</a></li>
<li>src/core/<a class="el" href="_i_tensor_pack_8cpp_source.xhtml">ITensorPack.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a6d8078b635739e84400cf8240a2993e7"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">arm_compute::ITensorPack::add_tensor</a></div><div class="ttdeci">void add_tensor(int id, ITensor *tensor)</div><div class="ttdoc">Add tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00038">ITensorPack.cpp:38</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:14 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
