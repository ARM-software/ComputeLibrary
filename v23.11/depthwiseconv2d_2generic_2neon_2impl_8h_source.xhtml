<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/depthwiseconv2d/generic/neon/impl.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">impl.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="depthwiseconv2d_2generic_2neon_2impl_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_CORE_KERNELS_DEPTWISECONV2DNATIVE_IMPL_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_CORE_KERNELS_DEPTWISECONV2DNATIVE_IMPL_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="wrapper_8h.xhtml">src/core/NEON/wrapper/wrapper.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">struct </span>ConvolutionInfo;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">   36</a></span>&#160;constexpr <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a> = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">   37</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">   38</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a2065fcea8e34c2f3ee039d5a0332348b">   39</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2065fcea8e34c2f3ee039d5a0332348b">channel_idx</a> = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">   41</a></span>&#160;constexpr <span class="keyword">auto</span>   <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>      = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 0, 0);</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#ab11d49bc60990d21ee07967c219129ae">   42</a></span>&#160;constexpr <span class="keyword">auto</span>   <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ab11d49bc60990d21ee07967c219129ae">dim_single_unit_step</a> = <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1);</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a33ac5aaccfb4b36763818ca148b44c6c">   43</a></span>&#160;constexpr <span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a33ac5aaccfb4b36763818ca148b44c6c">vector_size</a>          = 8;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">   45</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">DepthwiseConvolutionRunInfo</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adcd0bbe5747f9335c9dc266238950cef">   47</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adcd0bbe5747f9335c9dc266238950cef">num_read_elements_per_iteration</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a33ee2954a8e8fb991cd139c9345841c3">   48</a></span>&#160;    <span class="keyword">const</span> uint32_t <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a33ee2954a8e8fb991cd139c9345841c3">x_start</a>;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a076dad6d7efce7170dcd2efecc69d1e6">   49</a></span>&#160;    <span class="keyword">const</span> uint32_t <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a076dad6d7efce7170dcd2efecc69d1e6">x_end</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#aeca6e77ae523bf2830297882610f8770">   50</a></span>&#160;    <span class="keyword">const</span> uint32_t <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#aeca6e77ae523bf2830297882610f8770">x_step</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6d863d841dad4e2e6e00afeff3d6f00a">   51</a></span>&#160;    <span class="keyword">const</span> uint32_t <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6d863d841dad4e2e6e00afeff3d6f00a">x_leftover_start</a>;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ad2115fbd2edcebb19a865eff2f739b18">   52</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ad2115fbd2edcebb19a865eff2f739b18">input_stride_y</a>;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a0f76c5e0d4eab98313e521c900cd3dae">   53</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a0f76c5e0d4eab98313e521c900cd3dae">input_stride_z</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abd1e59af82140ba461f52a41c00cbf08">   54</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abd1e59af82140ba461f52a41c00cbf08">input_max_offset</a>;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abe4640d429ac25799126454625834b7d">   55</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abe4640d429ac25799126454625834b7d">weights_width</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab999f1a2cf0d5e438f487fabdc9e7430">   56</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab999f1a2cf0d5e438f487fabdc9e7430">weights_height</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acad64b9547ecd5d25282b7f80ab7fde0">   57</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acad64b9547ecd5d25282b7f80ab7fde0">weights_stride_y</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac49e64291e5b2d8a1ad1e686d775d59a">   58</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac49e64291e5b2d8a1ad1e686d775d59a">weights_stride_z</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a620aa3d75e6df0a30c91a941c7992924">   59</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a620aa3d75e6df0a30c91a941c7992924">conv_stride_x</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adb7f0b77ccd8685db049b316b43de071">   60</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adb7f0b77ccd8685db049b316b43de071">conv_stride_y</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac6515eeaf60dfe8e41b0558047ed04f1">   61</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac6515eeaf60dfe8e41b0558047ed04f1">conv_pad_left</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acb5fca229a41092d90845d8ee30fcf91">   62</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acb5fca229a41092d90845d8ee30fcf91">conv_pad_top</a>;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">   63</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a12b51e0ffb6e0b213a91b2067180e647">   64</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a1585c725d13408e5629a216c2d2e8b01">   65</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span>   <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a1585c725d13408e5629a216c2d2e8b01">input_depth</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6c32875c642d0ce07e37303b23a7d772">   67</a></span>&#160;    <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6c32875c642d0ce07e37303b23a7d772">DepthwiseConvolutionRunInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>   &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>   &amp;weights,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>        &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                uint32_t             depth_multiplier = 1) <span class="comment">// NOLINT</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        : <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adcd0bbe5747f9335c9dc266238950cef">num_read_elements_per_iteration</a>(</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;              (depth_multiplier == 1 ? (<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a33ac5aaccfb4b36763818ca148b44c6c">vector_size</a> / <a class="code" href="namespacearm__compute.xhtml#a34b06c0cd94808a77b697e79880b84b0">element_size_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>())) : 1)),</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a33ee2954a8e8fb991cd139c9345841c3">x_start</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>.x().start()),</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a076dad6d7efce7170dcd2efecc69d1e6">x_end</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>.x().<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>()),</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#aeca6e77ae523bf2830297882610f8770">x_step</a>(static_cast&lt;uint32_t&gt;(<a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adcd0bbe5747f9335c9dc266238950cef">num_read_elements_per_iteration</a> * depth_multiplier)),</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6d863d841dad4e2e6e00afeff3d6f00a">x_leftover_start</a>(std::max(static_cast&lt;int32_t&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>.x().<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() + 1) - static_cast&lt;int32_t&gt;(<a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#aeca6e77ae523bf2830297882610f8770">x_step</a>), int32_t(0))),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ad2115fbd2edcebb19a865eff2f739b18">input_stride_y</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.strides_in_bytes().y()),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a0f76c5e0d4eab98313e521c900cd3dae">input_stride_z</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.strides_in_bytes().z()),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abd1e59af82140ba461f52a41c00cbf08">input_max_offset</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.strides_in_bytes().z() * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>) -</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                           (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.padding().bottom + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.padding().top) * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.strides_in_bytes().y()),</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abe4640d429ac25799126454625834b7d">weights_width</a>(weights.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>)),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab999f1a2cf0d5e438f487fabdc9e7430">weights_height</a>(weights.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)),</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acad64b9547ecd5d25282b7f80ab7fde0">weights_stride_y</a>(weights.strides_in_bytes().y()),</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac49e64291e5b2d8a1ad1e686d775d59a">weights_stride_z</a>(weights.strides_in_bytes().z()),</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a620aa3d75e6df0a30c91a941c7992924">conv_stride_x</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.stride().first),</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adb7f0b77ccd8685db049b316b43de071">conv_stride_y</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.stride().second),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac6515eeaf60dfe8e41b0558047ed04f1">conv_pad_left</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_left()),</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acb5fca229a41092d90845d8ee30fcf91">conv_pad_top</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>.pad_top()),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">height_idx</a>)),</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">width_idx</a>)),</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;          <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a1585c725d13408e5629a216c2d2e8b01">input_depth</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.dimension(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a2065fcea8e34c2f3ee039d5a0332348b">channel_idx</a>))</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;};</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">   97</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">is_valid_input_region</a>(int32_t                            base_w,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                  uint32_t                           base_h,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                  uint32_t                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                  uint32_t                           h,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">DepthwiseConvolutionRunInfo</a> &amp;run_info,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>                      &amp;dilation)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> int32_t current_h  = base_h + h * dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>    is_valid_h = current_h &gt;= 0 &amp;&amp; current_h &lt; static_cast&lt;int32_t&gt;(run_info.<a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">input_height</a>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">const</span> int32_t current_w  = base_w + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>    is_valid_w = current_w &gt;= 0 &amp;&amp; current_w &lt; static_cast&lt;int32_t&gt;(run_info.<a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a12b51e0ffb6e0b213a91b2067180e647">input_width</a>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> is_valid_h &amp;&amp; is_valid_w;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a0e8b7ad27a89ed894f2cc8b732a7b032">  114</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a0e8b7ad27a89ed894f2cc8b732a7b032">depthwise_loop_multiplier1_fp</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *weights,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *biases,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                   <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>             *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        &amp;dilation,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>        &amp;window,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                   <span class="keywordtype">bool</span>                 has_biases)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    constexpr <span class="keyword">auto</span> element_per_vector = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a33ac5aaccfb4b36763818ca148b44c6c">vector_size</a> / <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">using</span> VectorType                  = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector&lt;T, element_per_vector&gt;::type</a>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">using</span> TagType                     = <span class="keyword">typename</span> <a class="code" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector&lt;T, element_per_vector&gt;::tag_type</a>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> run_info = <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">DepthwiseConvolutionRunInfo</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;info(), *weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, window);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">const</span> VectorType zero_vector = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0), TagType{});</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> execution_window = window;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    execution_window.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ab11d49bc60990d21ee07967c219129ae">dim_single_unit_step</a>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_input = window;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_weights = win_input;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    win_weights.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a60f2e7a76af978d4eb6be4ac6e8044d1">Window::DimW</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_output = window;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    win_output.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> input_it(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, win_input);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> weights_it(weights, win_weights);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output_it(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, win_output);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> biases_it{};</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (has_biases)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        biases_it = <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a>(biases, win_weights);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        execution_window,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;<span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keyword">const</span> int32_t input_y           = <span class="keywordtype">id</span>.y() * run_info.conv_stride_x - run_info.conv_pad_left;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">const</span> int32_t input_z           = <span class="keywordtype">id</span>.z() * run_info.conv_stride_y - run_info.conv_pad_top;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keyword">const</span> int64_t base_input_offset = input_y * run_info.input_stride_y + input_z * run_info.input_stride_z;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">auto</span> <span class="keyword">const</span> base_weights_ptr = weights_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            uint32_t   x                = run_info.x_start;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0886942393a3ba0dfefaa7516b159784">for</a> (; x &lt; run_info.x_leftover_start; x += run_info.x_step)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                VectorType acc          = zero_vector;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="keyword">auto</span>       weights_ptr  = base_weights_ptr;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                int64_t    input_offset = base_input_offset;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">for</span> (uint32_t h = 0; h &lt; run_info.weights_height; ++h)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    int64_t offs = input_offset + x * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    <span class="keywordflow">for</span> (uint32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> &lt; run_info.weights_width; ++<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> is_valid_region = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">is_valid_input_region</a>(input_y, input_z, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>, h, run_info, dilation);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> input_vals =</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                            is_valid_region</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                ? <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">wrapper::vload</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                      input_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>() + std::min(<span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(offs), run_info.input_max_offset)))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                : zero_vector;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> weights_vals =</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">wrapper::vload</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(weights_ptr + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * run_info.weights_stride_y) + x);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        acc = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">wrapper::vmla</a>(acc, weights_vals, input_vals);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                        offs += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>() * run_info.input_stride_y;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    weights_ptr += run_info.weights_stride_z;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    input_offset += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>() * run_info.input_stride_z;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">if</span> (has_biases)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> biases_vals = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">wrapper::vload</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(biases_it.ptr()) + x);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    acc                    = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(acc, biases_vals);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) + x, acc);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">for</span> (; x &lt; run_info.x_end; ++x)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keyword">auto</span>    acc_scalar   = T{0};</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keyword">auto</span>    weights_ptr  = base_weights_ptr;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                int64_t input_offset = base_input_offset;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> h = 0; h &lt; run_info.weights_height; ++h)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    int64_t offs = input_offset + x * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> &lt; run_info.weights_width; ++<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> is_valid_region = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">is_valid_input_region</a>(input_y, input_z, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>, h, run_info, dilation);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> input_vals =</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                            is_valid_region</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                ? *<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(input_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>() +</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                                         std::min(<span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(offs), run_info.input_max_offset))</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                : 0;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> weights_vals =</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                            *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(weights_ptr + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * run_info.weights_stride_y) + x);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        acc_scalar += (input_vals * weights_vals);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                        offs += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>() * run_info.input_stride_y;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    weights_ptr += run_info.weights_stride_z;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    input_offset += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>() * run_info.input_stride_z;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="keywordflow">if</span> (has_biases)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> biases_vals = *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(biases_it.ptr()) + x);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    acc_scalar += biases_vals;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>()) + x) = acc_scalar;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        },</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        input_it, weights_it, biases_it, output_it);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a290a58727fef5da244133a6ff8270fbd">  244</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a290a58727fef5da244133a6ff8270fbd">depthwise_loop_generic_fp</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *weights,</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *biases,</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                               <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>             *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        &amp;dilation,</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>         depth_multiplier,</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>        &amp;window,</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                               <span class="keywordtype">bool</span>                 has_biases)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;{</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> run_info =</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">DepthwiseConvolutionRunInfo</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;info(), *weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, window, depth_multiplier);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> execution_window = window;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    execution_window.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, run_info.input_depth, 1));</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_input = execution_window;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, run_info.input_depth, 1));</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    win_input.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_weights = window;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    win_weights.<a class="code" href="classarm__compute_1_1_window.xhtml#a55ed4ad2395fd25ba847cbf6c54b85e4">set_dimension_step</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, run_info.x_step);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    win_weights.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    win_weights.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    win_weights.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a60f2e7a76af978d4eb6be4ac6e8044d1">Window::DimW</a>, <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">dim_manual_loop</a>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_output = window;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    win_output.<a class="code" href="classarm__compute_1_1_window.xhtml#a55ed4ad2395fd25ba847cbf6c54b85e4">set_dimension_step</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, run_info.x_step);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> input_it(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, win_input);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> weights_it(weights, win_weights);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output_it(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, win_output);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> biases_it{};</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span> (has_biases)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        biases_it = <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a>(biases, win_weights);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        execution_window,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;<span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            std::vector&lt;T&gt; acc(depth_multiplier, <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0));</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> input_y      = <span class="keywordtype">id</span>.y() * run_info.conv_stride_x - run_info.conv_pad_left;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> input_z      = <span class="keywordtype">id</span>.z() * run_info.conv_stride_y - run_info.conv_pad_top;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordtype">int</span>       input_offset = input_y * run_info.input_stride_y + input_z * run_info.input_stride_z;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keyword">auto</span> weights_ptr = weights_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>();</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> h = 0; h &lt; run_info.weights_height; ++h)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <span class="keywordtype">int</span> offs = input_offset;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> = 0; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> &lt; run_info.weights_width; ++<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_valid_region = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">is_valid_input_region</a>(input_y, input_z, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a>, h, run_info, dilation);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> input_val =</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                        is_valid_region ? *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(input_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>() + std::min(<span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(offs),</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                                                                                            run_info.input_max_offset)))</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                        : T(0);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> m = 0; m &lt; depth_multiplier; ++m)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                    {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> weights_val =</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                            *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(weights_ptr + m * <span class="keyword">sizeof</span>(T) + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">w</a> * run_info.weights_stride_y));</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                        acc.at(m) = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#af399bedeaeb8dc177d3a301a12c3a5d0">support::cpp11::fma</a>(weights_val, input_val, acc.at(m));</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    offs += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>() * run_info.input_stride_y;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                weights_ptr += run_info.weights_stride_z;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                input_offset += dilation.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>() * run_info.input_stride_z;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="keywordflow">if</span> (has_biases)</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> m = 0; m &lt; depth_multiplier; ++m)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> biases_val = *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(biases_it.ptr() + m * <span class="keyword">sizeof</span>(T)));</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>() + m * <span class="keyword">sizeof</span>(T))) = acc.at(m) + biases_val;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> m = 0; m &lt; depth_multiplier; ++m)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output_it.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>() + m * <span class="keyword">sizeof</span>(T))) = acc.at(m);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            }</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        },</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        input_it, weights_it, biases_it, output_it);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> TW&gt;</div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#ae813f6571bf298ee67ad35c1559c7441">  340</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#ae813f6571bf298ee67ad35c1559c7441">run_depthwise_float</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *weights,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *biases,</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                         <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>          &amp;window,</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                         <span class="keywordtype">bool</span>                   has_biases,</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_convolution_info.xhtml">ConvolutionInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>        = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.pad_stride_info;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  depth_multiplier = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.depth_multiplier;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        dilation         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.dilation;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">if</span> (depth_multiplier == 1)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        depthwise_loop_multiplier1_fp&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, dilation, window, has_biases);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        depthwise_loop_generic_fp&lt;T&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>, dilation, depth_multiplier, window,</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                     has_biases);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> TW&gt;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a5a2b594dc6c251f07190189c716685ec">run_depthwise_quanitized8bit</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *weights,</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>         *biases,</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                  <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>          &amp;window,</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                  <span class="keywordtype">bool</span>                   has_biases,</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_convolution_info.xhtml">ConvolutionInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="preprocessor">#endif //define SRC_CORE_KERNELS_DEPTWISECONV2DNATIVE_IMPL_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml_aaaeb4853150b7d0e8b685fd08052924f"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">arm_compute::Size2D::y</a></div><div class="ttdeci">size_t y() const</div><div class="ttdoc">Semantic accessor for height as y.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00082">Size2D.h:82</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_ae813f6571bf298ee67ad35c1559c7441"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ae813f6571bf298ee67ad35c1559c7441">arm_compute::cpu::run_depthwise_float</a></div><div class="ttdeci">void run_depthwise_float(const ITensor *src, const ITensor *weights, const ITensor *biases, ITensor *dst, const Window &amp;window, bool has_biases, const ConvolutionInfo &amp;info)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00340">impl.h:340</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a33ac5aaccfb4b36763818ca148b44c6c"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a33ac5aaccfb4b36763818ca148b44c6c">arm_compute::cpu::vector_size</a></div><div class="ttdeci">constexpr size_t vector_size</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00043">impl.h:43</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdeci">@ CHANNEL</div><div class="ttdoc">channel</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_ac07fe0eb0607dbbd9e369137a01bb860"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ac07fe0eb0607dbbd9e369137a01bb860">arm_compute::cpu::is_valid_input_region</a></div><div class="ttdeci">bool is_valid_input_region(int32_t base_w, uint32_t base_h, uint32_t w, uint32_t h, const DepthwiseConvolutionRunInfo &amp;run_info, const Size2D &amp;dilation)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00097">impl.h:97</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a0f76c5e0d4eab98313e521c900cd3dae"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a0f76c5e0d4eab98313e521c900cd3dae">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_stride_z</a></div><div class="ttdeci">const size_t input_stride_z</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00053">impl.h:53</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_ab11d49bc60990d21ee07967c219129ae"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ab11d49bc60990d21ee07967c219129ae">arm_compute::cpu::dim_single_unit_step</a></div><div class="ttdeci">constexpr auto dim_single_unit_step</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00042">impl.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_afdf11c92be0cb1099e5fdcf3d5c94055"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#afdf11c92be0cb1099e5fdcf3d5c94055">arm_compute::cpu::dim_manual_loop</a></div><div class="ttdeci">constexpr auto dim_manual_loop</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00041">impl.h:41</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_aeca6e77ae523bf2830297882610f8770"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#aeca6e77ae523bf2830297882610f8770">arm_compute::cpu::DepthwiseConvolutionRunInfo::x_step</a></div><div class="ttdeci">const uint32_t x_step</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00050">impl.h:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a0e8b7ad27a89ed894f2cc8b732a7b032"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a0e8b7ad27a89ed894f2cc8b732a7b032">arm_compute::cpu::depthwise_loop_multiplier1_fp</a></div><div class="ttdeci">void depthwise_loop_multiplier1_fp(const ITensor *src, const ITensor *weights, const ITensor *biases, ITensor *dst, const PadStrideInfo &amp;conv_info, const Size2D &amp;dilation, const Window &amp;window, bool has_biases)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00114">impl.h:114</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a34b06c0cd94808a77b697e79880b84b0"><div class="ttname"><a href="namespacearm__compute.xhtml#a34b06c0cd94808a77b697e79880b84b0">arm_compute::element_size_from_data_type</a></div><div class="ttdeci">size_t element_size_from_data_type(DataType dt)</div><div class="ttdoc">The size in bytes of the data type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00078">DataTypeUtils.h:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_ad2115fbd2edcebb19a865eff2f739b18"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ad2115fbd2edcebb19a865eff2f739b18">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_stride_y</a></div><div class="ttdeci">const size_t input_stride_y</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00052">impl.h:52</a></div></div>
<div class="ttc" id="awrapper_8h_xhtml"><div class="ttname"><a href="wrapper_8h.xhtml">wrapper.h</a></div><div class="ttdoc">Includes all wrapper headers at once.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a443d09c5e20d13e6f4063d0f60616fb5"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">arm_compute::cpu::data_layout</a></div><div class="ttdeci">constexpr auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00036">impl.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1wrapper_1_1traits_1_1neon__vector_xhtml"><div class="ttname"><a href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">arm_compute::wrapper::traits::neon_vector</a></div><div class="ttdoc">Create the appropriate SIMD vector given its type and size in terms of elements.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00057">traits.h:57</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_abd1e59af82140ba461f52a41c00cbf08"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abd1e59af82140ba461f52a41c00cbf08">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_max_offset</a></div><div class="ttdeci">const size_t input_max_offset</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00054">impl.h:54</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a55ed4ad2395fd25ba847cbf6c54b85e4"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a55ed4ad2395fd25ba847cbf6c54b85e4">arm_compute::Window::set_dimension_step</a></div><div class="ttdeci">void set_dimension_step(size_t dimension, int step)</div><div class="ttdoc">Set the step of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00181">Window.inl:181</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a290a58727fef5da244133a6ff8270fbd"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a290a58727fef5da244133a6ff8270fbd">arm_compute::cpu::depthwise_loop_generic_fp</a></div><div class="ttdeci">void depthwise_loop_generic_fp(const ITensor *src, const ITensor *weights, const ITensor *biases, ITensor *dst, const PadStrideInfo &amp;conv_info, const Size2D &amp;dilation, unsigned int depth_multiplier, const Window &amp;window, bool has_biases)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00244">impl.h:244</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_iterator_xhtml_ab260e292b1df3944bc1d55a9b2301e41"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">arm_compute::Iterator::ptr</a></div><div class="ttdeci">constexpr uint8_t * ptr() const</div><div class="ttdoc">Return a pointer to the current pixel.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00147">Helpers.inl:147</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a6c32875c642d0ce07e37303b23a7d772"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6c32875c642d0ce07e37303b23a7d772">arm_compute::cpu::DepthwiseConvolutionRunInfo::DepthwiseConvolutionRunInfo</a></div><div class="ttdeci">DepthwiseConvolutionRunInfo(const ITensorInfo &amp;input, const ITensorInfo &amp;weights, const PadStrideInfo &amp;conv_info, const Window &amp;w, uint32_t depth_multiplier=1)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00067">impl.h:67</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_ab6fe700b6dad064ab5478be3dadcf88b"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab6fe700b6dad064ab5478be3dadcf88b">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_height</a></div><div class="ttdeci">const size_t input_height</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00063">impl.h:63</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_ac6515eeaf60dfe8e41b0558047ed04f1"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac6515eeaf60dfe8e41b0558047ed04f1">arm_compute::cpu::DepthwiseConvolutionRunInfo::conv_pad_left</a></div><div class="ttdeci">const size_t conv_pad_left</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00061">impl.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="aclassarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">Helpers.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1a367830ae09bf6138df822888ec1d71"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a367830ae09bf6138df822888ec1d71">arm_compute::test::validation::w</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; w</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00156">DFT.cpp:156</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a12b51e0ffb6e0b213a91b2067180e647"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a12b51e0ffb6e0b213a91b2067180e647">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_width</a></div><div class="ttdeci">const size_t input_width</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00064">impl.h:64</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a60f2e7a76af978d4eb6be4ac6e8044d1"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a60f2e7a76af978d4eb6be4ac6e8044d1">arm_compute::Window::DimW</a></div><div class="ttdeci">static constexpr size_t DimW</div><div class="ttdoc">Alias for dimension 3 also known as W dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00049">Window.h:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_adb7f0b77ccd8685db049b316b43de071"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adb7f0b77ccd8685db049b316b43de071">arm_compute::cpu::DepthwiseConvolutionRunInfo::conv_stride_y</a></div><div class="ttdeci">const size_t conv_stride_y</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00060">impl.h:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml_a94b8468af876f5ab54020d5e9787a4f0"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">arm_compute::Size2D::x</a></div><div class="ttdeci">size_t x() const</div><div class="ttdoc">Semantic accessor for width as x.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00073">Size2D.h:73</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a4287931a2912ecb6cece71219ca5478c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">arm_compute::wrapper::vmla</a></div><div class="ttdeci">uint8x8_t vmla(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="mla_8h_source.xhtml#l00046">mla.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a0886942393a3ba0dfefaa7516b159784"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0886942393a3ba0dfefaa7516b159784">arm_compute::test::validation::for</a></div><div class="ttdeci">for(size_t k=0;k&lt; _target.size();++k)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_unstack_8cpp_source.xhtml#l00091">Unstack.cpp:91</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_ac49e64291e5b2d8a1ad1e686d775d59a"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ac49e64291e5b2d8a1ad1e686d775d59a">arm_compute::cpu::DepthwiseConvolutionRunInfo::weights_stride_z</a></div><div class="ttdeci">const size_t weights_stride_z</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00058">impl.h:58</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00079">Window.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00139">CoreTypes.h:139</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00053">Window.inl:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00222">Cast.cpp:222</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_acb5fca229a41092d90845d8ee30fcf91"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acb5fca229a41092d90845d8ee30fcf91">arm_compute::cpu::DepthwiseConvolutionRunInfo::conv_pad_top</a></div><div class="ttdeci">const size_t conv_pad_top</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00062">impl.h:62</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_ab999f1a2cf0d5e438f487fabdc9e7430"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#ab999f1a2cf0d5e438f487fabdc9e7430">arm_compute::cpu::DepthwiseConvolutionRunInfo::weights_height</a></div><div class="ttdeci">const size_t weights_height</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00056">impl.h:56</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00201">Helpers.inl:201</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_abe4640d429ac25799126454625834b7d"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#abe4640d429ac25799126454625834b7d">arm_compute::cpu::DepthwiseConvolutionRunInfo::weights_width</a></div><div class="ttdeci">const size_t weights_width</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00055">impl.h:55</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a6d863d841dad4e2e6e00afeff3d6f00a"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a6d863d841dad4e2e6e00afeff3d6f00a">arm_compute::cpu::DepthwiseConvolutionRunInfo::x_leftover_start</a></div><div class="ttdeci">const uint32_t x_leftover_start</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00051">impl.h:51</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a620aa3d75e6df0a30c91a941c7992924"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a620aa3d75e6df0a30c91a941c7992924">arm_compute::cpu::DepthwiseConvolutionRunInfo::conv_stride_x</a></div><div class="ttdeci">const size_t conv_stride_x</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00059">impl.h:59</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml">arm_compute::cpu::DepthwiseConvolutionRunInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00045">impl.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_convolution_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_convolution_info.xhtml">arm_compute::ConvolutionInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_convolution_info_8h_source.xhtml#l00033">ConvolutionInfo.h:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ae1a6f6dde14fc3b0470cd0b08041ea9f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">arm_compute::wrapper::vload</a></div><div class="ttdeci">uint8x8_t vload(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00039">load.h:39</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a33ee2954a8e8fb991cd139c9345841c3"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a33ee2954a8e8fb991cd139c9345841c3">arm_compute::cpu::DepthwiseConvolutionRunInfo::x_start</a></div><div class="ttdeci">const uint32_t x_start</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00048">impl.h:48</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_acad64b9547ecd5d25282b7f80ab7fde0"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#acad64b9547ecd5d25282b7f80ab7fde0">arm_compute::cpu::DepthwiseConvolutionRunInfo::weights_stride_y</a></div><div class="ttdeci">const size_t weights_stride_y</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00057">impl.h:57</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a2065fcea8e34c2f3ee039d5a0332348b"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a2065fcea8e34c2f3ee039d5a0332348b">arm_compute::cpu::channel_idx</a></div><div class="ttdeci">const size_t channel_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00039">impl.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a2daf774ab1f2b95de283245a361d455f"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a2daf774ab1f2b95de283245a361d455f">arm_compute::cpu::width_idx</a></div><div class="ttdeci">const size_t width_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00037">impl.h:37</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_adcd0bbe5747f9335c9dc266238950cef"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#adcd0bbe5747f9335c9dc266238950cef">arm_compute::cpu::DepthwiseConvolutionRunInfo::num_read_elements_per_iteration</a></div><div class="ttdeci">const size_t num_read_elements_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00047">impl.h:47</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a076dad6d7efce7170dcd2efecc69d1e6"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a076dad6d7efce7170dcd2efecc69d1e6">arm_compute::cpu::DepthwiseConvolutionRunInfo::x_end</a></div><div class="ttdeci">const uint32_t x_end</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00049">impl.h:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a5a2b594dc6c251f07190189c716685ec"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a5a2b594dc6c251f07190189c716685ec">arm_compute::cpu::run_depthwise_quanitized8bit</a></div><div class="ttdeci">void run_depthwise_quanitized8bit(const ITensor *src, const ITensor *weights, const ITensor *biases, ITensor *dst, const Window &amp;window, bool has_biases, const ConvolutionInfo &amp;info)</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8cpp_source.xhtml#l00559">impl.cpp:559</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_af399bedeaeb8dc177d3a301a12c3a5d0"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#af399bedeaeb8dc177d3a301a12c3a5d0">arm_compute::support::cpp11::fma</a></div><div class="ttdeci">T fma(T x, T y, T z)</div><div class="ttdoc">Computes (x*y) + z as if to infinite precision and rounded only once to fit the result type.</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00254">ToolchainSupport.h:254</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_depthwise_convolution_run_info_xhtml_a1585c725d13408e5629a216c2d2e8b01"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_depthwise_convolution_run_info.xhtml#a1585c725d13408e5629a216c2d2e8b01">arm_compute::cpu::DepthwiseConvolutionRunInfo::input_depth</a></div><div class="ttdeci">const size_t input_depth</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00065">impl.h:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_aa6d92f521dc4f05ac7f4c856dcfe263e"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#aa6d92f521dc4f05ac7f4c856dcfe263e">arm_compute::cpu::height_idx</a></div><div class="ttdeci">const size_t height_idx</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00038">impl.h:38</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_6ea70737f7957110aafe418ec507e756.xhtml">depthwiseconv2d</a></li><li class="navelem"><a class="el" href="dir_eaa5e6f503e04e7a59bfa7670ffbd507.xhtml">generic</a></li><li class="navelem"><a class="el" href="dir_977d095e705204645eb5f61ea73ccab0.xhtml">neon</a></li><li class="navelem"><a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h.xhtml">impl.h</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:03 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
