<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/DepthConvertLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_depth_convert_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthConvertLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_depth_convert_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEDepthConvertLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="runtime_2_tensor_8h_source.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_allocator_8h_source.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ConvertPolicyDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthConvertLayerFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_depth_convert_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ab7bdd0e5c783a3f52e81684790167411"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab7bdd0e5c783a3f52e81684790167411"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab7bdd0e5c783a3f52e81684790167411">NEDepthConvertLayerToU16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint16_t &gt;</td></tr>
<tr class="separator:ab7bdd0e5c783a3f52e81684790167411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adc0479e4b3b5d92ec9584c946ed7beac">NEDepthConvertLayerToS16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int16_t &gt;</td></tr>
<tr class="separator:adc0479e4b3b5d92ec9584c946ed7beac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2e7679decb05eca751a7ad3fe1c310"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aec2e7679decb05eca751a7ad3fe1c310"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aec2e7679decb05eca751a7ad3fe1c310">NEDepthConvertLayerToS32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int32_t &gt;</td></tr>
<tr class="separator:aec2e7679decb05eca751a7ad3fe1c310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5339d2cc4a80e318c9268a718e6afa3f">NEDepthConvertLayerToU8Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint8_t &gt;</td></tr>
<tr class="separator:a5339d2cc4a80e318c9268a718e6afa3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a225e3ef49159f5b7ab9eda78fd329e2d">NEDepthConvertLayerToU32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint32_t &gt;</td></tr>
<tr class="separator:a225e3ef49159f5b7ab9eda78fd329e2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9912c7aa7d6317c121432c965507fd83"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9912c7aa7d6317c121432c965507fd83"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9912c7aa7d6317c121432c965507fd83">NEDepthConvertLayerToF16Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, half &gt;</td></tr>
<tr class="separator:a9912c7aa7d6317c121432c965507fd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12516d34a371038fdaf705939f07ca15"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a12516d34a371038fdaf705939f07ca15"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a12516d34a371038fdaf705939f07ca15">NEDepthConvertLayerToF32Fixture</a> = DepthConvertLayerValidationFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, float &gt;</td></tr>
<tr class="separator:a12516d34a371038fdaf705939f07ca15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed17ec92926b05f647ae5dc75f18397"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3ed17ec92926b05f647ae5dc75f18397"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3ed17ec92926b05f647ae5dc75f18397">NEDepthConvertLayerToQASYMM8Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, uint8_t &gt;</td></tr>
<tr class="separator:a3ed17ec92926b05f647ae5dc75f18397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00a28e95c442493cb666d16f8637152"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa00a28e95c442493cb666d16f8637152"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa00a28e95c442493cb666d16f8637152">NEDepthConvertLayerQuantizedToF16Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, half &gt;</td></tr>
<tr class="separator:aa00a28e95c442493cb666d16f8637152"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83baad410b6bf781d1556dd63d23a267"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a83baad410b6bf781d1556dd63d23a267"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a83baad410b6bf781d1556dd63d23a267">NEDepthConvertLayerQuantizedToF32Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, float &gt;</td></tr>
<tr class="separator:a83baad410b6bf781d1556dd63d23a267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1332bf0d702dc9cf2ccbe250e00b54cd">NEDepthConvertLayerQuantizedToS32Fixture</a> = DepthConvertLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthConvertLayer, T, int32_t &gt;</td></tr>
<tr class="separator:a1332bf0d702dc9cf2ccbe250e00b54cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa2d7a9f123e98cad9f150dde4e095c13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2d7a9f123e98cad9f150dde4e095c13">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Policy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, })), framework::dataset::make(&quot;Shift&quot;,{ 0, 0, 0, 1, 1, 1, 8, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true})), input_info, output_info, policy, shift, expected)</td></tr>
<tr class="separator:aa2d7a9f123e98cad9f150dde4e095c13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40d20c55414f101f51f295e3a17346a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a40d20c55414f101f51f295e3a17346a6">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDepthConvertLayerQuantizedToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerQASYMM8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a40d20c55414f101f51f295e3a17346a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af13a05bcf6a9ae1841c7fd6bd5fbc659"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af13a05bcf6a9ae1841c7fd6bd5fbc659">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerQuantizedToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerQASYMM8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:af13a05bcf6a9ae1841c7fd6bd5fbc659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c052f832b03d0a4971e8761c7c4043"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae6c052f832b03d0a4971e8761c7c4043">combine</a> (combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerQASYMM8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:ae6c052f832b03d0a4971e8761c7c4043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a197db94514497353680c755f01ed64"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a197db94514497353680c755f01ed64">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerQuantizedToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerQASYMM8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a1a197db94514497353680c755f01ed64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34b38df3491222ba314e388144dab1c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab34b38df3491222ba314e388144dab1c">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toU16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:ab34b38df3491222ba314e388144dab1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98afd2260f449faf38a07c28d91f8e60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a98afd2260f449faf38a07c28d91f8e60">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toU16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a98afd2260f449faf38a07c28d91f8e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9a695b941ae760acf53d7d89a3f4140"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9a695b941ae760acf53d7d89a3f4140">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toS16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:ab9a695b941ae760acf53d7d89a3f4140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a886a4c81f7b78416012190934400088a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a886a4c81f7b78416012190934400088a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS16Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toS16Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a886a4c81f7b78416012190934400088a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2698aa92247fffbc32e66eca6dfdaa32"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2698aa92247fffbc32e66eca6dfdaa32">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a2698aa92247fffbc32e66eca6dfdaa32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229bc1f017a23d7fdacd27072a9e1b1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a229bc1f017a23d7fdacd27072a9e1b1b">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a229bc1f017a23d7fdacd27072a9e1b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff576308144515ff1d865852f1d55b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adff576308144515ff1d865852f1d55b0">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:adff576308144515ff1d865852f1d55b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83aefd38ea4b7b9afe3ec66acb8e3876"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a83aefd38ea4b7b9afe3ec66acb8e3876">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToF32Fixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU8toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a83aefd38ea4b7b9afe3ec66acb8e3876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af614d765c5f89ad414236d42d5833a8f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af614d765c5f89ad414236d42d5833a8f">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:af614d765c5f89ad414236d42d5833a8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91805edaa36a0792d192ec4b562f9dc2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a91805edaa36a0792d192ec4b562f9dc2">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; uint16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a91805edaa36a0792d192ec4b562f9dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb7699ba47db5cc9f3b05a2ae17c018d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeb7699ba47db5cc9f3b05a2ae17c018d">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerU16toU32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:aeb7699ba47db5cc9f3b05a2ae17c018d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143ef0cb058c2387c453a9a37ad0aa17"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a143ef0cb058c2387c453a9a37ad0aa17">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU32Fixture&lt; uint16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerU16toU32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a143ef0cb058c2387c453a9a37ad0aa17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1894ec2d9737985cb8bbb0bcc81cb36f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1894ec2d9737985cb8bbb0bcc81cb36f">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerS16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a1894ec2d9737985cb8bbb0bcc81cb36f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b5d84e737e0dcb735aa0ce57748cac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a38b5d84e737e0dcb735aa0ce57748cac">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS16toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a38b5d84e737e0dcb735aa0ce57748cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2805518f4013df2891e55b1cc32ce19a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2805518f4013df2891e55b1cc32ce19a">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerS16toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a2805518f4013df2891e55b1cc32ce19a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1312fa868fa23b5260ce7809da294aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab1312fa868fa23b5260ce7809da294aa">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; int16_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS16toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:ab1312fa868fa23b5260ce7809da294aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e0e85cdd7c8a404414a64b2163bc17f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e0e85cdd7c8a404414a64b2163bc17f">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a1e0e85cdd7c8a404414a64b2163bc17f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0126dfa35dbade1af4efd9507719d3b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0126dfa35dbade1af4efd9507719d3b8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToS32Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toS32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a0126dfa35dbade1af4efd9507719d3b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadda374fe9514131276dbf7c00754ef7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aadda374fe9514131276dbf7c00754ef7">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:aadda374fe9514131276dbf7c00754ef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8cfdb7b5c1bb8df8599b451466d984"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8cfdb7b5c1bb8df8599b451466d984">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a3c8cfdb7b5c1bb8df8599b451466d984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aea161594442147d05b0c877d7e6ae8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0aea161594442147d05b0c877d7e6ae8">combine</a> (combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerF32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a0aea161594442147d05b0c877d7e6ae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a231caed2436e869e9831e4bd164ae817"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a231caed2436e869e9831e4bd164ae817">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToQASYMM8Fixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerF32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:a231caed2436e869e9831e4bd164ae817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe4498bb180cf5221a6e3687da17b2d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afe4498bb180cf5221a6e3687da17b2d3">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:afe4498bb180cf5221a6e3687da17b2d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eb96234c03353ae9019ac3dc6cd4829"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4eb96234c03353ae9019ac3dc6cd4829">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToF32Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toF32Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a4eb96234c03353ae9019ac3dc6cd4829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff711aa69169dacaefd413f4e7e943f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeff711aa69169dacaefd413f4e7e943f">combine</a> (combine(combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:aeff711aa69169dacaefd413f4e7e943f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad926fbaeafa42699aba42093fc33e06c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad926fbaeafa42699aba42093fc33e06c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToQASYMM8Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toQASYMM8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE })), DepthConvertLayerZeroShiftDataset), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })))</td></tr>
<tr class="separator:ad926fbaeafa42699aba42093fc33e06c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc923d4eb64d1983c0bfe90edd0fb1fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adc923d4eb64d1983c0bfe90edd0fb1fb">combine</a> (combine(combine(datasets::SmallShapes(), DepthConvertLayerS32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:adc923d4eb64d1983c0bfe90edd0fb1fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a165b06761adcfe813fcf39b76f644cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a165b06761adcfe813fcf39b76f644cf6">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEDepthConvertLayerToU8Fixture&lt; int32_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeShapes(), DepthConvertLayerS32toU8Dataset), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerZeroShiftDataset))</td></tr>
<tr class="separator:a165b06761adcfe813fcf39b76f644cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ae8e467e421b44f1e2cd4bd52e1fa350a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae8e467e421b44f1e2cd4bd52e1fa350a">NEDepthConvertLayerQuantizedToS32Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:ae8e467e421b44f1e2cd4bd52e1fa350a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4e61ca86356f2ff90d74ad098c9e50c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad4e61ca86356f2ff90d74ad098c9e50c">NEDepthConvertLayerToU16Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:ad4e61ca86356f2ff90d74ad098c9e50c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fa90ce9c6e2cda998684257d4d384b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96fa90ce9c6e2cda998684257d4d384b">NEDepthConvertLayerToS16Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a96fa90ce9c6e2cda998684257d4d384b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae15f21672f7026f62f87ffd196af5133"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae15f21672f7026f62f87ffd196af5133">NEDepthConvertLayerToS32Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:ae15f21672f7026f62f87ffd196af5133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a627e39efb99f89babd0b7b10c7fd03d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a627e39efb99f89babd0b7b10c7fd03d3">NEDepthConvertLayerToF32Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a627e39efb99f89babd0b7b10c7fd03d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae48debf54863ba840412a77d55904505"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae48debf54863ba840412a77d55904505">NEDepthConvertLayerToU8Fixture&lt; uint16_t &gt;</a></td></tr>
<tr class="separator:ae48debf54863ba840412a77d55904505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33008bb7f8b164b046147685cd8fad37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a33008bb7f8b164b046147685cd8fad37">NEDepthConvertLayerToU32Fixture&lt; uint16_t &gt;</a></td></tr>
<tr class="separator:a33008bb7f8b164b046147685cd8fad37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61b571c98a49df54b5a84961c0fa02de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a61b571c98a49df54b5a84961c0fa02de">NEDepthConvertLayerToU8Fixture&lt; int16_t &gt;</a></td></tr>
<tr class="separator:a61b571c98a49df54b5a84961c0fa02de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7236773e4df1ccd0c5ccffb815e99d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac7236773e4df1ccd0c5ccffb815e99d1">NEDepthConvertLayerToS32Fixture&lt; int16_t &gt;</a></td></tr>
<tr class="separator:ac7236773e4df1ccd0c5ccffb815e99d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25eeb4bab87cfbe6807c086f9c46ac21"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25eeb4bab87cfbe6807c086f9c46ac21">NEDepthConvertLayerToS32Fixture&lt; float &gt;</a></td></tr>
<tr class="separator:a25eeb4bab87cfbe6807c086f9c46ac21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc5177bf0d4ef56073068574513ceab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9fc5177bf0d4ef56073068574513ceab">NEDepthConvertLayerToU8Fixture&lt; float &gt;</a></td></tr>
<tr class="separator:a9fc5177bf0d4ef56073068574513ceab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba18bdc774e96ee5b98b87bfc2410b6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aba18bdc774e96ee5b98b87bfc2410b6f">NEDepthConvertLayerToQASYMM8Fixture&lt; float &gt;</a></td></tr>
<tr class="separator:aba18bdc774e96ee5b98b87bfc2410b6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e436d48fd15b2c2653ca3aabf01b9ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5e436d48fd15b2c2653ca3aabf01b9ee">NEDepthConvertLayerToF32Fixture&lt; int32_t &gt;</a></td></tr>
<tr class="separator:a5e436d48fd15b2c2653ca3aabf01b9ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acd003660a400cda6de46ce6079f6fa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9acd003660a400cda6de46ce6079f6fa">NEDepthConvertLayerToQASYMM8Fixture&lt; int32_t &gt;</a></td></tr>
<tr class="separator:a9acd003660a400cda6de46ce6079f6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28930fa0c8bc0ddfca28848725f4bbac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a28930fa0c8bc0ddfca28848725f4bbac">NEDepthConvertLayerToU8Fixture&lt; int32_t &gt;</a></td></tr>
<tr class="separator:a28930fa0c8bc0ddfca28848725f4bbac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_depth_convert_layer_8cpp.xhtml">DepthConvertLayer.cpp</a></li>
    <li class="footer">Generated on Tue Nov 21 2023 16:31:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
