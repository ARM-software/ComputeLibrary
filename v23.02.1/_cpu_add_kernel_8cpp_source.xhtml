<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/CpuAddKernel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cpu_add_kernel_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuAddKernel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_add_kernel_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_add_kernel_8h.xhtml">src/cpu/kernels/CpuAddKernel.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2_c_p_p_2_validate_8h.xhtml">src/core/CPP/Validate.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2common_2_registrars_8h.xhtml">src/core/common/Registrars.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="cpu_2kernels_2add_2list_8h.xhtml">src/cpu/kernels/add/list.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#if defined(ENABLE_FP32_KERNELS)</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> default_mws_N1_fp32_neon = 24536;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> default_mws_V1_fp32_neon = 40510;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_FP32_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace </span>cpu</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span>kernels</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;CpuAddKernel::AddKernel&gt; available_kernels =</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;neon_qu8_add_fixedpoint&quot;</span>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>) &amp;&amp; data.can_use_fixedpoint;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        },</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#abfd7331f875669695cb9af58b5921275">arm_compute::cpu::add_q8_neon_fixedpoint&lt;uint8_t&gt;</a>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    },</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="stringliteral">&quot;neon_qs8_add_fixedpoint&quot;</span>,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>) &amp;&amp; data.can_use_fixedpoint;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        },</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#af5ab9358391aa54ff6cd6934a6cfc6b2">arm_compute::cpu::add_q8_neon_fixedpoint&lt;int8_t&gt;</a>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    },</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="stringliteral">&quot;sve2_qu8_add&quot;</span>,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>) &amp;&amp; data.isa.sve2;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        },</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a3a2220e83b6758e0efe6d56f089b4eae">REGISTER_QASYMM8_SVE2</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a87d11c1d054cf7db7b82fcba880a823f">arm_compute::cpu::add_qasymm8_sve2</a>)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    },</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;sve2_qs8_add&quot;</span>,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>) &amp;&amp; data.isa.sve2;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        },</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9da7c268691bbc3d2428812470cecd3f">REGISTER_QASYMM8_SIGNED_SVE2</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ab0fea5772fee23340f22a003c85e7829">arm_compute::cpu::add_qasymm8_signed_sve2</a>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    },</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="stringliteral">&quot;sve2_qs16_add&quot;</span>,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>) &amp;&amp; data.isa.sve2;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        },</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a8263c4371684227b9b634d16ab34a3cc">REGISTER_QSYMM16_SVE2</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3860d0e40530102ca0f9b72aab835a3e">arm_compute::cpu::add_qsymm16_sve2</a>)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    },</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="stringliteral">&quot;sve_fp32_add&quot;</span>,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>) &amp;&amp; data.isa.sve;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        },</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a70b11b257400488c81ab0998adcc59f1">REGISTER_FP32_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#aa2ab2fb878bb198cd6104e1d0dff8043">arm_compute::cpu::add_fp32_sve</a>)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    },</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="stringliteral">&quot;sve_fp16_add&quot;</span>,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>) &amp;&amp; data.isa.sve &amp;&amp; data.isa.fp16;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        },</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a3d722cea84e48f36574c432bd9c118f0">REGISTER_FP16_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#af8619f36d58f8afe49148c4a85446b17">arm_compute::cpu::add_fp16_sve</a>)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    },</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="stringliteral">&quot;sve_u8_add&quot;</span>,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>) &amp;&amp; data.isa.sve;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        },</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#adc5f84c839b4b2635aca4223fd962d79">arm_compute::cpu::add_u8_sve</a>)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    },</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="stringliteral">&quot;sve_s16_add&quot;</span>,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>) &amp;&amp; data.isa.sve;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        },</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a81008dcf18ba115cfb93b68a31936189">arm_compute::cpu::add_s16_sve</a>)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    },</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="stringliteral">&quot;sve_s32_add&quot;</span>,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>) &amp;&amp; data.isa.sve;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        },</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a85af451c597b6e1079495f7689108336">arm_compute::cpu::add_s32_sve</a>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    },</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="stringliteral">&quot;neon_fp32_add&quot;</span>,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>); },</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ad2c124680c75e5d3fe454ef5caefd5ae">arm_compute::cpu::add_fp32_neon</a>)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    },</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="stringliteral">&quot;neon_fp16_add&quot;</span>,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>) &amp;&amp; data.isa.fp16;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        },</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a26fa1b6549066348f60eabe7c9bb53df">REGISTER_FP16_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c61fd97af6b1dd6934c54f6c605a35e">arm_compute::cpu::add_fp16_neon</a>)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    },</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="stringliteral">&quot;neon_u8_add&quot;</span>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>); },</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a006257e7774d270fdcb973d831c601bc">arm_compute::cpu::add_u8_neon</a>)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    },</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="stringliteral">&quot;neon_s16_add&quot;</span>,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>); },</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a05ce4a57b547b092a04dd9f1ce597fa6">arm_compute::cpu::add_s16_neon</a>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    },</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="stringliteral">&quot;neon_s32_add&quot;</span>,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>); },</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a164fbc92bcd9d8dd343cc1e364498a24">arm_compute::cpu::add_s32_neon</a>)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    },</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="stringliteral">&quot;neon_qu8_add&quot;</span>,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>); },</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#acfa632794dcd2aaa48882f9804f191b7">REGISTER_QASYMM8_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a61432523ea69cfc30a1aece3b93e6207">arm_compute::cpu::add_qasymm8_neon</a>)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    },</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="stringliteral">&quot;neon_qs8_add&quot;</span>,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>); },</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a84a833348dea51fac4320f7f65eb6f57">REGISTER_QASYMM8_SIGNED_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a9cdb8e82259a848a08aecc1ff53999d6">arm_compute::cpu::add_qasymm8_signed_neon</a>)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    },</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="stringliteral">&quot;neon_qs16_add&quot;</span>,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        [](<span class="keyword">const</span> CpuAddKernelDataTypeISASelectorData &amp; data) { <span class="keywordflow">return</span> (data.dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>); },</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <a class="code" href="src_2core_2common_2_registrars_8h.xhtml#a91f2d1b78c06d4291fa2af8860afbda9">REGISTER_QSYMM16_NEON</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ad37c71a18fef7a166093eadde4d314a3">arm_compute::cpu::add_qsymm16_neon</a>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;};</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;Status <a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(<span class="keyword">const</span> ITensorInfo &amp;src0, <span class="keyword">const</span> ITensorInfo &amp;src1, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(policy);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="src_2core_2_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a>(&amp;src0);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;src0, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src0, &amp;src1);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">const</span> TensorShape out_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a244a32cac2f5011bd0fc49700bf3d5de">TensorShape::broadcast_shape</a>(src0.tensor_shape(), src1.tensor_shape());</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(out_shape.total_size() == 0, <span class="stringliteral">&quot;Inputs are not broadcast compatible&quot;</span>);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>((src0.tensor_shape().x() != src1.tensor_shape().x()) &amp;&amp; ((src0.data_type() != src1.data_type()) || (src0.data_type() != dst.data_type())</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                                                                             || (src1.data_type() != dst.data_type())),</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                    <span class="stringliteral">&quot;Broadcasting across width is supported on configurations where all tensors have the same data type&quot;</span>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">// Validate in case of configured dst</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">if</span>(dst.total_size() &gt; 0)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src0, &amp;dst);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(out_shape, dst.tensor_shape(), 0),</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                        <span class="stringliteral">&quot;Wrong shape for dst&quot;</span>);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> can_use_fixedpoint = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a5d12d4b685a01367a23a1e201300e06b">add_q8_neon_fixedpoint_possible</a>(&amp;src0, &amp;src1, &amp;dst);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uk = CpuAddKernel::get_implementation&lt;CpuAddKernelDataTypeISASelectorData&gt;(CpuAddKernelDataTypeISASelectorData{ src0.data_type(),</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                                                                          <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">CPUInfo::get</a>().<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>(), can_use_fixedpoint });</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(uk == <span class="keyword">nullptr</span> || uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a998d2d481f8a4085f25c937421618574">  213</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a998d2d481f8a4085f25c937421618574">CpuAddKernel::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src1, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src0, src1, dst);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(*src0, *src1, *dst, policy));</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> can_use_fixedpoint     = <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a5d12d4b685a01367a23a1e201300e06b">add_q8_neon_fixedpoint_possible</a>(src0, src1, dst);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> uk                     = CpuAddKernel::get_implementation&lt;CpuAddKernelDataTypeISASelectorData&gt;(<a class="code" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data.xhtml">CpuAddKernelDataTypeISASelectorData</a>{ src0-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(),</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                                                                                              <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">CPUInfo::get</a>().<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>(), can_use_fixedpoint });</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(uk);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    _policy     = policy;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    _run_method = uk-&gt;ukernel;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    _name       = std::string(<span class="stringliteral">&quot;CpuAddKernel&quot;</span>).append(<span class="stringliteral">&quot;/&quot;</span>).append(uk-&gt;name);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">// Auto initialize dst if not initialized</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;out_shape = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a244a32cac2f5011bd0fc49700bf3d5de">TensorShape::broadcast_shape</a>(src0-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), src1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>());</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">set_shape_if_empty</a>(*dst, out_shape);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ac358f7701e83eb2bda7ae5b9f03fd7fe">set_data_type_if_unknown</a>(*dst, src0-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">// Configure kernel window</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    std::tie(win, _split_dimension) = <a class="code" href="namespacearm__compute.xhtml#a8efcd2283ad0db0f90c88e146a27f01d">calculate_squashed_or_max_window</a>(*src0, *src1);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    ICpuKernel::configure(win);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ab842408c28026222d48ccbb31f4ae79a">  240</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ab842408c28026222d48ccbb31f4ae79a">CpuAddKernel::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(src0, src1, dst);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(*src0, *src1, *dst, policy));</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">  249</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">CpuAddKernel::run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(info);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICpuKernel::window</a>(), window);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a>());</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_run_method == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src0 = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *src1 = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *dst  = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    _run_method(src0, src1, dst, _policy, window);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">  265</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">CpuAddKernel::name</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">return</span> _name.c_str();</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a0580149bfb97e10880920b8a8fafa7cd">  270</a></span>&#160;<span class="keyword">const</span> std::vector&lt;CpuAddKernel::AddKernel&gt; &amp;<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a0580149bfb97e10880920b8a8fafa7cd">CpuAddKernel::get_available_kernels</a>()</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span> available_kernels;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">  275</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">CpuAddKernel::get_mws</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;platform, <span class="keywordtype">size_t</span> thread_count)<span class="keyword"> const</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(thread_count);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#if defined(ENABLE_FP32_KERNELS)</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keywordflow">if</span>(this-&gt;_run_method == &amp;<a class="code" href="namespacearm__compute_1_1cpu.xhtml#ad2c124680c75e5d3fe454ef5caefd5ae">add_fp32_neon</a>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordtype">size_t</span> mws = <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">ICPPKernel::default_mws</a>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">if</span>(platform.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">get_cpu_model</a>() == <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4a86bc43e556b1df283839f053eb02e2bb">CPUModel::N1</a>)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            mws = default_mws_N1_fp32_neon;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(platform.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">get_cpu_model</a>() == <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ab4daca084ad9eabfc8de231929477ed6">CPUModel::V1</a>)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            mws = default_mws_V1_fp32_neon;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        {</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">ICPPKernel::default_mws</a>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">// tensor is 1D or was re-interpreted as 1D</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">if</span>(this-&gt;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>().<a class="code" href="classarm__compute_1_1_window.xhtml#abfa164a379c0c401a662792d7d0ccfba">shape</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">num_dimensions</a>() == 1)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">return</span> mws;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="comment">// scale mws down by the number of elements along all the dimensions (x, z, w, etc) except the one</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="comment">// that we parallelize along (the y dimension). This allows for parallelization when the Y_SIZE is small</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="comment">// but the other sizes are large, which boosts performance.</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            mws = <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(mws / (this-&gt;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>().<a class="code" href="classarm__compute_1_1_window.xhtml#a0654fca130488c15b4b66a9b7131c142">num_iterations_total</a>() / this-&gt;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>().<a class="code" href="classarm__compute_1_1_window.xhtml#a2fb4b3d6b185c9d225073f923f1827c3">num_iterations</a>(1)));</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <span class="keywordflow">return</span> std::max(static_cast&lt;size_t&gt;(1), mws);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor">#else </span><span class="comment">/* ENABLE_FP32_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(platform);</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_FP32_KERNELS */</span><span class="preprocessor"></span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">ICPPKernel::default_mws</a>;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;} <span class="comment">// namespace kernels</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;} <span class="comment">// namespace cpu</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on. </div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number </div></div>
<div class="ttc" id="_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac358f7701e83eb2bda7ae5b9f03fd7fe"><div class="ttname"><a href="namespacearm__compute.xhtml#ac358f7701e83eb2bda7ae5b9f03fd7fe">arm_compute::set_data_type_if_unknown</a></div><div class="ttdeci">bool set_data_type_if_unknown(ITensorInfo &amp;info, DataType data_type)</div><div class="ttdoc">Set the data type and number of channels to the specified value if the current data type is unknown...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00126">AutoConfiguration.h:126</a></div></div>
<div class="ttc" id="src_2core_2_c_p_p_2_validate_8h_xhtml_ad2633f3560322e1f8d926949dec1b730"><div class="ttname"><a href="src_2core_2_c_p_p_2_validate_8h.xhtml#ad2633f3560322e1f8d926949dec1b730">ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_CPU_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00115">Validate.h:115</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a26fa1b6549066348f60eabe7c9bb53df"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a26fa1b6549066348f60eabe7c9bb53df">REGISTER_FP16_NEON</a></div><div class="ttdeci">#define REGISTER_FP16_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00048">Registrars.h:48</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ab0fea5772fee23340f22a003c85e7829"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ab0fea5772fee23340f22a003c85e7829">arm_compute::cpu::add_qasymm8_signed_sve2</a></div><div class="ttdeci">void add_qasymm8_signed_sve2(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve2_2qasymm8__signed_8cpp_source.xhtml#l00037">qasymm8_signed.cpp:37</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a8263c4371684227b9b634d16ab34a3cc"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a8263c4371684227b9b634d16ab34a3cc">REGISTER_QSYMM16_SVE2</a></div><div class="ttdeci">#define REGISTER_QSYMM16_SVE2(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00141">Registrars.h:141</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a644718bb2fb240de962dc3c9a1fdf0dc"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">arm_compute::ITensorPack::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdoc">Checks if pack is empty. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00080">ITensorPack.cpp:80</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_af8619f36d58f8afe49148c4a85446b17"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#af8619f36d58f8afe49148c4a85446b17">arm_compute::cpu::add_fp16_sve</a></div><div class="ttdeci">void add_fp16_sve(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a006257e7774d270fdcb973d831c601bc"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a006257e7774d270fdcb973d831c601bc">arm_compute::cpu::add_u8_neon</a></div><div class="ttdeci">void add_u8_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2integer_8cpp_source.xhtml#l00031">integer.cpp:31</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdoc">1 channel, 1 U8 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a164fbc92bcd9d8dd343cc1e364498a24"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a164fbc92bcd9d8dd343cc1e364498a24">arm_compute::cpu::add_s32_neon</a></div><div class="ttdeci">void add_s32_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2integer_8cpp_source.xhtml#l00041">integer.cpp:41</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a682bd642e8e78633d42922f0158858c1"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a682bd642e8e78633d42922f0158858c1">REGISTER_FP32_NEON</a></div><div class="ttdeci">#define REGISTER_FP32_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00074">Registrars.h:74</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a3860d0e40530102ca0f9b72aab835a3e"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3860d0e40530102ca0f9b72aab835a3e">arm_compute::cpu::add_qsymm16_sve2</a></div><div class="ttdeci">void add_qsymm16_sve2(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve2_2qsymm16_8cpp_source.xhtml#l00037">qsymm16.cpp:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a70b11b257400488c81ab0998adcc59f1"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a70b11b257400488c81ab0998adcc59f1">REGISTER_FP32_SVE</a></div><div class="ttdeci">#define REGISTER_FP32_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00075">Registrars.h:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a244a32cac2f5011bd0fc49700bf3d5de"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a244a32cac2f5011bd0fc49700bf3d5de">arm_compute::TensorShape::broadcast_shape</a></div><div class="ttdeci">static TensorShape broadcast_shape(const Shapes &amp;... shapes)</div><div class="ttdoc">If shapes are broadcast compatible, return the broadcasted shape. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00211">TensorShape.h:211</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a84a833348dea51fac4320f7f65eb6f57"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a84a833348dea51fac4320f7f65eb6f57">REGISTER_QASYMM8_SIGNED_NEON</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SIGNED_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00096">Registrars.h:96</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a3c61fd97af6b1dd6934c54f6c605a35e"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c61fd97af6b1dd6934c54f6c605a35e">arm_compute::cpu::add_fp16_neon</a></div><div class="ttdeci">void add_fp16_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a0580149bfb97e10880920b8a8fafa7cd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a0580149bfb97e10880920b8a8fafa7cd">arm_compute::cpu::kernels::CpuAddKernel::get_available_kernels</a></div><div class="ttdeci">static const std::vector&lt; AddKernel &gt; &amp; get_available_kernels()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00270">CpuAddKernel.cpp:270</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a2fb4b3d6b185c9d225073f923f1827c3"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a2fb4b3d6b185c9d225073f923f1827c3">arm_compute::Window::num_iterations</a></div><div class="ttdeci">constexpr size_t num_iterations(size_t dimension) const</div><div class="ttdoc">Return the number of iterations needed to iterate through a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00182">Window.inl:182</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_1_1kernels_xhtml_acf9ea6633274730cd08b8b8fab3a6fe6"><div class="ttname"><a href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">arm_compute::cpu::kernels::validate_arguments</a></div><div class="ttdeci">Status validate_arguments(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info)</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00060">CpuDirectConv2dKernel.cpp:60</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a85af451c597b6e1079495f7689108336"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a85af451c597b6e1079495f7689108336">arm_compute::cpu::add_s32_sve</a></div><div class="ttdeci">void add_s32_sve(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve_2integer_8cpp_source.xhtml#l00043">integer.cpp:43</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_a1d1a4992ced850f18f97b27492bbb081"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">arm_compute::CPUInfo::get_cpu_model</a></div><div class="ttdeci">CPUModel get_cpu_model(unsigned int cpuid) const</div><div class="ttdoc">Gets the cpu model for a given cpuid. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00119">CPPTypes.cpp:119</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ad37c71a18fef7a166093eadde4d314a3"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ad37c71a18fef7a166093eadde4d314a3">arm_compute::cpu::add_qsymm16_neon</a></div><div class="ttdeci">void add_qsymm16_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00035">qsymm16.cpp:35</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a61432523ea69cfc30a1aece3b93e6207"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a61432523ea69cfc30a1aece3b93e6207">arm_compute::cpu::add_qasymm8_neon</a></div><div class="ttdeci">void add_qasymm8_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00032">qasymm8.cpp:32</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a05ce4a57b547b092a04dd9f1ce597fa6"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a05ce4a57b547b092a04dd9f1ce597fa6">arm_compute::cpu::add_s16_neon</a></div><div class="ttdeci">void add_s16_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2integer_8cpp_source.xhtml#l00036">integer.cpp:36</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a1041dbd279355812f5c04a21ea0b0a31"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a1041dbd279355812f5c04a21ea0b0a31">REGISTER_INTEGER_NEON</a></div><div class="ttdeci">#define REGISTER_INTEGER_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00171">Registrars.h:171</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4a86bc43e556b1df283839f053eb02e2bb"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4a86bc43e556b1df283839f053eb02e2bb">arm_compute::CPUModel::N1</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_aa2ab2fb878bb198cd6104e1d0dff8043"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#aa2ab2fb878bb198cd6104e1d0dff8043">arm_compute::cpu::add_fp32_sve</a></div><div class="ttdeci">void add_fp32_sve(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="cpu_2kernels_2add_2generic_2sve_2fp32_8cpp_source.xhtml#l00033">fp32.cpp:33</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack.cpp:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a883429dd6cf828bfdd64b255afc458da"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">arm_compute::cpu::kernels::CpuAddKernel::run_op</a></div><div class="ttdeci">void run_op(ITensorPack &amp;tensors, const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00249">CpuAddKernel.cpp:249</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_acfa632794dcd2aaa48882f9804f191b7"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#acfa632794dcd2aaa48882f9804f191b7">REGISTER_QASYMM8_NEON</a></div><div class="ttdeci">#define REGISTER_QASYMM8_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00117">Registrars.h:117</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_af5ab9358391aa54ff6cd6934a6cfc6b2"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#af5ab9358391aa54ff6cd6934a6cfc6b2">arm_compute::cpu::add_q8_neon_fixedpoint&lt; int8_t &gt;</a></div><div class="ttdeci">template void add_q8_neon_fixedpoint&lt; int8_t &gt;(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a91f2d1b78c06d4291fa2af8860afbda9"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a91f2d1b78c06d4291fa2af8860afbda9">REGISTER_QSYMM16_NEON</a></div><div class="ttdeci">#define REGISTER_QSYMM16_NEON(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00139">Registrars.h:139</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml">Registrars.h</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a9b78428ad2200c4f79c153a00ec8ceb9"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a9b78428ad2200c4f79c153a00ec8ceb9">REGISTER_INTEGER_SVE</a></div><div class="ttdeci">#define REGISTER_INTEGER_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00172">Registrars.h:172</a></div></div>
<div class="ttc" id="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_data_type_i_s_a_selector_data.xhtml">arm_compute::cpu::kernels::CpuAddKernelDataTypeISASelectorData</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_kernel_selection_types_8h_source.xhtml#l00087">CpuKernelSelectionTypes.h:87</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4ab4daca084ad9eabfc8de231929477ed6"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4ab4daca084ad9eabfc8de231929477ed6">arm_compute::CPUModel::V1</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_adc5f84c839b4b2635aca4223fd962d79"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#adc5f84c839b4b2635aca4223fd962d79">arm_compute::cpu::add_u8_sve</a></div><div class="ttdeci">void add_u8_sve(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve_2integer_8cpp_source.xhtml#l00033">integer.cpp:33</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a6bd175f94838df9aed06d32452df92d3"><div class="ttname"><a href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">arm_compute::set_shape_if_empty</a></div><div class="ttdeci">bool set_shape_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape)</div><div class="ttdoc">Set the shape to the specified value if the current assignment is empty. </div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00088">AutoConfiguration.h:88</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00047">Validate.h:47</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a9da7c268691bbc3d2428812470cecd3f"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a9da7c268691bbc3d2428812470cecd3f">REGISTER_QASYMM8_SIGNED_SVE2</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SIGNED_SVE2(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00098">Registrars.h:98</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a81008dcf18ba115cfb93b68a31936189"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a81008dcf18ba115cfb93b68a31936189">arm_compute::cpu::add_s16_sve</a></div><div class="ttdeci">void add_s16_sve(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve_2integer_8cpp_source.xhtml#l00038">integer.cpp:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_ae84c81edc1474e79618df29c6a621797"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">arm_compute::cpu::kernels::CpuAddKernel::get_mws</a></div><div class="ttdeci">size_t get_mws(const CPUInfo &amp;platform, size_t thread_count) const override</div><div class="ttdoc">Return minimum workload size of the relevant kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00275">CpuAddKernel.cpp:275</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_aef1a10d4d6422ca58d53d8414d5954bd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">arm_compute::cpu::kernels::CpuAddKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00265">CpuAddKernel.cpp:265</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">Validate.h:915</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6e0b0886efb94aec797f6b830329b72c">arm_compute::Format::S16</a></div><div class="ttdoc">1 channel, 1 S16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack.cpp:64</a></div></div>
<div class="ttc" id="_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00180">CPPTypes.h:180</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_ad2c124680c75e5d3fe454ef5caefd5ae"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#ad2c124680c75e5d3fe454ef5caefd5ae">arm_compute::cpu::add_fp32_neon</a></div><div class="ttdeci">void add_fp32_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="cpu_2kernels_2add_2generic_2neon_2fp32_8cpp_source.xhtml#l00031">fp32.cpp:31</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a3d722cea84e48f36574c432bd9c118f0"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a3d722cea84e48f36574c432bd9c118f0">REGISTER_FP16_SVE</a></div><div class="ttdeci">#define REGISTER_FP16_SVE(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00049">Registrars.h:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_ab842408c28026222d48ccbb31f4ae79a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#ab842408c28026222d48ccbb31f4ae79a">arm_compute::cpu::kernels::CpuAddKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst, ConvertPolicy policy)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00240">CpuAddKernel.cpp:240</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel_xhtml_a998d2d481f8a4085f25c937421618574"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_add_kernel.xhtml#a998d2d481f8a4085f25c937421618574">arm_compute::cpu::kernels::CpuAddKernel::configure</a></div><div class="ttdeci">void configure(const ITensorInfo *src0, const ITensorInfo *src1, ITensorInfo *dst, ConvertPolicy policy)</div><div class="ttdoc">Initialise the kernel&amp;#39;s input, dst and border mode. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_add_kernel_8cpp_source.xhtml#l00213">CpuAddKernel.cpp:213</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a80a5f2d6e3a697c9aad893a3b4242615"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a80a5f2d6e3a697c9aad893a3b4242615">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const</div><div class="ttdoc">Returns the effective dimensionality of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00143">Dimensions.h:143</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00541">Validate.h:541</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">Validate.h:788</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a9cdb8e82259a848a08aecc1ff53999d6"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a9cdb8e82259a848a08aecc1ff53999d6">arm_compute::cpu::add_qasymm8_signed_neon</a></div><div class="ttdeci">void add_qasymm8_signed_neon(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00032">qasymm8_signed.cpp:32</a></div></div>
<div class="ttc" id="src_2core_2_c_p_p_2_validate_8h_xhtml"><div class="ttname"><a href="src_2core_2_c_p_p_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a8efcd2283ad0db0f90c88e146a27f01d"><div class="ttname"><a href="namespacearm__compute.xhtml#a8efcd2283ad0db0f90c88e146a27f01d">arm_compute::calculate_squashed_or_max_window</a></div><div class="ttdeci">std::pair&lt; Window, size_t &gt; calculate_squashed_or_max_window(const ITensorInfo &amp;src0, const ITensorInfo &amp;src1)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00235">WindowHelpers.cpp:235</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_abfa164a379c0c401a662792d7d0ccfba"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#abfa164a379c0c401a662792d7d0ccfba">arm_compute::Window::shape</a></div><div class="ttdeci">TensorShape shape() const</div><div class="ttdoc">Return the shape of the window in number of steps. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00284">Window.inl:284</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed </div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_a2a42a2a0b91dce5401678766c088dfa7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">arm_compute::CPUInfo::get</a></div><div class="ttdeci">static CPUInfo &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00040">CPPTypes.cpp:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a5d12d4b685a01367a23a1e201300e06b"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a5d12d4b685a01367a23a1e201300e06b">arm_compute::cpu::add_q8_neon_fixedpoint_possible</a></div><div class="ttdeci">bool add_q8_neon_fixedpoint_possible(const ITensorInfo *src0, const ITensorInfo *src1, const ITensorInfo *dst)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00138">impl.cpp:138</a></div></div>
<div class="ttc" id="src_2core_2common_2_registrars_8h_xhtml_a3a2220e83b6758e0efe6d56f089b4eae"><div class="ttname"><a href="src_2core_2common_2_registrars_8h.xhtml#a3a2220e83b6758e0efe6d56f089b4eae">REGISTER_QASYMM8_SVE2</a></div><div class="ttdeci">#define REGISTER_QASYMM8_SVE2(func_name)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2common_2_registrars_8h_source.xhtml#l00119">Registrars.h:119</a></div></div>
<div class="ttc" id="_cpu_add_kernel_8h_xhtml"><div class="ttname"><a href="_cpu_add_kernel_8h.xhtml">CpuAddKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a87d11c1d054cf7db7b82fcba880a823f"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a87d11c1d054cf7db7b82fcba880a823f">arm_compute::cpu::add_qasymm8_sve2</a></div><div class="ttdeci">void add_qasymm8_sve2(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="add_2generic_2sve2_2qasymm8_8cpp_source.xhtml#l00037">qasymm8.cpp:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a0654fca130488c15b4b66a9b7131c142"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a0654fca130488c15b4b66a9b7131c142">arm_compute::Window::num_iterations_total</a></div><div class="ttdeci">size_t num_iterations_total() const</div><div class="ttdoc">Return the total number of iterations needed to iterate through the entire window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00294">Window.inl:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="cpu_2kernels_2add_2list_8h_xhtml"><div class="ttname"><a href="cpu_2kernels_2add_2list_8h.xhtml">list.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6f"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">arm_compute::ConvertPolicy</a></div><div class="ttdeci">ConvertPolicy</div><div class="ttdoc">Policy to handle integer overflow. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00406">Types.h:406</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00201">Validate.h:201</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_p_p_kernel_xhtml_ad6dda2ca87714e265e1521607c2fa7d0"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">arm_compute::ICPPKernel::default_mws</a></div><div class="ttdeci">static constexpr size_t default_mws</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00041">ICPPKernel.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_p_u_info_xhtml_ad7d3ca5154cbb01b5c5a24df54efd348"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">arm_compute::CPUInfo::get_isa</a></div><div class="ttdeci">cpuinfo::CpuIsaInfo get_isa() const</div><div class="ttdoc">Gets the current cpu&amp;#39;s ISA information. </div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00124">CPPTypes.cpp:124</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_abfd7331f875669695cb9af58b5921275"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#abfd7331f875669695cb9af58b5921275">arm_compute::cpu::add_q8_neon_fixedpoint&lt; uint8_t &gt;</a></div><div class="ttdeci">template void add_q8_neon_fixedpoint&lt; uint8_t &gt;(const ITensor *src0, const ITensor *src1, ITensor *dst, const ConvertPolicy &amp;policy, const Window &amp;window)</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_cpu_add_kernel_8cpp.xhtml">CpuAddKernel.cpp</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:48 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
