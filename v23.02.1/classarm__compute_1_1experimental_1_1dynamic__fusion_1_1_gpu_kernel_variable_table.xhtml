<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuKernelVariableTable Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuKernelVariableTable Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A table of all the variables used in the kernel.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml">GpuKernelVariableTable.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A tensor variable whose main purposes are:  <a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad245a484a63ea532ef7e19ca08f8b232"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a> = std::vector&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> &gt;</td></tr>
<tr class="separator:ad245a484a63ea532ef7e19ca08f8b232"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a39a1f311bbee4cf716ef087922948138"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a39a1f311bbee4cf716ef087922948138">declare_variable</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;comp_group, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a> argument_info, const std::string &amp;alias=&quot;unnamed&quot;)</td></tr>
<tr class="memdesc:a39a1f311bbee4cf716ef087922948138"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declare a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> for a corresponding tensor info.  <a href="#a39a1f311bbee4cf716ef087922948138">More...</a><br /></td></tr>
<tr class="separator:a39a1f311bbee4cf716ef087922948138"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad748e7fc875fa3d925950afdebece20d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>) const</td></tr>
<tr class="memdesc:ad748e7fc875fa3d925950afdebece20d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> associated with <code>tensor</code>.  <a href="#ad748e7fc875fa3d925950afdebece20d">More...</a><br /></td></tr>
<tr class="separator:ad748e7fc875fa3d925950afdebece20d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b82aca5d3a4c7da381cd211f45f023f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#a7b82aca5d3a4c7da381cd211f45f023f">get_variable_list</a> (const std::vector&lt; const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;tensors) const</td></tr>
<tr class="memdesc:a7b82aca5d3a4c7da381cd211f45f023f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> list associated with <code>tensors</code>.  <a href="#a7b82aca5d3a4c7da381cd211f45f023f">More...</a><br /></td></tr>
<tr class="separator:a7b82aca5d3a4c7da381cd211f45f023f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A table of all the variables used in the kernel. </p>
<p>Each kernel has exactly one variable table. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml">GpuKernelVariableTable.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad245a484a63ea532ef7e19ca08f8b232"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad245a484a63ea532ef7e19ca08f8b232">&#9670;&nbsp;</a></span>VariableList</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a> =  std::vector&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml#l00068">68</a> of file <a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml">GpuKernelVariableTable.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a39a1f311bbee4cf716ef087922948138"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a1f311bbee4cf716ef087922948138">&#9670;&nbsp;</a></span>declare_variable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void declare_variable </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml">GpuKernelArgumentInfo</a>&#160;</td>
          <td class="paramname"><em>argument_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>alias</em> = <code>&quot;unnamed&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Declare a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> for a corresponding tensor info. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group the tensor belongs to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> info with which the new variable is associated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">argument_info</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class. ">Kernel</a> argument information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alias</td><td>Alias for the variable. Will be used as part of the variable name </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml">GpuKernelVariableTable.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00281">GpuKernelComponentGroup::get_tile_for_tensor()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00309">ITensorInfo::has_valid_id()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a483adb167280ee358ade0b46e6d2ac71">ITensorInfo::id()</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_template_store_8cpp_source.xhtml#l00062">ClTemplateStore::declare_variables()</a>, <a class="el" href="_cl_template_cast_8cpp_source.xhtml#l00127">ClTemplateCast::declare_variables()</a>, <a class="el" href="_cl_template_reshape_8cpp_source.xhtml#l00095">ClTemplateReshape::declare_variables()</a>, <a class="el" href="_cl_template_logits1_d_max_shift_exp_sum_8cpp_source.xhtml#l00192">ClTemplateLogits1DMaxShiftExpSum::declare_variables()</a>, <a class="el" href="_cl_template_logits1_d_norm_8cpp_source.xhtml#l00101">ClTemplateLogits1DNorm::declare_variables()</a>, <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00201">ClTemplateDepthwiseConv2d::declare_variables()</a>, <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00148">ClTemplateElementwiseBinary::declare_variables()</a>, <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00226">ClTemplateDirectConv2d::declare_variables()</a>, <a class="el" href="_cl_template_resize_8cpp_source.xhtml#l00179">ClTemplateResize::declare_variables()</a>, <a class="el" href="_cl_template_activation_8cpp_source.xhtml#l00103">ClTemplateActivation::declare_variables()</a>, and <a class="el" href="_cl_template_pool2d_8cpp_source.xhtml#l00365">ClTemplatePool2d::declare_variables()</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(!<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;has_valid_id(), <span class="stringliteral">&quot;Tensor info with valid id expected&quot;</span>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="comment">// Do not re-declare if the variable associated with the tensor has already been declared</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">auto</span> it = _vars.find(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id());</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">if</span>(it != _vars.end())</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!(it-&gt;second.kernel_argument_info == argument_info));</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> target = comp_group.get_tile_for_tensor(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span>(target != <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// If the tensor uses a shared tile, don&#39;t declare another variable.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        it = _vars.find(target-&gt;id());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            it == _vars.end(),</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="stringliteral">&quot;The variable used for this tensor must have been declared.&quot;</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        _vars[<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id()] = it-&gt;second;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Declare variable associated with the tensor</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        ss &lt;&lt; alias &lt;&lt; <span class="stringliteral">&quot;_t&quot;</span> &lt;&lt; abs(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>     uniq_name = ss.str();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        TensorVariable var{ <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id(), uniq_name, argument_info };</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        _vars.emplace(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id(), var);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad748e7fc875fa3d925950afdebece20d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad748e7fc875fa3d925950afdebece20d">&#9670;&nbsp;</a></span>get_variable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">GpuKernelVariableTable::TensorVariable</a> get_variable </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> associated with <code>tensor</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> info to be queried</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml" title="A tensor variable whose main purposes are: ">TensorVariable</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml">GpuKernelVariableTable.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a483adb167280ee358ade0b46e6d2ac71">ITensorInfo::id()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_template_store_8cpp_source.xhtml#l00076">ClTemplateStore::get_tag_lut()</a>, <a class="el" href="_cl_template_cast_8cpp_source.xhtml#l00142">ClTemplateCast::get_tag_lut()</a>, <a class="el" href="_cl_template_logits1_d_max_shift_exp_sum_8cpp_source.xhtml#l00213">ClTemplateLogits1DMaxShiftExpSum::get_tag_lut()</a>, <a class="el" href="_cl_template_logits1_d_norm_8cpp_source.xhtml#l00122">ClTemplateLogits1DNorm::get_tag_lut()</a>, <a class="el" href="_cl_template_reshape_8cpp_source.xhtml#l00110">ClTemplateReshape::get_tag_lut()</a>, <a class="el" href="_cl_template_depthwise_conv2d_8cpp_source.xhtml#l00238">ClTemplateDepthwiseConv2d::get_tag_lut()</a>, <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00169">ClTemplateElementwiseBinary::get_tag_lut()</a>, <a class="el" href="_cl_template_direct_conv2d_8cpp_source.xhtml#l00256">ClTemplateDirectConv2d::get_tag_lut()</a>, <a class="el" href="_cl_template_resize_8cpp_source.xhtml#l00194">ClTemplateResize::get_tag_lut()</a>, <a class="el" href="_cl_template_activation_8cpp_source.xhtml#l00118">ClTemplateActivation::get_tag_lut()</a>, <a class="el" href="_cl_template_pool2d_8cpp_source.xhtml#l00380">ClTemplatePool2d::get_tag_lut()</a>, <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00121">ClTemplateWriter::get_tensors()</a>, and <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00079">GpuKernelVariableTable::get_variable_list()</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> var = _vars.at(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;id());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> var;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7b82aca5d3a4c7da381cd211f45f023f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b82aca5d3a4c7da381cd211f45f023f">&#9670;&nbsp;</a></span>get_variable_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">GpuKernelVariableTable::VariableList</a> get_variable_list </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_1_1_tensor_variable.xhtml">TensorVariable</a> list associated with <code>tensors</code>. </p>
<dl class="section note"><dt>Note</dt><dd>Empty tensors are skipped</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td>List of tensor infos to be queried</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>VariableList </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml">GpuKernelVariableTable.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00073">GpuKernelVariableTable::get_variable()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00066">tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_template_writer_8cpp_source.xhtml#l00121">ClTemplateWriter::get_tensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">VariableList</a> vars{};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> : tensors)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;has_valid_id())</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        vars.push_back(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">get_variable</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>));</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> vars;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad748e7fc875fa3d925950afdebece20d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad748e7fc875fa3d925950afdebece20d">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::get_variable</a></div><div class="ttdeci">TensorVariable get_variable(const ITensorInfo *tensor) const</div><div class="ttdoc">Get the TensorVariable associated with tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8cpp_source.xhtml#l00073">GpuKernelVariableTable.cpp:73</a></div></div>
<div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table_xhtml_ad245a484a63ea532ef7e19ca08f8b232"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml#ad245a484a63ea532ef7e19ca08f8b232">arm_compute::experimental::dynamic_fusion::GpuKernelVariableTable::VariableList</a></div><div class="ttdeci">std::vector&lt; TensorVariable &gt; VariableList</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00068">GpuKernelVariableTable.h:68</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/template_writer/<a class="el" href="_gpu_kernel_variable_table_8h_source.xhtml">GpuKernelVariableTable.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/template_writer/<a class="el" href="_gpu_kernel_variable_table_8cpp_source.xhtml">GpuKernelVariableTable.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:25:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
