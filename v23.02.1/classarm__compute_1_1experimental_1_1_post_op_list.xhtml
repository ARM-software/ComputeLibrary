<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PostOpList&lt; TensorRelatedT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1_post_op_list.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">PostOpList&lt; TensorRelatedT &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A sequence of PostOps that can be appended to the end of other operators.  
 <a href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad76395cc131632518182f35165c86756"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ad76395cc131632518182f35165c86756">PostOpList</a> ()=default</td></tr>
<tr class="memdesc:ad76395cc131632518182f35165c86756"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ad76395cc131632518182f35165c86756">More...</a><br /></td></tr>
<tr class="separator:ad76395cc131632518182f35165c86756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41e73fbe644dbcd5ffdc6662425f9643"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a41e73fbe644dbcd5ffdc6662425f9643">~PostOpList</a> ()=default</td></tr>
<tr class="memdesc:a41e73fbe644dbcd5ffdc6662425f9643"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a41e73fbe644dbcd5ffdc6662425f9643">More...</a><br /></td></tr>
<tr class="separator:a41e73fbe644dbcd5ffdc6662425f9643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54fb99ba7bce018b8e47c3d9a48494d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ab54fb99ba7bce018b8e47c3d9a48494d">PostOpList</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;other)</td></tr>
<tr class="separator:ab54fb99ba7bce018b8e47c3d9a48494d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5329815852cf14aad3f06740b676126d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a5329815852cf14aad3f06740b676126d">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;other)</td></tr>
<tr class="separator:a5329815852cf14aad3f06740b676126d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6a08a10b683591bcc3b3ebbb2354263"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ad6a08a10b683591bcc3b3ebbb2354263">PostOpList</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:ad6a08a10b683591bcc3b3ebbb2354263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cbafd87a3d72b1843bddb2cb7ceb7f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a4cbafd87a3d72b1843bddb2cb7ceb7f9">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a4cbafd87a3d72b1843bddb2cb7ceb7f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9de38052dfbcc0bce1fb5c666a797158"><td class="memTemplParams" colspan="2">template&lt;typename OpT , typename... Args&gt; </td></tr>
<tr class="memitem:a9de38052dfbcc0bce1fb5c666a797158"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a9de38052dfbcc0bce1fb5c666a797158">push_back_op</a> (Args &amp;&amp;... args)</td></tr>
<tr class="memdesc:a9de38052dfbcc0bce1fb5c666a797158"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new post op at the end of the list.  <a href="#a9de38052dfbcc0bce1fb5c666a797158">More...</a><br /></td></tr>
<tr class="separator:a9de38052dfbcc0bce1fb5c666a797158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of post ops.  <a href="#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de3d069f40f7e1cef80aea821389c74"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#a1de3d069f40f7e1cef80aea821389c74">total_num_arguments</a> () const</td></tr>
<tr class="memdesc:a1de3d069f40f7e1cef80aea821389c74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total number of post ops.  <a href="#a1de3d069f40f7e1cef80aea821389c74">More...</a><br /></td></tr>
<tr class="separator:a1de3d069f40f7e1cef80aea821389c74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af66f211b8c6c1cf20b9837e1b0e046f2"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt; TensorRelatedT &gt; &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#af66f211b8c6c1cf20b9837e1b0e046f2">get_list</a> ()</td></tr>
<tr class="memdesc:af66f211b8c6c1cf20b9837e1b0e046f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the underlying post op list.  <a href="#af66f211b8c6c1cf20b9837e1b0e046f2">More...</a><br /></td></tr>
<tr class="separator:af66f211b8c6c1cf20b9837e1b0e046f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8af7fc96d6346323bf891481f6070a9"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::unique_ptr&lt; <a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt; TensorRelatedT &gt; &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ab8af7fc96d6346323bf891481f6070a9">get_list</a> () const</td></tr>
<tr class="separator:ab8af7fc96d6346323bf891481f6070a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TensorRelatedT&gt;<br />
class arm_compute::experimental::PostOpList&lt; TensorRelatedT &gt;</h3>

<p>A sequence of PostOps that can be appended to the end of other operators. </p>

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00119">119</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad76395cc131632518182f35165c86756"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad76395cc131632518182f35165c86756">&#9670;&nbsp;</a></span>PostOpList() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="a41e73fbe644dbcd5ffdc6662425f9643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41e73fbe644dbcd5ffdc6662425f9643">&#9670;&nbsp;</a></span>~PostOpList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<a id="ab54fb99ba7bce018b8e47c3d9a48494d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab54fb99ba7bce018b8e47c3d9a48494d">&#9670;&nbsp;</a></span>PostOpList() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&lt; TensorRelatedT &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00126">126</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;op : other._post_ops)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            this-&gt;_post_ops.push_back(op-&gt;clone());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad6a08a10b683591bcc3b3ebbb2354263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6a08a10b683591bcc3b3ebbb2354263">&#9670;&nbsp;</a></span>PostOpList() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&lt; TensorRelatedT &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af66f211b8c6c1cf20b9837e1b0e046f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af66f211b8c6c1cf20b9837e1b0e046f2">&#9670;&nbsp;</a></span>get_list() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt;TensorRelatedT&gt; &gt; &gt;&amp; get_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the underlying post op list. </p>

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00165">165</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00096">PostOpCLKernelUtils::are_post_op_shapes_compliant()</a>, <a class="el" href="_post_op_utils_8h_source.xhtml#l00087">arm_compute::experimental::get_post_op_sequence()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00132">PostOpCLKernelUtils::set_post_ops_cl_build_options()</a>, and <a class="el" href="_post_op_utils_8h_source.xhtml#l00042">arm_compute::experimental::transform_post_op_list_arguments()</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> _post_ops;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ab8af7fc96d6346323bf891481f6070a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8af7fc96d6346323bf891481f6070a9">&#9670;&nbsp;</a></span>get_list() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;std::unique_ptr&lt;<a class="el" href="structarm__compute_1_1experimental_1_1_i_post_op.xhtml">IPostOp</a>&lt;TensorRelatedT&gt; &gt; &gt;&amp; get_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00169">169</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> _post_ops;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a5329815852cf14aad3f06740b676126d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5329815852cf14aad3f06740b676126d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&lt; TensorRelatedT &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00133">133</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ad76395cc131632518182f35165c86756">PostOpList</a> tmp{ other };</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#ae70b8de3a0b147a476cabb07b8707d7f">std::swap</a>(tmp, *<span class="keyword">this</span>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1_post_op_list_xhtml_ad76395cc131632518182f35165c86756"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml#ad76395cc131632518182f35165c86756">arm_compute::experimental::PostOpList::PostOpList</a></div><div class="ttdeci">PostOpList()=default</div><div class="ttdoc">Constructor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae70b8de3a0b147a476cabb07b8707d7f"><div class="ttname"><a href="namespacearm__compute.xhtml#ae70b8de3a0b147a476cabb07b8707d7f">arm_compute::swap</a></div><div class="ttdeci">void swap(Window &amp;lhs, Window &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00304">Window.inl:304</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4cbafd87a3d72b1843bddb2cb7ceb7f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cbafd87a3d72b1843bddb2cb7ceb7f9">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a>&lt; TensorRelatedT &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9de38052dfbcc0bce1fb5c666a797158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9de38052dfbcc0bce1fb5c666a797158">&#9670;&nbsp;</a></span>push_back_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void push_back_op </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a new post op at the end of the list. </p>

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00144">144</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00211">arm_compute::test::validation::DATA_TEST_CASE()</a>, and <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00290">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        _post_ops.push_back(std::make_unique&lt;OpT&gt;(std::forward&lt;Args&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)...));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a259cb5a711406a8c3e5d937eb9350cca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259cb5a711406a8c3e5d937eb9350cca">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of post ops. </p>

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00150">150</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00121">PostOpCLKernelUtils::is_post_op_sequence_supported()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00132">PostOpCLKernelUtils::set_post_ops_cl_build_options()</a>, and <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00129">CLConvolutionLayer::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> _post_ops.size();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a1de3d069f40f7e1cef80aea821389c74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de3d069f40f7e1cef80aea821389c74">&#9670;&nbsp;</a></span>total_num_arguments()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t total_num_arguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Total number of post ops. </p>

<p class="definition">Definition at line <a class="el" href="_i_post_op_8h_source.xhtml#l00156">156</a> of file <a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a48e7832f8e28c3f7fc0ded12467f8bb0">std::accumulate</a>(_post_ops.begin(), _post_ops.end(), 0, [](<span class="keywordtype">size_t</span> op1_arity, <span class="keyword">const</span> <span class="keyword">auto</span> &amp; op2)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">return</span> op1_arity + op2-&gt;arity();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        });</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a48e7832f8e28c3f7fc0ded12467f8bb0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a48e7832f8e28c3f7fc0ded12467f8bb0">arm_compute::test::validation::reference::accumulate</a></div><div class="ttdeci">SimpleTensor&lt; T2 &gt; accumulate(const SimpleTensor&lt; T1 &gt; &amp;src, DataType output_data_type)</div><div class="ttdef"><b>Definition:</b> <a href="_accumulate_8cpp_source.xhtml#l00038">Accumulate.cpp:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/experimental/<a class="el" href="_i_post_op_8h_source.xhtml">IPostOp.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">PostOpList</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:25:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
