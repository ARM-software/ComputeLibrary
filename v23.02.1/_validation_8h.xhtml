<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/Validation.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_validation_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Validation.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_i_array_8h_source.xhtml">arm_compute/core/IArray.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_toolchain_support_8h_source.xhtml">support/ToolchainSupport.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_i_accessor_8h_source.xhtml">tests/IAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_simple_tensor_8h_source.xhtml">tests/SimpleTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2_types_8h_source.xhtml">tests/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2_utils_8h_source.xhtml">tests/Utils.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_exceptions_8h_source.xhtml">tests/framework/Exceptions.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="utils_2_type_printer_8h_source.xhtml">utils/TypePrinter.h</a>&quot;</code><br />
<code>#include &lt;iomanip&gt;</code><br />
<code>#include &lt;ios&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
</div>
<p><a href="_validation_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml">AbsoluteTolerance&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class reprensenting an absolute tolerance value.  <a href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml">RelativeTolerance&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class reprensenting a relative tolerance value.  <a href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare__base.xhtml">compare_base&lt; T &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare.xhtml">compare&lt; T &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare values with an absolute tolerance.  <a href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_absolute_tolerance_3_01_u_01_4_01_4.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml">compare&lt; RelativeTolerance&lt; U &gt; &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare values with a relative tolerance.  <a href="structarm__compute_1_1test_1_1validation_1_1compare_3_01_relative_tolerance_3_01_u_01_4_01_4.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab6d7586446a24baaa269c5f9a65ecd7f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab6d7586446a24baaa269c5f9a65ecd7f"><td class="memTemplItemLeft" align="right" valign="top">inline ::std::ostream &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab6d7586446a24baaa269c5f9a65ecd7f">operator&lt;&lt;</a> (::std::ostream &amp;os, const AbsoluteTolerance&lt; T &gt; &amp;tolerance)</td></tr>
<tr class="memdesc:ab6d7586446a24baaa269c5f9a65ecd7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print <a class="el" href="classarm__compute_1_1test_1_1validation_1_1_absolute_tolerance.xhtml" title="Class reprensenting an absolute tolerance value. ">AbsoluteTolerance</a> type.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab6d7586446a24baaa269c5f9a65ecd7f">More...</a><br /></td></tr>
<tr class="separator:ab6d7586446a24baaa269c5f9a65ecd7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e05c35e20ad8ca67a4fbdd57e33ac8c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5e05c35e20ad8ca67a4fbdd57e33ac8c"><td class="memTemplItemLeft" align="right" valign="top">inline ::std::ostream &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5e05c35e20ad8ca67a4fbdd57e33ac8c">operator&lt;&lt;</a> (::std::ostream &amp;os, const RelativeTolerance&lt; T &gt; &amp;tolerance)</td></tr>
<tr class="memdesc:a5e05c35e20ad8ca67a4fbdd57e33ac8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print <a class="el" href="classarm__compute_1_1test_1_1validation_1_1_relative_tolerance.xhtml" title="Class reprensenting a relative tolerance value. ">RelativeTolerance</a> type.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5e05c35e20ad8ca67a4fbdd57e33ac8c">More...</a><br /></td></tr>
<tr class="separator:a5e05c35e20ad8ca67a4fbdd57e33ac8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea1f11d8f6aab979e9d4dc61c26aed65"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aea1f11d8f6aab979e9d4dc61c26aed65"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aea1f11d8f6aab979e9d4dc61c26aed65">compare_dimensions</a> (const Dimensions&lt; T &gt; &amp;dimensions1, const Dimensions&lt; T &gt; &amp;dimensions2, const DataLayout &amp;data_layout=DataLayout::NCHW)</td></tr>
<tr class="separator:aea1f11d8f6aab979e9d4dc61c26aed65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7730e17dc901bdffefcf45b08bab135f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7730e17dc901bdffefcf45b08bab135f">validate</a> (const <a class="el" href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a> &amp;region, const <a class="el" href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a> &amp;reference)</td></tr>
<tr class="memdesc:a7730e17dc901bdffefcf45b08bab135f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate valid regions.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7730e17dc901bdffefcf45b08bab135f">More...</a><br /></td></tr>
<tr class="separator:a7730e17dc901bdffefcf45b08bab135f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf9a1249c175fca84f5bd15907291305"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf9a1249c175fca84f5bd15907291305">validate</a> (const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">arm_compute::PaddingSize</a> &amp;padding, const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">arm_compute::PaddingSize</a> &amp;reference)</td></tr>
<tr class="memdesc:adf9a1249c175fca84f5bd15907291305"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate padding.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf9a1249c175fca84f5bd15907291305">More...</a><br /></td></tr>
<tr class="separator:adf9a1249c175fca84f5bd15907291305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988c4a67dfa987caea90f71a4ad3a8b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a988c4a67dfa987caea90f71a4ad3a8b5">validate</a> (const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">arm_compute::PaddingSize</a> &amp;padding, const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">arm_compute::PaddingSize</a> &amp;width_reference, const <a class="el" href="namespacearm__compute.xhtml#a4467b302fc9ec312c40580336ab783da">arm_compute::PaddingSize</a> &amp;height_reference)</td></tr>
<tr class="memdesc:a988c4a67dfa987caea90f71a4ad3a8b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate padding.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a988c4a67dfa987caea90f71a4ad3a8b5">More...</a><br /></td></tr>
<tr class="separator:a988c4a67dfa987caea90f71a4ad3a8b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa24df7339d073ba83dae2de61cc80416"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U  = AbsoluteTolerance&lt;T&gt;&gt; </td></tr>
<tr class="memitem:aa24df7339d073ba83dae2de61cc80416"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa24df7339d073ba83dae2de61cc80416">validate</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const SimpleTensor&lt; T &gt; &amp;reference, U tolerance_value=U(), float tolerance_number=0.f, float absolute_tolerance_value=0.f)</td></tr>
<tr class="memdesc:aa24df7339d073ba83dae2de61cc80416"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa24df7339d073ba83dae2de61cc80416">More...</a><br /></td></tr>
<tr class="separator:aa24df7339d073ba83dae2de61cc80416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a7133ce9111c2d17597730ae3629b87"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U  = AbsoluteTolerance&lt;T&gt;&gt; </td></tr>
<tr class="memitem:a0a7133ce9111c2d17597730ae3629b87"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a7133ce9111c2d17597730ae3629b87">validate</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const SimpleTensor&lt; T &gt; &amp;reference, const ValidRegion &amp;valid_region, U tolerance_value=U(), float tolerance_number=0.f, float absolute_tolerance_value=0.f)</td></tr>
<tr class="memdesc:a0a7133ce9111c2d17597730ae3629b87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate tensors with valid region.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a7133ce9111c2d17597730ae3629b87">More...</a><br /></td></tr>
<tr class="separator:a0a7133ce9111c2d17597730ae3629b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98de28726e7f2151e37de88468d7c8ae"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U  = AbsoluteTolerance&lt;T&gt;&gt; </td></tr>
<tr class="memitem:a98de28726e7f2151e37de88468d7c8ae"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a98de28726e7f2151e37de88468d7c8ae">validate</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const SimpleTensor&lt; T &gt; &amp;reference, const SimpleTensor&lt; T &gt; &amp;valid_mask, U tolerance_value=U(), float tolerance_number=0.f, float absolute_tolerance_value=0.f)</td></tr>
<tr class="memdesc:a98de28726e7f2151e37de88468d7c8ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate tensors with valid mask.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a98de28726e7f2151e37de88468d7c8ae">More...</a><br /></td></tr>
<tr class="separator:a98de28726e7f2151e37de88468d7c8ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8ca0b3d47827b9574e21e9d73cab6a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e8ca0b3d47827b9574e21e9d73cab6a">validate</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const void *reference_value)</td></tr>
<tr class="memdesc:a1e8ca0b3d47827b9574e21e9d73cab6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate tensors against constant value.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e8ca0b3d47827b9574e21e9d73cab6a">More...</a><br /></td></tr>
<tr class="separator:a1e8ca0b3d47827b9574e21e9d73cab6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47bc8966b6ed3446daaf27aa413047c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47bc8966b6ed3446daaf27aa413047c1">validate</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, BorderSize border_size, const BorderMode &amp;border_mode, const void *border_value)</td></tr>
<tr class="memdesc:a47bc8966b6ed3446daaf27aa413047c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate border against a constant value.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47bc8966b6ed3446daaf27aa413047c1">More...</a><br /></td></tr>
<tr class="separator:a47bc8966b6ed3446daaf27aa413047c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c4e463dd04d06dc641fe48308e13334"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c4e463dd04d06dc641fe48308e13334">validate</a> (std::vector&lt; unsigned int &gt; classified_labels, std::vector&lt; unsigned int &gt; expected_labels)</td></tr>
<tr class="memdesc:a6c4e463dd04d06dc641fe48308e13334"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate classified labels against expected ones.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c4e463dd04d06dc641fe48308e13334">More...</a><br /></td></tr>
<tr class="separator:a6c4e463dd04d06dc641fe48308e13334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c19347e16069660a1a3ae62e1d607ee"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U  = AbsoluteTolerance&lt;T&gt;&gt; </td></tr>
<tr class="memitem:a6c19347e16069660a1a3ae62e1d607ee"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c19347e16069660a1a3ae62e1d607ee">validate</a> (T target, T reference, U tolerance=AbsoluteTolerance&lt; T &gt;())</td></tr>
<tr class="memdesc:a6c19347e16069660a1a3ae62e1d607ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate float value.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c19347e16069660a1a3ae62e1d607ee">More...</a><br /></td></tr>
<tr class="separator:a6c19347e16069660a1a3ae62e1d607ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ee57e5e1f775f2c270c4adf0b4940a7"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename  = typename std::enable_if&lt;std::is_integral&lt;T&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:a1ee57e5e1f775f2c270c4adf0b4940a7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ee57e5e1f775f2c270c4adf0b4940a7">validate_wrap</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const SimpleTensor&lt; T &gt; &amp;reference, U tolerance_value, float tolerance_number)</td></tr>
<tr class="separator:a1ee57e5e1f775f2c270c4adf0b4940a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad942ec0b881182d0771083c811822bb8"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename  = typename std::enable_if&lt;std::is_integral&lt;T&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:ad942ec0b881182d0771083c811822bb8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad942ec0b881182d0771083c811822bb8">validate_wrap</a> (const IAccessor &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, const SimpleTensor&lt; T &gt; &amp;reference, const ValidRegion &amp;valid_region, U tolerance_value, float tolerance_number)</td></tr>
<tr class="separator:ad942ec0b881182d0771083c811822bb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c338bd61fcc9acab23cf1bb8bb57539"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U &gt; </td></tr>
<tr class="memitem:a5c338bd61fcc9acab23cf1bb8bb57539"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5c338bd61fcc9acab23cf1bb8bb57539">validate_min_max_loc</a> (const MinMaxLocationValues&lt; T &gt; &amp;target, const MinMaxLocationValues&lt; U &gt; &amp;reference)</td></tr>
<tr class="separator:a5c338bd61fcc9acab23cf1bb8bb57539"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="_validation_8h.xhtml">Validation.h</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
