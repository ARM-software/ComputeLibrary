<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_mobilenet_v2.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph__mobilenet__v2_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_mobilenet_v2.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__mobilenet__v2_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/** Example demonstrating how to implement MobileNetV2&#39;s network using the Compute Library&#39;s graph API */</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>GraphMobilenetV2Example : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    GraphMobilenetV2Example()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : cmd_parser(), common_opts(cmd_parser), common_params(), graph(0, <span class="stringliteral">&quot;MobileNetV2&quot;</span>)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    GraphMobilenetV2Example(<span class="keyword">const</span> GraphMobilenetV2Example &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    GraphMobilenetV2Example &amp;operator=(<span class="keyword">const</span> GraphMobilenetV2Example &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    ~GraphMobilenetV2Example() <span class="keyword">override</span>                                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="comment">// Parse arguments</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        cmd_parser.parse(argc, argv);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        cmd_parser.validate();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment">// Consume common parameters</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        common_params = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">consume_common_graph_parameters</a>(common_opts);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// Return when help menu is requested</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span>(common_params.help)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            cmd_parser.print_help(argv[0]);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Print parameter values</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::cout &lt;&lt; common_params &lt;&lt; std::endl;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="comment">// Create input descriptor</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> tensor_shape     = <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">permute_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(224U, 224U, 3U, common_params.batches), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>, common_params.data_layout);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>  input_descriptor = <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>(tensor_shape, common_params.data_type).<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">set_layout</a>(common_params.data_layout);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">// Set graph hints</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        graph &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2a7ca82c5e74421cb45f17e936abf964">target</a></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;              &lt;&lt; common_params.fast_math_hint;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// Create core graph</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a>(common_params.data_type))</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            create_graph_float(input_descriptor);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            create_graph_qasymm8(input_descriptor);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">// Create common tail</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">ReshapeLayer</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(1001U)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Predictions/Reshape&quot;</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">SoftmaxLayer</a>().<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Predictions/Softmax&quot;</span>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">OutputLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">get_output_accessor</a>(common_params, 5));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment">// Finalize graph</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> config;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a> = common_params.threads;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">use_tuner</a>   = common_params.enable_tuner;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">tuner_mode</a>  = common_params.tuner_mode;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>  = common_params.tuner_file;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">mlgo_file</a>   = common_params.mlgo_file;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        graph.finalize(common_params.target, config);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Run graph</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        graph.run();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a>  cmd_parser;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> common_opts;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a>  common_params;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">Stream</a>             graph;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">enum class</span> IsResidual</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        Yes,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        No</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    };</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">enum class</span> HasExpand</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        Yes,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        No</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    };</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> create_graph_float(<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;input_descriptor)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// Create model path</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keyword">const</span> std::string model_path = <span class="stringliteral">&quot;/cnn_data/mobilenet_v2_1.0_224_model/&quot;</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Create a preprocessor object</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        std::unique_ptr&lt;IPreprocessor&gt; preprocessor = std::make_unique&lt;TFPreproccessor&gt;();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="comment">// Get trainable parameters data path</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        std::string data_path = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d">data_path</a>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment">// Add model path to data path</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">if</span>(!data_path.empty())</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            data_path += model_path;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a>(input_descriptor, <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">get_input_accessor</a>(common_params, std::move(preprocessor), <span class="keyword">false</span>))</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(3U, 3U, 32U,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                  std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>))</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv&quot;</span>)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                         0.0010000000474974513f)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv/BatchNorm&quot;</span>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>, 6.f))</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv/Relu6&quot;</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv&quot;</span>, 32U, 16U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_1&quot;</span>, 16U, 24U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>), HasExpand::Yes);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_2&quot;</span>, 24U, 24U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_3&quot;</span>, 24U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>), HasExpand::Yes);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_4&quot;</span>, 32U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_5&quot;</span>, 32U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_6&quot;</span>, 32U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>), HasExpand::Yes);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_7&quot;</span>, 64U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_8&quot;</span>, 64U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_9&quot;</span>, 64U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_10&quot;</span>, 64U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_11&quot;</span>, 96U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_12&quot;</span>, 96U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_13&quot;</span>, 96U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>), HasExpand::Yes);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_14&quot;</span>, 160U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_15&quot;</span>, 160U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes, IsResidual::Yes);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        get_expanded_conv_float(data_path, <span class="stringliteral">&quot;expanded_conv_16&quot;</span>, 160U, 320U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), HasExpand::Yes);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, 1280U,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                  std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv_1&quot;</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                         <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                         0.0010000000474974513f)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv_1/BatchNorm&quot;</span>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>, 6.f))</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv_1/Relu6&quot;</span>)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">PoolingType::AVG</a>, common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">data_layout</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Logits/AvgPool&quot;</span>)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, 1001U,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Logits_Conv2d_1c_1x1_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Logits_Conv2d_1c_1x1_biases.npy&quot;</span>),</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Logits/Conv2d_1c_1x1&quot;</span>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">void</span> get_expanded_conv_float(<span class="keyword">const</span> std::string &amp;data_path, std::string &amp;&amp;param_path,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_channels, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_channels,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                 <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> dwc_pad_stride_info,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                 HasExpand has_expand = HasExpand::No, IsResidual is_residual = IsResidual::No,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> expansion_size = 6)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        std::string total_path = param_path + <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a>   left(graph);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="comment">// Add expand node</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">if</span>(has_expand == HasExpand::Yes)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            left &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, input_channels * expansion_size,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                     <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;expand_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                     std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                 .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/expand/Conv2D&quot;</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                 &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;expand_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;expand_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;expand_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                            <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;expand_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                            0.0010000000474974513f)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                 .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/expand/BatchNorm&quot;</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                 &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>, 6.f))</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                 .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/expand/Relu6&quot;</span>);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">// Add depthwise node</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        left &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">DepthwiseConvolutionLayer</a>(3U, 3U,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                          <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_depthwise_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                          std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>),</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                          dwc_pad_stride_info)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/depthwise/depthwise&quot;</span>)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                        0.0010000000474974513f)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/depthwise/BatchNorm&quot;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>, 6.f))</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/depthwise/Relu6&quot;</span>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">// Add project node</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        left &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, output_channels,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_weights.npy&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>),</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                 std::unique_ptr&lt;arm_compute::graph::ITensorAccessor&gt;(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0))</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/project/Conv2D&quot;</span>)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_BatchNorm_moving_mean.npy&quot;</span>),</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_BatchNorm_moving_variance.npy&quot;</span>),</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_BatchNorm_gamma.npy&quot;</span>),</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                        <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_BatchNorm_beta.npy&quot;</span>),</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                        0.0010000000474974513)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/project/BatchNorm&quot;</span>);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">if</span>(is_residual == IsResidual::Yes)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="comment">// Add residual node</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> right(graph);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer.xhtml">EltwiseLayer</a>(std::move(left), std::move(right), EltwiseOperation::Add).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/add&quot;</span>);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            graph.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a3d1067259b70c7d8753be5062a4b9f6d">forward_tail</a>(left.tail_node());</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordtype">void</span> create_graph_qasymm8(<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;input_descriptor)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="comment">// Create model path</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">const</span> std::string model_path = <span class="stringliteral">&quot;/cnn_data/mobilenet_v2_1.0_224_quantized_model/&quot;</span>;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="comment">// Get trainable parameters data path</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        std::string data_path = common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d">data_path</a>;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="comment">// Add model path to data path</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">if</span>(!data_path.empty())</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            data_path += model_path;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> in_quant_info  = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0078125f, 128);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> mid_quant_info = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.023528477177023888f, 128);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">const</span> std::vector&lt;QuantizationInfo&gt; conv_weights_quant_info =</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.03396892547607422f, 122),  <span class="comment">// Conv</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.005167067516595125f, 125), <span class="comment">// Conv1</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0016910821432247758f, 113) <span class="comment">// Conv2d_1c_1x1</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        };</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="comment">// Pointwise expand convolution quantization info</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keyword">const</span> std::vector&lt;QuantizationInfo&gt; pwc_q =</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.254282623529f, 129),        <span class="comment">// expand_0 (Dummy)</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.009758507832884789f, 127),  <span class="comment">// expand_1</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0036556976847350597f, 144), <span class="comment">// expand_2</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0029988749884068966f, 104), <span class="comment">// expand_3</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0019244228024035692f, 128), <span class="comment">// expand_4</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0013649158645421267f, 135), <span class="comment">// expand_5</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0019170437008142471f, 127), <span class="comment">// expand_6</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0015538912266492844f, 125), <span class="comment">// expand_7</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0014702979242429137f, 134), <span class="comment">// expand_8</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0013733493397012353f, 127), <span class="comment">// expand_9</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0016282502328976989f, 131), <span class="comment">// expand_10</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0016309921629726887f, 134), <span class="comment">// expand_11</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0018258779309689999f, 138), <span class="comment">// expand_12</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0013828007504343987f, 123), <span class="comment">// expand_13</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0020222084131091833f, 135), <span class="comment">// expand_14</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.04281935095787048f, 102),   <span class="comment">// expand_15</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.002046825597062707f, 135)   <span class="comment">// expand_16</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        };</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="comment">// Depthwise expand convolution quantization info</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keyword">const</span> std::vector&lt;QuantizationInfo&gt; dwc_q =</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.3436955213546753f, 165),   <span class="comment">// expand_0</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.020969120785593987f, 109), <span class="comment">// expand_1</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.16981913149356842f, 52),   <span class="comment">// expand_2</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.017202870920300484f, 143), <span class="comment">// expand_3</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.06525065749883652f, 118),  <span class="comment">// expand_4</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.07909784466028214f, 95),   <span class="comment">// expand_5</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.010087885893881321f, 127), <span class="comment">// expand_6</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.06092711538076401f, 110),  <span class="comment">// expand_7</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.052407849580049515f, 133), <span class="comment">// expand_8</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.04077887907624245f, 155),  <span class="comment">// expand_9</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.031107846647500992f, 143), <span class="comment">// expand_10</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.07080810517072678f, 66),   <span class="comment">// expand_11</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.07448793947696686f, 159),  <span class="comment">// expand_12</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.01525793131440878f, 92),   <span class="comment">// expand_13</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.04166752099990845f, 147),  <span class="comment">// expand_14</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.04281935095787048f, 102),  <span class="comment">// expand_15</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.16456253826618195, 201)    <span class="comment">// expand_16</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        };</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="comment">// Project convolution quantization info</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keyword">const</span> std::vector&lt;QuantizationInfo&gt; prwc_q =</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.03737175464630127f, 140),  <span class="comment">// expand_0</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.0225360207259655f, 156),   <span class="comment">// expand_1</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.02740888111293316f, 122),  <span class="comment">// expand_2</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.016844693571329117f, 111), <span class="comment">// expand_3</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.019062912091612816f, 146), <span class="comment">// expand_4</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.018293123692274094f, 128), <span class="comment">// expand_5</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.014601286500692368f, 147), <span class="comment">// expand_6</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.016782939434051514f, 124), <span class="comment">// expand_7</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.012898261658847332f, 125), <span class="comment">// expand_8</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.019561484456062317f, 144), <span class="comment">// expand_9</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.007436311338096857f, 129), <span class="comment">// expand_10</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.00838223285973072f, 136),  <span class="comment">// expand_11</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.023982593789696693f, 154), <span class="comment">// expand_12</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.009447949007153511f, 140), <span class="comment">// expand_13</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.00789870135486126f, 139),  <span class="comment">// expand_14</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.03697410225868225f, 131),  <span class="comment">// expand_15</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(0.008009289391338825f, 111)  <span class="comment">// expand_16</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        };</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a>(input_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#afe5692937b0558d4cffe2d4fee57d581">set_quantization_info</a>(in_quant_info),</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                            <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a96b4a087acee7543a7624102a67fc14d">image</a>))</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                  3U, 3U, 32U,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_weights.npy&quot;</span>),</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_bias.npy&quot;</span>),</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2U, 2U, 0U, 1U, 0U, 1U, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>),</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                  1, conv_weights_quant_info.at(0), mid_quant_info)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;              .set_name(<span class="stringliteral">&quot;Conv&quot;</span>)</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 6.f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv/Relu6&quot;</span>)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">DepthwiseConvolutionLayer</a>(3U, 3U,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                           <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;expanded_conv_depthwise_depthwise_weights.npy&quot;</span>),</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                           <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;expanded_conv_depthwise_depthwise_biases.npy&quot;</span>),</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                           <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), 1, dwc_q.at(0))</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;              .set_name(<span class="stringliteral">&quot;expanded_conv/depthwise/depthwise&quot;</span>)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 6.f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;expanded_conv/depthwise/Relu6&quot;</span>)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, 16U,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;expanded_conv_project_weights.npy&quot;</span>),</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;expanded_conv_project_biases.npy&quot;</span>),</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0), 1, prwc_q.at(0))</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;              .set_name(<span class="stringliteral">&quot;expanded_conv/project/Conv2D&quot;</span>);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_1&quot;</span>, IsResidual::No, 96U, 24U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>),</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                                  pwc_q.at(1), dwc_q.at(1), prwc_q.at(1));</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_2&quot;</span>, IsResidual::Yes, 144U, 24U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(2), dwc_q.at(2), prwc_q.at(2));</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_3&quot;</span>, IsResidual::No, 144U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>),</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                  pwc_q.at(3), dwc_q.at(3), prwc_q.at(3));</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_4&quot;</span>, IsResidual::Yes, 192U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(4), dwc_q.at(4), prwc_q.at(4));</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_5&quot;</span>, IsResidual::Yes, 192U, 32U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(5), dwc_q.at(5), prwc_q.at(5));</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_6&quot;</span>, IsResidual::No, 192U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>),</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                  pwc_q.at(6), dwc_q.at(6), prwc_q.at(6));</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_7&quot;</span>, IsResidual::Yes, 384U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(7), dwc_q.at(7), prwc_q.at(7));</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_8&quot;</span>, IsResidual::Yes, 384U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(8), dwc_q.at(8), prwc_q.at(8));</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_9&quot;</span>, IsResidual::Yes, 384U, 64U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(9), dwc_q.at(9), prwc_q.at(9));</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_10&quot;</span>, IsResidual::No, 384U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(10), dwc_q.at(10), prwc_q.at(10));</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_11&quot;</span>, IsResidual::Yes, 576U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(11), dwc_q.at(11), prwc_q.at(11));</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_12&quot;</span>, IsResidual::Yes, 576U, 96U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(12), dwc_q.at(12), prwc_q.at(12));</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_13&quot;</span>, IsResidual::No, 576U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 1, 0, 1, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">DimensionRoundingType::CEIL</a>),</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                  pwc_q.at(13), dwc_q.at(13), prwc_q.at(13));</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_14&quot;</span>, IsResidual::Yes, 960U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(14), dwc_q.at(14), prwc_q.at(14));</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_15&quot;</span>, IsResidual::Yes, 960U, 160U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(15), dwc_q.at(15), prwc_q.at(15));</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        get_expanded_conv_qasymm8(data_path, <span class="stringliteral">&quot;expanded_conv_16&quot;</span>, IsResidual::No, 960U, 320U, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), pwc_q.at(16), dwc_q.at(16), prwc_q.at(16));</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, 1280U,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_weights.npy&quot;</span>),</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Conv_1_biases.npy&quot;</span>),</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0), 1, conv_weights_quant_info.at(1))</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;              .set_name(<span class="stringliteral">&quot;Conv_1&quot;</span>)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 6.f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Conv_1/Relu6&quot;</span>)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">PoolingType::AVG</a>, common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">data_layout</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;Logits/AvgPool&quot;</span>)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, 1001U,</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Logits_Conv2d_1c_1x1_weights.npy&quot;</span>),</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;Logits_Conv2d_1c_1x1_biases.npy&quot;</span>),</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0), 1, conv_weights_quant_info.at(2))</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;              .set_name(<span class="stringliteral">&quot;Logits/Conv2d_1c_1x1&quot;</span>);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    }</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordtype">void</span> get_expanded_conv_qasymm8(<span class="keyword">const</span> std::string &amp;data_path, std::string &amp;&amp;param_path, IsResidual is_residual,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> input_channels, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> output_channels,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                   <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>           dwc_pad_stride_info,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;pwi, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;dwi, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> &amp;pji)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    {</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        std::string total_path = param_path + <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> left(graph);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        left &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, input_channels,</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_weights.npy&quot;</span>),</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_biases.npy&quot;</span>),</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                 <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0), 1, pwi)</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/Conv2D&quot;</span>)</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 6.f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/Conv2D/Relu6&quot;</span>)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">DepthwiseConvolutionLayer</a>(3U, 3U,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                          <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_depthwise_weights.npy&quot;</span>),</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                          <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;depthwise_depthwise_biases.npy&quot;</span>),</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                          dwc_pad_stride_info, 1, dwi)</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/depthwise/depthwise&quot;</span>)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, 6.f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/depthwise/Relu6&quot;</span>)</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;             &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(1U, 1U, output_channels,</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_weights.npy&quot;</span>),</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                 <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, total_path + <span class="stringliteral">&quot;project_biases.npy&quot;</span>),</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                 <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 0, 0), 1, pji)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;             .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/project/Conv2D&quot;</span>);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">if</span>(is_residual == IsResidual::Yes)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        {</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            <span class="comment">// Add residual node</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> right(graph);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            graph &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer.xhtml">EltwiseLayer</a>(std::move(left), std::move(right), EltwiseOperation::Add).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(param_path + <span class="stringliteral">&quot;/add&quot;</span>);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        }</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            graph.<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a3d1067259b70c7d8753be5062a4b9f6d">forward_tail</a>(left.tail_node());</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        }</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;};</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">/** Main program for MobileNetV2</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment"> * Model is based on:</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"> *      https://arxiv.org/abs/1801.04381</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment"> *      &quot;MobileNetV2: Inverted Residuals and Linear Bottlenecks&quot;</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment"> *      Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment"> * Provenance: https://storage.googleapis.com/mobilenet_v2/checkpoints/mobilenet_v2_1.0_224.tgz</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment"> * @note To list all the possible arguments execute the binary appended with the --help option</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00461"></a><span class="lineno"><a class="line" href="graph__mobilenet__v2_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  461</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__mobilenet__v2_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;{</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordflow">return</span> arm_compute::utils::run_example&lt;GraphMobilenetV2Example&gt;(argc, argv);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">arm_compute::graph::frontend::PoolingLayer</a></div><div class="ttdoc">Pooling Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00977">Layers.h:977</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">arm_compute::graph::frontend::SubStream</a></div><div class="ttdoc">Sub stream class. </div><div class="ttdef"><b>Definition:</b> <a href="_sub_stream_8h_source.xhtml#l00047">SubStream.h:47</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml">arm_compute::graph::GraphConfig</a></div><div class="ttdoc">Graph configuration structure Device target types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00084">Types.h:84</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a249f3f713c6ea8f564e760559cf509f4"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">arm_compute::graph::GraphConfig::tuner_mode</a></div><div class="ttdeci">CLTunerMode tuner_mode</div><div class="ttdoc">Tuner mode to be used by the CL tuner. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00092">Types.h:92</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ab14324184f90f342227699c161654b1b"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">arm_compute::graph_utils::get_input_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_input_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, std::unique_ptr&lt; IPreprocessor &gt; preprocessor=nullptr, bool bgr=true)</div><div class="ttdoc">Generates appropriate input accessor according to the specified graph parameters. ...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00498">GraphUtils.h:498</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_reshape_layer.xhtml">arm_compute::graph::frontend::ReshapeLayer</a></div><div class="ttdoc">Reshape Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l01190">Layers.h:1190</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa5bdce8e6d9dc3efbbd31e90a8a181dff">arm_compute::DimensionRoundingType::CEIL</a></div><div class="ttdoc">Ceil rounding. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml">arm_compute::graph::frontend::DepthwiseConvolutionLayer</a></div><div class="ttdoc">Depthwise Convolution Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00481">Layers.h:481</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdoc">Floor rounding. </div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml_a2593e1f13f425f627658900657f73dc3"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">arm_compute::utils::consume_common_graph_parameters</a></div><div class="ttdeci">void consume_common_graph_parameters(CommonGraphValidateOptions &amp;options, CommonParams &amp;common_params)</div><div class="ttdoc">Consumes the consume_common_graph_parameters graph options and creates a structure containing any inf...</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00315">graph_validate_utils.h:315</a></div></div>
<div class="ttc" id="_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">graph.h</a></div><div class="ttdoc">Includes all the Graph headers at once. </div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_common_graph_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">arm_compute::utils::CommonGraphOptions</a></div><div class="ttdoc">Common command line options used to configure the graph examples. </div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00134">CommonGraphOptions.h:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00045">CommandLineParser.h:45</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_aa56f0562febf49bc0e29a4257551191b"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b">arm_compute::utils::CommonGraphParams::data_layout</a></div><div class="ttdeci">arm_compute::DataLayout data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00100">CommonGraphOptions.h:100</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01641">Types.h:1641</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a11c0bd1d663fbaa516fac9160ec96d4b"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">arm_compute::graph::GraphConfig::mlgo_file</a></div><div class="ttdeci">std::string mlgo_file</div><div class="ttdoc">Filename to load MLGO heuristics from. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00095">Types.h:95</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::graph::GraphConfig::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdoc">File to load/store tuning values from. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00094">Types.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">arm_compute::graph::frontend::InputLayer</a></div><div class="ttdoc">Input Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00045">Layers.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_stream_xhtml_a3d1067259b70c7d8753be5062a4b9f6d"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a3d1067259b70c7d8753be5062a4b9f6d">arm_compute::graph::frontend::IStream::forward_tail</a></div><div class="ttdeci">void forward_tail(NodeID nid)</div><div class="ttdoc">Forwards tail of stream to a given nid. </div><div class="ttdef"><b>Definition:</b> <a href="_i_stream_8h_source.xhtml#l00081">IStream.h:81</a></div></div>
<div class="ttc" id="graph__mobilenet__v2_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__mobilenet__v2_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program for MobileNetV2. </div><div class="ttdef"><b>Definition:</b> <a href="graph__mobilenet__v2_8cpp_source.xhtml#l00461">graph_mobilenet_v2.cpp:461</a></div></div>
<div class="ttc" id="structarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information struct. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01202">Types.h:1202</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class. </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00671">Types.h:671</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">arm_compute::graph::frontend::ActivationLayer</a></div><div class="ttdoc">Activation Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00121">Layers.h:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_afe5692937b0558d4cffe2d4fee57d581"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#afe5692937b0558d4cffe2d4fee57d581">arm_compute::graph::TensorDescriptor::set_quantization_info</a></div><div class="ttdeci">TensorDescriptor &amp; set_quantization_info(QuantizationInfo tensor_quant_info)</div><div class="ttdoc">Sets tensor descriptor quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00097">TensorDescriptor.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">arm_compute::graph::frontend::ConvolutionLayer</a></div><div class="ttdoc">Convolution Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00376">Layers.h:376</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a96b4a087acee7543a7624102a67fc14d"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a96b4a087acee7543a7624102a67fc14d">arm_compute::utils::CommonGraphParams::image</a></div><div class="ttdeci">std::string image</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00106">CommonGraphOptions.h:106</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ab3a897163a7fe23208f1d9c618062ee2"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">arm_compute::graph_utils::permute_shape</a></div><div class="ttdeci">TensorShape permute_shape(TensorShape tensor_shape, DataLayout in_data_layout, DataLayout out_data_layout)</div><div class="ttdoc">Permutes a given tensor shape given the input and output data layout. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00665">GraphUtils.h:665</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a2a7ca82c5e74421cb45f17e936abf964"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2a7ca82c5e74421cb45f17e936abf964">arm_compute::graph::TensorDescriptor::target</a></div><div class="ttdeci">Target target</div><div class="ttdoc">Target. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00113">TensorDescriptor.h:113</a></div></div>
<div class="ttc" id="_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a2497d23622ec1343e507331ae1388f00"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">arm_compute::graph::TensorDescriptor::set_layout</a></div><div class="ttdeci">TensorDescriptor &amp; set_layout(DataLayout data_layout)</div><div class="ttdoc">Sets tensor descriptor data layout. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00086">TensorDescriptor.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdoc">Lower and Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">arm_compute::utils::CommonGraphParams</a></div><div class="ttdoc">Structure holding all the common graph parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00093">CommonGraphOptions.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00034">SafeOps.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">arm_compute::ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a></div><div class="ttdoc">Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00044">GraphUtils.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">arm_compute::graph::frontend::SoftmaxLayer</a></div><div class="ttdoc">Softmax Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l01323">Layers.h:1323</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93afcefd647d6a866603c627b11347c707a">arm_compute::PoolingType::AVG</a></div><div class="ttdoc">Average Pooling. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ae3d177d243f5fb34544105a4ee4e1f58"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">arm_compute::graph_utils::get_output_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_output_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, size_t top_n=5, bool is_validation=false, std::ostream &amp;output_stream=std::cout)</div><div class="ttdoc">Generates appropriate output accessor according to the specified graph parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00544">GraphUtils.h:544</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a9da74af255a3e6ea61180d4a03192a48"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">arm_compute::graph::GraphConfig::use_tuner</a></div><div class="ttdeci">bool use_tuner</div><div class="ttdoc">Use a tuner in tunable backends. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00089">Types.h:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">arm_compute::graph::frontend::OutputLayer</a></div><div class="ttdoc">Output Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00095">Layers.h:95</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a30bee0b52a919bbcb1dc48b1b6546a16"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">arm_compute::graph_utils::get_weights_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_weights_accessor(const std::string &amp;path, const std::string &amp;data_file, DataLayout file_layout=DataLayout::NCHW)</div><div class="ttdoc">Generates appropriate weights accessor according to the specified path. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00476">GraphUtils.h:476</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::graph::GraphConfig::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdoc">Number of threads to use (thread capable backends), if 0 the backend will auto-initialize, if -1 the backend will stay as it is. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00093">Types.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">arm_compute::graph::frontend::Stream</a></div><div class="ttdoc">Stream frontend class to construct simple graphs in a stream fashion. </div><div class="ttdef"><b>Definition:</b> <a href="_stream_8h_source.xhtml#l00045">Stream.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00031">ILayer.h:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_batch_normalization_layer.xhtml">arm_compute::graph::frontend::BatchNormalizationLayer</a></div><div class="ttdoc">Batchnormalization Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00191">Layers.h:191</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_eltwise_layer.xhtml">arm_compute::graph::frontend::EltwiseLayer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00664">Layers.h:664</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml_a30a81dbc66a8e9eeb693a75046b4655d"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d">arm_compute::utils::CommonGraphParams::data_path</a></div><div class="ttdeci">std::string data_path</div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00105">CommonGraphOptions.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml_af664a2598e05f8de28fb9f94e3902886"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">arm_compute::graph::frontend::ILayer::set_name</a></div><div class="ttdeci">ILayer &amp; set_name(std::string name)</div><div class="ttdoc">Sets the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00055">ILayer.h:55</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01010">Utils.h:1010</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__mobilenet__v2_8cpp.xhtml">graph_mobilenet_v2.cpp</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:44 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
