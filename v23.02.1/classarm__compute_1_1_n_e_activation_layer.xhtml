<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NEActivationLayer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_activation_layer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">NEActivationLayer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml">cpu::kernels::CpuActivationKernel</a>.  
 <a href="classarm__compute_1_1_n_e_activation_layer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_activation_layer_8h_source.xhtml">NEActivationLayer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NEActivationLayer:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_activation_layer__coll__graph.svg" width="154" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a450310db68f69275e126f53a819fa6aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#a450310db68f69275e126f53a819fa6aa">NEActivationLayer</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:a450310db68f69275e126f53a819fa6aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a450310db68f69275e126f53a819fa6aa">More...</a><br /></td></tr>
<tr class="separator:a450310db68f69275e126f53a819fa6aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1edc2113858641dc0ad8d2310648227"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ac1edc2113858641dc0ad8d2310648227">NEActivationLayer</a> (const <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac1edc2113858641dc0ad8d2310648227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#ac1edc2113858641dc0ad8d2310648227">More...</a><br /></td></tr>
<tr class="separator:ac1edc2113858641dc0ad8d2310648227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e785917da5916843a75c93250d19b46"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#a9e785917da5916843a75c93250d19b46">NEActivationLayer</a> (<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&amp;)</td></tr>
<tr class="memdesc:a9e785917da5916843a75c93250d19b46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="#a9e785917da5916843a75c93250d19b46">More...</a><br /></td></tr>
<tr class="separator:a9e785917da5916843a75c93250d19b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf87443795e93b49e44846038202e0db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aaf87443795e93b49e44846038202e0db">operator=</a> (const <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;)=delete</td></tr>
<tr class="memdesc:aaf87443795e93b49e44846038202e0db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#aaf87443795e93b49e44846038202e0db">More...</a><br /></td></tr>
<tr class="separator:aaf87443795e93b49e44846038202e0db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0379b73a5a3b29b9e82cb8e4cb6578d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ab0379b73a5a3b29b9e82cb8e4cb6578d">operator=</a> (<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&amp;)</td></tr>
<tr class="memdesc:ab0379b73a5a3b29b9e82cb8e4cb6578d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="#ab0379b73a5a3b29b9e82cb8e4cb6578d">More...</a><br /></td></tr>
<tr class="separator:ab0379b73a5a3b29b9e82cb8e4cb6578d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abf7fef41295969542b99246f0f10dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#a6abf7fef41295969542b99246f0f10dc">~NEActivationLayer</a> ()</td></tr>
<tr class="memdesc:a6abf7fef41295969542b99246f0f10dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a6abf7fef41295969542b99246f0f10dc">More...</a><br /></td></tr>
<tr class="separator:a6abf7fef41295969542b99246f0f10dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfb5ef37594fc9371c4a2b95e3d5e31b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a> (<a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> activation_info)</td></tr>
<tr class="memdesc:adfb5ef37594fc9371c4a2b95e3d5e31b"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" title="Basic function to run cpu::kernels::CpuActivationKernel. ">NEActivationLayer</a> snippet]  <a href="#adfb5ef37594fc9371c4a2b95e3d5e31b">More...</a><br /></td></tr>
<tr class="separator:adfb5ef37594fc9371c4a2b95e3d5e31b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info)</td></tr>
<tr class="memdesc:aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" title="Basic function to run cpu::kernels::CpuActivationKernel. ">NEActivationLayer</a> snippet]  <a href="#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">More...</a><br /></td></tr>
<tr class="separator:aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic function to run <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_activation_kernel.xhtml">cpu::kernels::CpuActivationKernel</a>. </p>
<dl class="section note"><dt>Note</dt><dd>The function simulates an activation layer with the specified activation function. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_activation_layer_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_n_e_activation_layer_8h_source.xhtml">NEActivationLayer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a450310db68f69275e126f53a819fa6aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a450310db68f69275e126f53a819fa6aa">&#9670;&nbsp;</a></span>NEActivationLayer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *&#160;</td>
          <td class="paramname"><em>ctx</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Runtime context to be used by the function </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml">NEActivationLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aaf87443795e93b49e44846038202e0db">NEActivationLayer::operator=()</a>, and <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml#a6abf7fef41295969542b99246f0f10dc">NEActivationLayer::~NEActivationLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    : _impl(std::make_unique&lt;Impl&gt;())</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    _impl-&gt;ctx = ctx;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac1edc2113858641dc0ad8d2310648227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1edc2113858641dc0ad8d2310648227">&#9670;&nbsp;</a></span>NEActivationLayer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a9e785917da5916843a75c93250d19b46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e785917da5916843a75c93250d19b46">&#9670;&nbsp;</a></span>NEActivationLayer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="a6abf7fef41295969542b99246f0f10dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6abf7fef41295969542b99246f0f10dc">&#9670;&nbsp;</a></span>~NEActivationLayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00039">NEActivationLayer::NEActivationLayer()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="adfb5ef37594fc9371c4a2b95e3d5e31b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfb5ef37594fc9371c4a2b95e3d5e31b">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>&#160;</td>
          <td class="paramname"><em>activation_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>[<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" title="Basic function to run cpu::kernels::CpuActivationKernel. ">NEActivationLayer</a> snippet] </p>
<p>Set the input and output tensor.</p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src </th><th align="left">dst  </th></tr>
<tr>
<td align="left">QASYMM8 </td><td align="left">QASYMM8 </td></tr>
<tr>
<td align="left">QASYMM8_SIGNED </td><td align="left">QASYMM8_SIGNED </td></tr>
<tr>
<td align="left">QSYMM16 </td><td align="left">QSYMM16 </td></tr>
<tr>
<td align="left">F16 </td><td align="left">F16 </td></tr>
<tr>
<td align="left">F32 </td><td align="left">F32 </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>If the output tensor is a nullptr or is equal to the input, the activation function will be performed in-place</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">input</td><td>Source tensor. In case of <code>output</code> tensor = nullptr, this tensor will store the result of the activation function. Data types supported: QASYMM8/QASYMM8_SIGNED/QSYMM16/F16/F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor. Data type supported: same as <code>input</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">activation_info</td><td>Activation layer parameters. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml">NEActivationLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, and <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00072">NERNNLayer::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00057">NELSTMLayer::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, and <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_runtime_context_8cpp_source.xhtml#l00053">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    _impl-&gt;src = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    _impl-&gt;dst = output == <span class="keyword">nullptr</span> ? <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a> : output;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_impl-&gt;src, _impl-&gt;dst);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _impl-&gt;op = std::make_unique&lt;cpu::CpuActivation&gt;();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _impl-&gt;op-&gt;configure(_impl-&gt;src-&gt;info(), _impl-&gt;dst-&gt;info(), activation_info);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaf87443795e93b49e44846038202e0db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf87443795e93b49e44846038202e0db">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00039">NEActivationLayer::NEActivationLayer()</a>.</p>

</div>
</div>
<a id="ab0379b73a5a3b29b9e82cb8e4cb6578d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0379b73a5a3b29b9e82cb8e4cb6578d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For CPU kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue. ">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing. ">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml">NEActivationLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00039">ITensorPack::add_tensor()</a>, and <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00109">NERNNLayer::run()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00309">NEFFTConvolutionLayer::run()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00462">NELSTMLayerQuantized::run()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00605">NELSTMLayer::run()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01068">NEQLSTMLayer::run()</a>, and <a class="el" href="tests_2validation_2_n_e_o_n_2_u_n_i_t_2_runtime_context_8cpp_source.xhtml#l00053">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    ITensorPack <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    pack.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _impl-&gt;src);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    pack.add_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, _impl-&gt;dst);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    _impl-&gt;op-&gt;run(pack);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml_a6d8078b635739e84400cf8240a2993e7"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">arm_compute::ITensorPack::add_tensor</a></div><div class="ttdeci">void add_tensor(int id, ITensor *tensor)</div><div class="ttdoc">Add tensor to the pack. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00039">ITensorPack.cpp:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>act_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>[<a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml" title="Basic function to run cpu::kernels::CpuActivationKernel. ">NEActivationLayer</a> snippet] </p>
<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor info. In case of <code>output</code> tensor info = nullptr, this tensor will store the result of the activation function. Data types supported: QASYMM8/QASYMM8_SIGNED/QSYMM16/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Destination tensor info. Data type supported: same as <code>input</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">act_info</td><td>Activation layer information.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_n_e_activation_layer_8cpp_source.xhtml">NEActivationLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00045">CpuActivation::validate()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_o_n_2_activation_layer_8cpp_source.xhtml#l00269">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00045">NERNNLayer::validate()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00263">NEFFTConvolutionLayer::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00248">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00375">NELSTMLayer::validate()</a>, and <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">cpu::CpuActivation::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_activation_xhtml_aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">arm_compute::cpu::CpuActivation::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_activation_8cpp_source.xhtml#l00045">CpuActivation.cpp:45</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/NEON/functions/<a class="el" href="_n_e_activation_layer_8h_source.xhtml">NEActivationLayer.h</a></li>
<li>src/runtime/NEON/functions/<a class="el" href="_n_e_activation_layer_8cpp_source.xhtml">NEActivationLayer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_activation_layer.xhtml">NEActivationLayer</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:57 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
