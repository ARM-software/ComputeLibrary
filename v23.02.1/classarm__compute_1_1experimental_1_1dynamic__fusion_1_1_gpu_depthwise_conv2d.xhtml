<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuDepthwiseConv2d Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuDepthwiseConv2d Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion. ">Operator</a> interface.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml">GpuDepthwiseConv2d.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae539a668440f0060cfc673e955f788bf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml">DepthwiseConv2dAttributes</a></td></tr>
<tr class="memdesc:ae539a668440f0060cfc673e955f788bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attributes are a set of backend-agnostic parameters that define what an operator does.  <a href="#ae539a668440f0060cfc673e955f788bf">More...</a><br /></td></tr>
<tr class="separator:ae539a668440f0060cfc673e955f788bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad4e17c0743b60efaf3be59f8e85a5aa2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">create_op</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bia, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:ad4e17c0743b60efaf3be59f8e85a5aa2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an operator and fuse it into the workload sketch.  <a href="#ad4e17c0743b60efaf3be59f8e85a5aa2">More...</a><br /></td></tr>
<tr class="separator:ad4e17c0743b60efaf3be59f8e85a5aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56570c38e5cd02eb686aa0e7ac6d29f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ab56570c38e5cd02eb686aa0e7ac6d29f">is_supported_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;context, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bia, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:ab56570c38e5cd02eb686aa0e7ac6d29f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the operator configuration is supported, irrespective of fusion.  <a href="#ab56570c38e5cd02eb686aa0e7ac6d29f">More...</a><br /></td></tr>
<tr class="separator:ab56570c38e5cd02eb686aa0e7ac6d29f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d9bc018fa740e80cfd915c2d0dd3c08"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">validate_op</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;sketch, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *bia, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:a6d9bc018fa740e80cfd915c2d0dd3c08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the operator configuration is supported and if it can be fused into the workload sketch.  <a href="#a6d9bc018fa740e80cfd915c2d0dd3c08">More...</a><br /></td></tr>
<tr class="separator:a6d9bc018fa740e80cfd915c2d0dd3c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion. ">Operator</a> interface. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml">GpuDepthwiseConv2d.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ae539a668440f0060cfc673e955f788bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae539a668440f0060cfc673e955f788bf">&#9670;&nbsp;</a></span>Attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_depthwise_conv2d_attributes.xhtml">DepthwiseConv2dAttributes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Attributes are a set of backend-agnostic parameters that define what an operator does. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml">GpuDepthwiseConv2d.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad4e17c0743b60efaf3be59f8e85a5aa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4e17c0743b60efaf3be59f8e85a5aa2">&#9670;&nbsp;</a></span>create_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * create_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>wei</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>bia</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an operator and fuse it into the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">validate_op()</a> fails, the creation also fails and may throw an error. </dd>
<dd>
If <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">validate_op()</a> fails, <code>sketch</code> remains unchanged and valid.</dd></dl>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src </th><th align="left">wei </th><th align="left">bia </th><th align="left">dst  </th></tr>
<tr>
<td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td><td align="left">F16 </td></tr>
<tr>
<td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td></tr>
</table>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sketch</td><td>Workload sketch into which the operator will be fused </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei</td><td>Weight tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia</td><td>(Optional) Bias tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion. ">Operator</a> attributes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer for the destination tensor info </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00186">186</a> of file <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml">GpuDepthwiseConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00113">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml#l00072">GpuKernelComponentGraph::add_new_component()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00146">GpuOperatorGroup::add_operator()</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00074">GpuWorkloadSketch::Implementation::component_graph()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00069">GpuWorkloadSketch::Implementation::context()</a>, <a class="el" href="_cl_d_w_c_native_kernel_config_8h_source.xhtml#l00047">ClDWCNativeKernelConfigurationFactory::create()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00110">GpuWorkloadSketch::Implementation::create_virtual_tensor()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00061">DepthwiseConv2dAttributes::depth_multiplier()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00051">DepthwiseConv2dAttributes::dilation()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00109">DWCComputeKernelInfo::export_input_to_cl_image</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00110">DWCComputeKernelInfo::export_weights_to_cl_image</a>, <a class="el" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::FLOOR</a>, <a class="el" href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00240">arm_compute::get_arch_from_target()</a>, <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00038">GpuWorkloadContext::gpu_target()</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00060">GpuWorkloadSketch::implementation()</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00108">DWCComputeKernelInfo::m0</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::MIDGARD</a>, <a class="el" href="_kernel_descriptors_8h_source.xhtml#l00107">DWCComputeKernelInfo::n0</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00154">GpuOperatorGroup::new_operator()</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::OpenCL</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00084">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00033">DepthwiseConv2dAttributes::pad()</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Run</a>, <a class="el" href="_i_gpu_kernel_component_8h_source.xhtml#l00042">KernelProperties::stage()</a>, <a class="el" href="_depthwise_conv2d_attributes_8cpp_source.xhtml#l00042">DepthwiseConv2dAttributes::stride()</a>, <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00072">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image()</a>, and <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00150">GpuDepthwiseConv2d::validate_op()</a>.</p>
<div class="fragment"><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, attributes);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">GpuDepthwiseConv2d::validate_op</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, attributes));</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().create_virtual_tensor();</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(dst);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    calculate_and_init_dst_if_empty(dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, attributes);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// Translate into components and add to component graph</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    GpuKernelComponentGraph &amp;comp_graph = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().component_graph();</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>              *sketch_ctx = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().context();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a37e4969b4b21379046bb4d89690af049">GpuTarget</a>          gpu_target = sketch_ctx-&gt;gpu_target();</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span>(sketch_ctx-&gt;gpu_language() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">GpuLanguage::OpenCL</a>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(sketch_ctx-&gt;cl_compile_context());</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="comment">// Add Depthwise Conv2d Component</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> properties = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">IGpuKernelComponent::Properties</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">stage</a>(UnitWorkloadStage{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a> });</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keyword">auto</span>       settings   = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#a03b0a94b67bc162ab8e33fffab3269a0">ClComponentDepthwiseConv2d::Settings</a>();</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keyword">const</span> PadStrideInfo legacy_conv_info(attributes.stride().x(), attributes.stride().y(), attributes.pad().left,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                                 attributes.pad().right,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                                 attributes.pad().top, attributes.pad().bottom, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="comment">// Get the depthwise convolution compute parameters</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keyword">auto</span>                       <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>        = <a class="code" href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory.xhtml#a248c129073922246b145c5914193cc8d">arm_compute::cl_dwc::ClDWCNativeKernelConfigurationFactory::create</a>(gpu_target);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keyword">const</span> DWCComputeKernelInfo dwc_info = t-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, legacy_conv_info, attributes.dilation(), attributes.depth_multiplier());</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            settings.is_fma_available(<a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) != <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            .m0(dwc_info.m0)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            .n0(dwc_info.n0)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            .export_input_to_cl_image(dwc_info.export_input_to_cl_image)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            .export_weights_to_cl_image(dwc_info.export_weights_to_cl_image);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">if</span>(settings.export_input_to_cl_image())</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <a class="code" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">if</span>(settings.export_weights_to_cl_image())</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <a class="code" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a>(wei);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            ArgumentPack&lt;ITensorInfo&gt; arguments;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            arguments.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, dst);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            comp_graph.add_new_component&lt;ClComponentDepthwiseConv2d&gt;(properties, arguments, attributes, settings);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    {</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unimplemented Gpu language&quot;</span>);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Set up fusion test by adding to the Operator Group</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="comment">// Note this has to be performed after all the components have been successfully added to the component graph</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// Pack tensor infos</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, dst);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">Operator</a> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().operator_group().new_operator(operator_type, tensors);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().operator_group().add_operator(op);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdoc">Floor rounding. </div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa334134c2d2596d8de13df6f9cb67d1da7982b09a852b37f2afb1227eaf552e47">arm_compute::experimental::dynamic_fusion::GpuLanguage::OpenCL</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00240">GPUTarget.cpp:240</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a37e4969b4b21379046bb4d89690af049"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a37e4969b4b21379046bb4d89690af049">arm_compute::experimental::dynamic_fusion::GpuTarget</a></div><div class="ttdeci">::arm_compute::GPUTarget GpuTarget</div><div class="ttdoc">Gpu Information such as the Gpu target (for example, G76) </div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8h_source.xhtml#l00040">GpuWorkloadContext.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm_xhtml_a3f923485898d40faa4df74a7b5916bac"><div class="ttname"><a href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a></div><div class="ttdeci">void update_padding_for_cl_image(ITensorInfo *tensor)</div><div class="ttdoc">Update padding required to export the OpenCL buffer to OpenCL image2d. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_helpers_8cpp_source.xhtml#l00072">ClGemmHelpers.cpp:72</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdoc">Run every time after the first time. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d_xhtml_a03b0a94b67bc162ab8e33fffab3269a0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_depthwise_conv2d.xhtml#a03b0a94b67bc162ab8e33fffab3269a0">arm_compute::experimental::dynamic_fusion::ClComponentDepthwiseConv2d::Settings</a></div><div class="ttdeci">ClComponentDepthwiseConv2dSettings Settings</div><div class="ttdoc">Settings are a set of backend-specific parameters that influence the implementation of a component...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_component_depthwise_conv2d_8h_source.xhtml#l00097">ClComponentDepthwiseConv2d.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">arm_compute::detail::ObjectType::Operator</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component_xhtml_a12747697b67a54dfad1bfb740b5a1482"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_kernel_component.xhtml#a12747697b67a54dfad1bfb740b5a1482">arm_compute::experimental::dynamic_fusion::IGpuKernelComponent::Properties</a></div><div class="ttdeci">KernelProperties Properties</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00069">IGpuKernelComponent.h:69</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00161">DirectConv2d.cpp:161</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d_xhtml_a6d9bc018fa740e80cfd915c2d0dd3c08"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#a6d9bc018fa740e80cfd915c2d0dd3c08">arm_compute::experimental::dynamic_fusion::GpuDepthwiseConv2d::validate_op</a></div><div class="ttdeci">static Status validate_op(const GpuWorkloadSketch &amp;sketch, const ITensorInfo *src, const ITensorInfo *wei, const ITensorInfo *bia, const Attributes &amp;attributes)</div><div class="ttdoc">Check if the operator configuration is supported and if it can be fused into the workload sketch...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00150">GpuDepthwiseConv2d.cpp:150</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties_xhtml_af875cbeaf800c014476b5f9aaa7dc9d9"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_kernel_properties.xhtml#af875cbeaf800c014476b5f9aaa7dc9d9">arm_compute::experimental::dynamic_fusion::KernelProperties::stage</a></div><div class="ttdeci">KernelProperties &amp; stage(const UnitWorkloadStage &amp;stage)</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_kernel_component_8h_source.xhtml#l00042">IGpuKernelComponent.h:42</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory_xhtml_a248c129073922246b145c5914193cc8d"><div class="ttname"><a href="classarm__compute_1_1cl__dwc_1_1_cl_d_w_c_native_kernel_configuration_factory.xhtml#a248c129073922246b145c5914193cc8d">arm_compute::cl_dwc::ClDWCNativeKernelConfigurationFactory::create</a></div><div class="ttdeci">static std::unique_ptr&lt; IClDWCNativeKernelConfig &gt; create(GPUTarget gpu)</div><div class="ttdoc">Static method to call the ClDWCNative kernel configuration class accordingly with the GPU target...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_d_w_c_native_kernel_config_8h_source.xhtml#l00047">ClDWCNativeKernelConfig.h:47</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab56570c38e5cd02eb686aa0e7ac6d29f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab56570c38e5cd02eb686aa0e7ac6d29f">&#9670;&nbsp;</a></span>is_supported_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> is_supported_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>wei</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>bia</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the operator configuration is supported, irrespective of fusion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Workload context within which the operator is running </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wei</td><td>Weight tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bia</td><td>(Optional) Bias tensor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="An operator for the sole purpose of validating fusion. ">Operator</a> attributes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml">GpuDepthwiseConv2d.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(context, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, <span class="keyword">nullptr</span>, attributes);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6d9bc018fa740e80cfd915c2d0dd3c08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d9bc018fa740e80cfd915c2d0dd3c08">&#9670;&nbsp;</a></span>validate_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate_op </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a> &amp;&#160;</td>
          <td class="paramname"><em>sketch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>wei</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>bia</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ae539a668440f0060cfc673e955f788bf">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the operator configuration is supported and if it can be fused into the workload sketch. </p>
<p>Parameters are similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml#ad4e17c0743b60efaf3be59f8e85a5aa2">GpuDepthwiseConv2d::create_op()</a></p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml">GpuDepthwiseConv2d.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">arm_compute::ACL_DST_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">arm_compute::ACL_SRC_0</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">arm_compute::ACL_SRC_1</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">arm_compute::ACL_SRC_2</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00113">ArgumentPack&lt; T &gt;::add_const_tensor()</a>, <a class="el" href="_error_8h_source.xhtml#l00296">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00244">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00041">GpuWorkloadSketch::gpu_context()</a>, <a class="el" href="_i_tensor_info_8h_source.xhtml#l00309">ITensorInfo::has_valid_id()</a>, <a class="el" href="_gpu_workload_sketch_8cpp_source.xhtml#l00060">GpuWorkloadSketch::implementation()</a>, <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00154">GpuOperatorGroup::new_operator()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00084">GpuWorkloadSketch::Implementation::operator_group()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, and <a class="el" href="_gpu_operator_group_8cpp_source.xhtml#l00071">GpuOperatorGroup::try_add_operator()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00186">GpuDepthwiseConv2d::create_op()</a>.</p>
<div class="fragment"><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;has_valid_id() || !wei-&gt;has_valid_id());</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">if</span>(bia != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(!bia-&gt;has_valid_id());</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Refer to GpuConv2d::validate_op() for id-validness of this TensorInfo object</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    TensorInfo dst_info_to_validate;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// Auto initialize dst tensor info</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    calculate_and_init_dst_if_empty(&amp;dst_info_to_validate, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, attributes);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">// Perform fusion test</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Pack tensor infos</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ArgumentPack&lt;ITensorInfo&gt; tensors;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, wei);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, bia);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    tensors.add_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, &amp;dst_info_to_validate);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">Operator</a> op = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().operator_group().new_operator(operator_type, tensors);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(!<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.implementation().operator_group().try_add_operator(op),</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                    <span class="stringliteral">&quot;Operator fusion test failed. This operator cannot be fused into the workload&quot;</span>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// Check if configuration is supported</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> is_supported_op_helper(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">sketch</a>.gpu_context(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, bia, &amp;dst_info_to_validate, attributes);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">arm_compute::detail::ObjectType::Operator</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adf7ec1cdc18b3461c0a44ceb3b73801c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf7ec1cdc18b3461c0a44ceb3b73801c">arm_compute::test::validation::sketch</a></div><div class="ttdeci">GpuWorkloadSketch sketch</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00161">DirectConv2d.cpp:161</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_depthwise_conv2d_8h_source.xhtml">GpuDepthwiseConv2d.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/operators/<a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml">GpuDepthwiseConv2d.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_depthwise_conv2d.xhtml">GpuDepthwiseConv2d</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:25:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
