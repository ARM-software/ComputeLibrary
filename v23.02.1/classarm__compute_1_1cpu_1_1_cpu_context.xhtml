<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1cpu_1_1_cpu_context.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuContext Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>CPU context implementation class.  
 <a href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cpu_context_8h_source.xhtml">CpuContext.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CpuContext:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1cpu_1_1_cpu_context__coll__graph.svg" width="255" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae2c01b127c5c7c81641c2b9f7a872669"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ae2c01b127c5c7c81641c2b9f7a872669">CpuContext</a> (const <a class="el" href="struct_acl_context_options.xhtml">AclContextOptions</a> *options)</td></tr>
<tr class="memdesc:ae2c01b127c5c7c81641c2b9f7a872669"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#ae2c01b127c5c7c81641c2b9f7a872669">More...</a><br /></td></tr>
<tr class="separator:ae2c01b127c5c7c81641c2b9f7a872669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab85759ac8bab0b298ad90f022d7283a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml">CpuCapabilities</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#aab85759ac8bab0b298ad90f022d7283a">capabilities</a> () const</td></tr>
<tr class="memdesc:aab85759ac8bab0b298ad90f022d7283a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cpu Capabilities accessor.  <a href="#aab85759ac8bab0b298ad90f022d7283a">More...</a><br /></td></tr>
<tr class="separator:aab85759ac8bab0b298ad90f022d7283a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9cc0f7f08e9e97ccc719770f02221ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_allocator_wrapper.xhtml">AllocatorWrapper</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#ac9cc0f7f08e9e97ccc719770f02221ab">allocator</a> ()</td></tr>
<tr class="memdesc:ac9cc0f7f08e9e97ccc719770f02221ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backing memory allocator accessor.  <a href="#ac9cc0f7f08e9e97ccc719770f02221ab">More...</a><br /></td></tr>
<tr class="separator:ac9cc0f7f08e9e97ccc719770f02221ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b8dd0571c21159463a0bbed8e6f5204"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a2b8dd0571c21159463a0bbed8e6f5204">create_tensor</a> (const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;desc, bool allocate) override</td></tr>
<tr class="memdesc:a2b8dd0571c21159463a0bbed8e6f5204"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a tensor object.  <a href="#a2b8dd0571c21159463a0bbed8e6f5204">More...</a><br /></td></tr>
<tr class="separator:a2b8dd0571c21159463a0bbed8e6f5204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483fa42178caa16325fd419956e8b94c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a483fa42178caa16325fd419956e8b94c">create_queue</a> (const <a class="el" href="struct_acl_queue_options.xhtml">AclQueueOptions</a> *options) override</td></tr>
<tr class="memdesc:a483fa42178caa16325fd419956e8b94c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a queue object.  <a href="#a483fa42178caa16325fd419956e8b94c">More...</a><br /></td></tr>
<tr class="separator:a483fa42178caa16325fd419956e8b94c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24bc6f236d29a554d91366f78fc09757"><td class="memItemLeft" align="right" valign="top">std::tuple&lt; <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> *, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml#a24bc6f236d29a554d91366f78fc09757">create_activation</a> (const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;src, const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;dst, const <a class="el" href="struct_acl_activation_descriptor.xhtml">AclActivationDescriptor</a> &amp;act, bool is_validate) override</td></tr>
<tr class="separator:a24bc6f236d29a554d91366f78fc09757"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_context"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_context')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_context.xhtml">IContext</a></td></tr>
<tr class="memitem:ac32e2e958aeca33db54aca18e1ad72c9 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#ac32e2e958aeca33db54aca18e1ad72c9">IContext</a> (<a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="separator:ac32e2e958aeca33db54aca18e1ad72c9 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af601a7b7ed3dc8865ba22584c394da6f inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#af601a7b7ed3dc8865ba22584c394da6f">~IContext</a> ()</td></tr>
<tr class="memdesc:af601a7b7ed3dc8865ba22584c394da6f inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1_i_context.xhtml#af601a7b7ed3dc8865ba22584c394da6f">More...</a><br /></td></tr>
<tr class="separator:af601a7b7ed3dc8865ba22584c394da6f inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054cc89f738468abed5544c63c5b6c21 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">type</a> () const</td></tr>
<tr class="memdesc:a054cc89f738468abed5544c63c5b6c21 inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target type accessor.  <a href="classarm__compute_1_1_i_context.xhtml#a054cc89f738468abed5544c63c5b6c21">More...</a><br /></td></tr>
<tr class="separator:a054cc89f738468abed5544c63c5b6c21 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a79b9d4f3ae380e4160e54e4e771e84 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#a0a79b9d4f3ae380e4160e54e4e771e84">inc_ref</a> () const</td></tr>
<tr class="memdesc:a0a79b9d4f3ae380e4160e54e4e771e84 inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment context refcount.  <a href="classarm__compute_1_1_i_context.xhtml#a0a79b9d4f3ae380e4160e54e4e771e84">More...</a><br /></td></tr>
<tr class="separator:a0a79b9d4f3ae380e4160e54e4e771e84 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15c32763f3230f7ac03c87b73b03d34b inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#a15c32763f3230f7ac03c87b73b03d34b">dec_ref</a> () const</td></tr>
<tr class="memdesc:a15c32763f3230f7ac03c87b73b03d34b inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrement context refcount.  <a href="classarm__compute_1_1_i_context.xhtml#a15c32763f3230f7ac03c87b73b03d34b">More...</a><br /></td></tr>
<tr class="separator:a15c32763f3230f7ac03c87b73b03d34b inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af69eba190b1a2d72856b33fd6b4cc75a inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">refcount</a> () const</td></tr>
<tr class="memdesc:af69eba190b1a2d72856b33fd6b4cc75a inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reference counter accessor.  <a href="classarm__compute_1_1_i_context.xhtml#af69eba190b1a2d72856b33fd6b4cc75a">More...</a><br /></td></tr>
<tr class="separator:af69eba190b1a2d72856b33fd6b4cc75a inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ca0e76fa665125f1e50bd1ed8dbd213 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_context.xhtml#a8ca0e76fa665125f1e50bd1ed8dbd213">is_valid</a> () const</td></tr>
<tr class="memdesc:a8ca0e76fa665125f1e50bd1ed8dbd213 inherit pub_methods_classarm__compute_1_1_i_context"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if an object is valid.  <a href="classarm__compute_1_1_i_context.xhtml#a8ca0e76fa665125f1e50bd1ed8dbd213">More...</a><br /></td></tr>
<tr class="separator:a8ca0e76fa665125f1e50bd1ed8dbd213 inherit pub_methods_classarm__compute_1_1_i_context"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_attribs_struct_acl_context__"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_struct_acl_context__')"><img src="closed.png" alt="-"/>&#160;Data Fields inherited from <a class="el" href="struct_acl_context__.xhtml">AclContext_</a></td></tr>
<tr class="memitem:a04dbd08173d990bff2b3400bffe377eb inherit pub_attribs_struct_acl_context__"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1detail_1_1_header.xhtml">arm_compute::detail::Header</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_acl_context__.xhtml#a04dbd08173d990bff2b3400bffe377eb">header</a> { <a class="el" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4aad4e206408c1c59bfb8a057ba7857446">arm_compute::detail::ObjectType::Context</a>, nullptr }</td></tr>
<tr class="separator:a04dbd08173d990bff2b3400bffe377eb inherit pub_attribs_struct_acl_context__"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>CPU context implementation class. </p>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_cpu_context_8h_source.xhtml">CpuContext.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae2c01b127c5c7c81641c2b9f7a872669"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2c01b127c5c7c81641c2b9f7a872669">&#9670;&nbsp;</a></span>CpuContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml">CpuContext</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_acl_context_options.xhtml">AclContextOptions</a> *&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Creational options </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8cpp_source.xhtml#l00149">149</a> of file <a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_types_8h_source.xhtml#l00142">AclContextOptions::allocator</a>, <a class="el" href="_acl_types_8h_source.xhtml#l00137">AclContextOptions::capabilities</a>, and <a class="el" href="_acl_types_8h_source.xhtml#l00140">AclContextOptions::max_compute_units</a>.</p>
<div class="fragment"><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_context.xhtml#ac32e2e958aeca33db54aca18e1ad72c9">IContext</a>(<a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da54c82ef76ecbbd4c2293e09bae01b54e">Target::Cpu</a>),</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      _allocator(default_allocator),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      _caps(populate_capabilities(<a class="code" href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749">AclCpuCapabilitiesAuto</a>, -1))</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span>(options != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        _allocator = populate_allocator(options-&gt;<a class="code" href="struct_acl_context_options.xhtml#a59ea3ce4c90f7fadd3efd941ea300224">allocator</a>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        _caps      = populate_capabilities(options-&gt;<a class="code" href="struct_acl_context_options.xhtml#abb94a1222fc5cb627f8d9e517a0a3a83">capabilities</a>, options-&gt;<a class="code" href="struct_acl_context_options.xhtml#a3043ba49e39a241ec88b961eadc300d5">max_compute_units</a>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="ttc" id="_acl_types_8h_xhtml_a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749"><div class="ttname"><a href="_acl_types_8h.xhtml#a9a889dbe454aa7d9ed9785d729c6576ca04f22edb7b95cd18e1af58634b824749">AclCpuCapabilitiesAuto</a></div><div class="ttdoc">Automatic discovery of capabilities. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00079">AclTypes.h:79</a></div></div>
<div class="ttc" id="struct_acl_context_options_xhtml_a3043ba49e39a241ec88b961eadc300d5"><div class="ttname"><a href="struct_acl_context_options.xhtml#a3043ba49e39a241ec88b961eadc300d5">AclContextOptions::max_compute_units</a></div><div class="ttdeci">int32_t max_compute_units</div><div class="ttdoc">Max compute units that can be used by a queue created from the context. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00140">AclTypes.h:140</a></div></div>
<div class="ttc" id="struct_acl_context_options_xhtml_abb94a1222fc5cb627f8d9e517a0a3a83"><div class="ttname"><a href="struct_acl_context_options.xhtml#abb94a1222fc5cb627f8d9e517a0a3a83">AclContextOptions::capabilities</a></div><div class="ttdeci">AclTargetCapabilities capabilities</div><div class="ttdoc">Target capabilities. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00137">AclTypes.h:137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_context_xhtml_ac32e2e958aeca33db54aca18e1ad72c9"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml#ac32e2e958aeca33db54aca18e1ad72c9">arm_compute::IContext::IContext</a></div><div class="ttdeci">IContext(Target target)</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00053">IContext.h:53</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35da54c82ef76ecbbd4c2293e09bae01b54e"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35da54c82ef76ecbbd4c2293e09bae01b54e">arm_compute::Target::Cpu</a></div></div>
<div class="ttc" id="struct_acl_context_options_xhtml_a59ea3ce4c90f7fadd3efd941ea300224"><div class="ttname"><a href="struct_acl_context_options.xhtml#a59ea3ce4c90f7fadd3efd941ea300224">AclContextOptions::allocator</a></div><div class="ttdeci">AclAllocator * allocator</div><div class="ttdoc">Allocator to be used by all the memory internally. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00142">AclTypes.h:142</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac9cc0f7f08e9e97ccc719770f02221ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9cc0f7f08e9e97ccc719770f02221ab">&#9670;&nbsp;</a></span>allocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_allocator_wrapper.xhtml">AllocatorWrapper</a> &amp; allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Backing memory allocator accessor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation. ">Allocator</a> that allocates CPU memory </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">return</span> _allocator;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aab85759ac8bab0b298ad90f022d7283a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab85759ac8bab0b298ad90f022d7283a">&#9670;&nbsp;</a></span>capabilities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1cpu_1_1_cpu_capabilities.xhtml">CpuCapabilities</a> &amp; capabilities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cpu Capabilities accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>The ISA capabilities to be used by the CPU </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="cpu_2unit_2_context_8cpp_source.xhtml#l00091">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> _caps;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a24bc6f236d29a554d91366f78fc09757"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24bc6f236d29a554d91366f78fc09757">&#9670;&nbsp;</a></span>create_activation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::tuple&lt; <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> *, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> &gt; create_activation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_acl_activation_descriptor.xhtml">AclActivationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>act</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_validate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarm__compute_1_1_i_context.xhtml#ae1be77756ed7b77da0b95514160941ff">IContext</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_cpu_activation_8cpp_source.xhtml">CpuActivation.cpp</a>.</p>

<p class="reference">References <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00077">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="_legacy_support_8cpp_source.xhtml#l00111">arm_compute::detail::convert_to_activation_info()</a>, <a class="el" href="_legacy_support_8cpp_source.xhtml#l00090">arm_compute::detail::convert_to_legacy_tensor_info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113ab498327feeb51430af73e07deac268fd">arm_compute::OutOfMemory</a>, <a class="el" href="_tensor_info_8h_source.xhtml#l00276">TensorInfo::set_is_resizable()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a>, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::Success</a>, <a class="el" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a3fa176f5fa1031628dff44a63112bc85">arm_compute::UnsupportedConfig</a>, and <a class="el" href="_cpu_activation_8cpp_source.xhtml#l00045">CpuActivation::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    TensorInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a> = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a5d2ed5b1a1b431473e20ccffb16876be">detail::convert_to_legacy_tensor_info</a>(src);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    TensorInfo dst_info = <a class="code" href="namespacearm__compute_1_1detail.xhtml#a5d2ed5b1a1b431473e20ccffb16876be">detail::convert_to_legacy_tensor_info</a>(dst);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">auto</span>       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>     = <a class="code" href="namespacearm__compute_1_1detail.xhtml#ae0ac96f6dc2901725a408c5d4ae11ccf">detail::convert_to_activation_info</a>(act);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span>(is_validate &amp;&amp; !<span class="keywordtype">bool</span>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">CpuActivation::validate</a>(&amp;src_info.set_is_resizable(<span class="keyword">false</span>), &amp;dst_info.set_is_resizable(<span class="keyword">false</span>), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)))</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> std::make_tuple(<span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a3fa176f5fa1031628dff44a63112bc85">StatusCode::UnsupportedConfig</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> act_op = std::make_unique&lt;cpu::CpuActivation&gt;();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    act_op-&gt;configure(&amp;src_info, &amp;dst_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> op = <span class="keyword">new</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">arm_compute::IOperator</a>(static_cast&lt;IContext *&gt;(<span class="keyword">this</span>));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span>(op == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;Couldn&#39;t allocate internal resources&quot;</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> std::make_tuple(<span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113ab498327feeb51430af73e07deac268fd">StatusCode::OutOfMemory</a>);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    op-&gt;set_internal_operator(std::move(act_op));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(op, <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a5d2ed5b1a1b431473e20ccffb16876be"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a5d2ed5b1a1b431473e20ccffb16876be">arm_compute::detail::convert_to_legacy_tensor_info</a></div><div class="ttdeci">TensorInfo convert_to_legacy_tensor_info(const AclTensorDescriptor &amp;desc)</div><div class="ttdoc">Convert a descriptor to a legacy format one. </div><div class="ttdef"><b>Definition:</b> <a href="_legacy_support_8cpp_source.xhtml#l00090">LegacySupport.cpp:90</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_i_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">arm_compute::experimental::IOperator</a></div><div class="ttdoc">Base class for all async functions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_i_operator_8h_source.xhtml#l00037">IOperator.h:37</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdoc">Log an error message to the logger. </div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00077">Log.h:77</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::StatusCode::Success</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a15541ee1af263ccf663a5dc23de9fb89"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a></div><div class="ttdeci">TensorInfo src_info(src_shape, 1, data_type)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1_cpu_activation_xhtml_aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">arm_compute::cpu::CpuActivation::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_activation_8cpp_source.xhtml#l00045">CpuActivation.cpp:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a3fa176f5fa1031628dff44a63112bc85"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a3fa176f5fa1031628dff44a63112bc85">arm_compute::StatusCode::UnsupportedConfig</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_ae0ac96f6dc2901725a408c5d4ae11ccf"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#ae0ac96f6dc2901725a408c5d4ae11ccf">arm_compute::detail::convert_to_activation_info</a></div><div class="ttdeci">ActivationLayerInfo convert_to_activation_info(const AclActivationDescriptor &amp;desc)</div><div class="ttdoc">Convert an AclActivation descriptor to an internal one. </div><div class="ttdef"><b>Definition:</b> <a href="_legacy_support_8cpp_source.xhtml#l00111">LegacySupport.cpp:111</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113ab498327feeb51430af73e07deac268fd"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113ab498327feeb51430af73e07deac268fd">arm_compute::StatusCode::OutOfMemory</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a483fa42178caa16325fd419956e8b94c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483fa42178caa16325fd419956e8b94c">&#9670;&nbsp;</a></span>create_queue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> * create_queue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_acl_queue_options.xhtml">AclQueueOptions</a> *&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a queue object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Queue options to be used</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the created queue object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_context.xhtml#a8993bef3c9c5e2e3c97393d08d3b338a">IContext</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8cpp_source.xhtml#l00181">181</a> of file <a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> CpuQueue(<span class="keyword">this</span>, options);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2b8dd0571c21159463a0bbed8e6f5204"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b8dd0571c21159463a0bbed8e6f5204">&#9670;&nbsp;</a></span>create_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_v2.xhtml">ITensorV2</a> * create_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allocate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a tensor object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td>Descriptor to use </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allocate</td><td>Flag to allocate tensor</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the created tensor object </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_context.xhtml#a44ec729ae5abf3d48b4a3dd9ab6623cb">IContext</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_context_8cpp_source.xhtml#l00171">171</a> of file <a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cpu_tensor_8cpp_source.xhtml#l00052">CpuTensor::allocate()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00066">tensor</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    CpuTensor *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = <span class="keyword">new</span> CpuTensor(<span class="keyword">this</span>, desc);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">if</span>(tensor != <span class="keyword">nullptr</span> &amp;&amp; allocate)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        tensor-&gt;allocate();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="ttc" id="_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/cpu/<a class="el" href="_cpu_context_8h_source.xhtml">CpuContext.h</a></li>
<li>src/cpu/<a class="el" href="_cpu_context_8cpp_source.xhtml">CpuContext.cpp</a></li>
<li>src/cpu/operators/<a class="el" href="_cpu_activation_8cpp_source.xhtml">CpuActivation.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpu.xhtml">cpu</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1cpu_1_1_cpu_context.xhtml">CpuContext</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:59 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
