<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: examples/graph_alexnet.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph__alexnet_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_alexnet.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__alexnet_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">arm_compute/runtime/CL/Utils.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_toolchain_support_8h.xhtml">support/ToolchainSupport.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/** Example demonstrating how to implement AlexNet&#39;s network using the Compute Library&#39;s graph API */</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">class </span>GraphAlexnetExample : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_example.xhtml">Example</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    GraphAlexnetExample()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        : cmd_parser(), common_opts(cmd_parser), common_params(), graph(0, <span class="stringliteral">&quot;AlexNet&quot;</span>)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordtype">bool</span> do_setup(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)<span class="keyword"> override</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="comment">// Parse arguments</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        cmd_parser.parse(argc, argv);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        cmd_parser.validate();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// Consume common parameters</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        common_params = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">consume_common_graph_parameters</a>(common_opts);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="comment">// Return when help menu is requested</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">if</span>(common_params.help)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            cmd_parser.print_help(argv[0]);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Checks</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a>(<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a>(common_params.data_type), <span class="stringliteral">&quot;QASYMM8 not supported for this graph&quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// Print parameter values</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        std::cout &lt;&lt; common_params &lt;&lt; std::endl;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// Get trainable parameters data path</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        std::string data_path = common_params.data_path;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// Create a preprocessor object</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">const</span> std::array&lt;float, 3&gt; mean_rgb{ { 122.68f, 116.67f, 104.01f } };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        std::unique_ptr&lt;IPreprocessor&gt; preprocessor = std::make_unique&lt;CaffePreproccessor&gt;(mean_rgb);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Create input descriptor</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>        operation_layout = common_params.data_layout;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> tensor_shape     = <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">permute_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(227U, 227U, 3U, common_params.batches), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>, operation_layout);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>  input_descriptor = <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>(tensor_shape, common_params.data_type).<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">set_layout</a>(operation_layout);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">// Set weights trained layout</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> weights_layout = <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        graph &lt;&lt; common_params.target</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;              &lt;&lt; common_params.fast_math_hint</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">InputLayer</a>(input_descriptor, <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">get_input_accessor</a>(common_params, std::move(preprocessor)))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;              <span class="comment">// Layer 1</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                  11U, 11U, 96U,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv1_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv1_b.npy&quot;</span>),</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(4, 4, 0, 0))</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv1&quot;</span>)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu1&quot;</span>)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a>(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>, 5, 0.0001f, 0.75f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;norm1&quot;</span>)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 0))).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool1&quot;</span>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;              <span class="comment">// Layer 2</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                  5U, 5U, 256U,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv2_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv2_b.npy&quot;</span>),</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 2, 2), 2)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv2&quot;</span>)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu2&quot;</span>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">NormalizationLayer</a>(<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">NormType::CROSS_MAP</a>, 5, 0.0001f, 0.75f)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;norm2&quot;</span>)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 0))).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool2&quot;</span>)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;              <span class="comment">// Layer 3</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                  3U, 3U, 384U,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv3_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv3_b.npy&quot;</span>),</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv3&quot;</span>)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu3&quot;</span>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;              <span class="comment">// Layer 4</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                  3U, 3U, 384U,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv4_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv4_b.npy&quot;</span>),</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), 2)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv4&quot;</span>)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu4&quot;</span>)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;              <span class="comment">// Layer 5</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">ConvolutionLayer</a>(</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                  3U, 3U, 256U,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv5_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/conv5_b.npy&quot;</span>),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                  <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1, 1, 1, 1), 2)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;conv5&quot;</span>)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu5&quot;</span>)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">PoolingLayer</a>(<a class="code" href="structarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">PoolingType::MAX</a>, 3, operation_layout, <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2, 2, 0, 0))).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;pool5&quot;</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;              <span class="comment">// Layer 6</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                  4096U,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc6_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc6_b.npy&quot;</span>))</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;fc6&quot;</span>)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu6&quot;</span>)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;              <span class="comment">// Layer 7</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                  4096U,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc7_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc7_b.npy&quot;</span>))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;fc7&quot;</span>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">ActivationLayer</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)).<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;relu7&quot;</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;              <span class="comment">// Layer 8</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                  1000U,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc8_w.npy&quot;</span>, weights_layout),</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                  <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">get_weights_accessor</a>(data_path, <span class="stringliteral">&quot;/cnn_data/alexnet_model/fc8_b.npy&quot;</span>))</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;              .<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;fc8&quot;</span>)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;              <span class="comment">// Softmax</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">SoftmaxLayer</a>().<a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a>(<span class="stringliteral">&quot;prob&quot;</span>)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;              &lt;&lt; <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">OutputLayer</a>(<a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">get_output_accessor</a>(common_params, 5));</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="comment">// Finalize graph</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a> config;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a> = common_params.threads;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">use_tuner</a>   = common_params.enable_tuner;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">tuner_mode</a>  = common_params.tuner_mode;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">tuner_file</a>  = common_params.tuner_file;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        config.<a class="code" href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">mlgo_file</a>   = common_params.mlgo_file;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment">// Load the precompiled kernels from a file into the kernel library, in this way the next time they are needed</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">// compilation won&#39;t be required.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span>(common_params.enable_cl_cache)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">restore_program_cache_from_file</a>();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        graph.finalize(common_params.target, config);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// Save the opencl kernels to a file</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">if</span>(common_opts.enable_cl_cache)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">save_program_cache_to_file</a>();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">void</span> do_run()<span class="keyword"> override</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment">// Run graph</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        graph.run();</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a>  cmd_parser;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">CommonGraphOptions</a> common_opts;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">CommonGraphParams</a>  common_params;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">Stream</a>             graph;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;};</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">/** Main program for AlexNet</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> * Model is based on:</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"> *      https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"> *      &quot;ImageNet Classification with Deep Convolutional Neural Networks&quot;</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> *      Alex Krizhevsky and Sutskever, Ilya and Hinton, Geoffrey E</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> * Provenance: https://github.com/BVLC/caffe/tree/master/models/bvlc_alexnet</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"> * @note To list all the possible arguments execute the binary appended with the --help option</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * @param[in] argv Arguments</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"> * @return Return code</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="graph__alexnet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  214</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__alexnet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> arm_compute::utils::run_example&lt;GraphAlexnetExample&gt;(argc, argv);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_pooling_layer.xhtml">arm_compute::graph::frontend::PoolingLayer</a></div><div class="ttdoc">Pooling Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00977">Layers.h:977</a></div></div>
<div class="ttc" id="arm__compute_2runtime_2_c_l_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_c_l_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml">arm_compute::graph::GraphConfig</a></div><div class="ttdoc">Graph configuration structure Device target types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00084">Types.h:84</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_normalization_layer.xhtml">arm_compute::graph::frontend::NormalizationLayer</a></div><div class="ttdoc">Normalization Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00868">Layers.h:868</a></div></div>
<div class="ttc" id="_toolchain_support_8h_xhtml"><div class="ttname"><a href="_toolchain_support_8h.xhtml">ToolchainSupport.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a249f3f713c6ea8f564e760559cf509f4"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a249f3f713c6ea8f564e760559cf509f4">arm_compute::graph::GraphConfig::tuner_mode</a></div><div class="ttdeci">CLTunerMode tuner_mode</div><div class="ttdoc">Tuner mode to be used by the CL tuner. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00092">Types.h:92</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac7ed63ed26f02dfeddba85858fad6ada"><div class="ttname"><a href="namespacearm__compute.xhtml#ac7ed63ed26f02dfeddba85858fad6ada">arm_compute::restore_program_cache_from_file</a></div><div class="ttdeci">void restore_program_cache_from_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function loads prebuilt opencl kernels from a file. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00035">Utils.cpp:35</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ab14324184f90f342227699c161654b1b"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab14324184f90f342227699c161654b1b">arm_compute::graph_utils::get_input_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_input_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, std::unique_ptr&lt; IPreprocessor &gt; preprocessor=nullptr, bool bgr=true)</div><div class="ttdoc">Generates appropriate input accessor according to the specified graph parameters. ...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00498">GraphUtils.h:498</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdoc">Rectifier (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_normalization_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml">arm_compute::NormalizationLayerInfo</a></div><div class="ttdoc">Normalization Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01849">Types.h:1849</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml_a2593e1f13f425f627658900657f73dc3"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a2593e1f13f425f627658900657f73dc3">arm_compute::utils::consume_common_graph_parameters</a></div><div class="ttdeci">void consume_common_graph_parameters(CommonGraphValidateOptions &amp;options, CommonParams &amp;common_params)</div><div class="ttdoc">Consumes the consume_common_graph_parameters graph options and creates a structure containing any inf...</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00315">graph_validate_utils.h:315</a></div></div>
<div class="ttc" id="_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">graph.h</a></div><div class="ttdoc">Includes all the Graph headers at once. </div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_common_graph_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_options.xhtml">arm_compute::utils::CommonGraphOptions</a></div><div class="ttdoc">Common command line options used to configure the graph examples. </div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00134">CommonGraphOptions.h:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00045">CommandLineParser.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01641">Types.h:1641</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a9172da722f0a434e5cc07c0a3c115d93a26a4b44a837bf97b972628509912b4a5">arm_compute::PoolingType::MAX</a></div><div class="ttdoc">Max Pooling. </div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a11c0bd1d663fbaa516fac9160ec96d4b"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a11c0bd1d663fbaa516fac9160ec96d4b">arm_compute::graph::GraphConfig::mlgo_file</a></div><div class="ttdeci">std::string mlgo_file</div><div class="ttdoc">Filename to load MLGO heuristics from. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00095">Types.h:95</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a5cabfb35cd0014387f7ec2a0c362c20f"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a5cabfb35cd0014387f7ec2a0c362c20f">arm_compute::graph::GraphConfig::tuner_file</a></div><div class="ttdeci">std::string tuner_file</div><div class="ttdoc">File to load/store tuning values from. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00094">Types.h:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_input_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_input_layer.xhtml">arm_compute::graph::frontend::InputLayer</a></div><div class="ttdoc">Input Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00045">Layers.h:45</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a292b758f9eba8b487d71eae4b37326fc"><div class="ttname"><a href="_error_8h.xhtml#a292b758f9eba8b487d71eae4b37326fc">ARM_COMPUTE_EXIT_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_EXIT_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, the given message is printed and program exits. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00379">Error.h:379</a></div></div>
<div class="ttc" id="_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_pooling_layer_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_pooling_layer_info.xhtml">arm_compute::PoolingLayerInfo</a></div><div class="ttdoc">Pooling Layer Information struct. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01202">Types.h:1202</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_example.xhtml">arm_compute::utils::Example</a></div><div class="ttdoc">Abstract Example class. </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00074">Utils.h:74</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3a3405e0e787bc6d6298ff7a2d52e5e4"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a3405e0e787bc6d6298ff7a2d52e5e4">arm_compute::save_program_cache_to_file</a></div><div class="ttdeci">void save_program_cache_to_file(const std::string &amp;filename=&quot;cache.bin&quot;)</div><div class="ttdoc">This function saves opencl kernels library to a file. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">Utils.cpp:73</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00671">Types.h:671</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_activation_layer.xhtml">arm_compute::graph::frontend::ActivationLayer</a></div><div class="ttdoc">Activation Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00121">Layers.h:121</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_convolution_layer.xhtml">arm_compute::graph::frontend::ConvolutionLayer</a></div><div class="ttdoc">Convolution Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00376">Layers.h:376</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ab3a897163a7fe23208f1d9c618062ee2"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab3a897163a7fe23208f1d9c618062ee2">arm_compute::graph_utils::permute_shape</a></div><div class="ttdeci">TensorShape permute_shape(TensorShape tensor_shape, DataLayout in_data_layout, DataLayout out_data_layout)</div><div class="ttdoc">Permutes a given tensor shape given the input and output data layout. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00665">GraphUtils.h:665</a></div></div>
<div class="ttc" id="_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01052">Utils.h:1052</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a2497d23622ec1343e507331ae1388f00"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a2497d23622ec1343e507331ae1388f00">arm_compute::graph::TensorDescriptor::set_layout</a></div><div class="ttdeci">TensorDescriptor &amp; set_layout(DataLayout data_layout)</div><div class="ttdoc">Sets tensor descriptor data layout. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00086">TensorDescriptor.h:86</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_graph_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_graph_params.xhtml">arm_compute::utils::CommonGraphParams</a></div><div class="ttdoc">Structure holding all the common graph parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_common_graph_options_8h_source.xhtml#l00093">CommonGraphOptions.h:93</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00034">SafeOps.h:34</a></div></div>
<div class="ttc" id="graph__alexnet_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__alexnet_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program for AlexNet. </div><div class="ttdef"><b>Definition:</b> <a href="graph__alexnet_8cpp_source.xhtml#l00214">graph_alexnet.cpp:214</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00044">GraphUtils.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_softmax_layer.xhtml">arm_compute::graph::frontend::SoftmaxLayer</a></div><div class="ttdoc">Softmax Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l01323">Layers.h:1323</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ae3d177d243f5fb34544105a4ee4e1f58"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ae3d177d243f5fb34544105a4ee4e1f58">arm_compute::graph_utils::get_output_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_output_accessor(const arm_compute::utils::CommonGraphParams &amp;graph_parameters, size_t top_n=5, bool is_validation=false, std::ostream &amp;output_stream=std::cout)</div><div class="ttdoc">Generates appropriate output accessor according to the specified graph parameters. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00544">GraphUtils.h:544</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a9da74af255a3e6ea61180d4a03192a48"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a9da74af255a3e6ea61180d4a03192a48">arm_compute::graph::GraphConfig::use_tuner</a></div><div class="ttdeci">bool use_tuner</div><div class="ttdoc">Use a tuner in tunable backends. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00089">Types.h:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_output_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_output_layer.xhtml">arm_compute::graph::frontend::OutputLayer</a></div><div class="ttdoc">Output Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00095">Layers.h:95</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">arm_compute::graph::frontend::FullyConnectedLayer</a></div><div class="ttdoc">Fully Connected Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00710">Layers.h:710</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_a30bee0b52a919bbcb1dc48b1b6546a16"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#a30bee0b52a919bbcb1dc48b1b6546a16">arm_compute::graph_utils::get_weights_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_weights_accessor(const std::string &amp;path, const std::string &amp;data_file, DataLayout file_layout=DataLayout::NCHW)</div><div class="ttdoc">Generates appropriate weights accessor according to the specified path. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00476">GraphUtils.h:476</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_graph_config_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::graph::GraphConfig::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdoc">Number of threads to use (thread capable backends), if 0 the backend will auto-initialize, if -1 the backend will stay as it is. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00093">Types.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml">arm_compute::graph::frontend::Stream</a></div><div class="ttdoc">Stream frontend class to construct simple graphs in a stream fashion. </div><div class="ttdef"><b>Definition:</b> <a href="_stream_8h_source.xhtml#l00045">Stream.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00031">ILayer.h:31</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition] </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad4bb8dabdbf8ad75e34220cc666b59caa980fef040549733973683b1a868f96e5">arm_compute::NormType::CROSS_MAP</a></div><div class="ttdoc">Normalization applied cross maps. </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml_af664a2598e05f8de28fb9f94e3902886"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">arm_compute::graph::frontend::ILayer::set_name</a></div><div class="ttdeci">ILayer &amp; set_name(std::string name)</div><div class="ttdoc">Sets the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00055">ILayer.h:55</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="graph__alexnet_8cpp.xhtml">graph_alexnet.cpp</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:24:43 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
