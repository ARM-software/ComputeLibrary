<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IOperator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1_i_operator.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IOperator Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for all async functions.  
 <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2runtime_2_i_operator_8h_source.xhtml">IOperator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d7312410ad7314fa75c29b1ff0f17f0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)=0</td></tr>
<tr class="memdesc:a8d7312410ad7314fa75c29b1ff0f17f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#a8d7312410ad7314fa75c29b1ff0f17f0">More...</a><br /></td></tr>
<tr class="separator:a8d7312410ad7314fa75c29b1ff0f17f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a490892d69716b3d4a4aa83c5dd113f0c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants)=0</td></tr>
<tr class="memdesc:a490892d69716b3d4a4aa83c5dd113f0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="#a490892d69716b3d4a4aa83c5dd113f0c">More...</a><br /></td></tr>
<tr class="separator:a490892d69716b3d4a4aa83c5dd113f0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ef96ccfabfca0faf4c3914c85bc4786"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">workspace</a> () const =0</td></tr>
<tr class="memdesc:a8ef96ccfabfca0faf4c3914c85bc4786"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="#a8ef96ccfabfca0faf4c3914c85bc4786">More...</a><br /></td></tr>
<tr class="separator:a8ef96ccfabfca0faf4c3914c85bc4786"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for all async functions. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2runtime_2_i_operator_8h_source.xhtml#l00037">37</a> of file <a class="el" href="arm__compute_2runtime_2_i_operator_8h_source.xhtml">IOperator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3da3a4cfa91daf144e828fa521760ed5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3da3a4cfa91daf144e828fa521760ed5">&#9670;&nbsp;</a></span>~IOperator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a490892d69716b3d4a4aa83c5dd113f0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a490892d69716b3d4a4aa83c5dd113f0c">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">ClFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuDepthwiseConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuDepthwiseConv2dAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">INEOperator</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuScale</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">ICLOperator</a>.</p>

</div>
</div>
<a id="a8d7312410ad7314fa75c29b1ff0f17f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d7312410ad7314fa75c29b1ff0f17f0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClSynthetizeOperatorWithBorder&lt; K &gt;</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml#a98d9392a7bdeca6788ac682e0febfd23">NESynthetizeFunctionWithZeroConstantKernelBorder&lt; K &gt;</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CLLogicalAnd</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CLLogicalOr</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml#a18386a2a07dd2120a3e143ec29066a7a">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemm</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuComplexMul</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDirectConv3d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClGemmLowpOutputStage</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDepthwiseConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_transposed_convolution.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClTransposedConvolution</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmLowpOutputStage</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDirectConv3d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuSoftmaxGeneric&lt; IS_LOG &gt;</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuMul</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuPool2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDepthwiseConv2dAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClConcatenate</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuAdd</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConcatenate</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_sub.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuSub</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuPool3d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClSoftmax</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">INEOperator</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuScale</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_scale.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClScale</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuAddMulAdd</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClPRelu</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ICLOperator</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_quantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClQuantize</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">ClDequantize</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuActivation</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConvertFullyConnectedWeights</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuElementwiseUnary</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDequantize</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuQuantize</a>, and <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuElementwiseBase</a>.</p>

</div>
</div>
<a id="a8ef96ccfabfca0faf4c3914c85bc4786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ef96ccfabfca0faf4c3914c85bc4786">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_gemm.xhtml#a74ae0d6e96f38fecd38471431786b870">ClGemm</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">ClFullyConnected</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_indirect_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">ClIndirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuSoftmaxGeneric&lt; IS_LOG &gt;</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuDepthwiseConv2dAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuPool2d</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">INEOperator</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuPool3d</a>, <a class="el" href="classarm__compute_1_1opencl_1_1_cl_softmax.xhtml#a74ae0d6e96f38fecd38471431786b870">ClSoftmax</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add_mul_add.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuAddMulAdd</a>, and <a class="el" href="classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">ICLOperator</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/<a class="el" href="arm__compute_2runtime_2_i_operator_8h_source.xhtml">IOperator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></li>
    <li class="footer">Generated on Thu Mar 16 2023 12:25:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
