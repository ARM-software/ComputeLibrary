<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLCompileContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_compile_context.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLCompileContext Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml" title="CLCompileContext class.">CLCompileContext</a> class.  
 <a href="classarm__compute_1_1_c_l_compile_context.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml">CLCompileContext.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae712947a608a9fbcbfb4c2d43a56da58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#ae712947a608a9fbcbfb4c2d43a56da58">CLCompileContext</a> ()</td></tr>
<tr class="memdesc:ae712947a608a9fbcbfb4c2d43a56da58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#ae712947a608a9fbcbfb4c2d43a56da58">More...</a><br /></td></tr>
<tr class="separator:ae712947a608a9fbcbfb4c2d43a56da58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0a5dc308043aece103692288dcd2366"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#ad0a5dc308043aece103692288dcd2366">CLCompileContext</a> (cl::Context <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>, const cl::Device &amp;device)</td></tr>
<tr class="memdesc:ad0a5dc308043aece103692288dcd2366"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#ad0a5dc308043aece103692288dcd2366">More...</a><br /></td></tr>
<tr class="separator:ad0a5dc308043aece103692288dcd2366"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86409f541991c3ac377c2a6b7d1f832d"><td class="memItemLeft" align="right" valign="top">cl::Context &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a> ()</td></tr>
<tr class="memdesc:a86409f541991c3ac377c2a6b7d1f832d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the associated CL context.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">More...</a><br /></td></tr>
<tr class="separator:a86409f541991c3ac377c2a6b7d1f832d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293edc1bbcbddffb7228ac97917ed107"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a> (cl::Context <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>)</td></tr>
<tr class="memdesc:a293edc1bbcbddffb7228ac97917ed107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL context used to create programs.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">More...</a><br /></td></tr>
<tr class="separator:a293edc1bbcbddffb7228ac97917ed107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8da9f7c295b65104343fac358924fc2c"><td class="memItemLeft" align="right" valign="top">const cl::Device &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">get_device</a> () const</td></tr>
<tr class="memdesc:a8da9f7c295b65104343fac358924fc2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the CL device for which the programs are created.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">More...</a><br /></td></tr>
<tr class="separator:a8da9f7c295b65104343fac358924fc2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">set_device</a> (cl::Device device)</td></tr>
<tr class="memdesc:a5a6865d04c8d3348860f3cb8100fdb97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL device for which the programs are created.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">More...</a><br /></td></tr>
<tr class="separator:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd891a07efcd9a5ae685f834973666d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">create_kernel</a> (const std::string &amp;<a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, const std::string &amp;program_name, const std::string &amp;program_source, const std::string &amp;kernel_path, const StringSet &amp;build_options_set, bool is_binary) const</td></tr>
<tr class="memdesc:a3dd891a07efcd9a5ae685f834973666d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an OpenCL kernel.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">More...</a><br /></td></tr>
<tr class="separator:a3dd891a07efcd9a5ae685f834973666d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a> ()</td></tr>
<tr class="memdesc:a0ad613086cc79a2e32d5b87bcefc7488"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the library's cache of binary programs.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">More...</a><br /></td></tr>
<tr class="separator:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54bb195c770b747d87af7506c2032aa4"><td class="memItemLeft" align="right" valign="top">const std::map&lt; std::string, cl::Program &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">get_built_programs</a> () const</td></tr>
<tr class="memdesc:a54bb195c770b747d87af7506c2032aa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the cache of built OpenCL programs.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">More...</a><br /></td></tr>
<tr class="separator:a54bb195c770b747d87af7506c2032aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a251e0ce50dc147c782cad51f4bee32ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">add_built_program</a> (const std::string &amp;built_program_name, const cl::Program &amp;program) const</td></tr>
<tr class="memdesc:a251e0ce50dc147c782cad51f4bee32ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new built program to the cache.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">More...</a><br /></td></tr>
<tr class="separator:a251e0ce50dc147c782cad51f4bee32ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f51d241825bd6710fe81b581068ba1e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a> () const</td></tr>
<tr class="memdesc:a4f51d241825bd6710fe81b581068ba1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if FP16 is supported by the CL device.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">More...</a><br /></td></tr>
<tr class="separator:a4f51d241825bd6710fe81b581068ba1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ead2f03c59c553788947ea8a29b38f3"><td class="memItemLeft" align="right" valign="top">cl_uint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">get_num_compute_units</a> () const</td></tr>
<tr class="memdesc:a7ead2f03c59c553788947ea8a29b38f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum number of compute units in the device.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">More...</a><br /></td></tr>
<tr class="separator:a7ead2f03c59c553788947ea8a29b38f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeda307cc2131afa8a4764e38373f94e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">max_local_workgroup_size</a> (const cl::Kernel &amp;kernel) const</td></tr>
<tr class="memdesc:aaeda307cc2131afa8a4764e38373f94e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the maximum number of local work items in a workgroup can be supported for the kernel.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">More...</a><br /></td></tr>
<tr class="separator:aaeda307cc2131afa8a4764e38373f94e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memItemLeft" align="right" valign="top">cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">default_ndrange</a> () const</td></tr>
<tr class="memdesc:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the default NDRange for the device.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">More...</a><br /></td></tr>
<tr class="separator:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d4cf09994ef5a094eed69cd37ca26ba"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">get_device_version</a> () const</td></tr>
<tr class="memdesc:a1d4cf09994ef5a094eed69cd37ca26ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the device version.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">More...</a><br /></td></tr>
<tr class="separator:a1d4cf09994ef5a094eed69cd37ca26ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">int64_base_atomics_supported</a> () const</td></tr>
<tr class="memdesc:a7406f704be6891f5a9a1c6dbc3e882df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if int64_base_atomics extension is supported by the CL device.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">More...</a><br /></td></tr>
<tr class="separator:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab68e2f6c9f06a4db5bb7ceec9185615"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#aab68e2f6c9f06a4db5bb7ceec9185615">is_wbsm_supported</a> () const</td></tr>
<tr class="separator:aab68e2f6c9f06a4db5bb7ceec9185615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a456838540626a64471d1c301643bab97"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#a456838540626a64471d1c301643bab97">get_ddk_version</a> () const</td></tr>
<tr class="memdesc:a456838540626a64471d1c301643bab97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the DDK version.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#a456838540626a64471d1c301643bab97">More...</a><br /></td></tr>
<tr class="separator:a456838540626a64471d1c301643bab97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac65e0c42b0bfd4acba6bb95bf2e98641"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml#ac65e0c42b0bfd4acba6bb95bf2e98641">get_gpu_target</a> () const</td></tr>
<tr class="memdesc:ac65e0c42b0bfd4acba6bb95bf2e98641"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the Gpu target of the associated device.  <a href="classarm__compute_1_1_c_l_compile_context.xhtml#ac65e0c42b0bfd4acba6bb95bf2e98641">More...</a><br /></td></tr>
<tr class="separator:ac65e0c42b0bfd4acba6bb95bf2e98641"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml" title="CLCompileContext class.">CLCompileContext</a> class. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">204</a> of file <a class="el" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml">CLCompileContext.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae712947a608a9fbcbfb4c2d43a56da58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae712947a608a9fbcbfb4c2d43a56da58">&#9670;&nbsp;</a></span>CLCompileContext() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    : _context(), _device(), _programs_map(), _built_programs_map(), _is_wbsm_supported()</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad0a5dc308043aece103692288dcd2366"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0a5dc308043aece103692288dcd2366">&#9670;&nbsp;</a></span>CLCompileContext() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> </td>
          <td>(</td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::Device &amp;&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>A CL context. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>A CL device. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    : _context(), _device(), _programs_map(), _built_programs_map(), _is_wbsm_supported()</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    _context           = std::move(<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    _device            = CLDevice(device);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    _is_wbsm_supported = <a class="code" href="namespacearm__compute.xhtml#ad419ea339c7291b66d1cd9417b4f7330">get_wbsm_support_info</a>(device);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00336">CLCompileContext::context()</a>, and <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00429">arm_compute::get_wbsm_support_info()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a251e0ce50dc147c782cad51f4bee32ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a251e0ce50dc147c782cad51f4bee32ea">&#9670;&nbsp;</a></span>add_built_program()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_built_program </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>built_program_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::Program &amp;&#160;</td>
          <td class="paramname"><em>program</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a new built program to the cache. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">built_program_name</td><td>Name of the program </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">program</td><td>Built program to add to the cache </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00320">320</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    _built_programs_map.emplace(built_program_name, program);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0ad613086cc79a2e32d5b87bcefc7488"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ad613086cc79a2e32d5b87bcefc7488">&#9670;&nbsp;</a></span>clear_programs_cache()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void clear_programs_cache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the library's cache of binary programs. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00325">325</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;{</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _programs_map.clear();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    _built_programs_map.clear();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a86409f541991c3ac377c2a6b7d1f832d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86409f541991c3ac377c2a6b7d1f832d">&#9670;&nbsp;</a></span>context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl::Context &amp; context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Accessor for the associated CL context. </p>
<dl class="section return"><dt>Returns</dt><dd>A CL context. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00336">336</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;{</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">return</span> _context;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00158">CLCompileContext::CLCompileContext()</a>, and <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00231">CLCompileContext::set_context()</a>.</p>

</div>
</div>
<a id="a3dd891a07efcd9a5ae685f834973666d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dd891a07efcd9a5ae685f834973666d">&#9670;&nbsp;</a></span>create_kernel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a> create_kernel </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>program_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>program_source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringSet &amp;&#160;</td>
          <td class="paramname"><em>build_options_set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_binary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an OpenCL kernel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_name</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">program_name</td><td><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">program_source</td><td><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> source. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>CL kernel path. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">build_options_set</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> build options as a set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_binary</td><td>Flag to indicate if the program source is binary.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created kernel. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>      = generate_build_options(build_options_set, kernel_path);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">const</span> std::string built_program_name = program_name + <span class="stringliteral">&quot;_&quot;</span> + <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">auto</span>              built_program_it   = _built_programs_map.find(built_program_name);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    cl::Program       cl_program;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">if</span> (_built_programs_map.end() != built_program_it)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="comment">// If program has been built, retrieve to create kernel from it</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        cl_program = built_program_it-&gt;second;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        Program program = load_program(program_name, program_source, is_binary);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment">// Build program</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        cl_program = program.build(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="comment">// Add built program to internal map</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        _built_programs_map.emplace(built_program_name, cl_program);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">// Create and return kernel</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> Kernel(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, cl_program);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00118">Program::build()</a>, <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00059">build_options</a>, and <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">kernel_name</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00042">ClKernelRuntime::configure()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00409">arm_compute::create_kernel()</a>, and <a class="el" href="_compile_context_8cpp_source.xhtml#l00042">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="adb48a1da7dc6b6f3c1a424d21e1ac1f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb48a1da7dc6b6f3c1a424d21e1ac1f8">&#9670;&nbsp;</a></span>default_ndrange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl::NDRange default_ndrange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the default NDRange for the device. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00352">352</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>   _target = <a class="code" href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">get_target_from_device</a>(_device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>());</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    cl::NDRange default_range;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordflow">switch</span> (_target)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>:</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">GPUTarget::T600</a>:</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">GPUTarget::T700</a>:</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">GPUTarget::T800</a>:</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            default_range = cl::NDRange(128u, 1);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            default_range = cl::NullRange;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">return</span> default_range;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00110">CLDevice::cl_device()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00224">arm_compute::get_target_from_device()</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::MIDGARD</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">arm_compute::T600</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">arm_compute::T700</a>, and <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">arm_compute::T800</a>.</p>

</div>
</div>
<a id="a4f51d241825bd6710fe81b581068ba1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f51d241825bd6710fe81b581068ba1e">&#9670;&nbsp;</a></span>fp16_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fp16_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if FP16 is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports FP16 </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00297">297</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;{</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">supported</a>(<span class="stringliteral">&quot;cl_khr_fp16&quot;</span>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00139">CLDevice::supported()</a>.</p>

</div>
</div>
<a id="a54bb195c770b747d87af7506c2032aa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54bb195c770b747d87af7506c2032aa4">&#9670;&nbsp;</a></span>get_built_programs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt; std::string, cl::Program &gt; &amp; get_built_programs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access the cache of built OpenCL programs. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">return</span> _built_programs_map;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_compile_context_8cpp_source.xhtml#l00042">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a456838540626a64471d1c301643bab97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a456838540626a64471d1c301643bab97">&#9670;&nbsp;</a></span>get_ddk_version()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t get_ddk_version </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the DDK version. </p>
<p>If the DDK version cannot be detected, return -1.</p>
<dl class="section return"><dt>Returns</dt><dd>The DDK version. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00404">404</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;{</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">const</span> std::string device_version = _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">device_version</a>();</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keyword">const</span> std::regex  ddk_regex(<span class="stringliteral">&quot;r([0-9]*)p[0-9]&quot;</span>);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    std::smatch       ddk_match;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordflow">if</span> (std::regex_search(device_version, ddk_match, ddk_regex))</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">std::stoi</a>(ddk_match[1]);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160; </div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00128">CLDevice::device_version()</a>, and <a class="el" href="_string_support_8h_source.xhtml#l00055">arm_compute::support::cpp11::stoi()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_transposed_convolution_kernel_8cpp_source.xhtml#l00106">ClTransposedConvolutionKernel::configure()</a>, <a class="el" href="_cl_indirect_conv2d_kernel_8cpp_source.xhtml#l00126">ClIndirectConv2dKernel::configure()</a>, and <a class="el" href="_cl_direct_conv2d_kernel_8cpp_source.xhtml#l00176">ClDirectConv2dKernel::configure()</a>.</p>

</div>
</div>
<a id="a8da9f7c295b65104343fac358924fc2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8da9f7c295b65104343fac358924fc2c">&#9670;&nbsp;</a></span>get_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const cl::Device &amp; get_device </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the CL device for which the programs are created. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00341">341</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;{</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00110">CLDevice::cl_device()</a>.</p>

</div>
</div>
<a id="a1d4cf09994ef5a094eed69cd37ca26ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d4cf09994ef5a094eed69cd37ca26ba">&#9670;&nbsp;</a></span>get_device_version()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_device_version </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the device version. </p>
<dl class="section return"><dt>Returns</dt><dd>The content of CL_DEVICE_VERSION </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00394">394</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;{</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">device_version</a>();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00128">CLDevice::device_version()</a>.</p>

</div>
</div>
<a id="ac65e0c42b0bfd4acba6bb95bf2e98641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac65e0c42b0bfd4acba6bb95bf2e98641">&#9670;&nbsp;</a></span>get_gpu_target()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> get_gpu_target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the Gpu target of the associated device. </p>
<dl class="section return"><dt>Returns</dt><dd>GPUTarget </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00417">417</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#ac6326ac3fd13446394faa873fa727414">target</a>();</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00092">CLDevice::target()</a>.</p>

</div>
</div>
<a id="a7ead2f03c59c553788947ea8a29b38f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ead2f03c59c553788947ea8a29b38f3">&#9670;&nbsp;</a></span>get_num_compute_units()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl_uint get_num_compute_units </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum number of compute units in the device. </p>
<dl class="section return"><dt>Returns</dt><dd>The content of CL_DEVICE_MAX_COMPUTE_UNITS </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00399">399</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;{</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#a2e11e435e467931ffe6d9a15d0401c19">compute_units</a>();</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00101">CLDevice::compute_units()</a>.</p>

</div>
</div>
<a id="a7406f704be6891f5a9a1c6dbc3e882df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7406f704be6891f5a9a1c6dbc3e882df">&#9670;&nbsp;</a></span>int64_base_atomics_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool int64_base_atomics_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if int64_base_atomics extension is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports int64_base_atomics extension </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00372">372</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">return</span> _device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">supported</a>(<span class="stringliteral">&quot;cl_khr_int64_base_atomics&quot;</span>);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_device_8h_source.xhtml#l00139">CLDevice::supported()</a>.</p>

</div>
</div>
<a id="aab68e2f6c9f06a4db5bb7ceec9185615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab68e2f6c9f06a4db5bb7ceec9185615">&#9670;&nbsp;</a></span>is_wbsm_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_wbsm_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00377">377</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;{</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordflow">return</span> _is_wbsm_supported;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaeda307cc2131afa8a4764e38373f94e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeda307cc2131afa8a4764e38373f94e">&#9670;&nbsp;</a></span>max_local_workgroup_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t max_local_workgroup_size </td>
          <td>(</td>
          <td class="paramtype">const cl::Kernel &amp;&#160;</td>
          <td class="paramname"><em>kernel</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find the maximum number of local work items in a workgroup can be supported for the kernel. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00382">382</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;{</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordtype">size_t</span> result;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keywordtype">size_t</span> err = kernel.getWorkGroupInfo(_device.<a class="code" href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">cl_device</a>(), CL_KERNEL_WORK_GROUP_SIZE, &amp;result);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(err != 0,</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                             <span class="stringliteral">&quot;clGetKernelWorkGroupInfo failed to return the maximum workgroup size for the kernel&quot;</span>);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(err);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="_c_l_device_8h_source.xhtml#l00110">CLDevice::cl_device()</a>.</p>

</div>
</div>
<a id="a293edc1bbcbddffb7228ac97917ed107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a293edc1bbcbddffb7228ac97917ed107">&#9670;&nbsp;</a></span>set_context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_context </td>
          <td>(</td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the CL context used to create programs. </p>
<dl class="section note"><dt>Note</dt><dd>Setting the context also resets the device to the first one available in the new context.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>A CL context. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00231">231</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    _context = std::move(<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">if</span> (_context.get() != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> cl_devices = _context.getInfo&lt;CL_CONTEXT_DEVICES&gt;();</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">if</span> (!cl_devices.empty())</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            _device = CLDevice(cl_devices[0]);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00336">CLCompileContext::context()</a>.</p>

</div>
</div>
<a id="a5a6865d04c8d3348860f3cb8100fdb97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a6865d04c8d3348860f3cb8100fdb97">&#9670;&nbsp;</a></span>set_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_device </td>
          <td>(</td>
          <td class="paramtype">cl::Device&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the CL device for which the programs are created. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>A CL device. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_compile_context_8cpp_source.xhtml#l00346">346</a> of file <a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    _is_wbsm_supported = <a class="code" href="namespacearm__compute.xhtml#ad419ea339c7291b66d1cd9417b4f7330">get_wbsm_support_info</a>(device);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    _device            = std::move(device);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00429">arm_compute::get_wbsm_support_info()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml">CLCompileContext.h</a></li>
<li>src/core/CL/<a class="el" href="_c_l_compile_context_8cpp_source.xhtml">CLCompileContext.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">arm_compute::GPUTarget::T700</a></div><div class="ttdeci">@ T700</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a2e11e435e467931ffe6d9a15d0401c19"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a2e11e435e467931ffe6d9a15d0401c19">arm_compute::CLDevice::compute_units</a></div><div class="ttdeci">size_t compute_units() const</div><div class="ttdoc">Returns the number of compute units available.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00101">CLDevice.h:101</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">arm_compute::GPUTarget::T800</a></div><div class="ttdeci">@ T800</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_aa75344c818b18165c299b00777cc8c52"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#aa75344c818b18165c299b00777cc8c52">arm_compute::CLDevice::supported</a></div><div class="ttdeci">bool supported(const std::string &amp;extension) const override</div><div class="ttdoc">Check if extensions on a device are supported.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00139">CLDevice.h:139</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLCompileContext::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00336">CLCompileContext.cpp:336</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_aa7d721813bb154a0ca56f8136712a19b"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#aa7d721813bb154a0ca56f8136712a19b">arm_compute::CLDevice::cl_device</a></div><div class="ttdeci">const cl::Device &amp; cl_device() const</div><div class="ttdoc">Returns the underlying cl device object.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00110">CLDevice.h:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad419ea339c7291b66d1cd9417b4f7330"><div class="ttname"><a href="namespacearm__compute.xhtml#ad419ea339c7291b66d1cd9417b4f7330">arm_compute::get_wbsm_support_info</a></div><div class="ttdeci">bool get_wbsm_support_info(const cl::Device &amp;device)</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00429">CLHelpers.cpp:429</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a281384aa081efe5819eedd6a7c2a429b"><div class="ttname"><a href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">arm_compute::get_target_from_device</a></div><div class="ttdeci">GPUTarget get_target_from_device(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the GPU target from CL device.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00224">CLHelpers.cpp:224</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div><div class="ttdeci">@ MIDGARD</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_a492b0f72e29930e8b74a866d5e21b31b"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#a492b0f72e29930e8b74a866d5e21b31b">arm_compute::CLDevice::device_version</a></div><div class="ttdeci">std::string device_version() const</div><div class="ttdoc">Returns the device version as a string.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00128">CLDevice.h:128</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_abdba606a789b8d664774f17d18f45cfe"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#abdba606a789b8d664774f17d18f45cfe">arm_compute::support::cpp11::stoi</a></div><div class="ttdeci">int stoi(const std::string &amp;str, std::size_t *pos=0, NumericBase base=NumericBase::BASE_10)</div><div class="ttdoc">Convert string values to integer.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00055">StringSupport.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">arm_compute::GPUTarget::T600</a></div><div class="ttdeci">@ T600</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_device_xhtml_ac6326ac3fd13446394faa873fa727414"><div class="ttname"><a href="classarm__compute_1_1_c_l_device.xhtml#ac6326ac3fd13446394faa873fa727414">arm_compute::CLDevice::target</a></div><div class="ttdeci">const GPUTarget &amp; target() const</div><div class="ttdoc">Returns the GPU target of the cl device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_device_8h_source.xhtml#l00092">CLDevice.h:92</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a3e76c95cfc49454dbfff42e02d25ccb8"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a></div><div class="ttdeci">std::set&lt; std::string &gt; build_options</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00059">ClIm2ColKernel.cpp:59</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:06 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
