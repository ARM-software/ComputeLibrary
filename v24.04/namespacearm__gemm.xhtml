<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_gemm Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearm__gemm.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">arm_gemm Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__gemm_1_1utils"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm_1_1utils.xhtml">utils</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1barrier.xhtml">barrier</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_convolution_parameters.xhtml">ConvolutionParameters</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_hybrid.xhtml">GemmHybrid</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml">GemmHybridIndirect</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized.xhtml">GemmHybridQuantized</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_hybrid_quantized_inline.xhtml">GemmHybridQuantizedInline</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_gemm_implementation_3_01_top_00_01_tret_00_01_nothing_01_4.xhtml">GemmImplementation&lt; Top, Tret, Nothing &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml">GemvBatched</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_i_gemm_common.xhtml">IGemmCommon</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_indirect_input_arg.xhtml">IndirectInputArg</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_indirect_output_arg.xhtml">IndirectOutputArg</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1is__sme.xhtml">is_sme</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml">NDCoordinate</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml" title="NDCoordinate builds upon a range, but specifies a starting position in addition to a size which it in...">NDCoordinate</a> builds upon a range, but specifies a starting position in addition to a size which it inherits from <a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a>.  <a href="classarm__gemm_1_1_n_d_coordinate.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_performance_parameters.xhtml">PerformanceParameters</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_quantize_wrapper.xhtml">QuantizeWrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_fixed.xhtml">StdTransformsFixed</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_fixed_t_r_b.xhtml">StdTransformsFixedTRB</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_m_e.xhtml">StdTransformsSME</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml">StdTransformsSVE</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac882ca3f500a8e83c76a8acc59831255"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> = <a class="el" href="classarm__compute_1_1bfloat16.xhtml">arm_compute::bfloat16</a></td></tr>
<tr class="separator:ac882ca3f500a8e83c76a8acc59831255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eee168fbc228e660cd91b939bce3a28"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr , typename OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:a6eee168fbc228e660cd91b939bce3a28"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a6eee168fbc228e660cd91b939bce3a28">GemmHybridIndirectFixedFormat</a> = <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml">GemmHybridIndirect</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, false, true &gt;</td></tr>
<tr class="separator:a6eee168fbc228e660cd91b939bce3a28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a583dce2887201c4fd80390ffe0e5b27d"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr , typename OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:a583dce2887201c4fd80390ffe0e5b27d"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a583dce2887201c4fd80390ffe0e5b27d">GemmInterleavedNoMerge</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, false &gt;</td></tr>
<tr class="separator:a583dce2887201c4fd80390ffe0e5b27d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73b9c612e3496e550680ec87c0cf5e74"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr , typename OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:a73b9c612e3496e550680ec87c0cf5e74"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a73b9c612e3496e550680ec87c0cf5e74">GemmInterleavedFixedFormat</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, true, true &gt;</td></tr>
<tr class="separator:a73b9c612e3496e550680ec87c0cf5e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ecc26938c66dbb5b4a4c7c5cd4d430"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr &gt; </td></tr>
<tr class="memitem:a22ecc26938c66dbb5b4a4c7c5cd4d430"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a22ecc26938c66dbb5b4a4c7c5cd4d430">GemmInterleavedPretransposedNoMergeQuantizedInline</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a>, false &gt;</td></tr>
<tr class="separator:a22ecc26938c66dbb5b4a4c7c5cd4d430"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a991f78a5d5b5c01d42f7ae6e35e0e7ea"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr &gt; </td></tr>
<tr class="memitem:a991f78a5d5b5c01d42f7ae6e35e0e7ea"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a991f78a5d5b5c01d42f7ae6e35e0e7ea">GemmInterleavedQuantized</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &gt;</td></tr>
<tr class="separator:a991f78a5d5b5c01d42f7ae6e35e0e7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a265a84301b442cb3507bd660adc2f892"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr &gt; </td></tr>
<tr class="memitem:a265a84301b442cb3507bd660adc2f892"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a265a84301b442cb3507bd660adc2f892">GemmInterleavedNoMergeDequantized</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a>, false &gt;</td></tr>
<tr class="separator:a265a84301b442cb3507bd660adc2f892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33611147adc9351dfcbe7b5e4e7dc861"><td class="memTemplParams" colspan="2">template&lt;typename strategy , typename To , typename Tr &gt; </td></tr>
<tr class="memitem:a33611147adc9351dfcbe7b5e4e7dc861"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a33611147adc9351dfcbe7b5e4e7dc861">GemmInterleavedDequantized</a> = <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt; <a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a> &gt;</td></tr>
<tr class="separator:a33611147adc9351dfcbe7b5e4e7dc861"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f0bb435c603f4c166c9528fefe58fb0"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a9f0bb435c603f4c166c9528fefe58fb0"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a> = std::unique_ptr&lt; <a class="el" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a>&lt; Top, Tret &gt; &gt;</td></tr>
<tr class="separator:a9f0bb435c603f4c166c9528fefe58fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add517606da81960aed83e2e66e87ecab"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a> = <a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">ndrange_max</a> &gt;</td></tr>
<tr class="separator:add517606da81960aed83e2e66e87ecab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051d3dc92e26a43c1651cc8ce631c98e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> = <a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml">NDCoordinate</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">ndrange_max</a> &gt;</td></tr>
<tr class="separator:a051d3dc92e26a43c1651cc8ce631c98e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a19076cd620581b8e671ad674359c1b76"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76">KernelWeightFormat</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c">NON_FIXED</a> = 0, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aad4d5fd069e9d845d371199e819b9935">VL128_BL16</a> = 0x1200, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a927ef1845254e94feea3508f071669c1">VL128_BL32</a> = 0x1400, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa135d787a2a55a0d941fc2892f9804c4">VL128_BL32_BF16</a> = 0x1410, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76ab6426811f0cdf342947b1c4b5932cc50">VL128_BL64</a> = 0x1800, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a98e86e70d3e2ada0d1a6ee63d98298f4">VL256_BL64</a> = 0x2800, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa4805539b25e4102ef1b172350ee6824">VL256_BL64_BF16</a> = 0x2810, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2c5ba9f23f492ca3abc8ab6f9db4a9c6">VL1VL_BL16</a> = 0x1201, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a0385682ff278916d5325f43f2fbd7917">VL1VL_BL32</a> = 0x1401, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aaad411ce55355aa01689506d459c7923">VL1VL_BL32_BF16</a> = 0x1411, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a321ee3ec61a6f03bcbbbf64d6626ba67">VL1VL_BL64</a> = 0x1801, 
<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a441b568e112a23748c34023a73f6feff">VL2VL_BL64</a> = 0x2801, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2b97a9a580c202eb744106b077505bcf">VL2VL_BL64_BF16</a> = 0x2811
<br />
 }</td></tr>
<tr class="separator:a19076cd620581b8e671ad674359c1b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a764ff3bbe137fc7792aee26f022aa29d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">VLType</a> { <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da6adf97f83acf6453d4a6a4b1070f3754">None</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da4eda906033e04e40aadd491e0fea21e0">SME</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da7d4637d154ae7fca275df06cf139888a">SME2</a>
 }</td></tr>
<tr class="separator:a764ff3bbe137fc7792aee26f022aa29d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24fb31c876e67f529bd128983460f6f5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5">GemmMethod</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a2bc7ef9a3feea9150b6c6e1b979a8255">GEMV_BATCHED</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1">GEMV_PRETRANSPOSED</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a447f04946f2db1dbdf2cfa1ff4a2db52">GEMV_NATIVE_TRANSPOSED</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5d286c3bf813d02f6afed13574d15b02">GEMM_NATIVE</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5ae88784abc2816bf2775a68900540cb14">GEMM_HYBRID</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a4a554761cc948f6b9437c42fd62a1d01">GEMM_INTERLEAVED</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0f170db61ecb7e386a972fdf2c4e4bdb">GEMM_INTERLEAVED_2D</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1">QUANTIZE_WRAPPER</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a781048ddfd21fd0402717d7e83b9fc5e">QUANTIZE_WRAPPER_2D</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5aa1fd135a198b5211b47dc370120b0749">GEMM_HYBRID_QUANTIZED</a>
<br />
 }</td></tr>
<tr class="separator:a24fb31c876e67f529bd128983460f6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23ab0e5c6b5d13e084628686c4f282d5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a> = 0x1, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8e1bde3c3d303163521522cf1d62f21f">ANY</a> = 0x2, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a25fad7bae3b2e71a2a00af3630cba541">OHWI</a> = 0x100100, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a68fe6a141bc6154b83d213f4a1edbac6">OHWIo2</a> = 0x100200, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5acc872da961a924c6fdea2ae1d02be4dd">OHWIo4</a> = 0x100400, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a48b3226275a4406903647fb8b8f49cc8">OHWIo8</a> = 0x100800, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a608a923caea677f5ba10a23a5dd1fee9">OHWIo16</a> = 0x101000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad90c2dcb1189e2d9c2fe83780a5a5f10">OHWIo32</a> = 0x102000, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa9027481bc29bbb314c9f96132ce6e0a">OHWIo64</a> = 0x104000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a200f8195335b939daa12ff6db12f5210">OHWIo128</a> = 0x108000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a94d39bf54ea1e81c05161d7b073cddde">OHWIo4i2</a> = 0x200400, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad6d940d6e848829b5b12a71ac473ab27">OHWIo4i2_bf16</a> = 0x200410, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a926b274a33003e76a1fbaff96a91c827">OHWIo8i2</a> = 0x200800, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a2a4c9b03dd6ecd782cdc2174edcaf58d">OHWIo8i2_bf16</a> = 0x200810, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a81d3ead1af21f9c8cbaa0436c583ad8b">OHWIo16i2</a> = 0x201000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad7f1a17c9a0347508381eca5ddd185ee">OHWIo16i2_bf16</a> = 0x201010, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a79c4b728af7b8da698fe0af807084fc4">OHWIo32i2</a> = 0x202000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8933e0ff80cefd53572e08f64a55cae1">OHWIo32i2_bf16</a> = 0x202010, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa44b7820928723814e563efaa90bf927">OHWIo64i2</a> = 0x204000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac192f173bb2880729e17cf86d4e7d741">OHWIo64i2_bf16</a> = 0x204010, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a08e970e04625d630f2b0b83b1143b3f9">OHWIo4i4</a> = 0x400400, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a15d08af98fbce252909bed2c458ab3ee">OHWIo4i4_bf16</a> = 0x400410, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a5a8dd817290578adde8a5bdaaa3a08b8">OHWIo8i4</a> = 0x400800, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0c4914ffae86590799e04ac0bf6adf0e">OHWIo8i4_bf16</a> = 0x400810, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a07284479b872cb46b6925ff3b4ff5ae0">OHWIo16i4</a> = 0x401000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ade272d59e5c207310f2f232b6d409096">OHWIo16i4_bf16</a> = 0x401010, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aefd69da4bc3990fe980992a79c332164">OHWIo32i4</a> = 0x402000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac202cc92a20e27405c4f8f791e74b1e0">OHWIo32i4_bf16</a> = 0x402010, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac9ae99c7c154b112ea7e5949afc62121">OHWIo64i4</a> = 0x404000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0cb9573cb46f8ad7d50add08ec2a8efb">OHWIo64i4_bf16</a> = 0x404010, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a53f42078c68df9f29e9ad4c47ce24dc0">OHWIo2i8</a> = 0x800200, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa181500a35cda4d9bde47038ff0d9b31">OHWIo4i8</a> = 0x800400, 
<br />
&#160;&#160;<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a06eeee52deca91c5f2d378c409143626">OHWIo8i8</a> = 0x800800, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5af1c10e01dded7edf3ab7bb573812f30f">OHWIo16i8</a> = 0x801000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a90b95f8f9579b94f5013c8904f616cd7">OHWIo32i8</a> = 0x802000, 
<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0b192a6bfeb3ced2dadfb8a1546e685f">OHWIo64i8</a> = 0x804000
<br />
 }</td></tr>
<tr class="separator:a23ab0e5c6b5d13e084628686c4f282d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a7450234a5b6959d08a3ddac191b3fe1f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7450234a5b6959d08a3ddac191b3fe1f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a7450234a5b6959d08a3ddac191b3fe1f">bias_adder</a> (T *out, unsigned int stride, const T *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, unsigned int rows, unsigned int cols)</td></tr>
<tr class="separator:a7450234a5b6959d08a3ddac191b3fe1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5675a7992a4e9eb9b2bc67e5715146d"><td class="memTemplParams" colspan="2">template&lt;bool DoBias, typename T &gt; </td></tr>
<tr class="memitem:ad5675a7992a4e9eb9b2bc67e5715146d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ad5675a7992a4e9eb9b2bc67e5715146d">activator</a> (T *out, unsigned int stride, const T *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> act, unsigned int rows, unsigned int cols)</td></tr>
<tr class="separator:ad5675a7992a4e9eb9b2bc67e5715146d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a851d3612bf6b35039ef9dd0d64411afd"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a851d3612bf6b35039ef9dd0d64411afd"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a851d3612bf6b35039ef9dd0d64411afd">gemm_implementation_list&lt; bfloat16, float &gt;</a> ()</td></tr>
<tr class="separator:a851d3612bf6b35039ef9dd0d64411afd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66e52c871a3d2d5891da206e2192aded"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a66e52c871a3d2d5891da206e2192aded">gemm&lt; bfloat16, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a66e52c871a3d2d5891da206e2192aded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2d46f27ae421596620ad1d95bc4b4c"><td class="memItemLeft" align="right" valign="top">template bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#aec2d46f27ae421596620ad1d95bc4b4c">has_opt_gemm&lt; bfloat16, float, Nothing &gt;</a> (<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;weight_format, const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:aec2d46f27ae421596620ad1d95bc4b4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289b0b9975064202db6eb82123f7375a"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a289b0b9975064202db6eb82123f7375a">get_gemm_method&lt; bfloat16, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a289b0b9975064202db6eb82123f7375a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d591fcafafc3c85b8b594fb20399044"><td class="memItemLeft" align="right" valign="top">template std::vector&lt; <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a8d591fcafafc3c85b8b594fb20399044">get_compatible_kernels&lt; bfloat16, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a8d591fcafafc3c85b8b594fb20399044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad53e34e2067d57fd23e248f14906b170"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ad53e34e2067d57fd23e248f14906b170"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ad53e34e2067d57fd23e248f14906b170">gemm_implementation_list&lt; bfloat16, bfloat16 &gt;</a> ()</td></tr>
<tr class="separator:ad53e34e2067d57fd23e248f14906b170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf4b7f22ca77fa31ab29ba5efca890b1"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#acf4b7f22ca77fa31ab29ba5efca890b1">gemm&lt; bfloat16, bfloat16, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:acf4b7f22ca77fa31ab29ba5efca890b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac57d5a38aeff9b7acc3b80f84afa1cb8"><td class="memItemLeft" align="right" valign="top">template bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ac57d5a38aeff9b7acc3b80f84afa1cb8">has_opt_gemm&lt; bfloat16, bfloat16, Nothing &gt;</a> (<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;weight_format, const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:ac57d5a38aeff9b7acc3b80f84afa1cb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1f49cd800cd6283e2bf15afbaee56f"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a9f1f49cd800cd6283e2bf15afbaee56f">get_gemm_method&lt; bfloat16, bfloat16, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a9f1f49cd800cd6283e2bf15afbaee56f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab79ba79fabf901814f8d28056e9bf950"><td class="memItemLeft" align="right" valign="top">template std::vector&lt; <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ab79ba79fabf901814f8d28056e9bf950">get_compatible_kernels&lt; bfloat16, bfloat16, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:ab79ba79fabf901814f8d28056e9bf950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b1162856ab084a3588fc2d5fdec539"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a60b1162856ab084a3588fc2d5fdec539"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; float, float &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a60b1162856ab084a3588fc2d5fdec539">gemm_implementation_list&lt; float, float &gt;</a> ()</td></tr>
<tr class="separator:a60b1162856ab084a3588fc2d5fdec539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fb5776f35967c7173f432cb096de217"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt; float, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a4fb5776f35967c7173f432cb096de217">gemm&lt; float, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a4fb5776f35967c7173f432cb096de217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3031960a53190d9a22372f8ed6ddd91"><td class="memItemLeft" align="right" valign="top">template bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ab3031960a53190d9a22372f8ed6ddd91">has_opt_gemm&lt; float, float, Nothing &gt;</a> (<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;weight_format, const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:ab3031960a53190d9a22372f8ed6ddd91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa8a3f397520dca43d1dabb3774e2c9"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#aeaa8a3f397520dca43d1dabb3774e2c9">get_gemm_method&lt; float, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:aeaa8a3f397520dca43d1dabb3774e2c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ac39db987b3fbd8e8a6e971961b41f4"><td class="memItemLeft" align="right" valign="top">template std::vector&lt; <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a4ac39db987b3fbd8e8a6e971961b41f4">get_compatible_kernels&lt; float, float, Nothing &gt;</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;)</td></tr>
<tr class="separator:a4ac39db987b3fbd8e8a6e971961b41f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafbf874fc03cb6d5e6d79e93f5dc1d76"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage  = Nothing&gt; </td></tr>
<tr class="memitem:aafbf874fc03cb6d5e6d79e93f5dc1d76"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret, OutputStage &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#aafbf874fc03cb6d5e6d79e93f5dc1d76">gemm_implementation_list</a> ()</td></tr>
<tr class="separator:aafbf874fc03cb6d5e6d79e93f5dc1d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfe29ef1042864157b1fd4c72cb21fa0"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage &gt; </td></tr>
<tr class="memitem:adfe29ef1042864157b1fd4c72cb21fa0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#adfe29ef1042864157b1fd4c72cb21fa0">find_implementation</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const OutputStage &amp;os, const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret, OutputStage &gt; *&amp;impl)</td></tr>
<tr class="separator:adfe29ef1042864157b1fd4c72cb21fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac113bf952954381fe8aa9dab7221ed02"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage &gt; </td></tr>
<tr class="memitem:ac113bf952954381fe8aa9dab7221ed02"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ac113bf952954381fe8aa9dab7221ed02">get_compatible_kernels</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const OutputStage &amp;os)</td></tr>
<tr class="separator:ac113bf952954381fe8aa9dab7221ed02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9af4156185b7d837a72717292c98ac08"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage &gt; </td></tr>
<tr class="memitem:a9af4156185b7d837a72717292c98ac08"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a9af4156185b7d837a72717292c98ac08">has_opt_gemm</a> (<a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;wf, const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const OutputStage &amp;os)</td></tr>
<tr class="separator:a9af4156185b7d837a72717292c98ac08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad851e586ace898ed415d2377c8b2e85b"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage &gt; </td></tr>
<tr class="memitem:ad851e586ace898ed415d2377c8b2e85b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt; Top, Tret &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">gemm</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const OutputStage &amp;os)</td></tr>
<tr class="separator:ad851e586ace898ed415d2377c8b2e85b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7010eef8edcc73f4e584f18b983cf4d"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret , class OutputStage &gt; </td></tr>
<tr class="memitem:af7010eef8edcc73f4e584f18b983cf4d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#af7010eef8edcc73f4e584f18b983cf4d">get_gemm_method</a> (const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;args, const OutputStage &amp;os)</td></tr>
<tr class="separator:af7010eef8edcc73f4e584f18b983cf4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a662f073e01c4fac64d8c487f2f35ed13"><td class="memTemplParams" colspan="2">template&lt;unsigned int height_vectors, unsigned int block, VLType vlt, bool integrate_sums, typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a662f073e01c4fac64d8c487f2f35ed13"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a662f073e01c4fac64d8c487f2f35ed13">interleave_block</a> (TOut *&amp;out, const TIn *const *in, size_t width, size_t height, size_t row_offset, bool first)</td></tr>
<tr class="separator:a662f073e01c4fac64d8c487f2f35ed13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87b56e1a0905ca4b9058eee4b122c1fa"><td class="memTemplParams" colspan="2">template&lt;unsigned int height_vectors, unsigned int block, VLType vlt, typename TOut &gt; </td></tr>
<tr class="memitem:a87b56e1a0905ca4b9058eee4b122c1fa"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a87b56e1a0905ca4b9058eee4b122c1fa">FixupRowSums</a> (TOut *&amp;out, const int32_t row_sum_multiplier)</td></tr>
<tr class="separator:a87b56e1a0905ca4b9058eee4b122c1fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49ac1de6bfb52f17065e939891cb511"><td class="memTemplParams" colspan="2">template&lt;unsigned int height_vectors, unsigned int block, VLType vlt, typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:af49ac1de6bfb52f17065e939891cb511"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#af49ac1de6bfb52f17065e939891cb511">IndirectInterleave</a> (TOut *out, const TIn *const *const *ptr, unsigned int stringlen, unsigned int rounded_stringlen, const unsigned int y0, const unsigned int ymax, const unsigned int k0, const unsigned int kmax, bool integrate_sums, const int32_t row_sum_multiplier)</td></tr>
<tr class="separator:af49ac1de6bfb52f17065e939891cb511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80848207d37829b2adcb02ec4dbc6e25"><td class="memTemplParams" colspan="2">template&lt;unsigned int height_vectors, unsigned int block, VLType vlt, typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a80848207d37829b2adcb02ec4dbc6e25"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a80848207d37829b2adcb02ec4dbc6e25">ConvolutionInterleave</a> (TOut *out, const TIn *in, size_t in_stride, const <a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a>&lt; TIn &gt; &amp;conv, const unsigned int rounded_stringlen, const unsigned int y0, const unsigned int ymax, const unsigned int k0, const unsigned int kmax, bool integrate_sums, const int32_t row_sum_multiplier)</td></tr>
<tr class="separator:a80848207d37829b2adcb02ec4dbc6e25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83586687128e412348362f142c42f0de"><td class="memTemplParams" colspan="2">template&lt;unsigned int height_vectors, unsigned int block, VLType vlt, typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a83586687128e412348362f142c42f0de"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a83586687128e412348362f142c42f0de">Interleave</a> (TOut *out, const TIn *in, size_t in_stride, const unsigned int y0, const unsigned int ymax, const unsigned int k0, const unsigned int kmax, bool integrate_sums, const int32_t row_sum_multiplier)</td></tr>
<tr class="separator:a83586687128e412348362f142c42f0de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ca80c12b0bbb50666d5a1a122359616"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a2ca80c12b0bbb50666d5a1a122359616">get_weight_format</a> (const <a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76">KernelWeightFormat</a>, size_t)</td></tr>
<tr class="separator:a2ca80c12b0bbb50666d5a1a122359616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2ed1c3595c8114064e8170b00df37c5"><td class="memTemplParams" colspan="2">template&lt;unsigned int twidth, unsigned int height, bool sve = false, typename Tin , typename Tout &gt; </td></tr>
<tr class="memitem:aa2ed1c3595c8114064e8170b00df37c5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#aa2ed1c3595c8114064e8170b00df37c5">MergeResults</a> (Tout *out, const Tin *in, int ldc, int y0, int ymax, int x0, int xmax, const Tout *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> act, bool append)</td></tr>
<tr class="separator:aa2ed1c3595c8114064e8170b00df37c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef9b17d8d1641178b4327a376312282"><td class="memTemplParams" colspan="2">template&lt;typename Tin , typename Tout &gt; </td></tr>
<tr class="memitem:a5ef9b17d8d1641178b4327a376312282"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a5ef9b17d8d1641178b4327a376312282">requantize_block_32</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp, unsigned int width, unsigned int height, const Tin *input, unsigned int in_stride, Tout *output, unsigned int out_stride, const int32_t *row_bias, const int32_t *col_bias, unsigned int start_col)</td></tr>
<tr class="separator:a5ef9b17d8d1641178b4327a376312282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283c57cffc3c8e60d00b41f10e4b7476"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a283c57cffc3c8e60d00b41f10e4b7476"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a283c57cffc3c8e60d00b41f10e4b7476">compute_row_sums</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp, unsigned int width, unsigned int height, const T *input, unsigned int in_stride, int32_t *row_bias)</td></tr>
<tr class="separator:a283c57cffc3c8e60d00b41f10e4b7476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f7c3bb1a6bbcb34dc0988ef61510c38"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0f7c3bb1a6bbcb34dc0988ef61510c38"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a0f7c3bb1a6bbcb34dc0988ef61510c38">compute_col_sums</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp, unsigned int width, unsigned int height, const T *input, unsigned int in_stride, int32_t *col_bias, unsigned int depth, unsigned int multi, unsigned int first_col)</td></tr>
<tr class="separator:a0f7c3bb1a6bbcb34dc0988ef61510c38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add607614af7994a1884d6db4ae1a2a40"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:add607614af7994a1884d6db4ae1a2a40"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#add607614af7994a1884d6db4ae1a2a40">row_sums_indirect</a> (size_t num_strings, const unsigned int *string_lengths, <a class="el" href="structarm__gemm_1_1_indirect_input_arg.xhtml">IndirectInputArg</a>&lt; T &gt; A_arg, size_t <a class="el" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a68dc0bf731afd0463b8e8cc4ed81c0f8">M</a>, int32_t *output_ptr, const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> *qp)</td></tr>
<tr class="separator:add607614af7994a1884d6db4ae1a2a40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a035d2e57156025ee77ce3fb2b06b3433"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a035d2e57156025ee77ce3fb2b06b3433">dequantize_block_32</a> (const <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a> &amp;qp, unsigned int width, unsigned int height, const int32_t *input, unsigned int in_stride, float *output, unsigned int out_stride, const float *row_bias, bool not_first_pass, const <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> &amp;act)</td></tr>
<tr class="separator:a035d2e57156025ee77ce3fb2b06b3433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26afdd476f20600b47f35560ccfe23a9"><td class="memTemplParams" colspan="2">template&lt;unsigned int IntBy, unsigned int BlockBy, bool Transposed, VLType vlt = VLType::None, typename TOut , typename TIn &gt; </td></tr>
<tr class="memitem:a26afdd476f20600b47f35560ccfe23a9"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a26afdd476f20600b47f35560ccfe23a9">Transform</a> (TOut *out, const TIn *const in, const int stride, const int k0, const int kmax, const int x0, const int xmax)</td></tr>
<tr class="separator:a26afdd476f20600b47f35560ccfe23a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03f64a9dd21bda1fecd9302f61b84b42"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a03f64a9dd21bda1fecd9302f61b84b42"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a03f64a9dd21bda1fecd9302f61b84b42">get_type_name</a> ()</td></tr>
<tr class="separator:a03f64a9dd21bda1fecd9302f61b84b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed0e2852860309af99fad49a8c3ef315"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aed0e2852860309af99fad49a8c3ef315"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a> (const T a, const T b)</td></tr>
<tr class="separator:aed0e2852860309af99fad49a8c3ef315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cfd518808ae94de30b3d1a3ba7c7890"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2cfd518808ae94de30b3d1a3ba7c7890"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a> (const T a, const T b)</td></tr>
<tr class="separator:a2cfd518808ae94de30b3d1a3ba7c7890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99538cb7b81a0b0e703dfa15d2947e77"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp)</td></tr>
<tr class="separator:a99538cb7b81a0b0e703dfa15d2947e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6d96fa7911828f72031f52155b14720"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ae6d96fa7911828f72031f52155b14720">quant_hybrid_symmetric</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp)</td></tr>
<tr class="separator:ae6d96fa7911828f72031f52155b14720"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b11b3301c500a110864663ae9e6687c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a0b11b3301c500a110864663ae9e6687c">quant_hybrid_asymmetric</a> (const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;qp)</td></tr>
<tr class="separator:a0b11b3301c500a110864663ae9e6687c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a708697e3b578acd30b729bada5c264e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a708697e3b578acd30b729bada5c264e8">to_window</a> (const <a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a> &amp;ndr)</td></tr>
<tr class="separator:a708697e3b578acd30b729bada5c264e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ef8e1589be9278da0a25a873148761a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a7ef8e1589be9278da0a25a873148761a">to_window</a> (const <a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> &amp;ndc)</td></tr>
<tr class="separator:a7ef8e1589be9278da0a25a873148761a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21d0bb24decd02637800e4945f2c53ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a21d0bb24decd02637800e4945f2c53ad">to_ndrange</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> &amp;win)</td></tr>
<tr class="memdesc:a21d0bb24decd02637800e4945f2c53ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> to an <code><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">arm_gemm::NDRange</a></code> of the same max dimensions.  <a href="namespacearm__gemm.xhtml#a21d0bb24decd02637800e4945f2c53ad">More...</a><br /></td></tr>
<tr class="separator:a21d0bb24decd02637800e4945f2c53ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ce4ec274a14ad75f0aa61ae71b3c9a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">to_ndcoord</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> &amp;win)</td></tr>
<tr class="memdesc:ac7ce4ec274a14ad75f0aa61ae71b3c9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> to an <code>arm_gemm::NDCoord</code> of the same max dimensions.  <a href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">More...</a><br /></td></tr>
<tr class="separator:ac7ce4ec274a14ad75f0aa61ae71b3c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a08423b5e87249f9855c82d61e80a6aba"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a08423b5e87249f9855c82d61e80a6aba">report_mutex</a></td></tr>
<tr class="separator:a08423b5e87249f9855c82d61e80a6aba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9473ee59a64400808cfd195a6ba27663"><td class="memItemLeft" align="right" valign="top">constexpr std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">ndrange_max</a> = <a class="el" href="classarm__compute_1_1_dimensions.xhtml">arm_compute::Dimensions</a>&lt;unsigned int&gt;::num_max_dimensions</td></tr>
<tr class="separator:a9473ee59a64400808cfd195a6ba27663"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ac882ca3f500a8e83c76a8acc59831255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac882ca3f500a8e83c76a8acc59831255">&#9670;&nbsp;</a></span>bfloat16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> =  <a class="el" href="classarm__compute_1_1bfloat16.xhtml">arm_compute::bfloat16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bfloat_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="bfloat_8hpp_source.xhtml">bfloat.hpp</a>.</p>

</div>
</div>
<a id="a6eee168fbc228e660cd91b939bce3a28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6eee168fbc228e660cd91b939bce3a28">&#9670;&nbsp;</a></span>GemmHybridIndirectFixedFormat</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a6eee168fbc228e660cd91b939bce3a28">GemmHybridIndirectFixedFormat</a> =  <a class="el" href="classarm__gemm_1_1_gemm_hybrid_indirect.xhtml">GemmHybridIndirect</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, false, true&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00838">838</a> of file <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml">gemm_hybrid_indirect.hpp</a>.</p>

</div>
</div>
<a id="a33611147adc9351dfcbe7b5e4e7dc861"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33611147adc9351dfcbe7b5e4e7dc861">&#9670;&nbsp;</a></span>GemmInterleavedDequantized</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a33611147adc9351dfcbe7b5e4e7dc861">GemmInterleavedDequantized</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01352">1352</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a73b9c612e3496e550680ec87c0cf5e74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73b9c612e3496e550680ec87c0cf5e74">&#9670;&nbsp;</a></span>GemmInterleavedFixedFormat</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a73b9c612e3496e550680ec87c0cf5e74">GemmInterleavedFixedFormat</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, true, true&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01340">1340</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a583dce2887201c4fd80390ffe0e5b27d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a583dce2887201c4fd80390ffe0e5b27d">&#9670;&nbsp;</a></span>GemmInterleavedNoMerge</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a583dce2887201c4fd80390ffe0e5b27d">GemmInterleavedNoMerge</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, OutputStage, false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01337">1337</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a265a84301b442cb3507bd660adc2f892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a265a84301b442cb3507bd660adc2f892">&#9670;&nbsp;</a></span>GemmInterleavedNoMergeDequantized</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a265a84301b442cb3507bd660adc2f892">GemmInterleavedNoMergeDequantized</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a>, false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01349">1349</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a22ecc26938c66dbb5b4a4c7c5cd4d430"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22ecc26938c66dbb5b4a4c7c5cd4d430">&#9670;&nbsp;</a></span>GemmInterleavedPretransposedNoMergeQuantizedInline</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a22ecc26938c66dbb5b4a4c7c5cd4d430">GemmInterleavedPretransposedNoMergeQuantizedInline</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a>, false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01343">1343</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a991f78a5d5b5c01d42f7ae6e35e0e7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a991f78a5d5b5c01d42f7ae6e35e0e7ea">&#9670;&nbsp;</a></span>GemmInterleavedQuantized</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a991f78a5d5b5c01d42f7ae6e35e0e7ea">GemmInterleavedQuantized</a> =  <a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a>&lt;<a class="el" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a>, To, Tr, <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01346">1346</a> of file <a class="el" href="gemm__interleaved_8hpp_source.xhtml">gemm_interleaved.hpp</a>.</p>

</div>
</div>
<a id="a051d3dc92e26a43c1651cc8ce631c98e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a051d3dc92e26a43c1651cc8ce631c98e">&#9670;&nbsp;</a></span>ndcoord_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classarm__gemm_1_1_n_d_coordinate.xhtml">NDCoordinate</a>&lt; 6 &gt; <a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>

</div>
</div>
<a id="add517606da81960aed83e2e66e87ecab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add517606da81960aed83e2e66e87ecab">&#9670;&nbsp;</a></span>ndrange_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a>&lt; 6 &gt; <a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>

</div>
</div>
<a id="a9f0bb435c603f4c166c9528fefe58fb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f0bb435c603f4c166c9528fefe58fb0">&#9670;&nbsp;</a></span>UniqueGemmCommon</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a> =  std::unique_ptr&lt;<a class="el" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a>&lt;Top, Tret&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm_8hpp_source.xhtml#l00281">281</a> of file <a class="el" href="arm__gemm_8hpp_source.xhtml">arm_gemm.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a24fb31c876e67f529bd128983460f6f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24fb31c876e67f529bd128983460f6f5">&#9670;&nbsp;</a></span>GemmMethod</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5">GemmMethod</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee"></a>DEFAULT&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a2bc7ef9a3feea9150b6c6e1b979a8255"></a>GEMV_BATCHED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1"></a>GEMV_PRETRANSPOSED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a447f04946f2db1dbdf2cfa1ff4a2db52"></a>GEMV_NATIVE_TRANSPOSED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a5d286c3bf813d02f6afed13574d15b02"></a>GEMM_NATIVE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5ae88784abc2816bf2775a68900540cb14"></a>GEMM_HYBRID&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a4a554761cc948f6b9437c42fd62a1d01"></a>GEMM_INTERLEAVED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a0f170db61ecb7e386a972fdf2c4e4bdb"></a>GEMM_INTERLEAVED_2D&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1"></a>QUANTIZE_WRAPPER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5a781048ddfd21fd0402717d7e83b9fc5e"></a>QUANTIZE_WRAPPER_2D&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a24fb31c876e67f529bd128983460f6f5aa1fd135a198b5211b47dc370120b0749"></a>GEMM_HYBRID_QUANTIZED&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="arm__gemm_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="arm__gemm_8hpp_source.xhtml">arm_gemm.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</a>,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a2bc7ef9a3feea9150b6c6e1b979a8255">GEMV_BATCHED</a>,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1">GEMV_PRETRANSPOSED</a>,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a447f04946f2db1dbdf2cfa1ff4a2db52">GEMV_NATIVE_TRANSPOSED</a>,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5d286c3bf813d02f6afed13574d15b02">GEMM_NATIVE</a>,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5ae88784abc2816bf2775a68900540cb14">GEMM_HYBRID</a>,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a4a554761cc948f6b9437c42fd62a1d01">GEMM_INTERLEAVED</a>,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0f170db61ecb7e386a972fdf2c4e4bdb">GEMM_INTERLEAVED_2D</a>,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1">QUANTIZE_WRAPPER</a>,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a781048ddfd21fd0402717d7e83b9fc5e">QUANTIZE_WRAPPER_2D</a>,</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5aa1fd135a198b5211b47dc370120b0749">GEMM_HYBRID_QUANTIZED</a></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a19076cd620581b8e671ad674359c1b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19076cd620581b8e671ad674359c1b76">&#9670;&nbsp;</a></span>KernelWeightFormat</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76">KernelWeightFormat</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c"></a>NON_FIXED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76aad4d5fd069e9d845d371199e819b9935"></a>VL128_BL16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a927ef1845254e94feea3508f071669c1"></a>VL128_BL32&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76aa135d787a2a55a0d941fc2892f9804c4"></a>VL128_BL32_BF16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76ab6426811f0cdf342947b1c4b5932cc50"></a>VL128_BL64&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a98e86e70d3e2ada0d1a6ee63d98298f4"></a>VL256_BL64&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76aa4805539b25e4102ef1b172350ee6824"></a>VL256_BL64_BF16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a2c5ba9f23f492ca3abc8ab6f9db4a9c6"></a>VL1VL_BL16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a0385682ff278916d5325f43f2fbd7917"></a>VL1VL_BL32&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76aaad411ce55355aa01689506d459c7923"></a>VL1VL_BL32_BF16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a321ee3ec61a6f03bcbbbf64d6626ba67"></a>VL1VL_BL64&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a441b568e112a23748c34023a73f6feff"></a>VL2VL_BL64&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a19076cd620581b8e671ad674359c1b76a2b97a9a580c202eb744106b077505bcf"></a>VL2VL_BL64_BF16&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="kernel__weight__format_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="kernel__weight__format_8hpp_source.xhtml">kernel_weight_format.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                              {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c">NON_FIXED</a>        = 0,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aad4d5fd069e9d845d371199e819b9935">VL128_BL16</a>       = 0x1200,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a927ef1845254e94feea3508f071669c1">VL128_BL32</a>       = 0x1400,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa135d787a2a55a0d941fc2892f9804c4">VL128_BL32_BF16</a>  = 0x1410,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76ab6426811f0cdf342947b1c4b5932cc50">VL128_BL64</a>       = 0x1800,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a98e86e70d3e2ada0d1a6ee63d98298f4">VL256_BL64</a>       = 0x2800,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa4805539b25e4102ef1b172350ee6824">VL256_BL64_BF16</a>  = 0x2810,</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2c5ba9f23f492ca3abc8ab6f9db4a9c6">VL1VL_BL16</a>       = 0x1201,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a0385682ff278916d5325f43f2fbd7917">VL1VL_BL32</a>       = 0x1401,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aaad411ce55355aa01689506d459c7923">VL1VL_BL32_BF16</a>  = 0x1411,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a321ee3ec61a6f03bcbbbf64d6626ba67">VL1VL_BL64</a>       = 0x1801,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a441b568e112a23748c34023a73f6feff">VL2VL_BL64</a>       = 0x2801,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2b97a9a580c202eb744106b077505bcf">VL2VL_BL64_BF16</a>  = 0x2811</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a764ff3bbe137fc7792aee26f022aa29d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a764ff3bbe137fc7792aee26f022aa29d">&#9670;&nbsp;</a></span>VLType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">VLType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a764ff3bbe137fc7792aee26f022aa29da6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba"></a>SVE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764ff3bbe137fc7792aee26f022aa29da4eda906033e04e40aadd491e0fea21e0"></a>SME&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a764ff3bbe137fc7792aee26f022aa29da7d4637d154ae7fca275df06cf139888a"></a>SME2&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00080">80</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                  {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">None</a>,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da4eda906033e04e40aadd491e0fea21e0">SME</a>,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da7d4637d154ae7fca275df06cf139888a">SME2</a></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a23ab0e5c6b5d13e084628686c4f282d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23ab0e5c6b5d13e084628686c4f282d5">&#9670;&nbsp;</a></span>WeightFormat</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52"></a>UNSPECIFIED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a8e1bde3c3d303163521522cf1d62f21f"></a>ANY&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a25fad7bae3b2e71a2a00af3630cba541"></a>OHWI&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a68fe6a141bc6154b83d213f4a1edbac6"></a>OHWIo2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5acc872da961a924c6fdea2ae1d02be4dd"></a>OHWIo4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a48b3226275a4406903647fb8b8f49cc8"></a>OHWIo8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a608a923caea677f5ba10a23a5dd1fee9"></a>OHWIo16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ad90c2dcb1189e2d9c2fe83780a5a5f10"></a>OHWIo32&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5aa9027481bc29bbb314c9f96132ce6e0a"></a>OHWIo64&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a200f8195335b939daa12ff6db12f5210"></a>OHWIo128&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a94d39bf54ea1e81c05161d7b073cddde"></a>OHWIo4i2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ad6d940d6e848829b5b12a71ac473ab27"></a>OHWIo4i2_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a926b274a33003e76a1fbaff96a91c827"></a>OHWIo8i2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a2a4c9b03dd6ecd782cdc2174edcaf58d"></a>OHWIo8i2_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a81d3ead1af21f9c8cbaa0436c583ad8b"></a>OHWIo16i2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ad7f1a17c9a0347508381eca5ddd185ee"></a>OHWIo16i2_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a79c4b728af7b8da698fe0af807084fc4"></a>OHWIo32i2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a8933e0ff80cefd53572e08f64a55cae1"></a>OHWIo32i2_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5aa44b7820928723814e563efaa90bf927"></a>OHWIo64i2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ac192f173bb2880729e17cf86d4e7d741"></a>OHWIo64i2_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a08e970e04625d630f2b0b83b1143b3f9"></a>OHWIo4i4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a15d08af98fbce252909bed2c458ab3ee"></a>OHWIo4i4_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a5a8dd817290578adde8a5bdaaa3a08b8"></a>OHWIo8i4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a0c4914ffae86590799e04ac0bf6adf0e"></a>OHWIo8i4_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a07284479b872cb46b6925ff3b4ff5ae0"></a>OHWIo16i4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ade272d59e5c207310f2f232b6d409096"></a>OHWIo16i4_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5aefd69da4bc3990fe980992a79c332164"></a>OHWIo32i4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ac202cc92a20e27405c4f8f791e74b1e0"></a>OHWIo32i4_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5ac9ae99c7c154b112ea7e5949afc62121"></a>OHWIo64i4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a0cb9573cb46f8ad7d50add08ec2a8efb"></a>OHWIo64i4_bf16&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a53f42078c68df9f29e9ad4c47ce24dc0"></a>OHWIo2i8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5aa181500a35cda4d9bde47038ff0d9b31"></a>OHWIo4i8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a06eeee52deca91c5f2d378c409143626"></a>OHWIo8i8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5af1c10e01dded7edf3ab7bb573812f30f"></a>OHWIo16i8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a90b95f8f9579b94f5013c8904f616cd7"></a>OHWIo32i8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a23ab0e5c6b5d13e084628686c4f282d5a0b192a6bfeb3ced2dadfb8a1546e685f"></a>OHWIo64i8&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="arm__gemm_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="arm__gemm_8hpp_source.xhtml">arm_gemm.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a>    = 0x1,</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8e1bde3c3d303163521522cf1d62f21f">ANY</a>            = 0x2,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a25fad7bae3b2e71a2a00af3630cba541">OHWI</a>           = 0x100100,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a68fe6a141bc6154b83d213f4a1edbac6">OHWIo2</a>         = 0x100200,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5acc872da961a924c6fdea2ae1d02be4dd">OHWIo4</a>         = 0x100400,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a48b3226275a4406903647fb8b8f49cc8">OHWIo8</a>         = 0x100800,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a608a923caea677f5ba10a23a5dd1fee9">OHWIo16</a>        = 0x101000,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad90c2dcb1189e2d9c2fe83780a5a5f10">OHWIo32</a>        = 0x102000,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa9027481bc29bbb314c9f96132ce6e0a">OHWIo64</a>        = 0x104000,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a200f8195335b939daa12ff6db12f5210">OHWIo128</a>       = 0x108000,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a94d39bf54ea1e81c05161d7b073cddde">OHWIo4i2</a>       = 0x200400,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad6d940d6e848829b5b12a71ac473ab27">OHWIo4i2_bf16</a>  = 0x200410,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a926b274a33003e76a1fbaff96a91c827">OHWIo8i2</a>       = 0x200800,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a2a4c9b03dd6ecd782cdc2174edcaf58d">OHWIo8i2_bf16</a>  = 0x200810,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a81d3ead1af21f9c8cbaa0436c583ad8b">OHWIo16i2</a>      = 0x201000,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad7f1a17c9a0347508381eca5ddd185ee">OHWIo16i2_bf16</a> = 0x201010,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a79c4b728af7b8da698fe0af807084fc4">OHWIo32i2</a>      = 0x202000,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8933e0ff80cefd53572e08f64a55cae1">OHWIo32i2_bf16</a> = 0x202010,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa44b7820928723814e563efaa90bf927">OHWIo64i2</a>      = 0x204000,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac192f173bb2880729e17cf86d4e7d741">OHWIo64i2_bf16</a> = 0x204010,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a08e970e04625d630f2b0b83b1143b3f9">OHWIo4i4</a>       = 0x400400,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a15d08af98fbce252909bed2c458ab3ee">OHWIo4i4_bf16</a>  = 0x400410,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a5a8dd817290578adde8a5bdaaa3a08b8">OHWIo8i4</a>       = 0x400800,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0c4914ffae86590799e04ac0bf6adf0e">OHWIo8i4_bf16</a>  = 0x400810,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a07284479b872cb46b6925ff3b4ff5ae0">OHWIo16i4</a>      = 0x401000,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ade272d59e5c207310f2f232b6d409096">OHWIo16i4_bf16</a> = 0x401010,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aefd69da4bc3990fe980992a79c332164">OHWIo32i4</a>      = 0x402000,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac202cc92a20e27405c4f8f791e74b1e0">OHWIo32i4_bf16</a> = 0x402010,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac9ae99c7c154b112ea7e5949afc62121">OHWIo64i4</a>      = 0x404000,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0cb9573cb46f8ad7d50add08ec2a8efb">OHWIo64i4_bf16</a> = 0x404010,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a53f42078c68df9f29e9ad4c47ce24dc0">OHWIo2i8</a>       = 0x800200,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa181500a35cda4d9bde47038ff0d9b31">OHWIo4i8</a>       = 0x800400,</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a06eeee52deca91c5f2d378c409143626">OHWIo8i8</a>       = 0x800800,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5af1c10e01dded7edf3ab7bb573812f30f">OHWIo16i8</a>      = 0x801000,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a90b95f8f9579b94f5013c8904f616cd7">OHWIo32i8</a>      = 0x802000,</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0b192a6bfeb3ced2dadfb8a1546e685f">OHWIo64i8</a>      = 0x804000</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ad5675a7992a4e9eb9b2bc67e5715146d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5675a7992a4e9eb9b2bc67e5715146d">&#9670;&nbsp;</a></span>activator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::activator </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a>&#160;</td>
          <td class="paramname"><em>act</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cols</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bias__adder_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="bias__adder_8hpp_source.xhtml">bias_adder.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                                                                                        {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> (act.type == <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">Activation::Type::None</a>) {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span> (DoBias) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <a class="code" href="namespacearm__gemm.xhtml#a7450234a5b6959d08a3ddac191b3fe1f">bias_adder</a>(out, stride, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">rows</a>, <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#aaed057ed424ced7429016ec18c2edbb6">cols</a>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (act.type == Activation::Type::ReLU) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> row=0; row&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">rows</a>; row++) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col=0; col&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#aaed057ed424ced7429016ec18c2edbb6">cols</a>; col++) {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                T &amp;v = out[row * stride + col];</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordflow">if</span> (DoBias) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    v += <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>[col];</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                v = std::max(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0), v);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (act.type == Activation::Type::BoundedReLU) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">const</span> T max = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(act.param1);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> row=0; row&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">rows</a>; row++) {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col=0; col&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#aaed057ed424ced7429016ec18c2edbb6">cols</a>; col++) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                T &amp;v = out[row * stride + col];</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">if</span> (DoBias) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    v += <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>[col];</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                v = std::max(<span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0), std::min(v, max));</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00322">bias</a>, <a class="el" href="bias__adder_8hpp_source.xhtml#l00031">bias_adder()</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c">Activation::BoundedReLU</a>, <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor::cols</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6adf97f83acf6453d4a6a4b1070f3754">Activation::None</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00135">Activation::param1</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378">Activation::ReLU</a>, <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor::rows</a>, and <a class="el" href="arm__gemm_8hpp_source.xhtml#l00134">Activation::type</a>.</p>

</div>
</div>
<a id="a7450234a5b6959d08a3ddac191b3fe1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7450234a5b6959d08a3ddac191b3fe1f">&#9670;&nbsp;</a></span>bias_adder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::bias_adder </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cols</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bias__adder_8hpp_source.xhtml#l00031">31</a> of file <a class="el" href="bias__adder_8hpp_source.xhtml">bias_adder.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                                                                                         {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> row=0; row&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">rows</a>; row++) {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col=0; col&lt;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#aaed057ed424ced7429016ec18c2edbb6">cols</a>; col++) {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            out[row * stride + col] += <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>[col];</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00322">bias</a>, <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor::cols</a>, and <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor::rows</a>.</p>

<p class="reference">Referenced by <a class="el" href="bias__adder_8hpp_source.xhtml#l00040">activator()</a>, and <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00149">GemmHybrid&lt; strategy, To, Tr &gt;::execute()</a>.</p>

</div>
</div>
<a id="a0f7c3bb1a6bbcb34dc0988ef61510c38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f7c3bb1a6bbcb34dc0988ef61510c38">&#9670;&nbsp;</a></span>compute_col_sums()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::compute_col_sums </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>col_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>multi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>first_col</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00204">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;::requantize_bias()</a>, <a class="el" href="gemm__hybrid__quantized__inline_8hpp_source.xhtml#l00222">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;::requantize_bias()</a>, <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00272">GemmHybridQuantized&lt; strategy, To, Tr &gt;::requantize_bias()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00621">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::requantize_bias()</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01147">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::requantize_bias()</a>.</p>

</div>
</div>
<a id="a283c57cffc3c8e60d00b41f10e4b7476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283c57cffc3c8e60d00b41f10e4b7476">&#9670;&nbsp;</a></span>compute_row_sums()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::compute_row_sums </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>row_bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00175">GemmHybridQuantized&lt; strategy, To, Tr &gt;::execute()</a>.</p>

</div>
</div>
<a id="a80848207d37829b2adcb02ec4dbc6e25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80848207d37829b2adcb02ec4dbc6e25">&#9670;&nbsp;</a></span>ConvolutionInterleave()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ConvolutionInterleave </td>
          <td>(</td>
          <td class="paramtype">TOut *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a>&lt; TIn &gt; &amp;&#160;</td>
          <td class="paramname"><em>conv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>rounded_stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>integrate_sums</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="interleave__indirect_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="interleave__indirect_8cpp_source.xhtml">interleave_indirect.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                                                                                                                                               {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height = height_vectors * (vlt == VLType::SVE ? get_vector_length&lt;TOut&gt;() / block : 1);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">auto</span> conv_cols = conv.process_columns(in, in_stride, k0, kmax, rounded_stringlen);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// Use alloca here as a std::vector can be expensive in highly threaded scenarios.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">const</span> TIn **row_ptrs = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TIn **<span class="keyword">&gt;</span>(alloca(height * <span class="keyword">sizeof</span>(<span class="keyword">const</span> TIn *)));</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ybase = y0; ybase &lt; ymax; ybase += height) {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="comment">// How many of the rows are active - the rest will get padded in interleave_block.</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> active_height   = std::min(ymax - ybase, height);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordtype">bool</span> first = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keyword">auto</span> conv_rows = conv_cols.process_rows(ybase, active_height);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">while</span> (!conv_rows.finished()) {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="comment">// Get next set of parameters</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            std::tie(width, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>) = conv_rows.next_block(row_ptrs);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="comment">// Perform the interleave</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums &amp;&amp; row_sum_multiplier) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                interleave_block&lt;height_vectors, block, vlt, true&gt;(out, row_ptrs, width, active_height, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, first);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                interleave_block&lt;height_vectors, block, vlt, false&gt;(out, row_ptrs, width, active_height, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, first);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            first=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums) {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            FixupRowSums&lt;height_vectors, block, vlt&gt;(out, row_sum_multiplier);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">offset()</a>, <a class="el" href="convolver_8hpp_source.xhtml#l00240">convolver&lt; T &gt;::process_columns()</a>, and <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>.</p>

</div>
</div>
<a id="a035d2e57156025ee77ce3fb2b06b3433"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a035d2e57156025ee77ce3fb2b06b3433">&#9670;&nbsp;</a></span>dequantize_block_32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::dequantize_block_32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_dequantize_float.xhtml">DequantizeFloat</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>out_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>row_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>not_first_pass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> &amp;&#160;</td>
          <td class="paramname"><em>act</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adfe29ef1042864157b1fd4c72cb21fa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfe29ef1042864157b1fd4c72cb21fa0">&#9670;&nbsp;</a></span>find_implementation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::find_implementation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret, OutputStage &gt; *&amp;&#160;</td>
          <td class="paramname"><em>impl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00238">238</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                                                                                                                {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">auto</span> gemms = gemm_implementation_list&lt;Top, Tret, OutputStage&gt;();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">const</span> GemmConfig *cfg = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>._cfg;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *saved_impl = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    uint64_t best_estimate = 0;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *i = gemms; i-&gt;method != GemmMethod::DEFAULT; i++) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="comment">/* Skip if this implementation doesn&#39;t support these args. */</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">if</span> (!i-&gt;do_is_supported(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os)) {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">/* Skip if a specific method is requested and this is a different one. */</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span> (cfg &amp;&amp; cfg-&gt;method != GemmMethod::DEFAULT &amp;&amp; i-&gt;method != cfg-&gt;method) {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">/* Skip if a filter is to be applied and it doesn&#39;t match. */</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">if</span> (cfg &amp;&amp; cfg-&gt;filter != <span class="stringliteral">&quot;&quot;</span> &amp;&amp; !strstr(i-&gt;name, cfg-&gt;filter.c_str())) {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="comment">/* Test the cycle estimate */</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        uint64_t estimate = i-&gt;do_cycle_estimate(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="comment">/* Short circuit - if the estimate is zero, return this one immediately. */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">if</span> (estimate==0) {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            impl=i;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="comment">/* Otherwise, remember this is our best so far if we don&#39;t yet have</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">         * a valid candidate, or we beat the estimate.  */</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">if</span> ((saved_impl == <span class="keyword">nullptr</span>) || (estimate &lt; best_estimate)) {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            saved_impl = i;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            best_estimate = estimate;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="comment">/* Return whichever method gave the best estimate. */</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">if</span> (saved_impl != <span class="keyword">nullptr</span>) {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        impl = saved_impl;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00075">GemmImplementation&lt; Top, Tret, OutputStage &gt;::do_cycle_estimate()</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00112">GemmConfig::filter</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00040">GemmImplementation&lt; Top, Tret, OutputStage &gt;::method</a>, and <a class="el" href="arm__gemm_8hpp_source.xhtml#l00111">GemmConfig::method</a>.</p>

<p class="reference">Referenced by <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00288">get_compatible_kernels()</a>.</p>

</div>
</div>
<a id="a87b56e1a0905ca4b9058eee4b122c1fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87b56e1a0905ca4b9058eee4b122c1fa">&#9670;&nbsp;</a></span>FixupRowSums()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::FixupRowSums </td>
          <td>(</td>
          <td class="paramtype">TOut *&amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="interleave__indirect_8cpp_source.xhtml#l00125">125</a> of file <a class="el" href="interleave__indirect_8cpp_source.xhtml">interleave_indirect.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                                        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height = height_vectors * (vlt == VLType::SVE ? get_vector_length&lt;TOut&gt;() / block : 1);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// If we are integrating row sums, we need to do some fix up, depending on whether the multiplier is non-zero or not.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (row_sum_multiplier) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// Non-zero: interleave_block&lt;&gt;() will have done the sums, so &#39;out&#39; will point to the start of the</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">// next block (post sums).</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// We need to go back and apply the multiplier to the computed sums.  We don&#39;t need to change &#39;out&#39;.</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        int32_t *out_int32 = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(out);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        out_int32 -= height;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;height; i++) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            out_int32[i] *= row_sum_multiplier;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">// Zero: interleave_block&lt;&gt;() will *not* have done the sums, so &#39;out&#39; will point to the start of the</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">// sum block.  We need to insert the (zero) sums, and advance &#39;out&#39;.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        int32_t *out_int32 = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(out);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;height; i++) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            out_int32[i] = 0;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        out_int32 += height;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        out = <span class="keyword">reinterpret_cast&lt;</span>TOut *<span class="keyword">&gt;</span>(out_int32);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>.</p>

</div>
</div>
<a id="ad851e586ace898ed415d2377c8b2e85b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad851e586ace898ed415d2377c8b2e85b">&#9670;&nbsp;</a></span>gemm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt; Top, Tret &gt; gemm </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00320">320</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                                                              {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *impl;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span> (find_implementation&lt;Top, Tret, OutputStage&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os, impl)) {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">return</span> UniqueGemmCommon&lt;Top, Tret&gt;(impl-&gt;do_instantiate(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os));</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> UniqueGemmCommon&lt;Top, Tret&gt;(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, and <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00083">GemmImplementation&lt; Top, Tret, OutputStage &gt;::do_instantiate()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_o_n_2_convolution_layer_8cpp_source.xhtml#l00271">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="acf4b7f22ca77fa31ab29ba5efca890b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf4b7f22ca77fa31ab29ba5efca890b1">&#9670;&nbsp;</a></span>gemm&lt; bfloat16, bfloat16, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt;<a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>&gt; <a class="el" href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">arm_gemm::gemm</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a66e52c871a3d2d5891da206e2192aded"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66e52c871a3d2d5891da206e2192aded">&#9670;&nbsp;</a></span>gemm&lt; bfloat16, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt;<a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float&gt; <a class="el" href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">arm_gemm::gemm</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4fb5776f35967c7173f432cb096de217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fb5776f35967c7173f432cb096de217">&#9670;&nbsp;</a></span>gemm&lt; float, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="namespacearm__gemm.xhtml#a9f0bb435c603f4c166c9528fefe58fb0">UniqueGemmCommon</a>&lt;float, float&gt; <a class="el" href="namespacearm__gemm.xhtml#ad851e586ace898ed415d2377c8b2e85b">arm_gemm::gemm</a>&lt; float, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aafbf874fc03cb6d5e6d79e93f5dc1d76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafbf874fc03cb6d5e6d79e93f5dc1d76">&#9670;&nbsp;</a></span>gemm_implementation_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;Top, Tret, OutputStage&gt;* arm_gemm::gemm_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad53e34e2067d57fd23e248f14906b170"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad53e34e2067d57fd23e248f14906b170">&#9670;&nbsp;</a></span>gemm_implementation_list&lt; bfloat16, bfloat16 &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;<a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>&gt;* <a class="el" href="namespacearm__gemm.xhtml#aafbf874fc03cb6d5e6d79e93f5dc1d76">arm_gemm::gemm_implementation_list</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__bf16bf16_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="gemm__bf16bf16_8cpp_source.xhtml">gemm_bf16bf16.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                                                                             {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> gemm_bf16bf16_methods;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a851d3612bf6b35039ef9dd0d64411afd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a851d3612bf6b35039ef9dd0d64411afd">&#9670;&nbsp;</a></span>gemm_implementation_list&lt; bfloat16, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;<a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float&gt;* <a class="el" href="namespacearm__gemm.xhtml#aafbf874fc03cb6d5e6d79e93f5dc1d76">arm_gemm::gemm_implementation_list</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__bf16_8cpp_source.xhtml#l00229">229</a> of file <a class="el" href="gemm__bf16_8cpp_source.xhtml">gemm_bf16.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                                                                       {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">return</span> gemm_bf16_methods;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a60b1162856ab084a3588fc2d5fdec539"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b1162856ab084a3588fc2d5fdec539">&#9670;&nbsp;</a></span>gemm_implementation_list&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;float, float&gt;* <a class="el" href="namespacearm__gemm.xhtml#aafbf874fc03cb6d5e6d79e93f5dc1d76">arm_gemm::gemm_implementation_list</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__fp32_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="gemm__fp32_8cpp_source.xhtml">gemm_fp32.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                                                                 {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">return</span> gemm_fp32_methods;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac113bf952954381fe8aa9dab7221ed02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac113bf952954381fe8aa9dab7221ed02">&#9670;&nbsp;</a></span>get_compatible_kernels()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> &gt; get_compatible_kernels </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00288">288</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                                                                                 {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    std::vector&lt;KernelDescription&gt; res;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="comment">/* Find out what the default implementation in so we can set the flag accordingly later. */</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *default_impl;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#adfe29ef1042864157b1fd4c72cb21fa0">find_implementation</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os, default_impl);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keyword">auto</span> gemms = gemm_implementation_list&lt;Top, Tret, OutputStage&gt;();</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *i = gemms; i-&gt;method != GemmMethod::DEFAULT; i++) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="comment">/* Check that this implementation supports the presented problem. */</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">if</span> (!i-&gt;do_is_supported(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os)) {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        res.push_back(KernelDescription(i-&gt;method, i-&gt;name, i==default_impl, i-&gt;do_cycle_estimate(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os)));</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00075">GemmImplementation&lt; Top, Tret, OutputStage &gt;::do_cycle_estimate()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00238">find_implementation()</a>, and <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00040">GemmImplementation&lt; Top, Tret, OutputStage &gt;::method</a>.</p>

</div>
</div>
<a id="ab79ba79fabf901814f8d28056e9bf950"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab79ba79fabf901814f8d28056e9bf950">&#9670;&nbsp;</a></span>get_compatible_kernels&lt; bfloat16, bfloat16, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template std::vector&lt;<a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&gt; <a class="el" href="namespacearm__gemm.xhtml#ac113bf952954381fe8aa9dab7221ed02">arm_gemm::get_compatible_kernels</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d591fcafafc3c85b8b594fb20399044"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d591fcafafc3c85b8b594fb20399044">&#9670;&nbsp;</a></span>get_compatible_kernels&lt; bfloat16, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template std::vector&lt;<a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&gt; <a class="el" href="namespacearm__gemm.xhtml#ac113bf952954381fe8aa9dab7221ed02">arm_gemm::get_compatible_kernels</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ac39db987b3fbd8e8a6e971961b41f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ac39db987b3fbd8e8a6e971961b41f4">&#9670;&nbsp;</a></span>get_compatible_kernels&lt; float, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template std::vector&lt;<a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a>&gt; <a class="el" href="namespacearm__gemm.xhtml#ac113bf952954381fe8aa9dab7221ed02">arm_gemm::get_compatible_kernels</a>&lt; float, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af7010eef8edcc73f4e584f18b983cf4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7010eef8edcc73f4e584f18b983cf4d">&#9670;&nbsp;</a></span>get_gemm_method()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> get_gemm_method </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00331">331</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                                                               {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *impl;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">if</span> (find_implementation&lt;Top, Tret&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os, impl)) {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">return</span> KernelDescription(impl-&gt;method, impl-&gt;name);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="comment">/* This shouldn&#39;t happen - there should always be at least one valid implementation. */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">return</span> KernelDescription();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00040">GemmImplementation&lt; Top, Tret, OutputStage &gt;::method</a>, and <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00041">GemmImplementation&lt; Top, Tret, OutputStage &gt;::name</a>.</p>

</div>
</div>
<a id="a9f1f49cd800cd6283e2bf15afbaee56f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1f49cd800cd6283e2bf15afbaee56f">&#9670;&nbsp;</a></span>get_gemm_method&lt; bfloat16, bfloat16, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> <a class="el" href="namespacearm__gemm.xhtml#af7010eef8edcc73f4e584f18b983cf4d">arm_gemm::get_gemm_method</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a289b0b9975064202db6eb82123f7375a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a289b0b9975064202db6eb82123f7375a">&#9670;&nbsp;</a></span>get_gemm_method&lt; bfloat16, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> <a class="el" href="namespacearm__gemm.xhtml#af7010eef8edcc73f4e584f18b983cf4d">arm_gemm::get_gemm_method</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeaa8a3f397520dca43d1dabb3774e2c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaa8a3f397520dca43d1dabb3774e2c9">&#9670;&nbsp;</a></span>get_gemm_method&lt; float, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="structarm__gemm_1_1_kernel_description.xhtml">KernelDescription</a> <a class="el" href="namespacearm__gemm.xhtml#af7010eef8edcc73f4e584f18b983cf4d">arm_gemm::get_gemm_method</a>&lt; float, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a03f64a9dd21bda1fecd9302f61b84b42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03f64a9dd21bda1fecd9302f61b84b42">&#9670;&nbsp;</a></span>get_type_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string arm_gemm::get_type_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                          {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#ifdef __GNUC__</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    std::string s = __PRETTY_FUNCTION__;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">auto</span> start = s.find(<span class="stringliteral">&quot;cls_&quot;</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (start==std::string::npos) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;(unknown)&quot;</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> x = start+4; x&lt;s.size(); x++) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">if</span> (s[x] == <span class="charliteral">&#39;;&#39;</span> || s[x] == <span class="charliteral">&#39;]&#39;</span>) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> s.substr(start+4, x-(start+4));</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;(unknown)&quot;</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;(unsupported)&quot;</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2ca80c12b0bbb50666d5a1a122359616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ca80c12b0bbb50666d5a1a122359616">&#9670;&nbsp;</a></span>get_weight_format()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> get_weight_format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76">KernelWeightFormat</a>&#160;</td>
          <td class="paramname"><em>kwf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>element_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="misc_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="misc_8cpp_source.xhtml">misc.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                                                  {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> (kwf==KernelWeightFormat::NON_FIXED) {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> WeightFormat::UNSPECIFIED;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    uint32_t kwf_i = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(kwf);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    uint32_t wf_i = 0;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> block_bytes = (kwf_i &gt;&gt; 8) &amp; 0xf;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> vector_count = (kwf_i &gt;&gt; 12) &amp; 0xf;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    uint32_t vector_bytes;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// For fast mode BF16 kernels set the appropriate bit and override element size to 2.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (kwf_i &amp; 0x10) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        element_size = 2;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        wf_i |= 0x10;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_ENABLE_SVE</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Get total bytes in vector output</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (kwf_i &amp; 0x1) {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        vector_bytes = vector_count * get_vector_length&lt;uint8_t&gt;();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (1) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        vector_bytes = vector_count * 16;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">auto</span> input_blocking = block_bytes / element_size;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> output_blocking = vector_bytes / block_bytes;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    wf_i |= (input_blocking &lt;&lt; 20);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    wf_i |= (output_blocking &lt;&lt; 8);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a><span class="keyword">&gt;</span>(wf_i);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c">NON_FIXED</a>, and <a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a>.</p>

<p class="reference">Referenced by <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00047">GemmImplementation&lt; Top, Tret, OutputStage &gt;::do_is_supported()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00131">GemmImplementation&lt; Top, Tret, Nothing &gt;::do_is_supported()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00824">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::get_config()</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01322">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::get_config()</a>.</p>

</div>
</div>
<a id="a9af4156185b7d837a72717292c98ac08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9af4156185b7d837a72717292c98ac08">&#9670;&nbsp;</a></span>has_opt_gemm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_opt_gemm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>wf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const OutputStage &amp;&#160;</td>
          <td class="paramname"><em>os</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00311">311</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                                                                 {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret, OutputStage&gt; *impl;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> success =  find_implementation&lt;Top, Tret, OutputStage&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os, impl);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">if</span> (success)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      wf = UniqueGemmCommon&lt;Top, Tret&gt;(impl-&gt;do_instantiate(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, os))-&gt;get_config().weight_format;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> success;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, and <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00083">GemmImplementation&lt; Top, Tret, OutputStage &gt;::do_instantiate()</a>.</p>

</div>
</div>
<a id="ac57d5a38aeff9b7acc3b80f84afa1cb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac57d5a38aeff9b7acc3b80f84afa1cb8">&#9670;&nbsp;</a></span>has_opt_gemm&lt; bfloat16, bfloat16, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template bool <a class="el" href="namespacearm__gemm.xhtml#a9af4156185b7d837a72717292c98ac08">arm_gemm::has_opt_gemm</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>weight_format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aec2d46f27ae421596620ad1d95bc4b4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec2d46f27ae421596620ad1d95bc4b4c">&#9670;&nbsp;</a></span>has_opt_gemm&lt; bfloat16, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template bool <a class="el" href="namespacearm__gemm.xhtml#a9af4156185b7d837a72717292c98ac08">arm_gemm::has_opt_gemm</a>&lt; <a class="el" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>weight_format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab3031960a53190d9a22372f8ed6ddd91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3031960a53190d9a22372f8ed6ddd91">&#9670;&nbsp;</a></span>has_opt_gemm&lt; float, float, Nothing &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template bool <a class="el" href="namespacearm__gemm.xhtml#a9af4156185b7d837a72717292c98ac08">arm_gemm::has_opt_gemm</a>&lt; float, float, <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__gemm.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">WeightFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>weight_format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_nothing.xhtml">Nothing</a> &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aed0e2852860309af99fad49a8c3ef315"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed0e2852860309af99fad49a8c3ef315">&#9670;&nbsp;</a></span>iceildiv()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_gemm::iceildiv </td>
          <td>(</td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00065">65</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                        {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> (a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> - 1) / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

<p class="reference">Referenced by <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01296">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::estimate_cycles()</a>, <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00143">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;::execute()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00617">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::get_B_pretranspose_window_size()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01140">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::get_B_pretranspose_window_size()</a>, <a class="el" href="depthwise__common_8cpp_source.xhtml#l00035">arm_conv::depthwise::get_reduced_view_for_dilation()</a>, <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00033">arm_conv::depthwise::interleaves::quantized::get_storage_size()</a>, <a class="el" href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00045">arm_conv::depthwise::interleaves::get_storage_size_generic()</a>, <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00138">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;::get_window_size()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00787">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::get_window_size()</a>, <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00056">arm_conv::depthwise::interleaves::quantized::pack_parameters()</a>, and <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00643">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::pretranspose_B_array_part()</a>.</p>

</div>
</div>
<a id="af49ac1de6bfb52f17065e939891cb511"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af49ac1de6bfb52f17065e939891cb511">&#9670;&nbsp;</a></span>IndirectInterleave()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IndirectInterleave </td>
          <td>(</td>
          <td class="paramtype">TOut *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *const *const *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>rounded_stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>integrate_sums</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="interleave__indirect_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="interleave__indirect_8cpp_source.xhtml">interleave_indirect.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                                          {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height = height_vectors * (vlt == VLType::SVE ? get_vector_length&lt;TOut&gt;() / block : 1);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// &#39;interleave_block&#39; implementations are entitled to read a pointer for each row they handle from the input</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// pointer array, even for out of range rows (although they must not subsequently dereference those pointers for</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// out of range rows).  This allows interleave_block to use techniques like row predication, or loading all</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// pointers and conditionally overriding the out of range ones.</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// This is problematic in the &quot;pure&quot; indirect case when we get to the last rows, where it can lead to out of</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// range reads.  Avoid this with a local buffer to use in last-rows cases.  Use alloca as a std::vector can be</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// expensive in highly threaded scenarios.</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">const</span> TIn **row_ptrs = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TIn **<span class="keyword">&gt;</span>(alloca(height * <span class="keyword">sizeof</span>(<span class="keyword">const</span> TIn *)));</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Figure out the starting position based on k0 (with rounded length)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_string      = k0 / rounded_stringlen;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start_stringpos   = k0 % rounded_stringlen;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="comment">// Process blocks of &#39;height&#39; height...</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ybase = y0; ybase &lt; ymax; ybase+=height) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// Height to process</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> active_height = std::min(ymax - ybase, height);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="comment">// Track our progress through the various strings</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k_left    = (kmax - k0);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keywordtype">string</span>    = start_string;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> stringpos = start_stringpos;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordtype">bool</span> first = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment">// Prepare to call &#39;interleave_block&#39; above for each string encompassed by K range</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">while</span> (k_left &gt; 0) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="comment">// Width to process - and the width we will generate (with padding)</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> in_width   = std::min(k_left, stringlen - stringpos);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> out_width  = std::min(k_left, rounded_stringlen - stringpos);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keyword">const</span> TIn * <span class="keyword">const</span> *row_base = ptr[string] + ybase;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="comment">// If not all rows are valid, copy the ones that are into local array (see above comment).</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">if</span> (active_height &lt; height) {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;active_height; i++) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    row_ptrs[i] = ptr[string][ybase + i];</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                row_base = row_ptrs;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="comment">// &#39;integrate_sums&#39; is a function parameter rather than a template parameter to prevent duplicating too</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="comment">// much code.  However, integrated sums make no sense for non-integral types and won&#39;t ever be</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="comment">// requested.  So put a type trait check here to avoid generating pointless code.</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums &amp;&amp; row_sum_multiplier) {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                interleave_block&lt;height_vectors, block, vlt, true&gt;(out, row_base, in_width, active_height, stringpos, first);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                interleave_block&lt;height_vectors, block, vlt, false&gt;(out, row_base, in_width, active_height, stringpos, first);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            k_left -= out_width;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordtype">string</span>++;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            stringpos=0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            first=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums) {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            FixupRowSums&lt;height_vectors, block, vlt&gt;(out, row_sum_multiplier);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>.</p>

</div>
</div>
<a id="a83586687128e412348362f142c42f0de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83586687128e412348362f142c42f0de">&#9670;&nbsp;</a></span>Interleave()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Interleave </td>
          <td>(</td>
          <td class="paramtype">TOut *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>integrate_sums</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="interleave__indirect_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="interleave__indirect_8cpp_source.xhtml">interleave_indirect.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                                                                                                                                                                                                   {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height = height_vectors * (vlt == VLType::SVE ? get_vector_length&lt;TOut&gt;() / block : 1);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="comment">// Use alloca here as a std::vector can be expensive in highly threaded scenarios.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">const</span> TIn **row_ptrs = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>TIn **<span class="keyword">&gt;</span>(alloca(height * <span class="keyword">sizeof</span>(<span class="keyword">const</span> TIn *)));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width=kmax-k0;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> y=y0; y&lt;ymax; y+=height) {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> r=0; r&lt;height; r++) {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            row_ptrs[r] = in + ((y + r) * in_stride);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums &amp;&amp; row_sum_multiplier) {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            interleave_block&lt;height_vectors, block, vlt, true&gt;(out, row_ptrs, width, std::min(height, ymax-y), k0, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            interleave_block&lt;height_vectors, block, vlt, false&gt;(out, row_ptrs, width, std::min(height, ymax-y), k0, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">if</span> (std::is_integral&lt;TOut&gt;::value &amp;&amp; integrate_sums) {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            FixupRowSums&lt;height_vectors, block, vlt&gt;(out, row_sum_multiplier);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>.</p>

</div>
</div>
<a id="a662f073e01c4fac64d8c487f2f35ed13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a662f073e01c4fac64d8c487f2f35ed13">&#9670;&nbsp;</a></span>interleave_block()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::interleave_block </td>
          <td>(</td>
          <td class="paramtype">TOut *&amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *const *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>row_offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>first</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="interleave__indirect_8cpp_source.xhtml#l00061">61</a> of file <a class="el" href="interleave__indirect_8cpp_source.xhtml">interleave_indirect.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                                                                                       {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> int_by = height_vectors * (vlt == VLType::SVE ? get_vector_length&lt;TOut&gt;() / block : 1);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::vector&lt;int32_t&gt; the_sums;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">if</span> (integrate_sums) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        the_sums = std::vector&lt;int32_t&gt;(int_by, 0);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> (!first) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="comment">// In &#39;integrate sums&#39; mode, we dump the sums at the end on each pass.</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="comment">// On the last pass this is correct, but on other passes it is not -</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="comment">// so on the subsequent pass we need to take the output written by</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="comment">// the previous pass as starting point for the sums, and then</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="comment">// overwrite them with new interleaved data.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            int32_t *out_int32 = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(out);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// Rewind pointer to where we wrote out the sums last time.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            out_int32 -= int_by;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="comment">// Restore the running sums.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            memcpy(the_sums.data(), out_int32, int_by * <span class="keyword">sizeof</span>(int32_t));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="comment">// Update the &quot;real&quot; pointer so that the next output will clobber the old sums.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            out = <span class="keyword">reinterpret_cast&lt;</span>TOut *<span class="keyword">&gt;</span>(out_int32);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pos=0; pos&lt;width; pos+=block) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> row=0; row&lt;int_by; row++) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="comment">// Row out of range - pad &#39;block&#39; entries.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">if</span> (row &gt;= height) {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col=0; col&lt;block; col++) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    *out++ = 0;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col=0; col&lt;block; col++) {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="comment">// Column out of range - pad a single entry</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">if</span> (pos + col &gt;= width) {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    *out++ = 0;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">if</span> (integrate_sums) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    the_sums[row] += in[row][row_offset + pos + col];</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                *out++ = in[row][row_offset + pos + col];</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> (integrate_sums) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        int32_t *out_int32 = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(out);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        memcpy(out_int32, the_sums.data(), int_by * <span class="keyword">sizeof</span>(int32_t));</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        out = <span class="keyword">reinterpret_cast&lt;</span>TOut *<span class="keyword">&gt;</span>(out_int32 + int_by);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">SVE</a>.</p>

</div>
</div>
<a id="aa2ed1c3595c8114064e8170b00df37c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2ed1c3595c8114064e8170b00df37c5">&#9670;&nbsp;</a></span>MergeResults()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MergeResults </td>
          <td>(</td>
          <td class="paramtype">Tout *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tin *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ldc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tout *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a>&#160;</td>
          <td class="paramname"><em>act</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>append</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mergeresults_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="mergeresults_8cpp_source.xhtml">mergeresults.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                                                                                                          {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// NOTE: The following code is disabled to avoid calling get_vector_length(), so templated MergeResults will not</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="comment">// be correct for SVE cases.  This is OK as we have specialisations for all needed SVE cases anyway.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// For SVE cases, multiply the width up by the vector length.</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// Use the *input* type to determine this, since this will be what the kernel operated on.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// const int width = twidth * (sve ? get_vector_length&lt;Tin&gt;() : 1);</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> width = twidth;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> full_y_blocks = (ymax - y0) / height;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> y_remainder = (ymax - y0) % height;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> y_blocks = full_y_blocks + (y_remainder ? 1 : 0);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> full_x_blocks = (xmax - x0) / width;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_remainder = (xmax - x0) % width;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_blocks = full_x_blocks + (x_remainder ? 1 : 0);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> y_block = 0; y_block &lt; y_blocks; y_block++) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordtype">int</span> ybase = y0 + (y_block * height);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordtype">int</span> fill_rows = (y_block &lt; full_y_blocks) ? height : y_remainder;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x_block = 0; x_block &lt; x_blocks; x_block++) {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">int</span> xbase = x0 + (x_block * width);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordtype">int</span> fill_cols = (x_block &lt; full_x_blocks) ? width : x_remainder;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> row=0; row &lt; fill_rows; row++) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> col=0; col &lt; fill_cols; col++) {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    Tout &amp;r = out[(ybase + row) * ldc + xbase + col];</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    Tout v = in[row * width + col];</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    <span class="keywordflow">if</span> (append) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                        v += r;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        v += <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>[xbase + col];</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    <span class="keywordflow">switch</span>(act.type) {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">Activation::Type::None</a>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        <span class="keywordflow">case</span> Activation::Type::ReLU:</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            v = std::max(v, <span class="keyword">static_cast&lt;</span>Tout<span class="keyword">&gt;</span>(0));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <span class="keywordflow">case</span> Activation::Type::BoundedReLU:</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                            v = std::max(std::min(v, <span class="keyword">static_cast&lt;</span>Tout<span class="keyword">&gt;</span>(act.param1)), <span class="keyword">static_cast&lt;</span>Tout<span class="keyword">&gt;</span>(0));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    r = v;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            in += (width * height);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00322">bias</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7ad07333cf360612093b94effed734829c">Activation::BoundedReLU</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a6adf97f83acf6453d4a6a4b1070f3754">Activation::None</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00135">Activation::param1</a>, <a class="el" href="structarm__gemm_1_1_activation.xhtml#a1d1cfd8ffb84e947f82999c682b666a7add10d919fa85cf27fc78c0e06fe0b378">Activation::ReLU</a>, and <a class="el" href="arm__gemm_8hpp_source.xhtml#l00134">Activation::type</a>.</p>

<p class="reference">Referenced by <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00076">StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla, integrate_sums &gt;::Merge()</a>.</p>

</div>
</div>
<a id="a0b11b3301c500a110864663ae9e6687c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b11b3301c500a110864663ae9e6687c">&#9670;&nbsp;</a></span>quant_hybrid_asymmetric()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::quant_hybrid_asymmetric </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00134">134</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                                            {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a>(qp) <span class="comment">/*  &amp;&amp; qp.b_offset != 0 */</span> &amp;&amp; qp.per_channel_requant==<span class="keyword">false</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__gemm_8hpp_source.xhtml#l00201">Requantize32::per_channel_requant</a>, and <a class="el" href="utils_8hpp_source.xhtml#l00118">quant_no_left_shift()</a>.</p>

</div>
</div>
<a id="ae6d96fa7911828f72031f52155b14720"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6d96fa7911828f72031f52155b14720">&#9670;&nbsp;</a></span>quant_hybrid_symmetric()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::quant_hybrid_symmetric </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00128">128</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                           {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">quant_no_left_shift</a>(qp) &amp;&amp; qp.b_offset == 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__gemm_8hpp_source.xhtml#l00199">Requantize32::b_offset</a>, and <a class="el" href="utils_8hpp_source.xhtml#l00118">quant_no_left_shift()</a>.</p>

</div>
</div>
<a id="a99538cb7b81a0b0e703dfa15d2947e77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99538cb7b81a0b0e703dfa15d2947e77">&#9670;&nbsp;</a></span>quant_no_left_shift()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::quant_no_left_shift </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00118">118</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                                        {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">if</span> (qp.per_channel_requant) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> (qp.per_channel_left_shifts == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> (qp.per_layer_left_shift == 0);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__gemm_8hpp_source.xhtml#l00205">Requantize32::per_channel_left_shifts</a>, <a class="el" href="arm__gemm_8hpp_source.xhtml#l00201">Requantize32::per_channel_requant</a>, and <a class="el" href="arm__gemm_8hpp_source.xhtml#l00202">Requantize32::per_layer_left_shift</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_8hpp_source.xhtml#l00134">quant_hybrid_asymmetric()</a>, and <a class="el" href="utils_8hpp_source.xhtml#l00128">quant_hybrid_symmetric()</a>.</p>

</div>
</div>
<a id="a5ef9b17d8d1641178b4327a376312282"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ef9b17d8d1641178b4327a376312282">&#9670;&nbsp;</a></span>requantize_block_32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::requantize_block_32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> &amp;&#160;</td>
          <td class="paramname"><em>qp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tin *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>in_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Tout *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>out_stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>row_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>col_bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>start_col</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00175">GemmHybridQuantized&lt; strategy, To, Tr &gt;::execute()</a>.</p>

</div>
</div>
<a id="a2cfd518808ae94de30b3d1a3ba7c7890"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cfd518808ae94de30b3d1a3ba7c7890">&#9670;&nbsp;</a></span>roundup()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_gemm::roundup </td>
          <td>(</td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utils_8hpp_source.xhtml#l00070">70</a> of file <a class="el" href="utils_8hpp_source.xhtml">utils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                       {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    T rem = a % <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (rem) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> a + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a> - rem;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>.</p>

<p class="reference">Referenced by <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00255">GemmHybrid&lt; strategy, To, Tr &gt;::estimate_cycles()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01296">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::estimate_cycles()</a>, <a class="el" href="gemv__pretransposed_8hpp_source.xhtml#l00143">GemvPretransposed&lt; strategy, To, Tr, OutputStage &gt;::execute()</a>, <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00149">GemmHybrid&lt; strategy, To, Tr &gt;::execute()</a>, <a class="el" href="gemm__hybrid__quantized__inline_8hpp_source.xhtml#l00159">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;::execute()</a>, <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00175">GemmHybridQuantized&lt; strategy, To, Tr &gt;::execute()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00427">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::execute()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00804">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::execute()</a>, <a class="el" href="gemm__hybrid__quantized__inline_8hpp_source.xhtml#l00218">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;::get_B_pretransposed_array_size()</a>, <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00220">GemmHybrid&lt; strategy, To, Tr &gt;::get_B_pretransposed_array_size()</a>, <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00268">GemmHybridQuantized&lt; strategy, To, Tr &gt;::get_B_pretransposed_array_size()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00599">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::get_B_pretransposed_array_size()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01130">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::get_B_pretransposed_array_size()</a>, <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00224">GemmHybrid&lt; strategy, To, Tr &gt;::pretranspose_B_array()</a>, <a class="el" href="gemm__hybrid__quantized__inline_8hpp_source.xhtml#l00230">GemmHybridQuantizedInline&lt; strategy, To, Tr &gt;::pretranspose_B_array()</a>, <a class="el" href="gemm__hybrid__quantized_8hpp_source.xhtml#l00280">GemmHybridQuantized&lt; strategy, To, Tr &gt;::pretranspose_B_array()</a>, <a class="el" href="gemm__hybrid__indirect_8hpp_source.xhtml#l00643">GemmHybridIndirect&lt; strategy, To, Tr, OutputStage, SeparateQuantize, FixedFormat &gt;::pretranspose_B_array_part()</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01171">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;::pretranspose_B_array_part()</a>.</p>

</div>
</div>
<a id="add607614af7994a1884d6db4ae1a2a40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add607614af7994a1884d6db4ae1a2a40">&#9670;&nbsp;</a></span>row_sums_indirect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::row_sums_indirect </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_strings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>string_lengths</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__gemm_1_1_indirect_input_arg.xhtml">IndirectInputArg</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>A_arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>M</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>output_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> *&#160;</td>
          <td class="paramname"><em>qp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7ce4ec274a14ad75f0aa61ae71b3c9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7ce4ec274a14ad75f0aa61ae71b3c9a">&#9670;&nbsp;</a></span>to_ndcoord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> arm_gemm::to_ndcoord </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> &amp;&#160;</td>
          <td class="paramname"><em>win</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> to an <code>arm_gemm::NDCoord</code> of the same max dimensions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">[win]</td><td>the <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> we want to convert to <code><a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">arm_gemm::ndcoord_t</a></code> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resultant ndcoord_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00112">112</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> {{<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[0].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[0].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[0].start())},</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[1].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[1].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[1].start())},</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[2].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[2].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[2].start())},</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[3].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[3].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[3].start())},</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[4].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[4].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[4].start())},</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[5].start()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[5].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[5].start())}};</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00074">CpuGemmAssemblyWrapperKernel&lt; TypeInput, TypeOutput &gt;::run()</a>, and <a class="el" href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00087">CpuGemmAssemblyWrapperKernel&lt; TypeInput, TypeOutput &gt;::run_nd()</a>.</p>

</div>
</div>
<a id="a21d0bb24decd02637800e4945f2c53ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21d0bb24decd02637800e4945f2c53ad">&#9670;&nbsp;</a></span>to_ndrange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a> arm_gemm::to_ndrange </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> &amp;&#160;</td>
          <td class="paramname"><em>win</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert an <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> to an <code><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">arm_gemm::NDRange</a></code> of the same max dimensions. </p>
<p>It should be noted that <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> specifies a <code>start()</code> and an <code><a class="el" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end()</a></code> where as <code><a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">arm_gemm::ndrange_t</a></code> only has a size, as a result we store the delta between the range</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">[win]</td><td>the <code><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">arm_compute::Window</a></code> we want to convert to <code><a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">arm_gemm::ndrange_t</a></code> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resultant ndrange_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00097">97</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> {<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[0].end() - win[0].start()),</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[1].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[1].start()),</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[2].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[2].start()),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[3].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[3].start()),</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[4].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[4].start()),</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(win[5].<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>() - win[5].start())};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>.</p>

</div>
</div>
<a id="a7ef8e1589be9278da0a25a873148761a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ef8e1589be9278da0a25a873148761a">&#9670;&nbsp;</a></span>to_window() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> arm_gemm::to_window </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__gemm.xhtml#a051d3dc92e26a43c1651cc8ce631c98e">ndcoord_t</a> &amp;&#160;</td>
          <td class="paramname"><em>ndc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00072">72</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> win;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i != <a class="code" href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">ndrange_max</a>; ++i)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> start = ndc.get_position(i);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> size  = ndc.get_size(i);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> stop  = start + size;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="comment">//populate the window with the dimensions of the NDRange</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(i, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a>(start, stop));</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> win;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="ndrange_8hpp_source.xhtml#l00173">NDCoordinate&lt; N &gt;::get_position()</a>, <a class="el" href="ndrange_8hpp_source.xhtml#l00138">NDRange&lt; D &gt;::get_size()</a>, <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00040">ndrange_max</a>, and <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>.</p>

</div>
</div>
<a id="a708697e3b578acd30b729bada5c264e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a708697e3b578acd30b729bada5c264e8">&#9670;&nbsp;</a></span>to_window() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> arm_gemm::to_window </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__gemm.xhtml#add517606da81960aed83e2e66e87ecab">ndrange_t</a> &amp;&#160;</td>
          <td class="paramname"><em>ndr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a> win;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i != <a class="code" href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">ndrange_max</a>; ++i)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">//populate the window with the dimensions of the NDRange</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(i, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a>(0, ndr.get_size(i)));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> win;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="ndrange_8hpp_source.xhtml#l00138">NDRange&lt; D &gt;::get_size()</a>, <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00040">ndrange_max</a>, and <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00104">CpuGemmAssemblyWrapperKernel&lt; TypeInput, TypeOutput &gt;::configure()</a>.</p>

</div>
</div>
<a id="a26afdd476f20600b47f35560ccfe23a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26afdd476f20600b47f35560ccfe23a9">&#9670;&nbsp;</a></span>Transform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Transform </td>
          <td>(</td>
          <td class="paramtype">TOut *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *const&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>xmax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="transform_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="transform_8cpp_source.xhtml">transform.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="comment">// Redirect to a specialised implementation predicated on argument size.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  TransformImpl&lt;IntBy, BlockBy, Transposed, <span class="keyword">sizeof</span>(TOut), <span class="keyword">sizeof</span>(TIn), vlt&gt;<a class="code" href="namespacearm__gemm.xhtml#a26afdd476f20600b47f35560ccfe23a9">::Transform</a>(</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    out, in, stride, k0, kmax, x0, xmax</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  );</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a9473ee59a64400808cfd195a6ba27663"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9473ee59a64400808cfd195a6ba27663">&#9670;&nbsp;</a></span>ndrange_max</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::size_t ndrange_max = <a class="el" href="classarm__compute_1_1_dimensions.xhtml">arm_compute::Dimensions</a>&lt;unsigned int&gt;::num_max_dimensions</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml">arm_gemm_compute_iface.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="arm__gemm__compute__iface_8hpp_source.xhtml#l00053">to_window()</a>.</p>

</div>
</div>
<a id="a08423b5e87249f9855c82d61e80a6aba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08423b5e87249f9855c82d61e80a6aba">&#9670;&nbsp;</a></span>report_mutex</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex report_mutex</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="misc_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="misc_8cpp_source.xhtml">misc.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ad6d940d6e848829b5b12a71ac473ab27"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad6d940d6e848829b5b12a71ac473ab27">arm_compute::WeightFormat::OHWIo4i2_bf16</a></div><div class="ttdeci">@ OHWIo4i2_bf16</div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ac192f173bb2880729e17cf86d4e7d741"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac192f173bb2880729e17cf86d4e7d741">arm_compute::WeightFormat::OHWIo64i2_bf16</a></div><div class="ttdeci">@ OHWIo64i2_bf16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a2c5ba9f23f492ca3abc8ab6f9db4a9c6"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2c5ba9f23f492ca3abc8ab6f9db4a9c6">arm_gemm::KernelWeightFormat::VL1VL_BL16</a></div><div class="ttdeci">@ VL1VL_BL16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5b39c8b553c821e7cddc6da64b5bd2ee">arm_gemm::GemmMethod::DEFAULT</a></div><div class="ttdeci">@ DEFAULT</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5aa1fd135a198b5211b47dc370120b0749"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5aa1fd135a198b5211b47dc370120b0749">arm_gemm::GemmMethod::GEMM_HYBRID_QUANTIZED</a></div><div class="ttdeci">@ GEMM_HYBRID_QUANTIZED</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da7d4637d154ae7fca275df06cf139888a"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da7d4637d154ae7fca275df06cf139888a">arm_gemm::VLType::SME2</a></div><div class="ttdeci">@ SME2</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a9473ee59a64400808cfd195a6ba27663"><div class="ttname"><a href="namespacearm__gemm.xhtml#a9473ee59a64400808cfd195a6ba27663">arm_gemm::ndrange_max</a></div><div class="ttdeci">constexpr std::size_t ndrange_max</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm__compute__iface_8hpp_source.xhtml#l00040">arm_gemm_compute_iface.hpp:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a5a8dd817290578adde8a5bdaaa3a08b8"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a5a8dd817290578adde8a5bdaaa3a08b8">arm_compute::WeightFormat::OHWIo8i4</a></div><div class="ttdeci">@ OHWIo8i4</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a8e1bde3c3d303163521522cf1d62f21f"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8e1bde3c3d303163521522cf1d62f21f">arm_compute::WeightFormat::ANY</a></div><div class="ttdeci">@ ANY</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a0f170db61ecb7e386a972fdf2c4e4bdb"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0f170db61ecb7e386a972fdf2c4e4bdb">arm_gemm::GemmMethod::GEMM_INTERLEAVED_2D</a></div><div class="ttdeci">@ GEMM_INTERLEAVED_2D</div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a74742cb5c8e2ac354a60cb73383d8176"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a74742cb5c8e2ac354a60cb73383d8176">caffe_mnist_image_extractor.rows</a></div><div class="ttdeci">rows</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor.py:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ac202cc92a20e27405c4f8f791e74b1e0"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac202cc92a20e27405c4f8f791e74b1e0">arm_compute::WeightFormat::OHWIo32i4_bf16</a></div><div class="ttdeci">@ OHWIo32i4_bf16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a79c4b728af7b8da698fe0af807084fc4"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a79c4b728af7b8da698fe0af807084fc4">arm_compute::WeightFormat::OHWIo32i2</a></div><div class="ttdeci">@ OHWIo32i2</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a08e970e04625d630f2b0b83b1143b3f9"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a08e970e04625d630f2b0b83b1143b3f9">arm_compute::WeightFormat::OHWIo4i4</a></div><div class="ttdeci">@ OHWIo4i4</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a99538cb7b81a0b0e703dfa15d2947e77"><div class="ttname"><a href="namespacearm__gemm.xhtml#a99538cb7b81a0b0e703dfa15d2947e77">arm_gemm::quant_no_left_shift</a></div><div class="ttdeci">bool quant_no_left_shift(const Requantize32 &amp;qp)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00118">utils.hpp:118</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a68fe6a141bc6154b83d213f4a1edbac6"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a68fe6a141bc6154b83d213f4a1edbac6">arm_compute::WeightFormat::OHWIo2</a></div><div class="ttdeci">@ OHWIo2</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a0b192a6bfeb3ced2dadfb8a1546e685f"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0b192a6bfeb3ced2dadfb8a1546e685f">arm_compute::WeightFormat::OHWIo64i8</a></div><div class="ttdeci">@ OHWIo64i8</div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_aaed057ed424ced7429016ec18c2edbb6"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#aaed057ed424ced7429016ec18c2edbb6">caffe_mnist_image_extractor.cols</a></div><div class="ttdeci">cols</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00030">caffe_mnist_image_extractor.py:30</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a5d286c3bf813d02f6afed13574d15b02"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a5d286c3bf813d02f6afed13574d15b02">arm_gemm::GemmMethod::GEMM_NATIVE</a></div><div class="ttdeci">@ GEMM_NATIVE</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a926b274a33003e76a1fbaff96a91c827"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a926b274a33003e76a1fbaff96a91c827">arm_compute::WeightFormat::OHWIo8i2</a></div><div class="ttdeci">@ OHWIo8i2</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da4eda906033e04e40aadd491e0fea21e0"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da4eda906033e04e40aadd491e0fea21e0">arm_gemm::VLType::SME</a></div><div class="ttdeci">@ SME</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a2b97a9a580c202eb744106b077505bcf"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a2b97a9a580c202eb744106b077505bcf">arm_gemm::KernelWeightFormat::VL2VL_BL64_BF16</a></div><div class="ttdeci">@ VL2VL_BL64_BF16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a25fad7bae3b2e71a2a00af3630cba541"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a25fad7bae3b2e71a2a00af3630cba541">arm_compute::WeightFormat::OHWI</a></div><div class="ttdeci">@ OHWI</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a90b95f8f9579b94f5013c8904f616cd7"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a90b95f8f9579b94f5013c8904f616cd7">arm_compute::WeightFormat::OHWIo32i8</a></div><div class="ttdeci">@ OHWIo32i8</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ad90c2dcb1189e2d9c2fe83780a5a5f10"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad90c2dcb1189e2d9c2fe83780a5a5f10">arm_compute::WeightFormat::OHWIo32</a></div><div class="ttdeci">@ OHWIo32</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a4a554761cc948f6b9437c42fd62a1d01"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a4a554761cc948f6b9437c42fd62a1d01">arm_gemm::GemmMethod::GEMM_INTERLEAVED</a></div><div class="ttdeci">@ GEMM_INTERLEAVED</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a2bc7ef9a3feea9150b6c6e1b979a8255"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a2bc7ef9a3feea9150b6c6e1b979a8255">arm_gemm::GemmMethod::GEMV_BATCHED</a></div><div class="ttdeci">@ GEMV_BATCHED</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a321ee3ec61a6f03bcbbbf64d6626ba67"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a321ee3ec61a6f03bcbbbf64d6626ba67">arm_gemm::KernelWeightFormat::VL1VL_BL64</a></div><div class="ttdeci">@ VL1VL_BL64</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5aa9027481bc29bbb314c9f96132ce6e0a"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa9027481bc29bbb314c9f96132ce6e0a">arm_compute::WeightFormat::OHWIo64</a></div><div class="ttdeci">@ OHWIo64</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5aa181500a35cda4d9bde47038ff0d9b31"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa181500a35cda4d9bde47038ff0d9b31">arm_compute::WeightFormat::OHWIo4i8</a></div><div class="ttdeci">@ OHWIo4i8</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5af1c10e01dded7edf3ab7bb573812f30f"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5af1c10e01dded7edf3ab7bb573812f30f">arm_compute::WeightFormat::OHWIo16i8</a></div><div class="ttdeci">@ OHWIo16i8</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a></div><div class="ttdeci">WeightFormat</div><div class="ttdoc">Memory layouts for the weights tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00311">CoreTypes.h:311</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a53f42078c68df9f29e9ad4c47ce24dc0"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a53f42078c68df9f29e9ad4c47ce24dc0">arm_compute::WeightFormat::OHWIo2i8</a></div><div class="ttdeci">@ OHWIo2i8</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76aa135d787a2a55a0d941fc2892f9804c4"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa135d787a2a55a0d941fc2892f9804c4">arm_gemm::KernelWeightFormat::VL128_BL32_BF16</a></div><div class="ttdeci">@ VL128_BL32_BF16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5aa44b7820928723814e563efaa90bf927"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aa44b7820928723814e563efaa90bf927">arm_compute::WeightFormat::OHWIo64i2</a></div><div class="ttdeci">@ OHWIo64i2</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a927ef1845254e94feea3508f071669c1"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a927ef1845254e94feea3508f071669c1">arm_gemm::KernelWeightFormat::VL128_BL32</a></div><div class="ttdeci">@ VL128_BL32</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a2a4c9b03dd6ecd782cdc2174edcaf58d"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a2a4c9b03dd6ecd782cdc2174edcaf58d">arm_compute::WeightFormat::OHWIo8i2_bf16</a></div><div class="ttdeci">@ OHWIo8i2_bf16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a7450234a5b6959d08a3ddac191b3fe1f"><div class="ttname"><a href="namespacearm__gemm.xhtml#a7450234a5b6959d08a3ddac191b3fe1f">arm_gemm::bias_adder</a></div><div class="ttdeci">void bias_adder(T *out, unsigned int stride, const T *bias, unsigned int rows, unsigned int cols)</div><div class="ttdef"><b>Definition:</b> <a href="bias__adder_8hpp_source.xhtml#l00031">bias_adder.hpp:31</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ad7f1a17c9a0347508381eca5ddd185ee"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ad7f1a17c9a0347508381eca5ddd185ee">arm_compute::WeightFormat::OHWIo16i2_bf16</a></div><div class="ttdeci">@ OHWIo16i2_bf16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a94d39bf54ea1e81c05161d7b073cddde"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a94d39bf54ea1e81c05161d7b073cddde">arm_compute::WeightFormat::OHWIo4i2</a></div><div class="ttdeci">@ OHWIo4i2</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a07284479b872cb46b6925ff3b4ff5ae0"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a07284479b872cb46b6925ff3b4ff5ae0">arm_compute::WeightFormat::OHWIo16i4</a></div><div class="ttdeci">@ OHWIo16i4</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a781048ddfd21fd0402717d7e83b9fc5e"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a781048ddfd21fd0402717d7e83b9fc5e">arm_gemm::GemmMethod::QUANTIZE_WRAPPER_2D</a></div><div class="ttdeci">@ QUANTIZE_WRAPPER_2D</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ac9ae99c7c154b112ea7e5949afc62121"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ac9ae99c7c154b112ea7e5949afc62121">arm_compute::WeightFormat::OHWIo64i4</a></div><div class="ttdeci">@ OHWIo64i4</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a447f04946f2db1dbdf2cfa1ff4a2db52"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a447f04946f2db1dbdf2cfa1ff4a2db52">arm_gemm::GemmMethod::GEMV_NATIVE_TRANSPOSED</a></div><div class="ttdeci">@ GEMV_NATIVE_TRANSPOSED</div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a441b568e112a23748c34023a73f6feff"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a441b568e112a23748c34023a73f6feff">arm_gemm::KernelWeightFormat::VL2VL_BL64</a></div><div class="ttdeci">@ VL2VL_BL64</div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a15d08af98fbce252909bed2c458ab3ee"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a15d08af98fbce252909bed2c458ab3ee">arm_compute::WeightFormat::OHWIo4i4_bf16</a></div><div class="ttdeci">@ OHWIo4i4_bf16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a200f8195335b939daa12ff6db12f5210"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a200f8195335b939daa12ff6db12f5210">arm_compute::WeightFormat::OHWIo128</a></div><div class="ttdeci">@ OHWIo128</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a0c4914ffae86590799e04ac0bf6adf0e"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0c4914ffae86590799e04ac0bf6adf0e">arm_compute::WeightFormat::OHWIo8i4_bf16</a></div><div class="ttdeci">@ OHWIo8i4_bf16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5ade272d59e5c207310f2f232b6d409096"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5ade272d59e5c207310f2f232b6d409096">arm_compute::WeightFormat::OHWIo16i4_bf16</a></div><div class="ttdeci">@ OHWIo16i4_bf16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a0cb9573cb46f8ad7d50add08ec2a8efb"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a0cb9573cb46f8ad7d50add08ec2a8efb">arm_compute::WeightFormat::OHWIo64i4_bf16</a></div><div class="ttdeci">@ OHWIo64i4_bf16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a0385682ff278916d5325f43f2fbd7917"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a0385682ff278916d5325f43f2fbd7917">arm_gemm::KernelWeightFormat::VL1VL_BL32</a></div><div class="ttdeci">@ VL1VL_BL32</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a48b3226275a4406903647fb8b8f49cc8"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a48b3226275a4406903647fb8b8f49cc8">arm_compute::WeightFormat::OHWIo8</a></div><div class="ttdeci">@ OHWIo8</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image's dimensions with a start, end and step.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00079">Window.h:79</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a></div><div class="ttdeci">@ SVE</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00053">Window.inl:53</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a></div><div class="ttdeci">@ UNSPECIFIED</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5ae88784abc2816bf2775a68900540cb14"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5ae88784abc2816bf2775a68900540cb14">arm_gemm::GemmMethod::GEMM_HYBRID</a></div><div class="ttdeci">@ GEMM_HYBRID</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa2730bd24646daa3279918eeff467d8c">arm_gemm::KernelWeightFormat::NON_FIXED</a></div><div class="ttdeci">@ NON_FIXED</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76aa4805539b25e4102ef1b172350ee6824"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aa4805539b25e4102ef1b172350ee6824">arm_gemm::KernelWeightFormat::VL256_BL64_BF16</a></div><div class="ttdeci">@ VL256_BL64_BF16</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1">arm_gemm::GemmMethod::GEMV_PRETRANSPOSED</a></div><div class="ttdeci">@ GEMV_PRETRANSPOSED</div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_ac7485dcc8d256a6f197ed7802687f252"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#ac7485dcc8d256a6f197ed7802687f252">tf_frozen_model_extractor.None</a></div><div class="ttdeci">None</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00041">tf_frozen_model_extractor.py:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a8933e0ff80cefd53572e08f64a55cae1"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a8933e0ff80cefd53572e08f64a55cae1">arm_compute::WeightFormat::OHWIo32i2_bf16</a></div><div class="ttdeci">@ OHWIo32i2_bf16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a6f8fa91fb3559df940f3d213360185b1">arm_gemm::GemmMethod::QUANTIZE_WRAPPER</a></div><div class="ttdeci">@ QUANTIZE_WRAPPER</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5aefd69da4bc3990fe980992a79c332164"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5aefd69da4bc3990fe980992a79c332164">arm_compute::WeightFormat::OHWIo32i4</a></div><div class="ttdeci">@ OHWIo32i4</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76aaad411ce55355aa01689506d459c7923"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aaad411ce55355aa01689506d459c7923">arm_gemm::KernelWeightFormat::VL1VL_BL32_BF16</a></div><div class="ttdeci">@ VL1VL_BL32_BF16</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76ab6426811f0cdf342947b1c4b5932cc50"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76ab6426811f0cdf342947b1c4b5932cc50">arm_gemm::KernelWeightFormat::VL128_BL64</a></div><div class="ttdeci">@ VL128_BL64</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a81d3ead1af21f9c8cbaa0436c583ad8b"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a81d3ead1af21f9c8cbaa0436c583ad8b">arm_compute::WeightFormat::OHWIo16i2</a></div><div class="ttdeci">@ OHWIo16i2</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76aad4d5fd069e9d845d371199e819b9935"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76aad4d5fd069e9d845d371199e819b9935">arm_gemm::KernelWeightFormat::VL128_BL16</a></div><div class="ttdeci">@ VL128_BL16</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5acc872da961a924c6fdea2ae1d02be4dd"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5acc872da961a924c6fdea2ae1d02be4dd">arm_compute::WeightFormat::OHWIo4</a></div><div class="ttdeci">@ OHWIo4</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a608a923caea677f5ba10a23a5dd1fee9"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a608a923caea677f5ba10a23a5dd1fee9">arm_compute::WeightFormat::OHWIo16</a></div><div class="ttdeci">@ OHWIo16</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_adfe29ef1042864157b1fd4c72cb21fa0"><div class="ttname"><a href="namespacearm__gemm.xhtml#adfe29ef1042864157b1fd4c72cb21fa0">arm_gemm::find_implementation</a></div><div class="ttdeci">bool find_implementation(const GemmArgs &amp;args, const OutputStage &amp;os, const GemmImplementation&lt; Top, Tret, OutputStage &gt; *&amp;impl)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__implementation_8hpp_source.xhtml#l00238">gemm_implementation.hpp:238</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a19076cd620581b8e671ad674359c1b76a98e86e70d3e2ada0d1a6ee63d98298f4"><div class="ttname"><a href="namespacearm__gemm.xhtml#a19076cd620581b8e671ad674359c1b76a98e86e70d3e2ada0d1a6ee63d98298f4">arm_gemm::KernelWeightFormat::VL256_BL64</a></div><div class="ttdeci">@ VL256_BL64</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a06eeee52deca91c5f2d378c409143626"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a06eeee52deca91c5f2d378c409143626">arm_compute::WeightFormat::OHWIo8i8</a></div><div class="ttdeci">@ OHWIo8i8</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a26afdd476f20600b47f35560ccfe23a9"><div class="ttname"><a href="namespacearm__gemm.xhtml#a26afdd476f20600b47f35560ccfe23a9">arm_gemm::Transform</a></div><div class="ttdeci">void Transform(TOut *out, const TIn *const in, const int stride, const int k0, const int kmax, const int x0, const int xmax)</div><div class="ttdef"><b>Definition:</b> <a href="transform_8cpp_source.xhtml#l00116">transform.cpp:116</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
