<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/generate_build_files.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('generate__build__files_8py_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">generate_build_files.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="generate__build__files_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml">    1</a></span>&#160;<span class="comment">#!/usr/bin/python</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"># -*- coding: utf-8 -*-</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"># Copyright (c) 2023-2024 Arm Limited.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"># SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"># Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"># of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"># deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"># sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"># furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"># The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"># copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">#</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"># SOFTWARE.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">&quot;&quot;&quot;Generates build files for either bazel or cmake experimental builds using filelist.json</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral">Usage</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">    python scripts/generate_build_files.py --bazel</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">    python scripts/generate_build_files.py --cmake</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">Writes generated file to the bazel BUILD file located under src/ if using --bazel flag.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">Writes generated file to the CMake CMakeLists.txt file located under src/ if using --cmake flag.</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> argparse</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> json</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> glob</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#aa5a886ca10dcacd1d0530d78088af4f8">   40</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#aa5a886ca10dcacd1d0530d78088af4f8">get_operator_backend_files</a>(filelist, operators, backend=&#39;&#39;, techs=[], attrs=[]):</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    files = {<span class="stringliteral">&quot;common&quot;</span>: []}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment"># Early return if filelist is empty</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> backend <span class="keywordflow">not</span> <span class="keywordflow">in</span> filelist:</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> files</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment"># Iterate over operators and create the file lists to compiler</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">for</span> operator <span class="keywordflow">in</span> operators:</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">if</span> operator <span class="keywordflow">in</span> filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>]:</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            files[<span class="stringliteral">&#39;common&#39;</span>] += filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>][operator][<span class="stringliteral">&quot;files&quot;</span>][<span class="stringliteral">&quot;common&quot;</span>]</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">for</span> tech <span class="keywordflow">in</span> techs:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordflow">if</span> tech <span class="keywordflow">in</span> filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>][operator][<span class="stringliteral">&quot;files&quot;</span>]:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    <span class="comment"># Add tech as a key to dictionary if not there</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="keywordflow">if</span> tech <span class="keywordflow">not</span> <span class="keywordflow">in</span> files:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        files[tech] = []</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    <span class="comment"># Add tech files to the tech file list</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                    tech_files = filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>][operator][<span class="stringliteral">&quot;files&quot;</span>][tech]</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    files[tech] += tech_files.get(<span class="stringliteral">&#39;common&#39;</span>, [])</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <span class="keywordflow">for</span> attr <span class="keywordflow">in</span> attrs:</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        files[tech] += tech_files.get(attr, [])</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment"># Remove duplicates if they exist</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> {k: list(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>(v)) <span class="keywordflow">for</span> k, v <span class="keywordflow">in</span> files.items()}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a34ee9cae8255fb9b22b5a9a15a4a52d1">   67</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a34ee9cae8255fb9b22b5a9a15a4a52d1">collect_operators</a>(filelist, operators, backend=&#39;&#39;):</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    ops = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">set</a>()</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">for</span> operator <span class="keywordflow">in</span> operators:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">if</span> operator <span class="keywordflow">in</span> filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>]:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            ops.add(operator)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;deps&#39;</span> <span class="keywordflow">in</span> filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>][operator]:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                ops.update(filelist[backend][<span class="stringliteral">&#39;operators&#39;</span>][operator][<span class="stringliteral">&#39;deps&#39;</span>])</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            print(<span class="stringliteral">&quot;Operator {0} is unsupported on {1} backend!&quot;</span>.<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>(</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                operator, backend))</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> ops</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a4d871aeef3f2bf7d613eb71ecd136d11">   81</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a4d871aeef3f2bf7d613eb71ecd136d11">resolve_operator_dependencies</a>(filelist, operators, backend=&#39;&#39;):</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    resolved_operators = <a class="code" href="namespacegenerate__build__files.xhtml#a34ee9cae8255fb9b22b5a9a15a4a52d1">collect_operators</a>(filelist, operators, backend)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    are_ops_resolved = <span class="keyword">False</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">while</span> <span class="keywordflow">not</span> are_ops_resolved:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        resolution_pass = <a class="code" href="namespacegenerate__build__files.xhtml#a34ee9cae8255fb9b22b5a9a15a4a52d1">collect_operators</a>(</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            filelist, resolved_operators, backend)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span> len(resolution_pass) != len(resolved_operators):</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            resolved_operators.update(resolution_pass)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            are_ops_resolved = <span class="keyword">True</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> resolved_operators</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a5f98f9e5dea66675887076d2c51b1b33">   95</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a5f98f9e5dea66675887076d2c51b1b33">get_template_header</a>():</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;&quot;# Copyright (c) 2023-2024 Arm Limited.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">#</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral"># SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">#</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral"># Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral"># of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral"># deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral"># rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral"># sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral"># furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">#</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral"># The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral"># copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">#</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral"># SOFTWARE.&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a945361ba6045d29a062f459a071d11aa">  118</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a945361ba6045d29a062f459a071d11aa">build_from_template_bazel</a>(srcs_graph, srcs_sve, srcs_sve2, srcs_core):</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    line_separator = <span class="stringliteral">&#39;&quot;,\n\t&quot;&#39;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    template = f<span class="stringliteral">&quot;&quot;&quot;{get_template_header()}</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">filegroup(</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">        name = &quot;arm_compute_graph_srcs&quot;,</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">        srcs = [&quot;{line_separator.join(srcs_graph)}&quot;]  +</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    glob([&quot;**/*.h&quot;,</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">    &quot;**/*.hpp&quot;,</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">    &quot;**/*.inl&quot;]),</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">        visibility = [&quot;//visibility:public&quot;]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral">filegroup(</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">        name = &quot;arm_compute_sve2_srcs&quot;,</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">        srcs = [&quot;{line_separator.join(srcs_sve2)}&quot;]  +</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">    glob([&quot;**/*.h&quot;,</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">    &quot;**/*.hpp&quot;,</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">    &quot;**/*.inl&quot;]),</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">        visibility = [&quot;//visibility:public&quot;]</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">filegroup(</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        name = &quot;arm_compute_sve_srcs&quot;,</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">        srcs = [&quot;{line_separator.join(srcs_sve)}&quot;]  +</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">    glob([&quot;**/*.h&quot;,</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">    &quot;**/*.hpp&quot;,</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">    &quot;**/*.inl&quot;]),</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">        visibility = [&quot;//visibility:public&quot;]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">filegroup(</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">        name = &quot;arm_compute_srcs&quot;,</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">        srcs = [&quot;{line_separator.join(srcs_core)}&quot;]  +</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">    glob([&quot;**/*.h&quot;,</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral">    &quot;**/*.hpp&quot;,</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral">    &quot;**/*.inl&quot;]),</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="stringliteral">        visibility = [&quot;//visibility:public&quot;]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> template</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a0221e1445adbf6376cade021dbade5ac">  164</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a0221e1445adbf6376cade021dbade5ac">build_from_template_cmake</a>(srcs_graph, srcs_sve, srcs_sve2, srcs_core):</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    line_separator = <span class="stringliteral">&#39;\n\t&#39;</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    template = f<span class="stringliteral">&quot;&quot;&quot;{get_template_header()}</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">target_sources(</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral">    arm_compute_graph</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral">    PRIVATE</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="stringliteral">    {line_separator.join(srcs_graph)}</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral">target_sources(</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">    arm_compute_sve</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">    PRIVATE</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">    {line_separator.join(srcs_sve)}</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral">target_sources(</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">    arm_compute_sve2</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">    PRIVATE</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral">    {line_separator.join(srcs_sve2)}</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">)</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral">target_sources(</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">    arm_compute</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="stringliteral">    PRIVATE</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">    {line_separator.join(srcs_core)}</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral">)&quot;&quot;&quot;</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">return</span> template</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a69403a4e269b88a638e33f138be85fb6">  196</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacegenerate__build__files.xhtml#a69403a4e269b88a638e33f138be85fb6">gather_sources</a>():</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment"># Source file list</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">with</span> open(<span class="stringliteral">&quot;filelist.json&quot;</span>) <span class="keyword">as</span> fp:</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        filelist = json.load(fp)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment"># Common backend files</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    lib_files = filelist[<span class="stringliteral">&#39;common&#39;</span>]</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment"># Logging files</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;logging&#39;</span>]</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment"># C API files</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;c_api&#39;</span>][<span class="stringliteral">&#39;common&#39;</span>]</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;c_api&#39;</span>][<span class="stringliteral">&#39;operators&#39;</span>]</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="comment"># Scheduler infrastructure</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;scheduler&#39;</span>][<span class="stringliteral">&#39;single&#39;</span>]</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="comment"># Add both cppthreads and omp sources for now</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;scheduler&#39;</span>][<span class="stringliteral">&#39;threads&#39;</span>]</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;scheduler&#39;</span>][<span class="stringliteral">&#39;omp&#39;</span>]</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="comment"># Graph files</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    graph_files = glob.glob(<span class="stringliteral">&#39;src/graph/*.cpp&#39;</span>)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    graph_files += glob.glob(<span class="stringliteral">&#39;src/graph/*/*.cpp&#39;</span>)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    lib_files_sve = []</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    lib_files_sve2 = []</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment"># -------------------------------------</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="comment"># NEON files</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    lib_files += filelist[<span class="stringliteral">&#39;cpu&#39;</span>][<span class="stringliteral">&#39;common&#39;</span>]</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    simd = [<span class="stringliteral">&#39;neon&#39;</span>, <span class="stringliteral">&#39;sve&#39;</span>, <span class="stringliteral">&#39;sve2&#39;</span>]</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="comment"># Get attributes</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    data_types = [<span class="stringliteral">&quot;qasymm8&quot;</span>, <span class="stringliteral">&quot;qasymm8_signed&quot;</span>, <span class="stringliteral">&quot;qsymm16&quot;</span>,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                  <span class="stringliteral">&quot;fp16&quot;</span>, <span class="stringliteral">&quot;fp32&quot;</span>, <span class="stringliteral">&quot;integer&quot;</span>]</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    data_layouts = [<span class="stringliteral">&quot;nhwc&quot;</span>, <span class="stringliteral">&quot;nchw&quot;</span>]</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    fixed_format_kernels = [<span class="stringliteral">&quot;fixed_format_kernels&quot;</span>]</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    attrs = data_types + data_layouts + \</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        fixed_format_kernels + [<span class="stringliteral">&quot;estate64&quot;</span>]</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="comment"># Setup data-type and data-layout files to include</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    cpu_operators = filelist[<span class="stringliteral">&#39;cpu&#39;</span>][<span class="stringliteral">&#39;operators&#39;</span>].keys()</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    cpu_ops_to_build = <a class="code" href="namespacegenerate__build__files.xhtml#a4d871aeef3f2bf7d613eb71ecd136d11">resolve_operator_dependencies</a>(</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        filelist, cpu_operators, <span class="stringliteral">&#39;cpu&#39;</span>)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    cpu_files = <a class="code" href="namespacegenerate__build__files.xhtml#aa5a886ca10dcacd1d0530d78088af4f8">get_operator_backend_files</a>(</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        filelist, cpu_ops_to_build, <span class="stringliteral">&#39;cpu&#39;</span>, simd, attrs)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="comment"># Shared among ALL CPU files</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    lib_files += cpu_files.get(<span class="stringliteral">&#39;common&#39;</span>, [])</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment"># Arm® Neon™ specific files</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    lib_files += cpu_files.get(<span class="stringliteral">&#39;neon&#39;</span>, [])</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="comment"># SVE files only</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    lib_files_sve = cpu_files.get(<span class="stringliteral">&#39;sve&#39;</span>, [])</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment"># SVE2 files only</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    lib_files_sve2 = cpu_files.get(<span class="stringliteral">&#39;sve2&#39;</span>, [])</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    graph_files += glob.glob(<span class="stringliteral">&#39;src/graph/backends/NEON/*.cpp&#39;</span>)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment"># -------------------------------------</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    graph_files = sorted([path.replace(<span class="stringliteral">&quot;src/&quot;</span>, <span class="stringliteral">&quot;&quot;</span>) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> graph_files])</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    lib_files_sve = sorted([path.replace(<span class="stringliteral">&quot;src/&quot;</span>, <span class="stringliteral">&quot;&quot;</span>) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> lib_files_sve])</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    lib_files_sve2 = sorted([path.replace(<span class="stringliteral">&quot;src/&quot;</span>, <span class="stringliteral">&quot;&quot;</span>) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> lib_files_sve2])</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    lib_files = sorted([path.replace(<span class="stringliteral">&quot;src/&quot;</span>, <span class="stringliteral">&quot;&quot;</span>) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> lib_files])</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">return</span> graph_files, lib_files_sve, lib_files_sve2, lib_files</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordflow">if</span> <span class="stringliteral">&quot;__main__&quot;</span> <span class="keywordflow">in</span> __name__:</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a90eee7a4677ca8b1ed116364a24367f9">  271</a></span>&#160;    parser = argparse.ArgumentParser()</div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a2f4ab7bf743142dae2e459aa18f9f1d4">  272</a></span>&#160;    parser.add_argument(<span class="stringliteral">&quot;--bazel&quot;</span>, action=<span class="stringliteral">&quot;store_true&quot;</span>)</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    parser.add_argument(<span class="stringliteral">&quot;--cmake&quot;</span>, action=<span class="stringliteral">&quot;store_true&quot;</span>)</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a8187411843a6284ffb964ef3fb9fcab3">  274</a></span>&#160;    args = parser.parse_args()</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a32e19d71910d4171f3c2b53db60e9425">  276</a></span>&#160;    graph_files, lib_files_sve, lib_files_sve2, lib_files = <a class="code" href="namespacegenerate__build__files.xhtml#a69403a4e269b88a638e33f138be85fb6">gather_sources</a>()</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">if</span> args.bazel:</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="comment"># 8562a4ec: Remove CommonGraphOptions from Utils target and warnings</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        graph_files += [<span class="stringliteral">&quot;//utils:CommonGraphOptions.cpp&quot;</span>]</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a87ce39972c0eebf901adc0306ec712cd">  282</a></span>&#160;        bazel_build_string = <a class="code" href="namespacegenerate__build__files.xhtml#a945361ba6045d29a062f459a071d11aa">build_from_template_bazel</a>(</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            graph_files, lib_files_sve, lib_files_sve2, lib_files)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keyword">with</span> open(<span class="stringliteral">&quot;src/BUILD.bazel&quot;</span>, <span class="stringliteral">&quot;w&quot;</span>) <span class="keyword">as</span> fp:</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            fp.write(bazel_build_string)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span> args.cmake:</div>
<div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="namespacegenerate__build__files.xhtml#a95caf5168a5eecfbf303fc3dd02b83cf">  288</a></span>&#160;        cmake_build_string = <a class="code" href="namespacegenerate__build__files.xhtml#a0221e1445adbf6376cade021dbade5ac">build_from_template_cmake</a>(</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            graph_files, lib_files_sve, lib_files_sve2, lib_files)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keyword">with</span> open(<span class="stringliteral">&quot;src/CMakeLists.txt&quot;</span>, <span class="stringliteral">&quot;w&quot;</span>) <span class="keyword">as</span> fp:</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            fp.write(cmake_build_string)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> args.cmake <span class="keywordflow">and</span> <span class="keywordflow">not</span> args.bazel:</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        print(<span class="stringliteral">&quot;Supply either --bazel or --cmake flag to generate build files for corresponding build&quot;</span>)</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a945361ba6045d29a062f459a071d11aa"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a945361ba6045d29a062f459a071d11aa">generate_build_files.build_from_template_bazel</a></div><div class="ttdeci">def build_from_template_bazel(srcs_graph, srcs_sve, srcs_sve2, srcs_core)</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00118">generate_build_files.py:118</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a4d871aeef3f2bf7d613eb71ecd136d11"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a4d871aeef3f2bf7d613eb71ecd136d11">generate_build_files.resolve_operator_dependencies</a></div><div class="ttdeci">def resolve_operator_dependencies(filelist, operators,backend='')</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00081">generate_build_files.py:81</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a69403a4e269b88a638e33f138be85fb6"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a69403a4e269b88a638e33f138be85fb6">generate_build_files.gather_sources</a></div><div class="ttdeci">def gather_sources()</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00196">generate_build_files.py:196</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a0221e1445adbf6376cade021dbade5ac"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a0221e1445adbf6376cade021dbade5ac">generate_build_files.build_from_template_cmake</a></div><div class="ttdeci">def build_from_template_cmake(srcs_graph, srcs_sve, srcs_sve2, srcs_core)</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00164">generate_build_files.py:164</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_aa5a886ca10dcacd1d0530d78088af4f8"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#aa5a886ca10dcacd1d0530d78088af4f8">generate_build_files.get_operator_backend_files</a></div><div class="ttdeci">def get_operator_backend_files(filelist, operators,backend='', techs=[], attrs=[])</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00040">generate_build_files.py:40</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a5f98f9e5dea66675887076d2c51b1b33"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a5f98f9e5dea66675887076d2c51b1b33">generate_build_files.get_template_header</a></div><div class="ttdeci">def get_template_header()</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00095">generate_build_files.py:95</a></div></div>
<div class="ttc" id="anamespacegenerate__build__files_xhtml_a34ee9cae8255fb9b22b5a9a15a4a52d1"><div class="ttname"><a href="namespacegenerate__build__files.xhtml#a34ee9cae8255fb9b22b5a9a15a4a52d1">generate_build_files.collect_operators</a></div><div class="ttdeci">def collect_operators(filelist, operators,backend='')</div><div class="ttdef"><b>Definition:</b> <a href="generate__build__files_8py_source.xhtml#l00067">generate_build_files.py:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1ec8dd7ea96aec0e4068497f0b5e17b2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ec8dd7ea96aec0e4068497f0b5e17b2">arm_compute::test::validation::set</a></div><div class="ttdeci">dst_shape set(0, output_wh.first)</div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="generate__build__files_8py.xhtml">generate_build_files.py</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:53:53 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
