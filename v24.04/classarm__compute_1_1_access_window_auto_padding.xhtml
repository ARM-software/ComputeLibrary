<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: AccessWindowAutoPadding Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_access_window_auto_padding.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">AccessWindowAutoPadding Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Dummy access window.  
 <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_access_window_auto_padding_8h_source.xhtml">AccessWindowAutoPadding.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for AccessWindowAutoPadding:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_access_window_auto_padding__coll__graph.svg" width="211" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a55ae8ac3b55093b24fe30805828de164"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a55ae8ac3b55093b24fe30805828de164">AccessWindowAutoPadding</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *info)</td></tr>
<tr class="memdesc:a55ae8ac3b55093b24fe30805828de164"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a55ae8ac3b55093b24fe30805828de164">More...</a><br /></td></tr>
<tr class="separator:a55ae8ac3b55093b24fe30805828de164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab876b2c3c41ed76c14c177c9373d320b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#ab876b2c3c41ed76c14c177c9373d320b">AccessWindowAutoPadding</a> (const <a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab876b2c3c41ed76c14c177c9373d320b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#ab876b2c3c41ed76c14c177c9373d320b">More...</a><br /></td></tr>
<tr class="separator:ab876b2c3c41ed76c14c177c9373d320b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad38db221ef94b6cd0e73f5dfd743414a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#ad38db221ef94b6cd0e73f5dfd743414a">operator=</a> (const <a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;)=delete</td></tr>
<tr class="memdesc:ad38db221ef94b6cd0e73f5dfd743414a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#ad38db221ef94b6cd0e73f5dfd743414a">More...</a><br /></td></tr>
<tr class="separator:ad38db221ef94b6cd0e73f5dfd743414a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae196752aa67bd2acb53c83b48f22dcce"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#ae196752aa67bd2acb53c83b48f22dcce">AccessWindowAutoPadding</a> (<a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ae196752aa67bd2acb53c83b48f22dcce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#ae196752aa67bd2acb53c83b48f22dcce">More...</a><br /></td></tr>
<tr class="separator:ae196752aa67bd2acb53c83b48f22dcce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bca6da5857d60a9565c60b483859208"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a4bca6da5857d60a9565c60b483859208">operator=</a> (<a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4bca6da5857d60a9565c60b483859208"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a4bca6da5857d60a9565c60b483859208">More...</a><br /></td></tr>
<tr class="separator:a4bca6da5857d60a9565c60b483859208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a129a10edb6f1ecc24810945981a7e50e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a129a10edb6f1ecc24810945981a7e50e">~AccessWindowAutoPadding</a> ()=default</td></tr>
<tr class="memdesc:a129a10edb6f1ecc24810945981a7e50e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a129a10edb6f1ecc24810945981a7e50e">More...</a><br /></td></tr>
<tr class="separator:a129a10edb6f1ecc24810945981a7e50e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f947a06cc9bc2896f3d0efc0201ac5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a7f947a06cc9bc2896f3d0efc0201ac5a">set_valid_region</a> ()</td></tr>
<tr class="memdesc:a7f947a06cc9bc2896f3d0efc0201ac5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the valid region to match the entire tensor.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a7f947a06cc9bc2896f3d0efc0201ac5a">More...</a><br /></td></tr>
<tr class="separator:a7f947a06cc9bc2896f3d0efc0201ac5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc85c53e80cef34eceff34c9100d116d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#afc85c53e80cef34eceff34c9100d116d">compute_valid_region</a> () const</td></tr>
<tr class="memdesc:afc85c53e80cef34eceff34c9100d116d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a valid region that spans across the entire tensor.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#afc85c53e80cef34eceff34c9100d116d">More...</a><br /></td></tr>
<tr class="separator:afc85c53e80cef34eceff34c9100d116d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad9fe991410dc3550f6c4fd6e87a708"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a7ad9fe991410dc3550f6c4fd6e87a708">update_window_if_needed</a> (<a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window) const override</td></tr>
<tr class="memdesc:a7ad9fe991410dc3550f6c4fd6e87a708"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shrink the window if padding is not large enough.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a7ad9fe991410dc3550f6c4fd6e87a708">More...</a><br /></td></tr>
<tr class="separator:a7ad9fe991410dc3550f6c4fd6e87a708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cb887416c766f20cbec0677b3c8e88"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#a69cb887416c766f20cbec0677b3c8e88">update_padding_if_needed</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window) override</td></tr>
<tr class="memdesc:a69cb887416c766f20cbec0677b3c8e88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increase the padding to be large enough for the window.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#a69cb887416c766f20cbec0677b3c8e88">More...</a><br /></td></tr>
<tr class="separator:a69cb887416c766f20cbec0677b3c8e88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae80edc371ba9f02d756aed720040878b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml#ae80edc371ba9f02d756aed720040878b">compute_valid_region</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, <a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> input_valid_region, bool border_undefined, <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a> border_size) const override</td></tr>
<tr class="memdesc:ae80edc371ba9f02d756aed720040878b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the valid region based on access pattern and valid region of the inputs.  <a href="classarm__compute_1_1_access_window_auto_padding.xhtml#ae80edc371ba9f02d756aed720040878b">More...</a><br /></td></tr>
<tr class="separator:ae80edc371ba9f02d756aed720040878b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_access_window"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_access_window')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_access_window.xhtml">IAccessWindow</a></td></tr>
<tr class="memitem:abc3996ab36cfa27811d661debfca5b5f inherit pub_methods_classarm__compute_1_1_i_access_window"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_access_window.xhtml#abc3996ab36cfa27811d661debfca5b5f">~IAccessWindow</a> ()=default</td></tr>
<tr class="memdesc:abc3996ab36cfa27811d661debfca5b5f inherit pub_methods_classarm__compute_1_1_i_access_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="classarm__compute_1_1_i_access_window.xhtml#abc3996ab36cfa27811d661debfca5b5f">More...</a><br /></td></tr>
<tr class="separator:abc3996ab36cfa27811d661debfca5b5f inherit pub_methods_classarm__compute_1_1_i_access_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Dummy access window. </p>
<p>This implementation always uses the auto padding of the tensor info and never updates the window. The valid region is always set to cover the entire tensor.</p>
<dl class="section note"><dt>Note</dt><dd>This access window is only used during the migration to the new padding system. It will be removed once all kernels have been ported. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_access_window_auto_padding_8h_source.xhtml">AccessWindowAutoPadding.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a55ae8ac3b55093b24fe30805828de164"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55ae8ac3b55093b24fe30805828de164">&#9670;&nbsp;</a></span>AccessWindowAutoPadding() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> info of the accessed kernel. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                                                  : _info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab876b2c3c41ed76c14c177c9373d320b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab876b2c3c41ed76c14c177c9373d320b">&#9670;&nbsp;</a></span>AccessWindowAutoPadding() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ae196752aa67bd2acb53c83b48f22dcce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae196752aa67bd2acb53c83b48f22dcce">&#9670;&nbsp;</a></span>AccessWindowAutoPadding() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<a id="a129a10edb6f1ecc24810945981a7e50e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a129a10edb6f1ecc24810945981a7e50e">&#9670;&nbsp;</a></span>~AccessWindowAutoPadding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afc85c53e80cef34eceff34c9100d116d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc85c53e80cef34eceff34c9100d116d">&#9670;&nbsp;</a></span>compute_valid_region() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> compute_valid_region </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a valid region that spans across the entire tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>a valid region. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (_info == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>{};</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>{<a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a>(), _info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()};</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00035">AccessWindowAutoPadding::compute_valid_region()</a>, and <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00058">AccessWindowAutoPadding::set_valid_region()</a>.</p>

</div>
</div>
<a id="ae80edc371ba9f02d756aed720040878b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae80edc371ba9f02d756aed720040878b">&#9670;&nbsp;</a></span>compute_valid_region() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> compute_valid_region </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a>&#160;</td>
          <td class="paramname"><em>input_valid_region</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>border_undefined</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td>
          <td class="paramname"><em>border_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compute the valid region based on access pattern and valid region of the inputs. </p>
<dl class="section note"><dt>Note</dt><dd>This method assumes that there is no border.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Execution window of the kernel. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input_valid_region</td><td>Combined valid region of all inputs. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_undefined</td><td>Undefined borders are excluded from the valid region. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">border_size</td><td>Size of the border around the XY-plane of the tensor.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a valid region. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_access_window.xhtml#ae2b4aabf2a14dce92e04c0eeb0ab73b9">IAccessWindow</a>.</p>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(window);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(input_valid_region);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(border_undefined);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(border_size);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_access_window_auto_padding.xhtml#afc85c53e80cef34eceff34c9100d116d">compute_valid_region</a>();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00048">AccessWindowAutoPadding::compute_valid_region()</a>.</p>

</div>
</div>
<a id="a4bca6da5857d60a9565c60b483859208"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bca6da5857d60a9565c60b483859208">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad38db221ef94b6cd0e73f5dfd743414a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad38db221ef94b6cd0e73f5dfd743414a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a7f947a06cc9bc2896f3d0efc0201ac5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f947a06cc9bc2896f3d0efc0201ac5a">&#9670;&nbsp;</a></span>set_valid_region()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_valid_region </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the valid region to match the entire tensor. </p>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (_info == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">set_valid_region</a>(<a class="code" href="classarm__compute_1_1_access_window_auto_padding.xhtml#afc85c53e80cef34eceff34c9100d116d">compute_valid_region</a>());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00048">AccessWindowAutoPadding::compute_valid_region()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">ITensorInfo::set_valid_region()</a>.</p>

</div>
</div>
<a id="a69cb887416c766f20cbec0677b3c8e88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69cb887416c766f20cbec0677b3c8e88">&#9670;&nbsp;</a></span>update_padding_if_needed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool update_padding_if_needed </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Increase the padding to be large enough for the window. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">Window</a> used by the kernel.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the padding has been changed. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_access_window.xhtml#a5a5f3d4d4461121db2e4e3b4d3ee587f">IAccessWindow</a>.</p>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(window);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Only update the padding if the tensor allows it</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span> (_info == <span class="keyword">nullptr</span> || !_info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">is_resizable</a>())</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// Update strides in tensor info</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> _info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">auto_padding</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">ITensorInfo::auto_padding()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">ITensorInfo::is_resizable()</a>.</p>

</div>
</div>
<a id="a7ad9fe991410dc3550f6c4fd6e87a708"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ad9fe991410dc3550f6c4fd6e87a708">&#9670;&nbsp;</a></span>update_window_if_needed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool update_window_if_needed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shrink the window if padding is not large enough. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td><a class="el" href="classarm__compute_1_1_window.xhtml" title="Describe a multidimensional execution window.">Window</a> used by the kernel.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the window has been changed. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_access_window.xhtml#a5b6940395e0168f3f00da892ded537aa">IAccessWindow</a>.</p>

<p class="definition">Definition at line <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(window);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/core/<a class="el" href="_access_window_auto_padding_8h_source.xhtml">AccessWindowAutoPadding.h</a></li>
<li>src/core/<a class="el" href="_access_window_auto_padding_8cpp_source.xhtml">AccessWindowAutoPadding.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_access_window_auto_padding_xhtml_afc85c53e80cef34eceff34c9100d116d"><div class="ttname"><a href="classarm__compute_1_1_access_window_auto_padding.xhtml#afc85c53e80cef34eceff34c9100d116d">arm_compute::AccessWindowAutoPadding::compute_valid_region</a></div><div class="ttdeci">ValidRegion compute_valid_region() const</div><div class="ttdoc">Return a valid region that spans across the entire tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_access_window_auto_padding_8cpp_source.xhtml#l00048">AccessWindowAutoPadding.cpp:48</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdoc">Container for valid region of a window.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00143">Types.h:143</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item.</div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_af555338f11d1d28f258f259ac3da743b"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#af555338f11d1d28f258f259ac3da743b">arm_compute::ITensorInfo::is_resizable</a></div><div class="ttdeci">virtual bool is_resizable() const =0</div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a9586081a29fceb532ab270bd843abee6"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">arm_compute::ITensorInfo::set_valid_region</a></div><div class="ttdeci">virtual void set_valid_region(const ValidRegion &amp;valid_region)=0</div><div class="ttdoc">Set the valid region of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a4f2d0ac983637a0459daf43bcd65cc38"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a4f2d0ac983637a0459daf43bcd65cc38">arm_compute::ITensorInfo::auto_padding</a></div><div class="ttdeci">virtual bool auto_padding()=0</div><div class="ttdoc">Update the offset to the first element and the strides to automatically computed values.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_access_window_auto_padding.xhtml">AccessWindowAutoPadding</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:06 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
