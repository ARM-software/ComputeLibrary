<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: WallClock&lt; output_timestamps &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">WallClock&lt; output_timestamps &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of an instrument to measure elapsed wall-clock time in milliseconds.  
 <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for WallClock&lt; output_timestamps &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1test_1_1framework_1_1_wall_clock__coll__graph.svg" width="254" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a588aae70464654b78c5527ced6a670e5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a588aae70464654b78c5527ced6a670e5">WallClock</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> scale_factor)</td></tr>
<tr class="memdesc:a588aae70464654b78c5527ced6a670e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a Wall clock timer.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a588aae70464654b78c5527ced6a670e5">More...</a><br /></td></tr>
<tr class="separator:a588aae70464654b78c5527ced6a670e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">id</a> () const override</td></tr>
<tr class="memdesc:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifier for the instrument.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a501ef37fef441a0a6a8ea8b8e30a7181">More...</a><br /></td></tr>
<tr class="separator:a501ef37fef441a0a6a8ea8b8e30a7181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</a> () override</td></tr>
<tr class="memdesc:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start measuring.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">More...</a><br /></td></tr>
<tr class="separator:a5d5d9ebd12cd3a7d268bc98a3fc7bf97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3536e22848ce87b16a9b96d6d824d45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">stop</a> () override</td></tr>
<tr class="memdesc:ab3536e22848ce87b16a9b96d6d824d45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop measuring.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#ab3536e22848ce87b16a9b96d6d824d45">More...</a><br /></td></tr>
<tr class="separator:ab3536e22848ce87b16a9b96d6d824d45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73cabccc9d4406bf48f1db033dc35005"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a> () const override</td></tr>
<tr class="memdesc:a73cabccc9d4406bf48f1db033dc35005"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the latest measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">More...</a><br /></td></tr>
<tr class="separator:a73cabccc9d4406bf48f1db033dc35005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a44dfdf6c9c53e1b5c5eddfc58c31dc54">Instrument</a> ()=default</td></tr>
<tr class="memdesc:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a44dfdf6c9c53e1b5c5eddfc58c31dc54">More...</a><br /></td></tr>
<tr class="separator:a44dfdf6c9c53e1b5c5eddfc58c31dc54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ac92db65cbe174915234b0d99b3ad4be7">Instrument</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;)=default</td></tr>
<tr class="memdesc:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copy constructed.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ac92db65cbe174915234b0d99b3ad4be7">More...</a><br /></td></tr>
<tr class="separator:ac92db65cbe174915234b0d99b3ad4be7 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#adda867124fd5c093788f96cb2eaf67cd">Instrument</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#adda867124fd5c093788f96cb2eaf67cd">More...</a><br /></td></tr>
<tr class="separator:adda867124fd5c093788f96cb2eaf67cd inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae4a6c66ea355204cca47490247b91f5f">operator=</a> (const <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;)=default</td></tr>
<tr class="memdesc:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be copied.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae4a6c66ea355204cca47490247b91f5f">More...</a><br /></td></tr>
<tr class="separator:ae4a6c66ea355204cca47490247b91f5f inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a550047da2682a06765be837ae570e542">operator=</a> (<a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a550047da2682a06765be837ae570e542">More...</a><br /></td></tr>
<tr class="separator:a550047da2682a06765be837ae570e542 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a7bd8541cf37e6c439d4a6bf7296437a2">~Instrument</a> ()=default</td></tr>
<tr class="memdesc:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a7bd8541cf37e6c439d4a6bf7296437a2">More...</a><br /></td></tr>
<tr class="separator:a7bd8541cf37e6c439d4a6bf7296437a2 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c51340d5301212438dd42cddd9b015 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a66c51340d5301212438dd42cddd9b015">test_start</a> ()</td></tr>
<tr class="memdesc:a66c51340d5301212438dd42cddd9b015 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start of the test.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a66c51340d5301212438dd42cddd9b015">More...</a><br /></td></tr>
<tr class="separator:a66c51340d5301212438dd42cddd9b015 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b0f69632f7d082aad3e0fceaf4f5b1 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a24b0f69632f7d082aad3e0fceaf4f5b1">test_stop</a> ()</td></tr>
<tr class="memdesc:a24b0f69632f7d082aad3e0fceaf4f5b1 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of the test.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a24b0f69632f7d082aad3e0fceaf4f5b1">More...</a><br /></td></tr>
<tr class="separator:a24b0f69632f7d082aad3e0fceaf4f5b1 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a4d3582d354eb3e9028f627624ad7e126">instrument_header</a> () const</td></tr>
<tr class="memdesc:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return JSON formatted instrument header string.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a4d3582d354eb3e9028f627624ad7e126">More...</a><br /></td></tr>
<tr class="separator:a4d3582d354eb3e9028f627624ad7e126 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab0f12a9ccff85982411599026baad54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#aab0f12a9ccff85982411599026baad54">test_measurements</a> () const</td></tr>
<tr class="memdesc:aab0f12a9ccff85982411599026baad54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the latest test measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#aab0f12a9ccff85982411599026baad54">More...</a><br /></td></tr>
<tr class="separator:aab0f12a9ccff85982411599026baad54 inherit pub_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> = std::map&lt; std::string, <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a> &gt;</td></tr>
<tr class="memdesc:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map of measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">More...</a><br /></td></tr>
<tr class="separator:afc7df496e6026b91c3f48da6821c86a9 inherit pub_types_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memitem:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memTemplParams" colspan="2">template&lt;typename T , ScaleFactor scale&gt; </td></tr>
<tr class="memitem:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memTemplItemLeft" align="right" valign="top">static std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a> &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ab6ac86ac15a8211221f1721d6a4ee889">make_instrument</a> ()</td></tr>
<tr class="memdesc:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to create an instrument of the given type.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ab6ac86ac15a8211221f1721d6a4ee889">More...</a><br /></td></tr>
<tr class="separator:ab6ac86ac15a8211221f1721d6a4ee889 inherit pub_static_methods_classarm__compute_1_1test_1_1framework_1_1_instrument"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;bool output_timestamps&gt;<br />
class arm_compute::test::framework::WallClock&lt; output_timestamps &gt;</h3>

<p>Implementation of an instrument to measure elapsed wall-clock time in milliseconds. </p>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a588aae70464654b78c5527ced6a670e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a588aae70464654b78c5527ced6a670e5">&#9670;&nbsp;</a></span>WallClock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a>&#160;</td>
          <td class="paramname"><em>scale_factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a Wall clock timer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scale_factor</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int.">Measurement</a> scale factor. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8h_source.xhtml#l00046">46</a> of file <a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">switch</span>(scale_factor)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>:</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                _scale_factor = 1.f;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                _unit         = <span class="stringliteral">&quot;us&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                _scale_factor = 1000.f;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                _unit         = <span class="stringliteral">&quot;ms&quot;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                _scale_factor = 1000000.f;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                _unit         = <span class="stringliteral">&quot;s&quot;</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid scale&quot;</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    };</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::NONE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::TIME_MS</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::TIME_S</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a501ef37fef441a0a6a8ea8b8e30a7181"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a501ef37fef441a0a6a8ea8b8e30a7181">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Identifier for the instrument. </p>

<p>Implements <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a93697d33dc9325ba180a9a2a8ade6937">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_wall_clock_timer_8cpp_source.xhtml">WallClockTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Wall clock timestamps&quot;</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;Wall clock&quot;</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a73cabccc9d4406bf48f1db033dc35005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73cabccc9d4406bf48f1db033dc35005">&#9670;&nbsp;</a></span>measurements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">Instrument::MeasurementsMap</a> measurements</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the latest measurements. </p>
<dl class="section return"><dt>Returns</dt><dd>the latest measurements. </dd></dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#af7d7a6fbea69e98b802398957a245488">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_wall_clock_timer_8cpp_source.xhtml">WallClockTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">MeasurementsMap</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">if</span>(output_timestamps)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[start]Wall clock time&quot;</span>, Measurement(_start / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[end]Wall clock time&quot;</span>, Measurement(_stop / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(_scale_factor), _unit));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[start]Wall clock time&quot;</span>, Measurement(_start.time_since_epoch().count() / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;[end]Wall clock time&quot;</span>, Measurement(_stop.time_since_epoch().count() / <span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">double</span> delta = _stop - _start;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;Wall clock time&quot;</span>, Measurement(delta / <span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(1000 * _scale_factor), _unit));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> delta = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(_stop - _start);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>.emplace(<span class="stringliteral">&quot;Wall clock time&quot;</span>, Measurement(delta.count() / _scale_factor, _unit));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">measurements</a>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5d5d9ebd12cd3a7d268bc98a3fc7bf97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d5d9ebd12cd3a7d268bc98a3fc7bf97">&#9670;&nbsp;</a></span>start()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void start</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start measuring. </p>
<p>Called just before the run of the test starts </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#a62b63bddf378b0e13a4affa3e8e1bedf">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="_wall_clock_timer_8cpp_source.xhtml">WallClockTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    uint64_t tmp;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    uint64_t <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    __asm __volatile(</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="stringliteral">&quot;mrs    %[tmp], pmcr_el0\n&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="stringliteral">&quot;orr    %[tmp], %[tmp], #1\n&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="stringliteral">&quot;msr    pmcr_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="stringliteral">&quot;mrs    %[tmp], pmcntenset_el0\n&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;orr    %[tmp], %[tmp], #1&lt;&lt;31\n&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;msr    pmcntenset_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="stringliteral">&quot;mrs    %[retval], pmccntr_el0\n&quot;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        : [tmp] <span class="stringliteral">&quot;=r&quot;</span>(tmp), [<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>] <span class="stringliteral">&quot;=r&quot;</span>(<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    _start = <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    _start = std::chrono::system_clock::now();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="check__header__guards_8py_source.xhtml#l00188">check_header_guards::retval</a>.</p>

</div>
</div>
<a id="ab3536e22848ce87b16a9b96d6d824d45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3536e22848ce87b16a9b96d6d824d45">&#9670;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void stop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop measuring. </p>
<p>Called just after the run of the test ends </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#ae92ae13a136435391be883fd6f0f5c8c">Instrument</a>.</p>

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_wall_clock_timer_8cpp_source.xhtml">WallClockTimer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#if defined(BARE_METAL)</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    uint64_t tmp;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    uint64_t <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    __asm __volatile(</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;mrs    %[retval], pmccntr_el0\n&quot;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="stringliteral">&quot;mov   %[tmp], #0x3f\n&quot;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="stringliteral">&quot;orr   %[tmp], %[tmp], #1&lt;&lt;31\n&quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="stringliteral">&quot;msr    pmcntenclr_el0, %[tmp]\n&quot;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        : [tmp] <span class="stringliteral">&quot;=r&quot;</span>(tmp), [<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>] <span class="stringliteral">&quot;=r&quot;</span>(<a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>));</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _stop = <a class="code" href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">retval</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#else  // !defined(BARE_METAL)</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _stop = std::chrono::system_clock::now();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#endif // defined(BARE_METAL)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="check__header__guards_8py_source.xhtml#l00188">check_header_guards::retval</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/framework/instruments/<a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a></li>
<li>tests/framework/instruments/<a class="el" href="_wall_clock_timer_8cpp_source.xhtml">WallClockTimer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::ScaleFactor::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::ScaleFactor::TIME_S</a></div><div class="ttdeci">@ TIME_S</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::ScaleFactor::TIME_MS</a></div><div class="ttdeci">@ TIME_MS</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_wall_clock_xhtml_a73cabccc9d4406bf48f1db033dc35005"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#a73cabccc9d4406bf48f1db033dc35005">arm_compute::test::framework::WallClock::measurements</a></div><div class="ttdeci">MeasurementsMap measurements() const override</div><div class="ttdoc">Return the latest measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00092">WallClockTimer.cpp:92</a></div></div>
<div class="ttc" id="anamespacecheck__header__guards_xhtml_a7f345697df7eb20c9aba1ab6980cae8f"><div class="ttname"><a href="namespacecheck__header__guards.xhtml#a7f345697df7eb20c9aba1ab6980cae8f">check_header_guards.retval</a></div><div class="ttdeci">int retval</div><div class="ttdef"><b>Definition:</b> <a href="check__header__guards_8py_source.xhtml#l00188">check_header_guards.py:188</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_instrument_xhtml_afc7df496e6026b91c3f48da6821c86a9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#afc7df496e6026b91c3f48da6821c86a9">arm_compute::test::framework::Instrument::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, Measurement &gt; MeasurementsMap</div><div class="ttdoc">Map of measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_instrument_8h_source.xhtml#l00109">Instrument.h:109</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:13 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
