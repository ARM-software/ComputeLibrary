<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: MMappedFile Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">MMappedFile Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> mapped file class.  
 <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_m_mapped_file_8h_source.xhtml">MMappedFile.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d9066a6c3a402044fcc0e5a25c09aa0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">MMappedFile</a> ()</td></tr>
<tr class="memdesc:a5d9066a6c3a402044fcc0e5a25c09aa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a5d9066a6c3a402044fcc0e5a25c09aa0">More...</a><br /></td></tr>
<tr class="separator:a5d9066a6c3a402044fcc0e5a25c09aa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3616a9b4f59739152c904d57117eb3a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3616a9b4f59739152c904d57117eb3a5">MMappedFile</a> (std::string filename, size_t size, size_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</td></tr>
<tr class="memdesc:a3616a9b4f59739152c904d57117eb3a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3616a9b4f59739152c904d57117eb3a5">More...</a><br /></td></tr>
<tr class="separator:a3616a9b4f59739152c904d57117eb3a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dcb9ad4d9d3220e157846dbd80383e8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a6dcb9ad4d9d3220e157846dbd80383e8">MMappedFile</a> (const <a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;)=delete</td></tr>
<tr class="memdesc:a6dcb9ad4d9d3220e157846dbd80383e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a6dcb9ad4d9d3220e157846dbd80383e8">More...</a><br /></td></tr>
<tr class="separator:a6dcb9ad4d9d3220e157846dbd80383e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e00f03be4604efcbd29a3d015f9411b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a7e00f03be4604efcbd29a3d015f9411b">MMappedFile</a> (<a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a7e00f03be4604efcbd29a3d015f9411b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a7e00f03be4604efcbd29a3d015f9411b">More...</a><br /></td></tr>
<tr class="separator:a7e00f03be4604efcbd29a3d015f9411b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd31bde3cb55f37c67f0564b099c24d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#acd31bde3cb55f37c67f0564b099c24d6">operator=</a> (const <a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;)=delete</td></tr>
<tr class="memdesc:acd31bde3cb55f37c67f0564b099c24d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#acd31bde3cb55f37c67f0564b099c24d6">More...</a><br /></td></tr>
<tr class="separator:acd31bde3cb55f37c67f0564b099c24d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67963eff4b87734fed49c4f2e358575d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a67963eff4b87734fed49c4f2e358575d">operator=</a> (<a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a67963eff4b87734fed49c4f2e358575d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a67963eff4b87734fed49c4f2e358575d">More...</a><br /></td></tr>
<tr class="separator:a67963eff4b87734fed49c4f2e358575d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24171f52905cbf7fc249879e53f8336"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#ae24171f52905cbf7fc249879e53f8336">~MMappedFile</a> ()</td></tr>
<tr class="memdesc:ae24171f52905cbf7fc249879e53f8336"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#ae24171f52905cbf7fc249879e53f8336">More...</a><br /></td></tr>
<tr class="separator:ae24171f52905cbf7fc249879e53f8336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad5bb96c065859f580e900c756f6af4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">map</a> (const std::string &amp;filename, size_t size, size_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>)</td></tr>
<tr class="memdesc:a8ad5bb96c065859f580e900c756f6af4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens and maps a file.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">More...</a><br /></td></tr>
<tr class="separator:a8ad5bb96c065859f580e900c756f6af4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23b477d0e2d399f75d585d154c346591"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">release</a> ()</td></tr>
<tr class="memdesc:a23b477d0e2d399f75d585d154c346591"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmaps and closes file.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">More...</a><br /></td></tr>
<tr class="separator:a23b477d0e2d399f75d585d154c346591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3884d6c46a68636a526bdfd8ab131895"><td class="memItemLeft" align="right" valign="top">unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895">data</a> ()</td></tr>
<tr class="memdesc:a3884d6c46a68636a526bdfd8ab131895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mapped data accessor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a3884d6c46a68636a526bdfd8ab131895">More...</a><br /></td></tr>
<tr class="separator:a3884d6c46a68636a526bdfd8ab131895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93276b635c9162e0716a14133af8cd2f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a93276b635c9162e0716a14133af8cd2f">file_size</a> () const</td></tr>
<tr class="memdesc:a93276b635c9162e0716a14133af8cd2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">File size accessor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a93276b635c9162e0716a14133af8cd2f">More...</a><br /></td></tr>
<tr class="separator:a93276b635c9162e0716a14133af8cd2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418ccdae42f326fedc717a8e307bc502"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a418ccdae42f326fedc717a8e307bc502">map_size</a> () const</td></tr>
<tr class="memdesc:a418ccdae42f326fedc717a8e307bc502"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map size accessor.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a418ccdae42f326fedc717a8e307bc502">More...</a><br /></td></tr>
<tr class="separator:a418ccdae42f326fedc717a8e307bc502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc866d28046d8f913929f105d1ff2fdf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">is_mapped</a> () const</td></tr>
<tr class="memdesc:abc866d28046d8f913929f105d1ff2fdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if file mapped.  <a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">More...</a><br /></td></tr>
<tr class="separator:abc866d28046d8f913929f105d1ff2fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> mapped file class. </p>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_m_mapped_file_8h_source.xhtml">MMappedFile.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5d9066a6c3a402044fcc0e5a25c09aa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9066a6c3a402044fcc0e5a25c09aa0">&#9670;&nbsp;</a></span>MMappedFile() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                         : _filename(), _file_size(0), _map_size(0), _map_offset(0), _fp(<span class="keyword">nullptr</span>), _data(<span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3616a9b4f59739152c904d57117eb3a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3616a9b4f59739152c904d57117eb3a5">&#9670;&nbsp;</a></span>MMappedFile() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>offset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="section note"><dt>Note</dt><dd>file will be created if it doesn't exist.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>File to be mapped, if doesn't exist will be created. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of file to map </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Offset to mapping point, should be multiple of page size </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    : _filename(std::move(filename)), _file_size(0), _map_size(size), _map_offset(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>), _fp(<span class="keyword">nullptr</span>), _data(<span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">map</a>(_filename, _map_size, _map_offset);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00090">MMappedFile::map()</a>.</p>

</div>
</div>
<a id="a6dcb9ad4d9d3220e157846dbd80383e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dcb9ad4d9d3220e157846dbd80383e8">&#9670;&nbsp;</a></span>MMappedFile() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a7e00f03be4604efcbd29a3d015f9411b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e00f03be4604efcbd29a3d015f9411b">&#9670;&nbsp;</a></span>MMappedFile() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="ae24171f52905cbf7fc249879e53f8336"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae24171f52905cbf7fc249879e53f8336">&#9670;&nbsp;</a></span>~MMappedFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">release</a>();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00146">MMappedFile::release()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3884d6c46a68636a526bdfd8ab131895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3884d6c46a68636a526bdfd8ab131895">&#9670;&nbsp;</a></span>data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char * data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mapped data accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the mapped data, nullptr if not mapped </dd></dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<span class="keyword">&gt;</span>(_data);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="tests_2validation_2_c_l_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00275">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a93276b635c9162e0716a14133af8cd2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93276b635c9162e0716a14133af8cd2f">&#9670;&nbsp;</a></span>file_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t file_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>File size accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Size of file </dd></dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> _file_size;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="abc866d28046d8f913929f105d1ff2fdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc866d28046d8f913929f105d1ff2fdf">&#9670;&nbsp;</a></span>is_mapped()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_mapped </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if file mapped. </p>
<dl class="section return"><dt>Returns</dt><dd>True if file is mapped else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> _data != <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00090">MMappedFile::map()</a>, and <a class="el" href="tests_2validation_2_c_l_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00275">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a8ad5bb96c065859f580e900c756f6af4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ad5bb96c065859f580e900c756f6af4">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool map </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>offset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Opens and maps a file. </p>
<dl class="section note"><dt>Note</dt><dd>file will be created if it doesn't exist.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>File to be mapped, if doesn't exist will be created. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of file to map. If 0 all the file will be mapped. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Offset to mapping point, should be multiple of page size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if operation was successful else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Check if file is mapped</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">is_mapped</a>())</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// Open file</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _fp = fopen(filename.c_str(), <span class="stringliteral">&quot;a+be&quot;</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (_fp == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// Extract file descriptor</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">int</span>  fd     = fileno(_fp);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">bool</span> status = fd &gt;= 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// Get file size</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        std::tie(_file_size, status) = get_file_size(_filename);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="comment">// Map all file from offset if map size is 0</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            _map_size   = (size == 0) ? _file_size : size;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            _map_offset = <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">// Check offset mapping</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">if</span> ((_map_offset &gt; _file_size) || (_map_offset % get_page_size() != 0))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                status = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="comment">// Truncate to file size</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordflow">if</span> (_map_offset + _map_size &gt; _file_size)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    _map_size = _file_size - _map_offset;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="comment">// Perform mapping</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                _data = ::mmap(<span class="keyword">nullptr</span>, _map_size, PROT_WRITE, MAP_SHARED, fd, _map_offset);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (!status)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        fclose(_fp);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00183">MMappedFile::is_mapped()</a>, and <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">offset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00079">MMappedFile::MMappedFile()</a>.</p>

</div>
</div>
<a id="a418ccdae42f326fedc717a8e307bc502"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a418ccdae42f326fedc717a8e307bc502">&#9670;&nbsp;</a></span>map_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t map_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Map size accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Mapping size </dd></dl>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> _map_size;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="acd31bde3cb55f37c67f0564b099c24d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd31bde3cb55f37c67f0564b099c24d6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a67963eff4b87734fed49c4f2e358575d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67963eff4b87734fed49c4f2e358575d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="a23b477d0e2d399f75d585d154c346591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23b477d0e2d399f75d585d154c346591">&#9670;&nbsp;</a></span>release()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void release </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unmaps and closes file. </p>

<p class="definition">Definition at line <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00146">146</a> of file <a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">// Unmap file</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (_data != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        ::munmap(_data, _file_size);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        _data = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// Close file</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">if</span> (_fp != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        fclose(_fp);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        _fp = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// Clear variables</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    _file_size  = 0;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    _map_size   = 0;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    _map_offset = 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_m_mapped_file_8cpp_source.xhtml#l00085">MMappedFile::~MMappedFile()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/utils/misc/<a class="el" href="_m_mapped_file_8h_source.xhtml">MMappedFile.h</a></li>
<li>src/core/utils/misc/<a class="el" href="_m_mapped_file_8cpp_source.xhtml">MMappedFile.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_abc866d28046d8f913929f105d1ff2fdf"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#abc866d28046d8f913929f105d1ff2fdf">arm_compute::utils::mmap_io::MMappedFile::is_mapped</a></div><div class="ttdeci">bool is_mapped() const</div><div class="ttdoc">Checks if file mapped.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00183">MMappedFile.cpp:183</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a8ad5bb96c065859f580e900c756f6af4"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a8ad5bb96c065859f580e900c756f6af4">arm_compute::utils::mmap_io::MMappedFile::map</a></div><div class="ttdeci">bool map(const std::string &amp;filename, size_t size, size_t offset)</div><div class="ttdoc">Opens and maps a file.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00090">MMappedFile.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file_xhtml_a23b477d0e2d399f75d585d154c346591"><div class="ttname"><a href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml#a23b477d0e2d399f75d585d154c346591">arm_compute::utils::mmap_io::MMappedFile::release</a></div><div class="ttdeci">void release()</div><div class="ttdoc">Unmaps and closes file.</div><div class="ttdef"><b>Definition:</b> <a href="_m_mapped_file_8cpp_source.xhtml#l00146">MMappedFile.cpp:146</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils.xhtml">utils</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils_1_1mmap__io.xhtml">mmap_io</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1utils_1_1mmap__io_1_1_m_mapped_file.xhtml">MMappedFile</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
