<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ExecutionTask Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1graph_1_1_execution_task.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">ExecutionTask Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Execution task.  
 <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_workload_8h_source.xhtml">Workload.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ExecutionTask:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structarm__compute_1_1graph_1_1_execution_task__coll__graph.svg" width="126" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa79ba1bb93be484a7022b836eafabd88"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#aa79ba1bb93be484a7022b836eafabd88">ExecutionTask</a> (std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt; &amp;&amp;f, <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *n)</td></tr>
<tr class="separator:aa79ba1bb93be484a7022b836eafabd88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb25be12a4800fe31bf8bad6807cb09a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#afb25be12a4800fe31bf8bad6807cb09a">ExecutionTask</a> (const <a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;)=delete</td></tr>
<tr class="memdesc:afb25be12a4800fe31bf8bad6807cb09a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#afb25be12a4800fe31bf8bad6807cb09a">More...</a><br /></td></tr>
<tr class="separator:afb25be12a4800fe31bf8bad6807cb09a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af739e81f8924273bdb1a60f841be8400"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#af739e81f8924273bdb1a60f841be8400">operator=</a> (const <a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;)=delete</td></tr>
<tr class="memdesc:af739e81f8924273bdb1a60f841be8400"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#af739e81f8924273bdb1a60f841be8400">More...</a><br /></td></tr>
<tr class="separator:af739e81f8924273bdb1a60f841be8400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d6290d4ca3fe3eb67c41f5ebc9fc3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#aa7d6290d4ca3fe3eb67c41f5ebc9fc3e">ExecutionTask</a> (<a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&amp;) noexcept=default</td></tr>
<tr class="memdesc:aa7d6290d4ca3fe3eb67c41f5ebc9fc3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Move Constructor.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#aa7d6290d4ca3fe3eb67c41f5ebc9fc3e">More...</a><br /></td></tr>
<tr class="separator:aa7d6290d4ca3fe3eb67c41f5ebc9fc3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9df05c39bf73acfe0037ae02429ae72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#ad9df05c39bf73acfe0037ae02429ae72">operator=</a> (<a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&amp;) noexcept=default</td></tr>
<tr class="memdesc:ad9df05c39bf73acfe0037ae02429ae72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#ad9df05c39bf73acfe0037ae02429ae72">More...</a><br /></td></tr>
<tr class="separator:ad9df05c39bf73acfe0037ae02429ae72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e67e3e10804eb3572c79b9accb62f02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a9e67e3e10804eb3572c79b9accb62f02">~ExecutionTask</a> ()=default</td></tr>
<tr class="memdesc:a9e67e3e10804eb3572c79b9accb62f02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a9e67e3e10804eb3572c79b9accb62f02">More...</a><br /></td></tr>
<tr class="separator:a9e67e3e10804eb3572c79b9accb62f02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ccbdeb5350ba8528eab7e4cc49fc68b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a5ccbdeb5350ba8528eab7e4cc49fc68b">operator()</a> ()</td></tr>
<tr class="memdesc:a5ccbdeb5350ba8528eab7e4cc49fc68b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function operator.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a5ccbdeb5350ba8528eab7e4cc49fc68b">More...</a><br /></td></tr>
<tr class="separator:a5ccbdeb5350ba8528eab7e4cc49fc68b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1825b40ca3bc3a1ba67fdb58fac5015c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a1825b40ca3bc3a1ba67fdb58fac5015c">prepare</a> ()</td></tr>
<tr class="memdesc:a1825b40ca3bc3a1ba67fdb58fac5015c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare execution task.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a1825b40ca3bc3a1ba67fdb58fac5015c">More...</a><br /></td></tr>
<tr class="separator:a1825b40ca3bc3a1ba67fdb58fac5015c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:adb326630f97b4977df92f1e5ecf0db14"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">task</a> = {}</td></tr>
<tr class="memdesc:adb326630f97b4977df92f1e5ecf0db14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Task to execute.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">More...</a><br /></td></tr>
<tr class="separator:adb326630f97b4977df92f1e5ecf0db14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a320fd40947b71565b239ec2bda243760"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a320fd40947b71565b239ec2bda243760">node</a> = {}</td></tr>
<tr class="memdesc:a320fd40947b71565b239ec2bda243760"><td class="mdescLeft">&#160;</td><td class="mdescRight">Node bound to this workload.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a320fd40947b71565b239ec2bda243760">More...</a><br /></td></tr>
<tr class="separator:a320fd40947b71565b239ec2bda243760"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Execution task. </p>
<p>Contains all the information required to execute a given task </p>

<p class="definition">Definition at line <a class="el" href="_workload_8h_source.xhtml#l00070">70</a> of file <a class="el" href="_workload_8h_source.xhtml">Workload.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa79ba1bb93be484a7022b836eafabd88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa79ba1bb93be484a7022b836eafabd88">&#9670;&nbsp;</a></span>ExecutionTask() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a> &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_8h_source.xhtml#l00072">72</a> of file <a class="el" href="_workload_8h_source.xhtml">Workload.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                                     : <a class="code" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">task</a>(std::move(f)), <a class="code" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a320fd40947b71565b239ec2bda243760">node</a>(n)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="afb25be12a4800fe31bf8bad6807cb09a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb25be12a4800fe31bf8bad6807cb09a">&#9670;&nbsp;</a></span>ExecutionTask() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="aa7d6290d4ca3fe3eb67c41f5ebc9fc3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7d6290d4ca3fe3eb67c41f5ebc9fc3e">&#9670;&nbsp;</a></span>ExecutionTask() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Move Constructor. </p>

</div>
</div>
<a id="a9e67e3e10804eb3572c79b9accb62f02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e67e3e10804eb3572c79b9accb62f02">&#9670;&nbsp;</a></span>~ExecutionTask()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5ccbdeb5350ba8528eab7e4cc49fc68b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ccbdeb5350ba8528eab7e4cc49fc68b">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function operator. </p>

<p class="definition">Definition at line <a class="el" href="_workload_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_workload_8cpp_source.xhtml">Workload.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">TaskExecutor::get</a>().<a class="code" href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">execute_function</a>(*<span class="keyword">this</span>);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_workload_8h_source.xhtml#l00063">TaskExecutor::execute_function</a>, and <a class="el" href="_workload_8cpp_source.xhtml#l00074">TaskExecutor::get()</a>.</p>

</div>
</div>
<a id="af739e81f8924273bdb1a60f841be8400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af739e81f8924273bdb1a60f841be8400">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="ad9df05c39bf73acfe0037ae02429ae72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9df05c39bf73acfe0037ae02429ae72">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="a1825b40ca3bc3a1ba67fdb58fac5015c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1825b40ca3bc3a1ba67fdb58fac5015c">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepare execution task. </p>

<p class="definition">Definition at line <a class="el" href="_workload_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_workload_8cpp_source.xhtml">Workload.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">task</a>)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">task</a>-&gt;prepare();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_workload_8h_source.xhtml#l00086">ExecutionTask::task</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a320fd40947b71565b239ec2bda243760"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a320fd40947b71565b239ec2bda243760">&#9670;&nbsp;</a></span>node</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a>* node = {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Node bound to this workload. </p>

<p class="definition">Definition at line <a class="el" href="_workload_8h_source.xhtml#l00087">87</a> of file <a class="el" href="_workload_8h_source.xhtml">Workload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_workload_8cpp_source.xhtml#l00041">arm_compute::graph::execute_task()</a>.</p>

</div>
</div>
<a id="adb326630f97b4977df92f1e5ecf0db14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb326630f97b4977df92f1e5ecf0db14">&#9670;&nbsp;</a></span>task</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_i_function.xhtml">arm_compute::IFunction</a>&gt; task = {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Task to execute. </p>

<p class="definition">Definition at line <a class="el" href="_workload_8h_source.xhtml#l00086">86</a> of file <a class="el" href="_workload_8h_source.xhtml">Workload.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_workload_8cpp_source.xhtml#l00041">arm_compute::graph::execute_task()</a>, and <a class="el" href="_workload_8cpp_source.xhtml#l00062">ExecutionTask::prepare()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>arm_compute/graph/<a class="el" href="_workload_8h_source.xhtml">Workload.h</a></li>
<li>src/graph/<a class="el" href="_workload_8cpp_source.xhtml">Workload.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1graph_1_1_execution_task_xhtml_a320fd40947b71565b239ec2bda243760"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#a320fd40947b71565b239ec2bda243760">arm_compute::graph::ExecutionTask::node</a></div><div class="ttdeci">INode * node</div><div class="ttdoc">Node bound to this workload.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8h_source.xhtml#l00087">Workload.h:87</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_task_executor_xhtml_a8814816f2d2940dbbc2817277eff42db"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_task_executor.xhtml#a8814816f2d2940dbbc2817277eff42db">arm_compute::graph::TaskExecutor::get</a></div><div class="ttdeci">static TaskExecutor &amp; get()</div><div class="ttdoc">Task executor accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8cpp_source.xhtml#l00074">Workload.cpp:74</a></div></div>
<div class="ttc" id="astructarm__compute_1_1graph_1_1_execution_task_xhtml_adb326630f97b4977df92f1e5ecf0db14"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#adb326630f97b4977df92f1e5ecf0db14">arm_compute::graph::ExecutionTask::task</a></div><div class="ttdeci">std::unique_ptr&lt; arm_compute::IFunction &gt; task</div><div class="ttdoc">Task to execute.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8h_source.xhtml#l00086">Workload.h:86</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_task_executor_xhtml_af356b3757a26ca474239624e161fb49c"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_task_executor.xhtml#af356b3757a26ca474239624e161fb49c">arm_compute::graph::TaskExecutor::execute_function</a></div><div class="ttdeci">std::function&lt; decltype(execute_task)&gt; execute_function</div><div class="ttdoc">Function that is responsible for executing tasks.</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8h_source.xhtml#l00063">Workload.h:63</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
