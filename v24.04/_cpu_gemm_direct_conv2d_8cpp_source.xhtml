<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/operators/CpuGemmDirectConv2d.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_gemm_direct_conv2d_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuGemmDirectConv2d.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_gemm_direct_conv2d_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_gemm_direct_conv2d_8h.xhtml">src/cpu/operators/CpuGemmDirectConv2d.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">arm_compute/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_function_descriptors_8h.xhtml">arm_compute/runtime/FunctionDescriptors.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_helpers_8h.xhtml">src/core/helpers/MemoryHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_aux_tensor_handler_8h.xhtml">src/cpu/utils/CpuAuxTensorHandler.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;GEMMLowpOutputStageInfo calculate_output_stage_metadata(<span class="keyword">const</span> ITensorInfo         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                        <span class="keyword">const</span> ITensorInfo         *weights,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                        <span class="keyword">const</span> ITensorInfo         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                                        <span class="keyword">const</span> ActivationLayerInfo &amp;act)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Since we need negative offsets for computing convolution, we need to change QuantizationInfo()</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// Extract and negate input and weights offset</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> QuantizationInfo        iqinfo    = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;quantization_info();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> QuantizationInfo        wqinfo    = weights-&gt;quantization_info();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">const</span> QuantizationInfo        oqinfo    = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;total_size() == 0) ? iqinfo : <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;quantization_info();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> UniformQuantizationInfo uoqinfo   = oqinfo.uniform();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Merge activation with output stage</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> std::set&lt;ActivationLayerInfo::ActivationFunction&gt; supported_acts = {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        ActivationLayerInfo::ActivationFunction::RELU, ActivationLayerInfo::ActivationFunction::BOUNDED_RELU,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU};</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    PixelValue type_min{};</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    PixelValue type_max{};</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::tie(type_min, type_max) = <a class="code" href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">get_min_max</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    int32_t min_activation       = type_min.get&lt;int32_t&gt;();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    int32_t max_activation       = type_max.get&lt;int32_t&gt;();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span> (supported_acts.count(act.activation()) != 0)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        std::tie(min_activation, max_activation) = <a class="code" href="namespacearm__compute.xhtml#a549f4d59cb7f823d884ffe2424079c3a">get_quantized_activation_min_max</a>(act, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, uoqinfo);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    GEMMLowpOutputStageInfo os_info;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    os_info.type                     = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    os_info.gemmlowp_offset          = uoqinfo.offset;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    os_info.gemmlowp_min_bound       = min_activation;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    os_info.gemmlowp_max_bound       = max_activation;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    os_info.is_quantized_per_channel = (weights-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">DataType::QSYMM8_PER_CHANNEL</a>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearm__compute_1_1quantization.xhtml#a7c9cea57b791676637d2fda3637d340e">quantization::calculate_quantized_multipliers</a>(iqinfo, wqinfo, oqinfo, os_info);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> os_info;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;cpu::AsmGemmInfo init_assembly_metadata(<span class="keyword">const</span> Conv2dInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <span class="keywordtype">bool</span> is_indirect)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    cpu::AsmGemmInfo asm_info;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    asm_info.method                  = is_indirect ? <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c">cpu::AsmConvMethod::Indirect</a> : <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef">cpu::AsmConvMethod::Conv</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    asm_info.ps_info                 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.conv_info;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    asm_info.activation_info         = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.act_info;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    asm_info.depth_output_gemm3d     = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    asm_info.reinterpret_input_as_3d = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    asm_info.padding_top             = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.conv_info.pad_top();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    asm_info.padding_left            = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.conv_info.pad_left();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    asm_info.padding_value           = 0.f;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    asm_info.negated_offsets         = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    asm_info.fast_mode               = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.enable_fast_math;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    asm_info.fixed_format            = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.weights_info.weight_format() != <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">WeightFormat::UNSPECIFIED</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    asm_info.weight_format           = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.weights_info.weight_format();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> asm_info;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aab2f68839ffb051e38241f4797b98178">   99</a></span>&#160;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aab2f68839ffb051e38241f4797b98178">CpuGemmDirectConv2d::CpuGemmDirectConv2d</a>()</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    : _gemm_asm_func(std::make_unique&lt;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">CpuGemmAssemblyDispatch</a>&gt;()),</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      _activation_func(std::make_unique&lt;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml">CpuActivation</a>&gt;()),</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      _weights_permute_func(std::make_unique&lt;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_permute.xhtml">CpuPermute</a>&gt;()),</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      _aux_mem(AuxTensorIdx::Count),</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      _perm_weights(),</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      _run_activation(false),</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      _is_prepared(false)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9252d17c9826ac4352a3ddc37c0698f7">CpuGemmDirectConv2d::~CpuGemmDirectConv2d</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#abdd92cfce6dbd149ccde40bca419bdde">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#abdd92cfce6dbd149ccde40bca419bdde">CpuGemmDirectConv2d::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a>  &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9ee9700ccd3e6f11a81eb44e30eb1375">CpuGemmDirectConv2d::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases != <span class="keyword">nullptr</span> ? biases : <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    _run_activation = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.act_info.enabled() &amp;&amp; !_gemm_asm_func-&gt;is_activation_supported(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.act_info);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    _is_prepared    = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    _weights_permute_func-&gt;configure(weights, &amp;_perm_weights, <a class="code" href="classarm__compute_1_1_strides.xhtml">PermutationVector</a>{3, 0, 1, 2});</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// Configure assembly dispatch</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">cpu::AsmGemmInfo</a> asm_info = init_assembly_metadata(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type()))</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        asm_info.<a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">output_stage</a> = calculate_output_stage_metadata(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.act_info);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    _gemm_asm_func-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, &amp;_perm_weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, asm_info);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// Configure activation</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> (_run_activation)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        _activation_func-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">nullptr</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.act_info);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Add auxiliary memory requirements of the assembly dispatch</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> asm_mem_req = _gemm_asm_func-&gt;workspace();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> slot = 0; slot &lt; asm_mem_req.size(); ++slot)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        _aux_mem[slot] = asm_mem_req[slot];</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (_aux_mem[Pretranspose].size &gt; 0)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="comment">// Release permuted weights at the of prepare as they are further transposed by the assembly dispatch</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        _aux_mem[PermutedWeights] =</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedWeights), <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">MemoryLifetime::Prepare</a>, weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>());</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment">// We must permute weights if they are WeightFormat::UNSPECIFIED</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.weights_info.weight_format() == <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">WeightFormat::UNSPECIFIED</a>)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            _aux_mem[PermutedWeights] =</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <a class="code" href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">MemoryInfo</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedWeights), MemoryLifetime::Persistent, weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9ee9700ccd3e6f11a81eb44e30eb1375">  163</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9ee9700ccd3e6f11a81eb44e30eb1375">CpuGemmDirectConv2d::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_conv2d_info.xhtml">Conv2dInfo</a>  &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>,</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(weights, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>,</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">DataType::QSYMM8_PER_CHANNEL</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                                         <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="namespacearm__compute.xhtml#a10608f5b5910df56c8dd68f687bc5c54">is_fixed_format</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.weights_info.weight_format()))</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.num_groups &gt; 1, <span class="stringliteral">&quot;Grouping (num_groups != 1) is not supported on Neon&quot;</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_layout() != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>, <span class="stringliteral">&quot;Data layout supported is NHWC&quot;</span>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;data_type();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> i_shape   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> w_shape   = weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(w_shape[0] != i_shape[0]);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.dilation != <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &gt; 4);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">// Validate biases</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">is_data_type_quantized_asymmetric</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>))</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(biases, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(biases, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, biases);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(biases-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3));</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(biases-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() &gt; 1);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">cpu::AsmGemmInfo</a> asm_info = init_assembly_metadata(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">cpu::CpuGemmAssemblyDispatch::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, biases, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, asm_info));</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">  210</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmDirectConv2d::run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(tensors);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    _gemm_asm_func-&gt;run(tensors);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">if</span> (_run_activation)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>    *io = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>{{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, io}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, io}};</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        _activation_func-&gt;run(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">  223</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuGemmDirectConv2d::prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;{</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordflow">if</span> (!_is_prepared)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="comment">// If we are using fixed-format kernel the weights are already reshaped</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">if</span> (_gemm_asm_func &amp;&amp; _gemm_asm_func-&gt;isVarWeightsKernel())</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            _gemm_asm_func-&gt;prepare(tensors);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *weights = tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">get_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>       *weights_aux =</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            utils::cast::polymorphic_cast&lt;ITensor *&gt;(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">offset_int_vec</a>(PermutedWeights)));</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(weights, weights_aux);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">CpuAuxTensorHandler</a> permuted_weights(_perm_weights, *weights_aux);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a>         permute_tensors{{<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">ACL_SRC</a>, weights}, {<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">ACL_DST</a>, permuted_weights.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>()}};</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        _weights_permute_func-&gt;run(permute_tensors);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, permuted_weights.<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">get</a>());</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">// Call prepare of assembly dispatch</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        _gemm_asm_func-&gt;prepare(tensors);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">  251</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmDirectConv2d::workspace</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">return</span> _aux_mem;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a34f500e941c4df30b870126ec868ebd5">arm_compute::DataType::QSYMM8_PER_CHANNEL</a></div><div class="ttdeci">@ QSYMM8_PER_CHANNEL</div><div class="ttdoc">quantized, symmetric per channel fixed-point 8-bit number</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">arm_compute::cpu::CpuAuxTensorHandler</a></div><div class="ttdoc">Tensor handler to wrap and handle tensor allocations on workspace buffers.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_aux_tensor_handler_8h_source.xhtml#l00078">CpuAuxTensorHandler.h:78</a></div></div>
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00123">Types.h:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">arm_compute::DataType::BFLOAT16</a></div><div class="ttdeci">@ BFLOAT16</div><div class="ttdoc">16-bit brain floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="a_function_descriptors_8h_xhtml"><div class="ttname"><a href="_function_descriptors_8h.xhtml">FunctionDescriptors.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div><div class="ttdoc">Num samples, height, width, channels.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="a_cpu_gemm_direct_conv2d_8h_xhtml"><div class="ttname"><a href="_cpu_gemm_direct_conv2d_8h.xhtml">CpuGemmDirectConv2d.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a549f4d59cb7f823d884ffe2424079c3a"><div class="ttname"><a href="namespacearm__compute.xhtml#a549f4d59cb7f823d884ffe2424079c3a">arm_compute::get_quantized_activation_min_max</a></div><div class="ttdeci">std::pair&lt; int32_t, int32_t &gt; get_quantized_activation_min_max(const ActivationLayerInfo &amp;act_info, DataType data_type, UniformQuantizationInfo oq_info)</div><div class="ttdoc">Returns a pair of minimum and maximum values for a quantized activation.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00442">Utils.cpp:442</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">arm_compute::cpu::AsmGemmInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00044">CpuGemmAssemblyDispatch.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack.cpp:63</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83af8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::MemoryLifetime::Prepare</a></div><div class="ttdeci">@ Prepare</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler_xhtml_a07a5753fe338458e235f3107133299b6"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml#a07a5753fe338458e235f3107133299b6">arm_compute::cpu::CpuAuxTensorHandler::get</a></div><div class="ttdeci">ITensor * get()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_aux_tensor_handler_8h_source.xhtml#l00171">CpuAuxTensorHandler.h:171</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_aa23dcee239e241566abce6dfceac704d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#aa23dcee239e241566abce6dfceac704d">arm_compute::ITensorPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(int id, const ITensor *tensor)</div><div class="ttdoc">Add const tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00048">ITensorPack.cpp:48</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00677">Validate.h:677</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00952">Validate.h:952</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_conv2d_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_conv2d_info.xhtml">arm_compute::Conv2dInfo</a></div><div class="ttdoc">Descriptor used by the 2d Convolution function.</div><div class="ttdef"><b>Definition:</b> <a href="_function_descriptors_8h_source.xhtml#l00057">FunctionDescriptors.h:57</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:38</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="astructarm__compute_1_1experimental_1_1_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1_memory_info.xhtml">arm_compute::experimental::MemoryInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00091">Types.h:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_a9ee9700ccd3e6f11a81eb44e30eb1375"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9ee9700ccd3e6f11a81eb44e30eb1375">arm_compute::cpu::CpuGemmDirectConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const Conv2dInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CpuGemmDirectConv2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00163">CpuGemmDirectConv2d.cpp:163</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1quantization_xhtml_a7c9cea57b791676637d2fda3637d340e"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#a7c9cea57b791676637d2fda3637d340e">arm_compute::quantization::calculate_quantized_multipliers</a></div><div class="ttdeci">Status calculate_quantized_multipliers(const QuantizationInfo &amp;iq_info, const QuantizationInfo &amp;wq_info, const QuantizationInfo &amp;oq_info, GEMMLowpOutputStageInfo &amp;stage_info)</div><div class="ttdoc">Calculate quantized representation of per-channel multipliers.</div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00117">AsymmHelpers.cpp:117</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a000c70e9839ed364ab7343de880a4d35"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a000c70e9839ed364ab7343de880a4d35">arm_compute::ITensorPack::get_const_tensor</a></div><div class="ttdeci">const ITensor * get_const_tensor(int id) const</div><div class="ttdoc">Get constant tensor of a given id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00053">ITensorPack.cpp:53</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00298">Error.h:298</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::cpu::CpuGemmDirectConv2d::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00210">CpuGemmDirectConv2d.cpp:210</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a></div><div class="ttdef"><b>Definition:</b> <a href="_cast_8h_source.xhtml#l00033">Cast.h:33</a></div></div>
<div class="ttc" id="a_cpu_aux_tensor_handler_8h_xhtml"><div class="ttname"><a href="_cpu_aux_tensor_handler_8h.xhtml">CpuAuxTensorHandler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">arm_compute::cpu::CpuGemmAssemblyDispatch</a></div><div class="ttdoc">Assembly kernel glue.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00071">CpuGemmAssemblyDispatch.h:71</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_abdb9168800c70e5e2c4c020a3b905738"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00625">Validate.h:625</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a10608f5b5910df56c8dd68f687bc5c54"><div class="ttname"><a href="namespacearm__compute.xhtml#a10608f5b5910df56c8dd68f687bc5c54">arm_compute::is_fixed_format</a></div><div class="ttdeci">bool is_fixed_format(const WeightFormat &amp;wf)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01660">Types.h:1660</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_aab2f68839ffb051e38241f4797b98178"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aab2f68839ffb051e38241f4797b98178">arm_compute::cpu::CpuGemmDirectConv2d::CpuGemmDirectConv2d</a></div><div class="ttdeci">CpuGemmDirectConv2d()</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00099">CpuGemmDirectConv2d.cpp:99</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a></div><div class="ttdeci">@ UNSPECIFIED</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00222">Cast.cpp:222</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2quantization_2_asymm_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2quantization_2_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c">arm_compute::cpu::AsmConvMethod::Indirect</a></div><div class="ttdeci">@ Indirect</div></div>
<div class="ttc" id="a_memory_helpers_8h_xhtml"><div class="ttname"><a href="_memory_helpers_8h.xhtml">MemoryHelpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml">arm_compute::experimental</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00083">Types.h:83</a></div></div>
<div class="ttc" id="a_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a324d709e8fb5568ada56ba4999dfb2f1"><div class="ttname"><a href="namespacearm__compute.xhtml#a324d709e8fb5568ada56ba4999dfb2f1">arm_compute::offset_int_vec</a></div><div class="ttdeci">int offset_int_vec(int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_memory_helpers_8h_source.xhtml#l00038">MemoryHelpers.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::cpu::CpuGemmDirectConv2d::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00223">CpuGemmDirectConv2d.cpp:223</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_permute_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_permute.xhtml">arm_compute::cpu::CpuPermute</a></div><div class="ttdoc">Basic function to run kernels::CpuPermuteKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_permute_8h_source.xhtml#l00034">CpuPermute.h:34</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00245">Error.h:245</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a14f46283f316e7f0fad301d5c1507e9f"><div class="ttname"><a href="namespacearm__compute.xhtml#a14f46283f316e7f0fad301d5c1507e9f">arm_compute::is_data_type_quantized_asymmetric</a></div><div class="ttdeci">bool is_data_type_quantized_asymmetric(DataType dt)</div><div class="ttdoc">Check if a given data type is of asymmetric quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00346">DataTypeUtils.h:346</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00161">Validate.h:161</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef">arm_compute::cpu::AsmConvMethod::Conv</a></div><div class="ttdeci">@ Conv</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_a9252d17c9826ac4352a3ddc37c0698f7"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a9252d17c9826ac4352a3ddc37c0698f7">arm_compute::cpu::CpuGemmDirectConv2d::~CpuGemmDirectConv2d</a></div><div class="ttdeci">~CpuGemmDirectConv2d()</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae69217acf0f0b5d4de030a09ad50a0bc"><div class="ttname"><a href="namespacearm__compute.xhtml#ae69217acf0f0b5d4de030a09ad50a0bc">arm_compute::get_min_max</a></div><div class="ttdeci">std::tuple&lt; PixelValue, PixelValue &gt; get_min_max(DataType dt)</div><div class="ttdoc">Compute the mininum and maximum values a data type can take.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00195">DataTypeUtils.h:195</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_activation_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_activation.xhtml">arm_compute::cpu::CpuActivation</a></div><div class="ttdoc">Basic function to run kernels::CpuActivationKernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_activation_8h_source.xhtml#l00036">CpuActivation.h:36</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a65360a0526d791c7a9ff52a36fa059a8"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">arm_compute::cpu::AsmGemmInfo::output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo output_stage</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00049">CpuGemmAssemblyDispatch.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_a74ae0d6e96f38fecd38471431786b870"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">arm_compute::cpu::CpuGemmDirectConv2d::workspace</a></div><div class="ttdeci">experimental::MemoryRequirements workspace() const override</div><div class="ttdoc">Return the memory requirements required by the workspace.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00251">CpuGemmDirectConv2d.cpp:251</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_ad1ae76c1f4f99aca4e9678c1322497e5"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">arm_compute::cpu::CpuGemmAssemblyDispatch::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, const AsmGemmInfo &amp;info)</div><div class="ttdoc">Indicates whether or not this function can be used to process the given parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00982">CpuGemmAssemblyDispatch.cpp:982</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00035">Log.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdeci">@ QUANTIZE_DOWN_FIXEDPOINT</div><div class="ttdoc">Quantize using a fixed point multiplication.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes.</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d_xhtml_abdd92cfce6dbd149ccde40bca419bdde"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#abdd92cfce6dbd149ccde40bca419bdde">arm_compute::cpu::CpuGemmDirectConv2d::configure</a></div><div class="ttdeci">void configure(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, ITensorInfo *dst, const Conv2dInfo &amp;info)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00112">CpuGemmDirectConv2d.cpp:112</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:83</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank)</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_e639157fd988cab7c102f16994a5c7d6.xhtml">operators</a></li><li class="navelem"><a class="el" href="_cpu_gemm_direct_conv2d_8cpp.xhtml">CpuGemmDirectConv2d.cpp</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:53:58 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
