<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuKernelComponentGraph Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuKernelComponentGraph Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A multi-input (tensors), multi-output (tensors) acyclic directed graph of gpu kernel components Its main purposes are:  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml">GpuKernelComponentGraph.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8dc3248f579f653c5157c948c2020b0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a8dc3248f579f653c5157c948c2020b0b">GpuKernelComponentGraph</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> *context, <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">GpuComponentServices</a> *services)</td></tr>
<tr class="memdesc:a8dc3248f579f653c5157c948c2020b0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a8dc3248f579f653c5157c948c2020b0b">More...</a><br /></td></tr>
<tr class="separator:a8dc3248f579f653c5157c948c2020b0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7200f0686035fbe384042e449a680a51"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a7200f0686035fbe384042e449a680a51">GpuKernelComponentGraph</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;graph)=delete</td></tr>
<tr class="memdesc:a7200f0686035fbe384042e449a680a51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a7200f0686035fbe384042e449a680a51">More...</a><br /></td></tr>
<tr class="separator:a7200f0686035fbe384042e449a680a51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5725bb34311ee38aecd2374fb61dfe43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a5725bb34311ee38aecd2374fb61dfe43">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;graph)=delete</td></tr>
<tr class="memdesc:a5725bb34311ee38aecd2374fb61dfe43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a5725bb34311ee38aecd2374fb61dfe43">More...</a><br /></td></tr>
<tr class="separator:a5725bb34311ee38aecd2374fb61dfe43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3111367306ce732f6ba99c65930530"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a3f3111367306ce732f6ba99c65930530">GpuKernelComponentGraph</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&amp;graph)=default</td></tr>
<tr class="memdesc:a3f3111367306ce732f6ba99c65930530"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a3f3111367306ce732f6ba99c65930530">More...</a><br /></td></tr>
<tr class="separator:a3f3111367306ce732f6ba99c65930530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a837165eb4f56e0b0caf8064fede5a323"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a837165eb4f56e0b0caf8064fede5a323">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&amp;graph)=default</td></tr>
<tr class="memdesc:a837165eb4f56e0b0caf8064fede5a323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a837165eb4f56e0b0caf8064fede5a323">More...</a><br /></td></tr>
<tr class="separator:a837165eb4f56e0b0caf8064fede5a323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e17c79d46cf5b9ddf601d72d2bac54b"><td class="memTemplParams" colspan="2">template&lt;typename T , typename... Args&gt; </td></tr>
<tr class="memitem:a9e17c79d46cf5b9ddf601d72d2bac54b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a9e17c79d46cf5b9ddf601d72d2bac54b">add_new_component</a> (Args &amp;&amp;...args)</td></tr>
<tr class="memdesc:a9e17c79d46cf5b9ddf601d72d2bac54b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new component and add it to the component graph Component id is automatically allocated.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a9e17c79d46cf5b9ddf601d72d2bac54b">More...</a><br /></td></tr>
<tr class="separator:a9e17c79d46cf5b9ddf601d72d2bac54b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e5d7338d083afa4107e92da04a768b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml">GpuKernelComponentStream</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">fuse</a> (const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abe5718c3616edd5134e3058a1bb50b76">MemoryDescriptorMap</a> &amp;mem_map) const</td></tr>
<tr class="memdesc:a2e5d7338d083afa4107e92da04a768b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform component fusion and serialize the graph into a stream of component groups.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">More...</a><br /></td></tr>
<tr class="separator:a2e5d7338d083afa4107e92da04a768b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A multi-input (tensors), multi-output (tensors) acyclic directed graph of gpu kernel components Its main purposes are: </p>
<ul>
<li>Perform "graph-level" optimizations like fusion of kernel components (not the fusion of operators)</li>
<li>Automatically assign memory descriptions <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml">MemoryDescriptor</a> of all tensors based on graph topology </li>
</ul>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml">GpuKernelComponentGraph.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8dc3248f579f653c5157c948c2020b0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dc3248f579f653c5157c948c2020b0b">&#9670;&nbsp;</a></span>GpuKernelComponentGraph() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">GpuComponentServices</a> *&#160;</td>
          <td class="paramname"><em>services</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml">GpuWorkloadContext</a> to be used by the graph </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">services</td><td><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml">GpuComponentServices</a> to be used by the graph </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml">GpuKernelComponentGraph.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    : _context{<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>}, _services{services}, _components{}, _tensors{}, _dependency_graph{}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>.</p>

</div>
</div>
<a id="a7200f0686035fbe384042e449a680a51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7200f0686035fbe384042e449a680a51">&#9670;&nbsp;</a></span>GpuKernelComponentGraph() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a3f3111367306ce732f6ba99c65930530"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f3111367306ce732f6ba99c65930530">&#9670;&nbsp;</a></span>GpuKernelComponentGraph() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9e17c79d46cf5b9ddf601d72d2bac54b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e17c79d46cf5b9ddf601d72d2bac54b">&#9670;&nbsp;</a></span>add_new_component()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_new_component </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a new component and add it to the component graph Component id is automatically allocated. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Component type </td></tr>
    <tr><td class="paramname">Args</td><td>Component argument types</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Component arguments except for component id, which is auto-allocated </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml#l00073">73</a> of file <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml">GpuKernelComponentGraph.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">auto</span>                      comp    = _services-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml#af28e5f67aedc9320f4c2ef39bb2ad3bd">component_factory</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_factory.xhtml#aabc5beadd0a25cc0396ba4e27a774715">create</a>&lt;T&gt;(std::forward&lt;Args&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)...);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        ArgumentPack&lt;ITensorInfo&gt; tensors = comp-&gt;tensors();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>                src_tensor_ids = get_tensor_ids(tensors.get_const_src_tensors());</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>                dst_tensor_ids = get_tensor_ids(tensors.get_const_dst_tensors());</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordtype">bool</span>                      success = _dependency_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a4fa2090ba4e0caf4aa74327e9962511b">add_operator</a>(comp-&gt;id(), src_tensor_ids, dst_tensor_ids);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(success);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!success);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        _components[comp-&gt;id()] = std::move(comp);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : tensors.get_const_src_tensors())</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            _tensors[<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id()] = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : tensors.get_const_dst_tensors())</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            _tensors[<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id()] = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_dependency_graph_8h_source.xhtml#l00191">DependencyGraph::add_operator()</a>, <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner::args</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="_gpu_component_services_8h_source.xhtml#l00043">GpuComponentServices::component_factory()</a>, <a class="el" href="_gpu_kernel_component_factory_8h_source.xhtml#l00053">GpuKernelComponentFactory::create()</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00217">ArgumentPack&lt; T &gt;::get_const_dst_tensors()</a>, <a class="el" href="_argument_pack_8h_source.xhtml#l00183">ArgumentPack&lt; T &gt;::get_const_src_tensors()</a>, and <a class="el" href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor::t</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00113">GpuSigmoid::create_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00112">GpuTanh::create_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00119">GpuClamp::create_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00143">GpuResize::create_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00192">GpuDepthwiseConv2d::create_op()</a>, and <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00119">GpuCast::create_op()</a>.</p>

</div>
</div>
<a id="a2e5d7338d083afa4107e92da04a768b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e5d7338d083afa4107e92da04a768b0">&#9670;&nbsp;</a></span>fuse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml">GpuKernelComponentStream</a> fuse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abe5718c3616edd5134e3058a1bb50b76">MemoryDescriptorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>mem_map</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform component fusion and serialize the graph into a stream of component groups. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mem_map</td><td>MemoryDescriptorMap for all the tensors in the component graph</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml" title="A linear sequence of component groups serialized from the GpuKernelComponentGraph Each component grou...">GpuKernelComponentStream</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml">GpuKernelComponentGraph.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    GpuKernelComponentStream stream{_context, _services, mem_map};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>               op_seq = _dependency_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a78baf70e426827a83bce389f3d9c7dca">build_operators_sequence</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    stream.new_component_group();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> op : op_seq)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> component = _components.at(op.op).get();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> success   = stream.add_component(component);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span> (!success) <span class="comment">// Assume first failure was because the root component is unfusable</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            stream.new_component_group();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> success = stream.add_component(component);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!success);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(success);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, and <a class="el" href="_dependency_graph_8h_source.xhtml#l00238">DependencyGraph::build_operators_sequence()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00096">GpuWorkloadSketch::Implementation::generate_source_code()</a>.</p>

</div>
</div>
<a id="a5725bb34311ee38aecd2374fb61dfe43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5725bb34311ee38aecd2374fb61dfe43">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="a837165eb4f56e0b0caf8064fede5a323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a837165eb4f56e0b0caf8064fede5a323">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml">GpuKernelComponentGraph.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml">GpuKernelComponentGraph.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_factory_xhtml_aabc5beadd0a25cc0396ba4e27a774715"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_factory.xhtml#aabc5beadd0a25cc0396ba4e27a774715">arm_compute::experimental::dynamic_fusion::GpuKernelComponentFactory::create</a></div><div class="ttdeci">std::unique_ptr&lt; IGpuKernelComponent &gt; create(Args &amp;&amp;...args)</div><div class="ttdoc">Create a new kernel component.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_factory_8h_source.xhtml#l00053">GpuKernelComponentFactory.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a4fa2090ba4e0caf4aa74327e9962511b"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a4fa2090ba4e0caf4aa74327e9962511b">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_operator</a></div><div class="ttdeci">bool add_operator(OperatorId op, const std::vector&lt; TensorId &gt; &amp;inputs, const std::vector&lt; TensorId &gt; &amp;outputs, bool is_output=false)</div><div class="ttdoc">Add a new operator Return invalid if it violates the DAG invariant Invalid operation will not change ...</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00191">DependencyGraph.h:191</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a78baf70e426827a83bce389f3d9c7dca"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a78baf70e426827a83bce389f3d9c7dca">arm_compute::experimental::dynamic_fusion::DependencyGraph::build_operators_sequence</a></div><div class="ttdeci">std::vector&lt; OpPack &gt; build_operators_sequence() const</div><div class="ttdoc">Build a sequence of operators from the acyclic graph of operators.</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00238">DependencyGraph.h:238</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services_xhtml_af28e5f67aedc9320f4c2ef39bb2ad3bd"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_component_services.xhtml#af28e5f67aedc9320f4c2ef39bb2ad3bd">arm_compute::experimental::dynamic_fusion::GpuComponentServices::component_factory</a></div><div class="ttdeci">GpuKernelComponentFactory &amp; component_factory()</div><div class="ttdoc">Get reference to component factory.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_component_services_8h_source.xhtml#l00043">GpuComponentServices.h:43</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
