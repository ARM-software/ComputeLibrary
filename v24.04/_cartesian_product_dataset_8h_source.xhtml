<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/datasets/CartesianProductDataset.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cartesian_product_dataset_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CartesianProductDataset.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cartesian_product_dataset_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_DATASET_CARTESIAN_PRODUCT</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_DATASET_CARTESIAN_PRODUCT</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_8h.xhtml">Dataset.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">   39</a></span>&#160;<span class="keyword">namespace </span>dataset</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/** Implementation of a dataset representing all combinations of values of the input datasets.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> * For example, for the inputs {1, 2} and {3, 4} this dataset virtually</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * represents the values {(1, 3), (1, 4), (2, 3), (2, 4)}.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">   47</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">CartesianProductDataset</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml">Dataset</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">using</span> T_noref    = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::remove_reference&lt;T&gt;::type</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">using</span> U_noref    = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::remove_reference&lt;U&gt;::type</a>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">using</span> iter1_type = <span class="keyword">typename</span> T_noref::iterator;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">using</span> iter2_type = <span class="keyword">typename</span> U_noref::iterator;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /** Construct dataset from the given datasets.</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in] dataset1 First dataset.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[in] dataset2 Second dataset.</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a806854a05f02099749c505d17df3abb8">   61</a></span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a806854a05f02099749c505d17df3abb8">CartesianProductDataset</a>(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        : _dataset1{ std::forward&lt;T&gt;(dataset1) },</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;          _dataset2{ std::forward&lt;U&gt;(dataset2) }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a806854a05f02099749c505d17df3abb8">CartesianProductDataset</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a806854a05f02099749c505d17df3abb8">CartesianProductDataset</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    /** Type of the dataset. */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a9c9aae4b5f426f99087f48b40bc114fc">   71</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a9c9aae4b5f426f99087f48b40bc114fc">type</a> = decltype(std::tuple_cat(*std::declval&lt;iter1_type&gt;(), *std::declval&lt;iter2_type&gt;()));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /** Iterator for the dataset. */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">   74</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">iterator</a></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">        /** Construct an iterator.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">         * @param[in] dataset1 Dataset 1.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">         * @param[in] dataset2 Dataset 2.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">   81</a></span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a>(<span class="keyword">const</span> T_noref *dataset1, <span class="keyword">const</span> U_noref *dataset2)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            : _iter1{ dataset1-&gt;begin() },</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;              _dataset2{ dataset2 },</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;              _iter2{ dataset2-&gt;begin() }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">        /** Allow instances of this class to be copy constructed */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">        /** Allow instances of this class to be copied */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#aeeb0d03fad59d8f94bb8dea95825550e">operator=</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">        /** Allow instances of this class to be move constructed */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">        /** Allow instances of this class to be moved */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#aeeb0d03fad59d8f94bb8dea95825550e">operator=</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">iterator</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">        /** Default destructor */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#ab463e487fae62fb9336eb1108cb3f38b">~iterator</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">        /** Get the description of the current value.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">         * @return description of the current value.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">  104</a></span>&#160;        std::string <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">description</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">return</span> _iter1.description() + <span class="stringliteral">&quot;:&quot;</span> + _iter2.description();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">        /** Get the value of the iterator.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">         * @return the value of the iterator.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07af4e34c0a439fc7cf3e778933ad7f3">  113</a></span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a9c9aae4b5f426f99087f48b40bc114fc">CartesianProductDataset::type</a> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07af4e34c0a439fc7cf3e778933ad7f3">operator*</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">return</span> std::tuple_cat(*_iter1, *_iter2);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">        /** Inrement the iterator.</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">         * @return *this;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">  122</a></span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">iterator</a> &amp;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">operator++</a>()</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            ++_second_pos;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span>(_second_pos &lt; _dataset2-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">size</a>())</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                ++_iter2;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                _second_pos = 0;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                _iter2      = _dataset2-&gt;begin();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                ++_iter1;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        iter1_type     _iter1;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keyword">const</span> U_noref *_dataset2;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        iter2_type     _iter2;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordtype">int</span>            _first_pos{ 0 };</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordtype">int</span>            _second_pos{ 0 };</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    };</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">    /** Iterator pointing at the begin of the dataset.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @return Iterator for the dataset.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">  153</a></span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">iterator</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">begin</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">iterator</a>(&amp;_dataset1, &amp;_dataset2);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">    /** Size of the dataset.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @return Number of values in the dataset.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">  162</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">return</span> _dataset1.size() * _dataset2.size();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    T _dataset1;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a> _dataset2;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;};</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">/** Helper function to create a @ref CartesianProductDataset.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> * @param[in] dataset1 First dataset.</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> * @param[in] dataset2 Second dataset.</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> * @return A grid dataset.</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">  180</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">CartesianProductDataset&lt;T, U&gt;</a> <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">CartesianProductDataset&lt;T, U&gt;</a>(std::forward&lt;T&gt;(dataset1), std::forward&lt;U&gt;(dataset2));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">/** Helper function to create a @ref CartesianProductDataset.</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> * @param[in] dataset1 First dataset.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * @param[in] dataset2 Second dataset.</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * @param[in] datasets Subsequent dataset.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * @return A grid dataset.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T1, <span class="keyword">typename</span> T2, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a7bc2d1e7dacd3a9496c45ac0e2e1e766">  194</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(T1 &amp;&amp;dataset1, T2 &amp;&amp;dataset2, Ts &amp;&amp;... datasets) -&gt; decltype(<a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(std::forward&lt;T1&gt;(dataset1), <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(std::forward&lt;T2&gt;(dataset2), std::forward&lt;Ts&gt;(datasets)...)))</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;{</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(std::forward&lt;T1&gt;(dataset1), <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">combine</a>(std::forward&lt;T2&gt;(dataset2), std::forward&lt;Ts&gt;(datasets)...));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">/** Helper function to create a @ref CartesianProductDataset.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"> * @param[in] dataset1 First dataset.</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"> * @param[in] dataset2 Second dataset.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> * @return A grid dataset.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;CartesianProductDataset&lt;T, U&gt;</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#ac0d0ba443ee1c293361eea3c06c98847">  208</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#ac0d0ba443ee1c293361eea3c06c98847">operator*</a>(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;{</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">CartesianProductDataset&lt;T, U&gt;</a>(std::forward&lt;T&gt;(dataset1), std::forward&lt;U&gt;(dataset2));</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;} <span class="comment">// namespace dataset</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_DATASET_CARTESIAN_PRODUCT */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00338">gemm_interleaved.hpp:338</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_xhtml_a9c9aae4b5f426f99087f48b40bc114fc"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a9c9aae4b5f426f99087f48b40bc114fc">arm_compute::test::framework::dataset::CartesianProductDataset::type</a></div><div class="ttdeci">decltype(std::tuple_cat(*std::declval&lt; iter1_type &gt;(), *std::declval&lt; iter2_type &gt;())) type</div><div class="ttdoc">Type of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00071">CartesianProductDataset.h:71</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml">arm_compute::test::framework::dataset::CartesianProductDataset</a></div><div class="ttdoc">Implementation of a dataset representing all combinations of values of the input datasets.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00047">CartesianProductDataset.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_xhtml_a0c62c15c8ed609e7e5e9518cf5f5c712"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a0c62c15c8ed609e7e5e9518cf5f5c712">arm_compute::test::framework::dataset::CartesianProductDataset::begin</a></div><div class="ttdeci">iterator begin() const</div><div class="ttdoc">Iterator pointing at the begin of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00153">CartesianProductDataset.h:153</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_a07ffe70037e0a16554c868bcdd8f83b5"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::description</a></div><div class="ttdeci">std::string description() const</div><div class="ttdoc">Get the description of the current value.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00104">CartesianProductDataset.h:104</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml">arm_compute::test::framework::dataset::CartesianProductDataset::iterator</a></div><div class="ttdoc">Iterator for the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00074">CartesianProductDataset.h:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_a07af4e34c0a439fc7cf3e778933ad7f3"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07af4e34c0a439fc7cf3e778933ad7f3">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::operator*</a></div><div class="ttdeci">CartesianProductDataset::type operator*() const</div><div class="ttdoc">Get the value of the iterator.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00113">CartesianProductDataset.h:113</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml">arm_compute::test::framework::dataset::Dataset</a></div><div class="ttdoc">Abstract dataset base class.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_8h_source.xhtml#l00039">Dataset.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_xhtml_af9593d4a5ff4274efaf429cb4f9e57cc"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#af9593d4a5ff4274efaf429cb4f9e57cc">arm_compute::test::framework::dataset::CartesianProductDataset::size</a></div><div class="ttdeci">int size() const</div><div class="ttdoc">Size of the dataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00162">CartesianProductDataset.h:162</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_aeeb0d03fad59d8f94bb8dea95825550e"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#aeeb0d03fad59d8f94bb8dea95825550e">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::operator=</a></div><div class="ttdeci">iterator &amp; operator=(const iterator &amp;)=default</div><div class="ttdoc">Allow instances of this class to be copied.</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_ab463e487fae62fb9336eb1108cb3f38b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#ab463e487fae62fb9336eb1108cb3f38b">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::~iterator</a></div><div class="ttdeci">~iterator()=default</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_af1b1c7856a59f34c7d3570f946a2ff00"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#af1b1c7856a59f34c7d3570f946a2ff00">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::operator++</a></div><div class="ttdeci">iterator &amp; operator++()</div><div class="ttdoc">Inrement the iterator.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00122">CartesianProductDataset.h:122</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a6f4fa4bb0583f29e77138fb1e7d77411"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a6f4fa4bb0583f29e77138fb1e7d77411">arm_compute::test::framework::dataset::combine</a></div><div class="ttdeci">CartesianProductDataset&lt; T, U &gt; combine(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Helper function to create a CartesianProductDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00180">CartesianProductDataset.h:180</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator_xhtml_a78cc7b5e65362760bcd99d070d163e94"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a78cc7b5e65362760bcd99d070d163e94">arm_compute::test::framework::dataset::CartesianProductDataset::iterator::iterator</a></div><div class="ttdeci">iterator(const T_noref *dataset1, const U_noref *dataset2)</div><div class="ttdoc">Construct an iterator.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00081">CartesianProductDataset.h:81</a></div></div>
<div class="ttc" id="a_dataset_8h_xhtml"><div class="ttname"><a href="_dataset_8h.xhtml">Dataset.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_xhtml_a806854a05f02099749c505d17df3abb8"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset.xhtml#a806854a05f02099749c505d17df3abb8">arm_compute::test::framework::dataset::CartesianProductDataset::CartesianProductDataset</a></div><div class="ttdeci">CartesianProductDataset(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Construct dataset from the given datasets.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00061">CartesianProductDataset.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_ac0d0ba443ee1c293361eea3c06c98847"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#ac0d0ba443ee1c293361eea3c06c98847">arm_compute::test::framework::dataset::operator*</a></div><div class="ttdeci">CartesianProductDataset&lt; T, U &gt; operator*(T &amp;&amp;dataset1, U &amp;&amp;dataset2)</div><div class="ttdoc">Helper function to create a CartesianProductDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_cartesian_product_dataset_8h_source.xhtml#l00208">CartesianProductDataset.h:208</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_0dd7887818bb8d90732685575a13f58a.xhtml">datasets</a></li><li class="navelem"><a class="el" href="_cartesian_product_dataset_8h.xhtml">CartesianProductDataset.h</a></li>
    <li class="footer">Generated on Mon Apr 29 2024 10:54:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
