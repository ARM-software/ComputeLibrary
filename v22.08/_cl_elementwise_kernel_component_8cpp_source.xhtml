<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/components/ClElementwiseKernelComponent.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_elementwise_kernel_component_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClElementwiseKernelComponent.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_elementwise_kernel_component_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_elementwise_kernel_component_8h.xhtml">src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/components/ClElementwiseKernelComponent.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">   38</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">ComponentType</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClElementwiseKernelComponent::get_component_type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">ComponentType::Simple</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">   43</a></span>&#160;std::set&lt;std::string&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClElementwiseKernelComponent::get_headers_list</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> std::set&lt;std::string&gt; { <span class="stringliteral">&quot;common/experimental/gemm_fused_post_ops/fp_mixed_precision_helpers.h&quot;</span>, <span class="stringliteral">&quot;tile_helpers.h&quot;</span> };</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">   48</a></span>&#160;<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClElementwiseKernelComponent::get_window</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">lhs_info</a> = _blueprint-&gt;impl().get_kernel_argument_info(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">rhs_info</a> = _blueprint-&gt;impl().get_kernel_argument_info(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>       *dst_info = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(lhs_info, rhs_info, dst_info);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> std::pair&lt;TensorShape, ValidRegion&gt; broadcast_pair = <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ae056a42fb510e2fa170a74ab06ee31da">ITensorInfo::broadcast_shape_and_valid_region</a>(*lhs_info, *rhs_info);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;out_shape = broadcast_pair.first;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*dst_info, out_shape, 1, lhs_info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = dst_info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// Collapse Dim 1 (W) and Dim 2 (H) together, leave Dim 0 (C) and upper dimensions unchanged</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// This is in line with the collapsing convention used by Conv2d</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    output_shape.<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">collapse</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vector_size_byte_opencl           = 16;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a> = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(vector_size_byte_opencl / dst_info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), dst_info-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0));</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>             win                               = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(output_shape, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>(num_elems_processed_per_iteration));</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> win;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">   72</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClElementwiseKernelComponent::get_component_code</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::string code;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_root = _blueprint-&gt;impl().group(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a> &amp;&amp; _blueprint-&gt;impl().group(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span>(is_root)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">    //------------------ START KERNEL {{meta_kernel_id}} ELTWISE_OP ---------------------</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">    // IN_0(LHS)            {{lhs}}</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">    // IN_1(RHS)            {{rhs}}</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">    // OUT(dst, accum)      {{dst}}</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">    // dst = lhs + rhs (mix-precision, broadcast, boundary aware)</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    TILE({{DATA_TYPE}}, M0, N0, {{dst}});</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">    {</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">        TILE({{DATA_TYPE}}, M0, N0, lhs_tile);</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        TILE({{DATA_TYPE}}, M0, N0, rhs_tile);</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">        // Since mout maps to dimensions 1 (y) and dimension 2 (z) of the input tensor because of the collapsed window, bout maps to dimension 3 (w)</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">        {{lhs}}_offset_first_element_in_bytes += bout * {{lhs}}_stride_w;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">        {{rhs}}_offset_first_element_in_bytes += bout * {{rhs}}_stride_w;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        T_LOAD({{DATA_TYPE}}, M0, N0, BUFFER, {{lhs}}, cout, mout, 1, {{lhs}}_stride_y, lhs_tile);</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">        T_LOAD({{DATA_TYPE}}, {{rhs_m0}}, {{rhs_n0}}, BUFFER, {{rhs}}, {{rhs_start_x}}, {{rhs_start_y}}, 1, {{rhs}}_stride_y, rhs_tile);</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">#if defined(IS_BROADCAST)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">        T_ELTWISE_BROADCAST_{{ELTWISE_OP}}_X({{DATA_TYPE}}, M0, N0, lhs_tile, rhs_tile, {{dst}});</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">#else // !defined(IS_BROADCAST)</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">        T_ELTWISE_{{ELTWISE_OP}}({{DATA_TYPE}}, M0, N0, lhs_tile, rhs_tile, {{dst}});</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">#endif // defined(IS_BROADCAST)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">    //------------------ END KERNEL {{meta_kernel_id}} ELTWISE_OP ---------------------</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">)_&quot;;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">else</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    //------------------ START KERNEL {{meta_kernel_id}} ELTWISE_OP ---------------------</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">    // IN_0/Out(Accumulator)   {{acc}}</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">    // IN_1(Addend)        {{addend}}</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral">    // acc = addend + acc (mix-precision, broadcast, boundary aware)</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">    {</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">        TILE({{DATA_TYPE}}, M0, N0, addend_tile);</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">        T_LOAD({{DATA_TYPE}}, {{rhs_m0}}, {{rhs_n0}}, BUFFER, {{addend}}, {{rhs_start_x}}, {{rhs_start_y}}, 1, {{addend}}_stride_y, addend_tile);</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">#if defined(IS_BROADCAST)</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">        T_ELTWISE_BROADCAST_{{ELTWISE_OP}}_X({{DATA_TYPE}}, M0, N0, {{acc}}, addend_tile, {{acc}});</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">#else // !defined(IS_BROADCAST)</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">        T_ELTWISE_{{ELTWISE_OP}}({{DATA_TYPE}}, M0, N0, {{acc}}, addend_tile, {{acc}});</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">#endif // defined(IS_BROADCAST)</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    //------------------ END KERNEL {{meta_kernel_id}} ELTWISE_OP ---------------------</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">)_&quot;;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">}</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">  132</a></span>&#160;<span class="stringliteral"><a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClElementwiseKernelComponent::generate_build_options</a>()</span><span class="keyword"> const</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_rhs_info = _blueprint-&gt;impl().get_kernel_argument_info(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a> = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>     build_opts{};</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         n0               = _blueprint-&gt;impl().get_execution_window().x().step();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>         m0               = _blueprint-&gt;impl().get_execution_window().y().step();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partial_store_n0 = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;dimension(0) % n0;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         is_broadcast     = t_rhs_info-&gt;tensor_shape() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;tensor_shape();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0));</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DN0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0));</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DPARTIAL_N0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(partial_store_n0));</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    build_opts.add_option_if(is_broadcast, <span class="stringliteral">&quot;-DIS_BROADCAST&quot;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">return</span> build_opts;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a07cd84b2e4e8a8bde711ba8364e6c12e">  151</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a07cd84b2e4e8a8bde711ba8364e6c12e">ClElementwiseKernelComponent::generate_config_id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">auto</span>        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a> = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::string config_id{};</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;data_type()));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;dimension(0));</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    config_id += <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;dimension(1));</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">string_from_data_layout</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;data_layout()));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> config_id;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">  165</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClElementwiseKernelComponent::allocate_shared_vars</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable)<span class="keyword"> const</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_root = _blueprint-&gt;impl().group(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a> &amp;&amp; _blueprint-&gt;impl().group(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_lhs, _blueprint-&gt;impl().group(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>), <span class="stringliteral">&quot;lhs&quot;</span>);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_rhs, _blueprint-&gt;impl().group(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>), <span class="stringliteral">&quot;rhs&quot;</span>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span>(is_root)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_dst, _blueprint-&gt;impl().group(_dst.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_dst.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>), <span class="stringliteral">&quot;dst&quot;</span>);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a03e31968d514152ab12cc564d73f2cec">  176</a></span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">ClElementwiseKernelComponent::TagLUT</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a03e31968d514152ab12cc564d73f2cec">ClElementwiseKernelComponent::get_tag_lut</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable)<span class="keyword"> const</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a>     lut{};</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a> = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> t_rhs_info = _blueprint-&gt;impl().get_kernel_argument_info(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_root = _blueprint-&gt;impl().group(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a> &amp;&amp; _blueprint-&gt;impl().group(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">if</span>(is_root)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        lut[<span class="stringliteral">&quot;lhs&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_lhs);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        lut[<span class="stringliteral">&quot;rhs&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_rhs);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        lut[<span class="stringliteral">&quot;dst&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_dst);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="comment">// Determine which link is the accumulator</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> accumulator;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> addend;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">if</span>(_blueprint-&gt;impl().group(_lhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">SharedVarGroup::Automatic</a>)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            accumulator = _lhs;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            addend      = _rhs;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(_blueprint-&gt;impl().group(_rhs.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>) == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">SharedVarGroup::Automatic</a>)</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            accumulator = _rhs;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            addend      = _lhs;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid elementwise component linking&quot;</span>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        lut[<span class="stringliteral">&quot;acc&quot;</span>]    = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(accumulator);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        lut[<span class="stringliteral">&quot;addend&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(addend);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="comment">// Local build options</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">id</a>();</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    lut[<span class="stringliteral">&quot;DATA_TYPE&quot;</span>]      = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;data_type());</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">switch</span>(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml#ab0ac61f4de8c572a55efe97c0de495d5">eltwise</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">op</a>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">ArithmeticOperation::DIV</a>:</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            lut[<span class="stringliteral">&quot;ELTWISE_OP&quot;</span>] = <span class="stringliteral">&quot;DIV&quot;</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">ArithmeticOperation::ADD</a>:</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            lut[<span class="stringliteral">&quot;ELTWISE_OP&quot;</span>] = <span class="stringliteral">&quot;ADD&quot;</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Arithmetic Operation not supported&quot;</span>);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">// Set broadcast parameters</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">// PRE: All tensors are broadcast-compatible</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_broadcast = t_rhs_info-&gt;tensor_shape() != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">t_dst_info</a>-&gt;tensor_shape();</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span>(is_broadcast)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="comment">// Note that n0 maps to input tensor dimension 0, m0 maps to input dimensions 1 and 2 because of our collapse strategy</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">if</span>(t_rhs_info-&gt;dimension(0) == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &amp;&amp; t_rhs_info-&gt;dimension(1) == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &amp;&amp; t_rhs_info-&gt;dimension(2) == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) <span class="comment">// Broadcast in X, Y, Z: collapsed rhs win [M0xN0] = [1x1]</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            lut[<span class="stringliteral">&quot;rhs_m0&quot;</span>]      = <span class="stringliteral">&quot;1&quot;</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            lut[<span class="stringliteral">&quot;rhs_n0&quot;</span>]      = <span class="stringliteral">&quot;1&quot;</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            lut[<span class="stringliteral">&quot;rhs_start_y&quot;</span>] = <span class="stringliteral">&quot;0&quot;</span>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            lut[<span class="stringliteral">&quot;rhs_start_x&quot;</span>] = <span class="stringliteral">&quot;0&quot;</span>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(t_rhs_info-&gt;dimension(1) == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &amp;&amp; t_rhs_info-&gt;dimension(2) == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) <span class="comment">// Broadcast in Y and Z: collapsed rhs win [M0xN0] = [1xN]</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            lut[<span class="stringliteral">&quot;rhs_m0&quot;</span>]      = <span class="stringliteral">&quot;1&quot;</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            lut[<span class="stringliteral">&quot;rhs_n0&quot;</span>]      = <span class="stringliteral">&quot;N0&quot;</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            lut[<span class="stringliteral">&quot;rhs_start_y&quot;</span>] = <span class="stringliteral">&quot;0&quot;</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            lut[<span class="stringliteral">&quot;rhs_start_x&quot;</span>] = <span class="stringliteral">&quot;cout&quot;</span>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        {</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Only support rhs broadcasting in all X, Y, Z dimensions, or just in Y and Z dimensions&quot;</span>);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        lut[<span class="stringliteral">&quot;rhs_m0&quot;</span>]      = <span class="stringliteral">&quot;M0&quot;</span>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        lut[<span class="stringliteral">&quot;rhs_n0&quot;</span>]      = <span class="stringliteral">&quot;N0&quot;</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        lut[<span class="stringliteral">&quot;rhs_start_y&quot;</span>] = <span class="stringliteral">&quot;mout&quot;</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        lut[<span class="stringliteral">&quot;rhs_start_x&quot;</span>] = <span class="stringliteral">&quot;cout&quot;</span>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> lut;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a283deece00423ed5bd0c9486f305a6f4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::get_headers_list</a></div><div class="ttdeci">std::set&lt; std::string &gt; get_headers_list() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00043">ClElementwiseKernelComponent.cpp:43</a></div></div>
<div class="ttc" id="_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::ComponentType::Simple</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea29bbf66f7f8529ec47e394fb5a36c646">arm_compute::ArithmeticOperation::DIV</a></div><div class="ttdoc">(x / y) </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_a8ea07c1841c26cf6f395ba4b3887bda0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">arm_compute::experimental::dynamic_fusion::SharedVarTable::get</a></div><div class="ttdeci">SharedVar get(const SharedVarLink &amp;var_link) const</div><div class="ttdoc">Get the SharedVar associated with var_link. </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00206">Common.h:206</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension. </div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string. </div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8aea9eeb52badb613229884838847294b90d">arm_compute::ArithmeticOperation::ADD</a></div><div class="ttdoc">(x + y) </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">arm_compute::experimental::dynamic_fusion::SharedVarLink</a></div><div class="ttdoc">Specifies a shared variable link for a component. </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00076">Common.h:76</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00351">Utils.cpp:351</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ae056a42fb510e2fa170a74ab06ee31da"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ae056a42fb510e2fa170a74ab06ee31da">arm_compute::ITensorInfo::broadcast_shape_and_valid_region</a></div><div class="ttdeci">static std::pair&lt; TensorShape, ValidRegion &gt; broadcast_shape_and_valid_region(const Infos &amp;... infos)</div><div class="ttdoc">If infos are broadcast compatible tensor info&amp;#39;s, return the broadcasted shape and the intersection of...</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00299">ITensorInfo.h:299</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor</a></div><div class="ttdoc">Describes all the info required to add a kernel argument at run time. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00070">ClWorkload.h:70</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">arm_compute::experimental::dynamic_fusion::SharedVarGroup::Automatic</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor_xhtml_ab0ac61f4de8c572a55efe97c0de495d5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml#ab0ac61f4de8c572a55efe97c0de495d5">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelDescriptor::eltwise</a></div><div class="ttdeci">ElementwiseDescriptor eltwise</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00051">ClKernelDescriptors.h:51</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::SharedVarGroup::Argument</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5847c3506e79d3ceecc471581a7fda4b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5847c3506e79d3ceecc471581a7fda4b">arm_compute::test::validation::t_dst_info</a></div><div class="ttdeci">auto t_dst_info</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00251">Integration_OperatorFuseMovenetSubGraph1.cpp:251</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a73304dca4b472b11836efa13d53767f5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::allocate_shared_vars</a></div><div class="ttdeci">virtual void allocate_shared_vars(SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Allocate all shared variables used by the component in the vtable. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00165">ClElementwiseKernelComponent.cpp:165</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00048">ClElementwiseKernelComponent.cpp:48</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00135">Utils.cpp:135</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">arm_compute::experimental::dynamic_fusion::SharedVarTable</a></div><div class="ttdoc">A table of all the variables used in the kernel / blueprint Because we limit the DependencyGraph in t...</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00092">Common.h:92</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a9f9ebacf4b044525b8cfefbc8795a9cc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f9ebacf4b044525b8cfefbc8795a9cc">arm_compute::test::validation::lhs_info</a></div><div class="ttdeci">lhs_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00861">GEMMMatrixMultiplyReshaped.cpp:861</a></div></div>
<div class="ttc" id="_cl_elementwise_kernel_component_8h_xhtml"><div class="ttname"><a href="_cl_elementwise_kernel_component_8h.xhtml">ClElementwiseKernelComponent.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a07cd84b2e4e8a8bde711ba8364e6c12e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a07cd84b2e4e8a8bde711ba8364e6c12e">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::generate_config_id</a></div><div class="ttdeci">std::string generate_config_id() const override</div><div class="ttdoc">Generate config id of the component. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00151">ClElementwiseKernelComponent.cpp:151</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="_cl_im2_col_kernel_8cpp_xhtml_a4e45c1f5e4280813a78a77dda71d8799"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration</a></div><div class="ttdeci">unsigned int num_elems_processed_per_iteration</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00039">CLHelpers.cpp:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00042">AutoConfiguration.h:42</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels() </div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a56b9e25c2e8731ca5488e7b3ccd66f58"><div class="ttname"><a href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">arm_compute::string_from_data_layout</a></div><div class="ttdeci">const std::string &amp; string_from_data_layout(DataLayout dl)</div><div class="ttdoc">Convert a data layout identity into a string. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00123">Utils.cpp:123</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a1d067dee0e43375aefdc128fb00d409d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::get_component_type</a></div><div class="ttdeci">ComponentType get_component_type() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00038">ClElementwiseKernelComponent.cpp:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a1e3d775fbfca319cecae8d377d335b8a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::get_component_code</a></div><div class="ttdeci">std::string get_component_code() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00072">ClElementwiseKernelComponent.cpp:72</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml_a647b7b591b8726421b7b5f45fbe6933a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arm_compute::experimental::dynamic_fusion::SharedVarLink::arg_id</a></div><div class="ttdeci">ArgumentID arg_id</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00078">Common.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a03e31968d514152ab12cc564d73f2cec"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a03e31968d514152ab12cc564d73f2cec">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::get_tag_lut</a></div><div class="ttdeci">virtual TagLUT get_tag_lut(const SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Get the tag look-up table used to instantiate the component code. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00176">ClElementwiseKernelComponent.cpp:176</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a226889ea88d5691bdcbfba8243ed96b4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a226889ea88d5691bdcbfba8243ed96b4">arm_compute::test::validation::rhs_info</a></div><div class="ttdeci">rhs_info</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00861">GEMMMatrixMultiplyReshaped.cpp:861</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_aaa0377e50e51d555dac6c6adda393c51"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">arm_compute::experimental::dynamic_fusion::SharedVarTable::add</a></div><div class="ttdeci">void add(SharedVarLink var_link, SharedVarGroup group, ClKernelArgDescriptor runtime_desc, const std::string &amp;name=&quot;unnamed&quot;)</div><div class="ttdoc">Create a SharedVar for a corresponding SharedVarLink (contains ArgumentID). </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00153">Common.h:153</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component_xhtml_a0d19762e6a4b065fe0a480eb8477ac43"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelComponent::generate_build_options</a></div><div class="ttdeci">CLBuildOptions generate_build_options() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00132">ClElementwiseKernelComponent.cpp:132</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input&amp;#39;s first dimension, getting rounded down to its closest valid vector size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01222">Utils.h:1222</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D_t_Buffer</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml_a93bb3b7307a60a60b1d2329d33386c0b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor::op</a></div><div class="ttdeci">ArithmeticOperation op</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00187">OperatorGraph.h:187</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml_a8e15e87871211f98c2b566137e38ef99"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml#a8e15e87871211f98c2b566137e38ef99">arm_compute::TensorShape::collapse</a></div><div class="ttdeci">void collapse(size_t n, size_t first=0)</div><div class="ttdoc">Collapse the first n dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00133">TensorShape.h:133</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::IClKernelComponent::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00292">Common.h:292</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">arm_compute::experimental::dynamic_fusion::ComponentType</a></div><div class="ttdeci">ComponentType</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00247">Common.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_a483b1d20313a5ba08f297c610563bdf0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">arm_compute::experimental::dynamic_fusion::IClKernelComponent::id</a></div><div class="ttdeci">ComponentID id() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00346">Common.h:346</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_145dd76969821cf771138378bb8274dc.xhtml">ClKernelBuildingImpl</a></li><li class="navelem"><a class="el" href="dir_cc845e4cb0a4830714d7be3c2daa81c7.xhtml">components</a></li><li class="navelem"><a class="el" href="_cl_elementwise_kernel_component_8cpp.xhtml">ClElementwiseKernelComponent.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
