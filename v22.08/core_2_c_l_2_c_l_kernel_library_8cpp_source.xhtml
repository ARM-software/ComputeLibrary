<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/CLKernelLibrary.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLKernelLibrary.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="core_2_c_l_2_c_l_kernel_library_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">arm_compute/core/CL/CLKernelLibrary.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2_c_l_kernel_library_8h.xhtml">src/gpu/cl/ClKernelLibrary.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;CLKernelLibrary::CLKernelLibrary()</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : _compile_context()</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>(); <span class="comment">// Make sure the OpenCL symbols are initialised *before* the CLKernelLibrary is built</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">   39</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> _kernel_library;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> _kernel_library;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#afb732d747d949ff2113f19d6d70d8ecb">   44</a></span>&#160;<a class="code" href="classarm__compute_1_1_kernel.xhtml">Kernel</a> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#afb732d747d949ff2113f19d6d70d8ecb">CLKernelLibrary::create_kernel</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, <span class="keyword">const</span> std::set&lt;std::string&gt; &amp;build_options_set)<span class="keyword"> const</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">opencl::ClKernelLibrary</a> &amp;klib         = <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">const</span> std::string              program_name = klib.<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>(kernel_name);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">auto</span>                           program      = klib.<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">program</a>(program_name);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> std::string             &amp;kernel_path  = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">get_kernel_path</a>();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">create_kernel</a>(kernel_name, program_name, program.program, kernel_path, build_options_set, program.is_binary);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a697a3f93a94d06390e777fd6e5cb7024">   52</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a697a3f93a94d06390e777fd6e5cb7024">CLKernelLibrary::get_program_name</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>(kernel_name);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">   56</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">CLKernelLibrary::init</a>(std::string kernel_path, cl::Context <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>, cl::Device device)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _compile_context = <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a>(context, device);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">set_kernel_path</a>(kernel_path);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">   61</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">CLKernelLibrary::set_kernel_path</a>(<span class="keyword">const</span> std::string &amp;kernel_path)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">set_kernel_path</a>(kernel_path);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">   65</a></span>&#160;cl::Context &amp;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">CLKernelLibrary::context</a>()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">   69</a></span>&#160;<span class="keyword">const</span> cl::Device &amp;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">CLKernelLibrary::get_device</a>()</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">get_device</a>();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">   73</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">CLKernelLibrary::set_device</a>(cl::Device device)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">set_device</a>(device);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">   77</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">CLKernelLibrary::set_context</a>(cl::Context <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a>(context);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">   81</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">CLKernelLibrary::get_kernel_path</a>()</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a>();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">   85</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">CLKernelLibrary::clear_programs_cache</a>()</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a>();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54bb195c770b747d87af7506c2032aa4">   89</a></span>&#160;<span class="keyword">const</span> std::map&lt;std::string, cl::Program&gt; &amp;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54bb195c770b747d87af7506c2032aa4">CLKernelLibrary::get_built_programs</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">get_built_programs</a>();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1e6726708fe8f69a84845af570a6cadc">   93</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1e6726708fe8f69a84845af570a6cadc">CLKernelLibrary::add_built_program</a>(<span class="keyword">const</span> std::string &amp;built_program_name, <span class="keyword">const</span> cl::Program &amp;program)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">add_built_program</a>(built_program_name, program);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">   97</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">CLKernelLibrary::fp16_supported</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a>();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">  101</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">CLKernelLibrary::int64_base_atomics_supported</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">int64_base_atomics_supported</a>();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a543610db0a6e5120dfb943e12a62909b">  105</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a543610db0a6e5120dfb943e12a62909b">CLKernelLibrary::is_wbsm_supported</a>()</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#aab68e2f6c9f06a4db5bb7ceec9185615">is_wbsm_supported</a>();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">  109</a></span>&#160;std::pair&lt;std::string, bool&gt; <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">CLKernelLibrary::get_program</a>(<span class="keyword">const</span> std::string &amp;program_name)<span class="keyword"> const</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">auto</span> program_info = <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">program</a>(program_name);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> std::make_pair(std::move(program_info.program), program_info.is_binary);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">  114</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">CLKernelLibrary::max_local_workgroup_size</a>(<span class="keyword">const</span> cl::Kernel &amp;kernel)<span class="keyword"> const</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">max_local_workgroup_size</a>(kernel);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">  118</a></span>&#160;cl::NDRange <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">CLKernelLibrary::default_ndrange</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">default_ndrange</a>();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">  122</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">CLKernelLibrary::get_device_version</a>()</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">get_device_version</a>();</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a70696e3d56dcbcdc1f493dec744bc581">  126</a></span>&#160;cl_uint <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a70696e3d56dcbcdc1f493dec744bc581">CLKernelLibrary::get_num_compute_units</a>()</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">get_num_compute_units</a>();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">  130</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">CLKernelLibrary::get_compile_context</a>()</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> _compile_context;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a66a558a56f5d0dcd6305c405ebc38cc2"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">arm_compute::CLKernelLibrary::set_kernel_path</a></div><div class="ttdeci">void set_kernel_path(const std::string &amp;kernel_path)</div><div class="ttdoc">Sets the path that the kernels reside in. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00061">CLKernelLibrary.cpp:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a5a6865d04c8d3348860f3cb8100fdb97"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">arm_compute::CLCompileContext::set_device</a></div><div class="ttdeci">void set_device(cl::Device device)</div><div class="ttdoc">Sets the CL device for which the programs are created. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00339">CLCompileContext.cpp:339</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a8da9f7c295b65104343fac358924fc2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">arm_compute::CLCompileContext::get_device</a></div><div class="ttdeci">const cl::Device &amp; get_device() const</div><div class="ttdoc">Gets the CL device for which the programs are created. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00334">CLCompileContext.cpp:334</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLCompileContext::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00329">CLCompileContext.cpp:329</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_aab68e2f6c9f06a4db5bb7ceec9185615"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#aab68e2f6c9f06a4db5bb7ceec9185615">arm_compute::CLCompileContext::is_wbsm_supported</a></div><div class="ttdeci">bool is_wbsm_supported() const</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00370">CLCompileContext.cpp:370</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">arm_compute::opencl::ClKernelLibrary</a></div><div class="ttdoc">ClKernelLibrary contains all the OpenCL kernels that are used throughout the library. </div><div class="ttdef"><b>Definition:</b> <a href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml#l00041">ClKernelLibrary.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a1e6726708fe8f69a84845af570a6cadc"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1e6726708fe8f69a84845af570a6cadc">arm_compute::CLKernelLibrary::add_built_program</a></div><div class="ttdeci">void add_built_program(const std::string &amp;built_program_name, const cl::Program &amp;program)</div><div class="ttdoc">Add a new built program to the cache. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00093">CLKernelLibrary.cpp:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_aef78b2e57b5203f8a184465e2da020ef"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">arm_compute::CLKernelLibrary::get_device_version</a></div><div class="ttdeci">std::string get_device_version()</div><div class="ttdoc">Return the device version. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00122">CLKernelLibrary.cpp:122</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a545c28170311fa375be5684ba6f271bc"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">arm_compute::CLKernelLibrary::get_program</a></div><div class="ttdeci">std::pair&lt; std::string, bool &gt; get_program(const std::string &amp;program_name) const</div><div class="ttdoc">Gets the source of the selected program. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00109">CLKernelLibrary.cpp:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a1b1f019faeec045aa2bb8dcf7cfa95c0"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">arm_compute::opencl::ClKernelLibrary::program</a></div><div class="ttdeci">ClProgramInfo program(const std::string &amp;program_name) const</div><div class="ttdoc">Gets the source of the selected program. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00993">ClKernelLibrary.cpp:993</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_ab28520b0811ac22a5bc07050bf40e483"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">arm_compute::opencl::ClKernelLibrary::program_name</a></div><div class="ttdeci">std::string program_name(const std::string &amp;kernel_name) const</div><div class="ttdoc">Returns the program name given a kernel name. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00967">ClKernelLibrary.cpp:967</a></div></div>
<div class="ttc" id="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h.xhtml">CLKernelLibrary.h</a></div><div class="ttdoc">Manages all the OpenCL kernels compilation and caching, provides accessors for the OpenCL Context...</div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a10a0137545ce1771423fbde2ce494a81"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">arm_compute::CLKernelLibrary::get_compile_context</a></div><div class="ttdeci">CLCompileContext &amp; get_compile_context()</div><div class="ttdoc">Gets the compile context used. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00130">CLKernelLibrary.cpp:130</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a293edc1bbcbddffb7228ac97917ed107"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">arm_compute::CLKernelLibrary::set_context</a></div><div class="ttdeci">void set_context(cl::Context context)</div><div class="ttdoc">Sets the CL context used to create programs. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00077">CLKernelLibrary.cpp:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a1d4cf09994ef5a094eed69cd37ca26ba"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">arm_compute::CLCompileContext::get_device_version</a></div><div class="ttdeci">std::string get_device_version() const</div><div class="ttdoc">Return the device version. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00386">CLCompileContext.cpp:386</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a70696e3d56dcbcdc1f493dec744bc581"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a70696e3d56dcbcdc1f493dec744bc581">arm_compute::CLKernelLibrary::get_num_compute_units</a></div><div class="ttdeci">cl_uint get_num_compute_units()</div><div class="ttdoc">Return the maximum number of compute units in the device. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00126">CLKernelLibrary.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a5728371dec76ff8493cfe926700ba37d"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">arm_compute::opencl::ClKernelLibrary::kernel_path</a></div><div class="ttdeci">const std::string &amp; kernel_path() const</div><div class="ttdoc">Gets the path that the kernels reside in. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00988">ClKernelLibrary.cpp:988</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_aaeda307cc2131afa8a4764e38373f94e"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">arm_compute::CLKernelLibrary::max_local_workgroup_size</a></div><div class="ttdeci">size_t max_local_workgroup_size(const cl::Kernel &amp;kernel) const</div><div class="ttdoc">Find the maximum number of local work items in a workgroup can be supported for the kernel...</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00114">CLKernelLibrary.cpp:114</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_adb48a1da7dc6b6f3c1a424d21e1ac1f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">arm_compute::CLKernelLibrary::default_ndrange</a></div><div class="ttdeci">cl::NDRange default_ndrange() const</div><div class="ttdoc">Return the default NDRange for the device. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00118">CLKernelLibrary.cpp:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a9496f99209434a5fe2c79069220168da"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">arm_compute::opencl::ClKernelLibrary::get</a></div><div class="ttdeci">static ClKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00961">ClKernelLibrary.cpp:961</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a0ad613086cc79a2e32d5b87bcefc7488"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">arm_compute::CLKernelLibrary::clear_programs_cache</a></div><div class="ttdeci">void clear_programs_cache()</div><div class="ttdoc">Clear the library&amp;#39;s cache of binary programs. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00085">CLKernelLibrary.cpp:85</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a5a6865d04c8d3348860f3cb8100fdb97"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">arm_compute::CLKernelLibrary::set_device</a></div><div class="ttdeci">void set_device(cl::Device device)</div><div class="ttdoc">Sets the CL device for which the programs are created. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00073">CLKernelLibrary.cpp:73</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a7ead2f03c59c553788947ea8a29b38f3"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">arm_compute::CLCompileContext::get_num_compute_units</a></div><div class="ttdeci">cl_uint get_num_compute_units() const</div><div class="ttdoc">Return the maximum number of compute units in the device. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00391">CLCompileContext.cpp:391</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_afb732d747d949ff2113f19d6d70d8ecb"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#afb732d747d949ff2113f19d6d70d8ecb">arm_compute::CLKernelLibrary::create_kernel</a></div><div class="ttdeci">Kernel create_kernel(const std::string &amp;kernel_name, const std::set&lt; std::string &gt; &amp;build_options_set={}) const</div><div class="ttdoc">Creates a kernel from the kernel library. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00044">CLKernelLibrary.cpp:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_adb48a1da7dc6b6f3c1a424d21e1ac1f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">arm_compute::CLCompileContext::default_ndrange</a></div><div class="ttdeci">cl::NDRange default_ndrange() const</div><div class="ttdoc">Return the default NDRange for the device. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00345">CLCompileContext.cpp:345</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a9f976367edcd9ab787375373e050b94b"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">arm_compute::CLKernelLibrary::init</a></div><div class="ttdeci">void init(std::string kernel_path, cl::Context context, cl::Device device)</div><div class="ttdoc">Initialises the kernel library. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00056">CLKernelLibrary.cpp:56</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a3dd891a07efcd9a5ae685f834973666d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">arm_compute::CLCompileContext::create_kernel</a></div><div class="ttdeci">Kernel create_kernel(const std::string &amp;kernel_name, const std::string &amp;program_name, const std::string &amp;program_source, const std::string &amp;kernel_path, const StringSet &amp;build_options_set, bool is_binary) const</div><div class="ttdoc">Creates an OpenCL kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00159">CLCompileContext.cpp:159</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a697a3f93a94d06390e777fd6e5cb7024"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a697a3f93a94d06390e777fd6e5cb7024">arm_compute::CLKernelLibrary::get_program_name</a></div><div class="ttdeci">std::string get_program_name(const std::string &amp;kernel_name) const</div><div class="ttdoc">Returns the program name given a kernel name. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00052">CLKernelLibrary.cpp:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a543610db0a6e5120dfb943e12a62909b"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a543610db0a6e5120dfb943e12a62909b">arm_compute::CLKernelLibrary::is_wbsm_supported</a></div><div class="ttdeci">bool is_wbsm_supported()</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00105">CLKernelLibrary.cpp:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml">arm_compute::CLCompileContext</a></div><div class="ttdoc">CLCompileContext class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">CLCompileContext.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a0ad613086cc79a2e32d5b87bcefc7488"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">arm_compute::CLCompileContext::clear_programs_cache</a></div><div class="ttdeci">void clear_programs_cache()</div><div class="ttdoc">Clear the library&amp;#39;s cache of binary programs. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00318">CLCompileContext.cpp:318</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a7406f704be6891f5a9a1c6dbc3e882df"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">arm_compute::CLCompileContext::int64_base_atomics_supported</a></div><div class="ttdeci">bool int64_base_atomics_supported() const</div><div class="ttdoc">Returns true if int64_base_atomics extension is supported by the CL device. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00365">CLCompileContext.cpp:365</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a4f51d241825bd6710fe81b581068ba1e"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">arm_compute::CLCompileContext::fp16_supported</a></div><div class="ttdeci">bool fp16_supported() const</div><div class="ttdoc">Returns true if FP16 is supported by the CL device. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00290">CLCompileContext.cpp:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_kernel.xhtml">arm_compute::Kernel</a></div><div class="ttdoc">Kernel class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00162">CLCompileContext.h:162</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a7406f704be6891f5a9a1c6dbc3e882df"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">arm_compute::CLKernelLibrary::int64_base_atomics_supported</a></div><div class="ttdeci">bool int64_base_atomics_supported() const</div><div class="ttdoc">Returns true if int64_base_atomics extension is supported by the CL device. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00101">CLKernelLibrary.cpp:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a54bb195c770b747d87af7506c2032aa4"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">arm_compute::CLCompileContext::get_built_programs</a></div><div class="ttdeci">const std::map&lt; std::string, cl::Program &gt; &amp; get_built_programs() const</div><div class="ttdoc">Access the cache of built OpenCL programs. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00324">CLCompileContext.cpp:324</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a4f51d241825bd6710fe81b581068ba1e"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">arm_compute::CLKernelLibrary::fp16_supported</a></div><div class="ttdeci">bool fp16_supported() const</div><div class="ttdoc">Returns true if FP16 is supported by the CL device. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00097">CLKernelLibrary.cpp:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_aaeda307cc2131afa8a4764e38373f94e"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">arm_compute::CLCompileContext::max_local_workgroup_size</a></div><div class="ttdeci">size_t max_local_workgroup_size(const cl::Kernel &amp;kernel) const</div><div class="ttdoc">Find the maximum number of local work items in a workgroup can be supported for the kernel...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00375">CLCompileContext.cpp:375</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml">arm_compute::CLKernelLibrary</a></div><div class="ttdoc">CLKernelLibrary class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_source.xhtml#l00038">CLKernelLibrary.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_ae9f578f0e7a9fa45b61090426913b08e"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">arm_compute::opencl::ClKernelLibrary::set_kernel_path</a></div><div class="ttdeci">void set_kernel_path(std::string kernel_path)</div><div class="ttdoc">Sets the path that the kernels reside in. </div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00982">ClKernelLibrary.cpp:982</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_ad7395c158d8e31b9af211b9bc1f65a08"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">arm_compute::CLKernelLibrary::get_kernel_path</a></div><div class="ttdeci">std::string get_kernel_path()</div><div class="ttdoc">Gets the path that the kernels reside in. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00081">CLKernelLibrary.cpp:81</a></div></div>
<div class="ttc" id="src_2gpu_2cl_2_c_l_kernel_library_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2_c_l_kernel_library_8h.xhtml">ClKernelLibrary.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a251e0ce50dc147c782cad51f4bee32ea"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">arm_compute::CLCompileContext::add_built_program</a></div><div class="ttdeci">void add_built_program(const std::string &amp;built_program_name, const cl::Program &amp;program) const</div><div class="ttdoc">Add a new built program to the cache. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00313">CLCompileContext.cpp:313</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_compile_context_xhtml_a293edc1bbcbddffb7228ac97917ed107"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">arm_compute::CLCompileContext::set_context</a></div><div class="ttdeci">void set_context(cl::Context context)</div><div class="ttdoc">Sets the CL context used to create programs. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00218">CLCompileContext.cpp:218</a></div></div>
<div class="ttc" id="_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00056">ClIm2ColKernel.cpp:56</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a54bb195c770b747d87af7506c2032aa4"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54bb195c770b747d87af7506c2032aa4">arm_compute::CLKernelLibrary::get_built_programs</a></div><div class="ttdeci">const std::map&lt; std::string, cl::Program &gt; &amp; get_built_programs() const</div><div class="ttdoc">Access the cache of built OpenCL programs. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00089">CLKernelLibrary.cpp:89</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a1b3919fb1e9372257947abe01e74e3d4"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">arm_compute::CLKernelLibrary::get_device</a></div><div class="ttdeci">const cl::Device &amp; get_device()</div><div class="ttdoc">Gets the CL device for which the programs are created. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00069">CLKernelLibrary.cpp:69</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available. </div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00188">OpenCL.cpp:188</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLKernelLibrary::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00065">CLKernelLibrary.cpp:65</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp.xhtml">CLKernelLibrary.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
