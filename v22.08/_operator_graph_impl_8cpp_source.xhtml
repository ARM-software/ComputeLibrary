<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/WorkloadImpl/OperatorGraphImpl.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_operator_graph_impl_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OperatorGraphImpl.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_operator_graph_impl_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/core/CL/CLHelpers.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_graph_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ClKernelGraph.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_operator_graph_impl_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/OperatorGraphImpl.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;Status add_kernel_tensor(ClKernelGraph &amp;k_graph, <span class="keyword">const</span> OperatorGraph::Implementation &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>, <span class="keyword">const</span> OpTensorContent &amp;op_tensor, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, AuxMemoryInfo memory_info,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                         <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> &amp;<span class="keywordtype">id</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(op_graph);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> k_graph.add_kernel_tensor(op_tensor.desc, memory_type, memory_info, <span class="keywordtype">id</span>, op_tensor.id);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;Status add_kernel_tensor(ClKernelGraph &amp;k_graph, <span class="keyword">const</span> OperatorGraph::Implementation &amp;op_graph, <span class="keyword">const</span> OpTensorContent &amp;op_tensor, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> &amp;<span class="keywordtype">id</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// For a tensor t</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// 1. If t is a src tensor of the entire op graph, then it&#39;s Core.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">//    (Optimisation opportunity, if we guanrantee that all translate methods are called in topological order, we can always assign t to Core.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">//       Because even if the op is non-root (which would mean t should be an Aux tensor), the src tensors would be already be determined by the ancestor ops (topological order), and thus would not be overriden by it)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// 2. If t is a dst tensor of the entire op graph, then it&#39;s Core.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// 3. Aux tensor with Persistent and Prepare lifetime is manually specified</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// 4. All other ts not captured by the above are assigned Aux, with lifetime of Temporary.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// kernel_graph.add_kernel_tensor(input-&gt;desc, );</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">bool</span>          is_src_tensor_of_graph = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(op_tensor.id, op_graph.graph.src_tensors());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">bool</span>          is_dst_tensor_of_graph = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(op_tensor.id, op_graph.graph.dst_tensors());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>    memory_type;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    AuxMemoryInfo memory_info;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span>(is_src_tensor_of_graph || is_dst_tensor_of_graph)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        memory_type = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153">MemoryType::Core</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        memory_type          = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">MemoryType::Auxiliary</a>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        memory_info.lifetime = <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a">AuxMemoryLifetime::Temporary</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        memory_info.size     = op_tensor.desc-&gt;total_size();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> add_kernel_tensor(k_graph, op_graph, op_tensor, memory_type, memory_info, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">/** Get the suitable kernel size for using direct convolution method with NHWC data layout.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * @note Duplicate of the function with the same name in src/gpu/cl/operators/ClConv2d.cpp</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * @note Direct convolution should be executed when the kernel has the spatial dimensions greater than or equal to the value returned by this function</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"> * @param[in] gpu_target GPU target</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"> * @return the suitable kernel size for using direct convolution method with NHWC data layout</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keywordtype">size_t</span> get_direct_conv_kernel_threshold_nhwc(<a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a> gpu_target)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">switch</span>(gpu_target)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::GPUTarget::G76</a>:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0">arm_compute::GPUTarget::G77</a>:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a595d09065a2c40fe303ea9bcd801c029">arm_compute::GPUTarget::G78</a>:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">return</span> 5;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a>:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a>:</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">arm_compute::GPUTarget::BIFROST</a>:</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">return</span> 7;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> 5;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">  103</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t1)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(t0.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#a12ba42d3b571d9f64ecd959b78fcfddf">id</a>()) == std::make_tuple(t1.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#a12ba42d3b571d9f64ecd959b78fcfddf">id</a>());</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa34ca059f32a463336619ec3441c1088">  107</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a> &amp;pad0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a> &amp;pad1)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(pad0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a>, pad0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">right</a>, pad0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">bottom</a>, pad0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">left</a>) == std::make_tuple(pad1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a>, pad1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">right</a>, pad1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">bottom</a>, pad1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">left</a>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac997944688479da60b47ca8bb8ecc0a9">  111</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;conv2d0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;conv2d1)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(conv2d0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>, conv2d0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>, conv2d0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e">dilation</a>) == std::make_tuple(conv2d1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>, conv2d1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>, conv2d1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e">dilation</a>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72adb28e3acb2a0197af3763e92929e1">  116</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;ed0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;ed1)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> ed0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">op</a> == ed1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">op</a>; <span class="comment">// Compare Arithmatic Operations of two ElementwiseDescriptor objects</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a724446ab270739141433cc8682bc2648">  121</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> std::make_tuple() == std::make_tuple(); <span class="comment">// Currently two Floor ops are always the same</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">  126</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">Conv2dContent::operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> converted = *utils::cast::polymorphic_downcast&lt;const Conv2dContent *&gt;(&amp;other);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> == converted.desc;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">  132</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">ElementwiseContent::operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> converted = *utils::cast::polymorphic_downcast&lt;const ElementwiseContent *&gt;(&amp;other);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> == converted.desc;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">  138</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">FloorContent::operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> converted = *utils::cast::polymorphic_downcast&lt;const FloorContent *&gt;(&amp;other);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> == converted.desc;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0681993d97b8df731e0009979637899e">  144</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0681993d97b8df731e0009979637899e">Conv2dContent::select_conv_method</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Modified from ClConv2d::get_convolution_method</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(src);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(dst);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(weights);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> legacy_pad_stride(conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>(), conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>(), conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">left</a>, conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">right</a>, conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a>, conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">bottom</a>, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">DimensionRoundingType</a>{});</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>        dilation = conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e">dilation</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_w = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_h = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> idx_c = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">/* Input spatial dims, kernel size, IFM/OFM, conv info*/</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">using</span> ConvolutionConfiguration = std::tuple&lt;Size2D, Size2D, Size2D, PadStrideInfo, DataLayout&gt;;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">using</span> ConfigurationMethod      = std::pair&lt;ConvolutionConfiguration, ConvolutionMethod&gt;;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">const</span> std::vector&lt;ConfigurationMethod&gt; known_configs =</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">// Alexnet</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(27<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 27<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(5<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 5<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(48<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 128<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>),</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment">// VGG16 / VGG19</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 64<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>),</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="comment">// Mobilenet 224</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 32<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">// Mobilenet 160</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(160<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 160<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 24<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="comment">// Mobilenet 224</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 224<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 32<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// Mobilenet 160</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        ConfigurationMethod(ConvolutionConfiguration(<a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(160<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 160<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 24<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>(2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a>), <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>), <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>),</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    };</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> find_config = [&amp;](ConfigurationMethod c)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keyword">const</span> ConvolutionConfiguration config      = c.first;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>        = std::get&lt;3&gt;(config);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = std::get&lt;4&gt;(config);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(config) == <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_w), src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h)) &amp;&amp; std::get&lt;1&gt;(config) == <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_w), weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h))</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;               &amp;&amp; std::get&lt;2&gt;(config) == <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_c), weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3)) &amp;&amp; info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">pad_top</a>() == legacy_pad_stride.pad_top() &amp;&amp; info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">pad_right</a>() == legacy_pad_stride.pad_right()</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;               &amp;&amp; info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">pad_bottom</a>() == legacy_pad_stride.pad_bottom() &amp;&amp; info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">pad_left</a>() == legacy_pad_stride.pad_left() &amp;&amp; info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">stride</a>() == legacy_pad_stride.stride() &amp;&amp; (data_layout == src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>());</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    };</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    std::vector&lt;ConfigurationMethod&gt;::const_iterator found;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span>((found = std::find_if(known_configs.begin(), known_configs.end(), find_config)) != known_configs.end())</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">return</span> (*found).second;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">if</span>(dilation != <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>))</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NCHW not supported&quot;</span>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">bool</span>   is_direct_valid           = bool(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ab4b19da5baa8d8d7b5256bf3d3c95359">ClDirectConv2dKernel::validate</a>(src, weights, <span class="keyword">nullptr</span>, dst, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a>{ conv2d_desc }));</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">size_t</span> kernel_sz_direct_conv_thr = get_direct_conv_kernel_threshold_nhwc(gpu_target);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="comment">// SRGAN case</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">if</span>((src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h) &gt; 720<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) &amp;&amp; (dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h) &gt; 720<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) &amp;&amp; (weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h) == 9) &amp;&amp; (conv2d_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a> &lt; 3)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;               &amp;&amp; is_direct_valid)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="comment">// Floating-point case: GeMM/Direct</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="comment">// Get dst shape</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>       = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(*src, *weights, legacy_pad_stride);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_large_kernel_sz = (weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_w) &gt;= kernel_sz_direct_conv_thr) &amp;&amp; (weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_h) &gt;= kernel_sz_direct_conv_thr);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_ifm_ge_16       = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_c) &gt;= 16;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_ofm_lte_8       = weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) &lt;= 8;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span>  workload_gte_8192  = (output_shape[0] * output_shape[1] * output_shape[2]) / 16 &gt;= 8192;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_ifm_gt_ofm      = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(idx_c) &gt; weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="comment">// Direct convolution case</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="keywordflow">if</span>(is_direct_valid)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    <span class="keywordflow">if</span>((gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a> || gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a> || gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a>))</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        <span class="keywordflow">if</span>(is_large_kernel_sz &amp;&amp; is_ifm_ge_16 &amp;&amp; is_ifm_gt_ofm)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    <span class="keywordflow">else</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    {</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                        <span class="keywordflow">if</span>((is_large_kernel_sz &amp;&amp; workload_gte_8192 &amp;&amp; is_ifm_ge_16) || (is_ofm_lte_8 &amp;&amp; is_ifm_ge_16))</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                        {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                        }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="comment">// Default case</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="comment">// Generic case for quantized. Only GeMM</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">ConvolutionMethod::GEMM</a>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">  259</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">Conv2dContent::translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph)<span class="keyword"> const</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>  = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>    = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> method = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a59771d2f4ed449446be3d7d227da5786">forced_method_enabled</a> ? <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#accab095ff3f3406397b7034d31c6b0d3">forced_method</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0681993d97b8df731e0009979637899e">Conv2dContent::select_conv_method</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;desc, weight-&gt;desc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;desc, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a>, <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>());</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">switch</span>(method)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">ConvolutionMethod::DIRECT</a>:</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">return</span> translate_direct_conv2d(kernel_graph);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <a class="code" href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a>(<span class="stringliteral">&quot;Not implemented&quot;</span>);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;}</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> Conv2dContent::translate_direct_conv2d(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph)<span class="keyword"> const</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>  = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>   = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">TensorType::ACL_SRC_2</a>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>    = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, weight, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> input_id;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">auto</span>                st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, input_id);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(input_id));</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> weight_id;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    st = add_kernel_tensor(kernel_graph, *_graph, *weight, weight_id);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(weight_id));</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> bias_id;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, bias_id);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">ACL_SRC_2</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(bias_id));</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> dst_id;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, dst_id);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(dst_id));</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> direct_conv2d_id;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>          kernel_desc = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> };</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    st = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ab4b19da5baa8d8d7b5256bf3d3c95359">ClDirectConv2dKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;desc, weight-&gt;desc, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> == <span class="keyword">nullptr</span> ? <span class="keyword">nullptr</span> : <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>-&gt;desc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;desc, kernel_desc);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> config{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a> }, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a>{}, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450ca230c8bbd95d90b28049617d5e793bb5f">StoreType::TStoreIndirectWidthSelect</a> };</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    st = kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">add_kernel</a>&lt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">ClDirectConv2dKernel</a>&gt;(config, kernel_desc, tensors, direct_conv2d_id);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(direct_conv2d_id);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">  325</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">ElementwiseContent::translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph)<span class="keyword"> const</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> lhs = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> rhs = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(lhs, rhs, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> lhs_id;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keyword">auto</span>                st = add_kernel_tensor(kernel_graph, *_graph, *lhs, lhs_id);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(lhs_id));</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> rhs_id;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    st = add_kernel_tensor(kernel_graph, *_graph, *rhs, rhs_id);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">ACL_SRC_1</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(rhs_id));</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> dst_id;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, dst_id);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(dst_id));</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> add_id;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a>      config{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a> }, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a>{}, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450ca230c8bbd95d90b28049617d5e793bb5f">StoreType::TStoreIndirectWidthSelect</a> };</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    st = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a297c280b6fded44f7b414cfece89950b">ClElementwiseKernel::validate</a>(lhs-&gt;desc, rhs-&gt;desc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;desc);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    st = kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">add_kernel</a>&lt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">ClElementwiseKernel</a>&gt;(config, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml">ClElementwiseKernelDescriptor</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> }, tensors, add_id);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(add_id);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">  362</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">FloorContent::translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph)<span class="keyword"> const</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a> = _tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> src_id;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">auto</span>                st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, src_id);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">ACL_SRC_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(src_id));</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> dst_id;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    st = add_kernel_tensor(kernel_graph, *_graph, *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, dst_id);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">add_const_tensor</a>(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">ACL_DST_0</a>, kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(dst_id));</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a> add_id;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a>      config{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a> }, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a>{}, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450ca230c8bbd95d90b28049617d5e793bb5f">StoreType::TStoreIndirectWidthSelect</a> };</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    st = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a1f4089d0d7191158a65d297c6a130682">ClFloorKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;desc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>-&gt;desc);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    st = kernel_graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">add_kernel</a>&lt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">ClFloorKernel</a>&gt;(config, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor.xhtml">ClFloorKernelDescriptor</a>{ <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">desc</a> }, tensors, add_id);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;}</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae81a1f9c76f1814031ee484d5fc47341">  392</a></span>&#160;std::vector&lt;const OperatorContent *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;{</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    std::vector&lt;const OperatorContent *&gt; ops;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                           sorted = graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a34a0357f1b58c5c5f4a45b7014efdc58">topological_sort</a>();</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> : sorted.second)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        ops.push_back(graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">operators</a>.at(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.op).get());</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    }</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">return</span> ops;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;}</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a55a89c3f2ec8366e76bdf87983cd8fc7">  403</a></span>&#160;std::vector&lt;OperatorContent *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph)</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;{</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    std::vector&lt;OperatorContent *&gt; ops;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                     sorted = graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a34a0357f1b58c5c5f4a45b7014efdc58">topological_sort</a>();</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> : sorted.second)</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    {</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        ops.push_back(graph.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">operators</a>.at(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.op).get());</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    }</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordflow">return</span> ops;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">  414</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;op_graph)</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;{</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;op : <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(op_graph))</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = op-&gt;translate(kernel_graph);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(st);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    }</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">arm_compute::experimental::dynamic_fusion::OpTensor</a></div><div class="ttdoc">Operator Tensor Handle This can be either an argument tensor, or an intermediate tensor linking 2 Ope...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00068">OperatorGraph.h:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content_xhtml_af7bae146188f93c4f8fadd554840cfe0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">arm_compute::experimental::dynamic_fusion::ElementwiseContent::translate</a></div><div class="ttdeci">Status translate(ClKernelGraph &amp;kernel_graph) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00325">OperatorGraphImpl.cpp:325</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a01cea947a24713975f86d0769bf8fad5">arm_compute::ACL_SRC_2</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00047">Types.h:47</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_a859088de403805f35d826df5ef39ee80"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">arm_compute::experimental::dynamic_fusion::Padding2D::bottom</a></div><div class="ttdeci">size_t bottom</div><div class="ttdoc">Padding across the height dimension on the bottom, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00143">OperatorGraph.h:143</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_ab211a304154342c9b79855da938cbc88"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">arm_compute::experimental::dynamic_fusion::Conv2dContent::desc</a></div><div class="ttdeci">Conv2dDescriptor desc</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00152">OperatorGraphImpl.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00403">ConvolutionLayer.cpp:403</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa46ce37da51477a1af33a8810e0ed04d">arm_compute::GPUTarget::G76</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00182">ClKernelGraph.h:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension. </div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler.cpp:49</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">arm_compute::experimental::dynamic_fusion::OperatorContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00087">OperatorGraphImpl.h:87</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdoc">Floor rounding. </div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content_xhtml_af7bae146188f93c4f8fadd554840cfe0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">arm_compute::experimental::dynamic_fusion::FloorContent::translate</a></div><div class="ttdeci">Status translate(ClKernelGraph &amp;kernel_graph) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00362">OperatorGraphImpl.cpp:362</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml_a06504ecad0ad3eab61f6a1f6ebb11b92"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::pad</a></div><div class="ttdeci">Padding2D pad</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00151">OperatorGraph.h:151</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a">arm_compute::DimensionRoundingType</a></div><div class="ttdeci">DimensionRoundingType</div><div class="ttdoc">Dimension rounding type when down-scaling on CNNs. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00550">Types.h:550</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClFloorKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00162">ClKernelGraph.h:162</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a5403557297e77f4648580ccb49c4173a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::operators</a></div><div class="ttdeci">OperatorMap operators</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00236">OperatorGraphImpl.h:236</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_xhtml_ab4b19da5baa8d8d7b5256bf3d3c95359"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ab4b19da5baa8d8d7b5256bf3d3c95359">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *dst, const ClDirectConv2dKernelDescriptor &amp;conv2d_desc)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8cpp_source.xhtml#l00061">ClKernelGraph.cpp:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a94b8468af876f5ab54020d5e9787a4f0"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">arm_compute::Size2D::x</a></div><div class="ttdeci">size_t x() const</div><div class="ttdoc">Semantic accessor for width as x. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00075">Size2D.h:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a3fea0ce4e6eeee7bf3a511c31b51d44f"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a3fea0ce4e6eeee7bf3a511c31b51d44f">arm_compute::PadStrideInfo::pad_top</a></div><div class="ttdeci">unsigned int pad_top() const</div><div class="ttdoc">Get the top padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00753">Types.h:753</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153">arm_compute::experimental::dynamic_fusion::MemoryType::Core</a></div><div class="ttdoc">Core memory used by the Workload Tensor, e.g. </div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a34a0357f1b58c5c5f4a45b7014efdc58"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a34a0357f1b58c5c5f4a45b7014efdc58">arm_compute::experimental::dynamic_fusion::DependencyGraph::topological_sort</a></div><div class="ttdeci">std::pair&lt; Status, std::vector&lt; OpPack &gt; &gt; topological_sort() const</div><div class="ttdoc">Sort the graph in a topological order. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00380">DependencyGraph.cpp:380</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0e5a222683b4e850a681a8b7f593f9c3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">arm_compute::experimental::dynamic_fusion::traverse</a></div><div class="ttdeci">std::vector&lt; const ClKernel * &gt; traverse(const ClKernelFusionGroup &amp;group)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">ClFusedKernelGraph.cpp:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">arm_compute::experimental::dynamic_fusion::MemoryType</a></div><div class="ttdeci">MemoryType</div><div class="ttdoc">Type of memory used by a Workload Tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00059">IWorkload.h:59</a></div></div>
<div class="ttc" id="core_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00134">Types.h:134</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClElementwiseKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00142">ClKernelGraph.h:142</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_xhtml_a1f4089d0d7191158a65d297c6a130682"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a1f4089d0d7191158a65d297c6a130682">arm_compute::experimental::dynamic_fusion::ClFloorKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8cpp_source.xhtml#l00209">ClKernelGraph.cpp:209</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::FloorDescriptor</a></div><div class="ttdoc">Descriptor for Floor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00205">OperatorGraph.h:205</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00208">OperatorGraphImpl.h:208</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml_af5212d2d7b4918bf6251e1967182179f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::stride</a></div><div class="ttdeci">Size2D stride</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00152">OperatorGraph.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76">arm_compute::ConvolutionMethod::DIRECT</a></div><div class="ttdoc">Direct convolution. </div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_aa022cff9934a1a99bd77c49ca6a135a2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">arm_compute::experimental::dynamic_fusion::Padding2D::right</a></div><div class="ttdeci">size_t right</div><div class="ttdoc">Padding across the width dimension on the right, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00141">OperatorGraph.h:141</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">arm_compute::experimental::dynamic_fusion::ITensorDescPack</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00039">ITensorDescPack.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab05719fb0811c6eb8a452864575501e2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">arm_compute::experimental::dynamic_fusion::is_in</a></div><div class="ttdeci">bool is_in(const T &amp;v, const std::vector&lt; T &gt; &amp;vec)</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00041">DependencyGraph.h:41</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a49509a42eb2f3dfac81faeb4fa4e82b3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::graph</a></div><div class="ttdeci">Dependency graph</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00235">OperatorGraphImpl.h:235</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClFloorKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00054">ClKernelDescriptors.h:54</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a595d09065a2c40fe303ea9bcd801c029"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a595d09065a2c40fe303ea9bcd801c029">arm_compute::GPUTarget::G78</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a6e324c1bd1111876469ea247da156147"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">arm_compute::PadStrideInfo::stride</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; stride() const</div><div class="ttdoc">Get the stride. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00717">Types.h:717</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelConfig</a></div><div class="ttdoc">Configurations for ClKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00054">ClKernelGraph.h:54</a></div></div>
<div class="ttc" id="_operator_graph_impl_8h_xhtml"><div class="ttname"><a href="_operator_graph_impl_8h.xhtml">OperatorGraphImpl.h</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_a0277b5c0c68be5aa6bd44b88f1bb0056"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">arm_compute::experimental::dynamic_fusion::Conv2dContent::operator==</a></div><div class="ttdeci">bool operator==(const OperatorContent &amp;other) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00126">OperatorGraphImpl.cpp:126</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a">arm_compute::experimental::MemoryLifetime::Temporary</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00045">ClKernelDescriptors.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a3860caeeaa259d59ccf69c3aea23f549"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a3860caeeaa259d59ccf69c3aea23f549">arm_compute::PadStrideInfo::pad_right</a></div><div class="ttdeci">unsigned int pad_right() const</div><div class="ttdoc">Get the right padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00748">Types.h:748</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdoc">Run every time after the first time. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3ab2ac2aea42c95ccc70260ceeb02ec4fc">arm_compute::GPUTarget::G72</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00669">Types.h:669</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_xhtml_a297c280b6fded44f7b414cfece89950b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a297c280b6fded44f7b414cfece89950b">arm_compute::experimental::dynamic_fusion::ClElementwiseKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *lhs, const ITensorInfo *rhs, const ITensorInfo *dst)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8cpp_source.xhtml#l00144">ClKernelGraph.cpp:144</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml_a5159123bf7ffd6ecb44e7322a9b0492e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::dilation</a></div><div class="ttdeci">Size2D dilation</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00153">OperatorGraph.h:153</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::MemoryType::Auxiliary</a></div><div class="ttdoc">Auxiliary memory required by the Workload Tensor, e.g. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::TileDescriptor</a></div><div class="ttdoc">Component: Store. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00079">ClKernelDescriptors.h:79</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor</a></div><div class="ttdoc">Descriptor for Elementwise binary operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00182">OperatorGraph.h:182</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage</a></div><div class="ttdoc">Describes when a Unit Workload is run. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00043">IWorkload.h:43</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_a951236a0702535ba18ba51db69428658"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">arm_compute::experimental::dynamic_fusion::Padding2D::left</a></div><div class="ttdeci">size_t left</div><div class="ttdoc">Padding across the width dimension on the left, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00140">OperatorGraph.h:140</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdoc">Num samples, channels, height, width. </div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_aaaeb4853150b7d0e8b685fd08052924f"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">arm_compute::Size2D::y</a></div><div class="ttdeci">size_t y() const</div><div class="ttdoc">Semantic accessor for height as y. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00084">Size2D.h:84</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor</a></div><div class="ttdoc">Descriptor for Conv2dDescriptor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00148">OperatorGraph.h:148</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_a228484585f0c1b71ad5392081698d722"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a228484585f0c1b71ad5392081698d722">arm_compute::experimental::dynamic_fusion::ITensorDescPack::add_const_tensor</a></div><div class="ttdeci">void add_const_tensor(int id, const TDesc *tensor)</div><div class="ttdoc">Add const tensor to the pack. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00104">ITensorDescPack.h:104</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_accab095ff3f3406397b7034d31c6b0d3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#accab095ff3f3406397b7034d31c6b0d3">arm_compute::experimental::dynamic_fusion::Conv2dContent::forced_method</a></div><div class="ttdeci">ConvolutionMethod forced_method</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00153">OperatorGraphImpl.h:153</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="_cl_kernel_graph_8h_xhtml"><div class="ttname"><a href="_cl_kernel_graph_8h.xhtml">ClKernelGraph.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a9561091f3566e78ad3aa39259bc4126a"><div class="ttname"><a href="_error_8h.xhtml#a9561091f3566e78ad3aa39259bc4126a">ARM_COMPUTE_RETURN_ERROR_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_MSG(...)</div><div class="ttdoc">An error is returned with the given description. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00194">Error.h:194</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets. </div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00122">ClKernelGraph.h:122</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00036">ClKernelDescriptors.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content_xhtml_a0277b5c0c68be5aa6bd44b88f1bb0056"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">arm_compute::experimental::dynamic_fusion::FloorContent::operator==</a></div><div class="ttdeci">bool operator==(const OperatorContent &amp;other) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00138">OperatorGraphImpl.cpp:138</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a1dbb5cee7e0db713bcdb126bd9db5d67"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">arm_compute::experimental::dynamic_fusion::ClKernelGraph::add_kernel</a></div><div class="ttdeci">Status add_kernel(const ClKernelConfig &amp;config, const KernelDescT &amp;desc, const ITensorDescPack&lt; ClKernelTensor &gt; &amp;tensors, Id &amp;kernel_id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00208">ClKernelGraph.h:208</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a562285808c3bd1107ae49be79d24d41f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">arm_compute::test::validation::conv2d_desc</a></div><div class="ttdeci">const auto conv2d_desc</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00254">Integration_OperatorFuseMovenetSubGraph1.cpp:254</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_xhtml_a12ba42d3b571d9f64ecd959b78fcfddf"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#a12ba42d3b571d9f64ecd959b78fcfddf">arm_compute::experimental::dynamic_fusion::OpTensor::id</a></div><div class="ttdeci">Id id() const</div><div class="ttdoc">Id of the OpTensor. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00079">OperatorGraph.cpp:79</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_a0681993d97b8df731e0009979637899e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a0681993d97b8df731e0009979637899e">arm_compute::experimental::dynamic_fusion::Conv2dContent::select_conv_method</a></div><div class="ttdeci">static ConvolutionMethod select_conv_method(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const Conv2dDescriptor &amp;conv2d_desc, const GPUTarget gpu_target)</div><div class="ttdoc">Replicate heuristics of ClConv2d::get_convolution_method(), except that non-supported data types and ...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00144">OperatorGraphImpl.cpp:144</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_ab9332a87d0af5aa12cac847eff68b7af"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">arm_compute::experimental::dynamic_fusion::Padding2D::top</a></div><div class="ttdeci">size_t top</div><div class="ttdoc">Padding across the height dimension on the top, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00142">OperatorGraph.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_a59771d2f4ed449446be3d7d227da5786"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a59771d2f4ed449446be3d7d227da5786">arm_compute::experimental::dynamic_fusion::Conv2dContent::forced_method_enabled</a></div><div class="ttdeci">bool forced_method_enabled</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00154">OperatorGraphImpl.h:154</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aa78cc0fd1cab24af0fad71dc4c256f8e">arm_compute::GPUTarget::BIFROST</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aac5e2a1f61e8ea5255aca62f83e9124f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">arm_compute::experimental::dynamic_fusion::DependencyGraph::Id</a></div><div class="ttdeci">SerialIdAllocator::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00073">DependencyGraph.h:73</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">arm_compute::experimental::dynamic_fusion::Padding2D</a></div><div class="ttdoc">Padding information for 2D operations like Conv2dDescriptor. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00133">OperatorGraph.h:133</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_ac49df0924d183da42cffc04cf9aba1f8"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#ac49df0924d183da42cffc04cf9aba1f8">arm_compute::PadStrideInfo::pad_bottom</a></div><div class="ttdeci">unsigned int pad_bottom() const</div><div class="ttdoc">Get the bottom padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00758">Types.h:758</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a7144874ab401f5c4e249a1115dfb5166"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a7144874ab401f5c4e249a1115dfb5166">arm_compute::PadStrideInfo::pad_left</a></div><div class="ttdeci">unsigned int pad_left() const</div><div class="ttdoc">Get the left padding. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00743">Types.h:743</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_af08b2231cd81fad5422b1d7240d26806"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">arm_compute::experimental::dynamic_fusion::operator==</a></div><div class="ttdeci">bool operator==(const OpTensor &amp;t0, const OpTensor &amp;t1)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00103">OperatorGraphImpl.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml_a93bb3b7307a60a60b1d2329d33386c0b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor::op</a></div><div class="ttdeci">ArithmeticOperation op</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00187">OperatorGraph.h:187</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition] </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::ConvolutionMethod::GEMM</a></div><div class="ttdoc">Convolution using GEMM. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a26ce1702be726c11355b21545e75e207"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_tensor</a></div><div class="ttdeci">ClKernelTensor * get_tensor(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00237">ClKernelGraph.h:237</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_ac93cc76b563b366f030b8310a46046c3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">arm_compute::misc::shape_calculator::compute_deep_convolution_shape</a></div><div class="ttdeci">TensorShape compute_deep_convolution_shape(const TensorShape &amp;input_shape, DataLayout input_data_layout, const TensorShape &amp;weights_shape, const PadStrideInfo &amp;conv_info)</div><div class="ttdoc">Calculate the deep convolution shape output shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00713">ShapeCalculator.h:713</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01010">Utils.h:1010</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a204edbd0a54dd4c773a4f5a0e14f450ca230c8bbd95d90b28049617d5e793bb5f"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450ca230c8bbd95d90b28049617d5e793bb5f">arm_compute::experimental::dynamic_fusion::StoreType::TStoreIndirectWidthSelect</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content_xhtml_a0277b5c0c68be5aa6bd44b88f1bb0056"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#a0277b5c0c68be5aa6bd44b88f1bb0056">arm_compute::experimental::dynamic_fusion::ElementwiseContent::operator==</a></div><div class="ttdeci">bool operator==(const OperatorContent &amp;other) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00132">OperatorGraphImpl.cpp:132</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_af7bae146188f93c4f8fadd554840cfe0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#af7bae146188f93c4f8fadd554840cfe0">arm_compute::experimental::dynamic_fusion::Conv2dContent::translate</a></div><div class="ttdeci">Status translate(ClKernelGraph &amp;kernel_graph) const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00259">OperatorGraphImpl.cpp:259</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a8e081b1cdec7bc064a67f31560ef7fe0">arm_compute::GPUTarget::G77</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_4a5d79691feea64a5adaad9e433740c9.xhtml">WorkloadImpl</a></li><li class="navelem"><a class="el" href="_operator_graph_impl_8cpp.xhtml">OperatorGraphImpl.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
