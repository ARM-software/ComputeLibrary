<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/gemv_pretransposed.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('gemv__pretransposed_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">gemv_pretransposed.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gemv__pretransposed_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bias__adder_8hpp.xhtml">bias_adder.hpp</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mergeresults_8hpp.xhtml">mergeresults.hpp</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="transform_8hpp.xhtml">transform.hpp</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;profiler.hpp&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a> {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> OutputStage&gt;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">class </span>run_gemv_kernel {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> strategy, <span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr&gt;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run</a> (</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">const</span> <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> &amp;strat,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">const</span> To *A_ptr, <span class="keyword">const</span> To *B_ptr, Tr *c_ptr,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, <span class="keywordtype">size_t</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keyword">const</span> Tr *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keyword">const</span> Activation &amp;act, <span class="keywordtype">bool</span> Accumulate,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keyword">const</span> OutputStage &amp;os, <span class="keyword">const</span> int32_t *col_bias, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col_base</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    );</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;};</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> strategy, <span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr&gt;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run_gemv_kernel&lt;Nothing&gt;::run</a>(</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">const</span> <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> &amp;strat,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">const</span> To *A_ptr, <span class="keyword">const</span> To *B_ptr, Tr *C_ptr,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a>, <span class="keywordtype">size_t</span> <a class="code" href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a>,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">const</span> Tr *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keyword">const</span> Activation &amp;act, <span class="keywordtype">bool</span> Accumulate,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">const</span> Nothing &amp;, <span class="keyword">const</span> int32_t *, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    strat.kernel(A_ptr, B_ptr, C_ptr, N, K, bias, act, Accumulate);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> strategy, <span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr&gt;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run_gemv_kernel&lt;Requantize32&gt;::run</a>(</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">const</span> <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> &amp;strat,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">const</span> To *A_ptr, <span class="keyword">const</span> To *B_ptr, Tr *C_ptr,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordtype">size_t</span> N, <span class="keywordtype">size_t</span> K,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">const</span> Tr *, <span class="keyword">const</span> Activation &amp;, <span class="keywordtype">bool</span>,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">const</span> Requantize32 &amp;qp, <span class="keyword">const</span> int32_t *col_bias, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> col_base</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    ) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    strat.kernel(A_ptr, B_ptr, C_ptr, N, K, &amp;qp, col_bias + col_base, col_base);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">// Implementation of the GemmCommon abstract class.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">// This is implementation is for GEMV with pretransposition.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">// batches are not supported as a batched GEMV makes no sense (can be converted to a GEMM).</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> strategy, <span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr, <span class="keyword">typename</span> OutputStage=Nothing&gt;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">   88</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> : <span class="keyword">public</span> <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml">GemmCommon</a>&lt;To, Tr&gt; {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> strategy::operand_type Toi;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> strategy::result_type Tri;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a>     _args;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _buffer_per_multi;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k_block=0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_block=0;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> Toi *_B_pretransposed = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    OutputStage _os;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Pointer to the column sums (for quantized cases)</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    int32_t *col_bias = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">// Get size of the column sums</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> get_col_sum_size()<span class="keyword"> const </span>{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">if</span>(std::is_same&lt;OutputStage, Requantize32&gt;::value) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> * <span class="keyword">sizeof</span>(int32_t);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a>(<a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp; operator= (<a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ad483117e698abf4718d215c3b7ddd74a">  119</a></span>&#160;    <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ad483117e698abf4718d215c3b7ddd74a">GemvPretransposed</a>(<span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_gemm_args.xhtml">GemmArgs</a> &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>, <span class="keyword">const</span> OutputStage &amp;os = {})</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                      : _args(args),</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        _buffer_per_multi(<a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, strategy::k_unroll()) * <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, strategy::out_width())),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        _os(os) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">/* For now don&#39;t do any blocking. TODO: figure out if we should. */</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span> (strategy::supports_accumulate() &amp;&amp; args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a> &amp;&amp; args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a>-&gt;<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#acc7f8048c4c8eb94458999a3e13fc519">inner_block_size</a>) {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            k_block = args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a>-&gt;<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#acc7f8048c4c8eb94458999a3e13fc519">inner_block_size</a>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            k_block = args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span> (args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a> &amp;&amp; args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a>-&gt;<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a3266f7e33a1db61de7fad71bf193d101">outer_block_size</a>) {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            n_block = args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">_cfg</a>-&gt;<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a3266f7e33a1db61de7fad71bf193d101">outer_block_size</a>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            n_block = args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// Window is number of out_width blocks, times number of multis.</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">  138</a></span>&#160;    <a class="code" href="classarm__gemm_1_1_n_d_range.xhtml">ndrange_t</a> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">get_window_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">return</span> { <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, strategy::out_width()) * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> };</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// Actually execute the GEMV.</span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a1d37407e8d582183b35dedbf7fa43b43">  143</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a1d37407e8d582183b35dedbf7fa43b43">execute</a>(<span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml">ndcoord_t</a> &amp;work_range, <span class="keyword">const</span> <a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml">ndcoord_t</a> &amp;, <span class="keywordtype">int</span>)<span class="keyword"> override </span>{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        profiler prof;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> strat(_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#abb02a9fd23c6187807ad015022708985">_ci</a>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> start = work_range.<a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml#a9bbea489f6defd913b01a39e05e708e4">get_position</a>(0);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>   = work_range.<a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml#a582a56796981d98bba73d4de244bd21e">get_position_end</a>(0);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="comment">/* Break the window values down into multis of interest... */</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_per_multi = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">iceildiv</a>(_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, strategy::out_width());</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi_0    = start / window_per_multi;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi_end  = <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a>   / window_per_multi;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment">/* ... and figure out where we start and end in the first and last multi. */</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_0   = (start - (multi_0 * window_per_multi)) * strategy::out_width();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_max = (<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a> - (multi_end * window_per_multi)) * strategy::out_width();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        static_assert(std::is_same&lt;Tr, Tri&gt;::value, <span class="stringliteral">&quot;GemvPretransposed: Result types must be the same.&quot;</span>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=multi_0; multi&lt;=multi_end; multi++) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_start = (multi==multi_0) ? n_0 : 0;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_end = (multi==multi_end) ? n_max : _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a21d4abeb421380e0af50776ed5362430">if</a> (n_end &lt;= n_start)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k0=0; k0&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>; k0+=k_block) {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kmax = std::min(k0 + k_block, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>=n_start; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>&lt;n_end; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>+=n_block) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nmax = std::min(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> + n_block, n_end);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    <span class="keyword">auto</span> p = prof.ScopedProfiler(PROFILE_KERNEL, (kmax-k0) * (nmax-<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>));</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">run_gemv_kernel&lt;OutputStage&gt;::run</a>(strat, this-&gt;_Aptr + (multi * this-&gt;_A_multi_stride) + k0,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                 _B_pretransposed + (multi * _buffer_per_multi) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> * <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">roundup</a>(_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, strategy::k_unroll())) + (k0 * strategy::out_width()),</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                 this-&gt;_Cptr + (multi * this-&gt;_C_multi_stride) + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                 (nmax - <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a>), (kmax-k0),</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                 this-&gt;_bias ? this-&gt;_bias + (multi * this-&gt;_bias_multi_stride) + <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                 _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a3e10740489c6494181b9bb7c3f8fb36d">_act</a>, (k0 != 0),</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                 _os, col_bias, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">n</a> + (_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a> * multi));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">/* Pretransposed interface implementation */</span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ac5dec5063a75604fdc60555f15577b94">  191</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ac5dec5063a75604fdc60555f15577b94">B_is_pretransposed</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">  195</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">B_pretranspose_required</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="comment">/* Transpose is required if _B_pretransposed is still nullptr */</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">return</span> (_B_pretransposed == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ae9fc7380e533c43a1d91e48a7578e412">  200</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ae9fc7380e533c43a1d91e48a7578e412">get_B_pretransposed_array_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> _buffer_per_multi * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a> * <span class="keyword">sizeof</span>(To) + get_col_sum_size();</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a0ae716040d875abeeba60aa4a6b73363">  204</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a0ae716040d875abeeba60aa4a6b73363">requantize_bias</a>(<span class="keywordtype">void</span> *in_buffer, <span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment">// Column sums go on the front of the pretransposed buffer in requantized cases.</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="comment">// We could optimize here in case we don&#39;t actually need to sum the columns, but this code is only run on setup.</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">if</span> (std::is_same&lt;OutputStage, Requantize32&gt;::value) {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            col_bias = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(in_buffer);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> *qp_ptr = <span class="keyword">reinterpret_cast&lt;</span><a class="code" href="structarm__gemm_1_1_requantize32.xhtml">Requantize32</a> *<span class="keyword">&gt;</span>(&amp;_os);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a>; i++) {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <a class="code" href="namespacearm__gemm.xhtml#a0f7c3bb1a6bbcb34dc0988ef61510c38">compute_col_sums</a>(*qp_ptr, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, B + (i * B_multi_stride), ldb, col_bias + (i * _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>), _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>, i, 0);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">  218</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">pretranspose_B_array</a>(<span class="keywordtype">void</span> *buffer, <span class="keyword">const</span> To *B, <span class="keyword">const</span> <span class="keywordtype">int</span> ldb, <span class="keyword">const</span> <span class="keywordtype">int</span> B_multi_stride)<span class="keyword"> override </span>{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        requantize_bias(buffer, B, ldb, B_multi_stride);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// The actual transposed buffer goes after the column sums (if any)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        uintptr_t buffer_int = <span class="keyword">reinterpret_cast&lt;</span>uintptr_t<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        Toi *B_buffer = <span class="keyword">reinterpret_cast&lt;</span>Toi *<span class="keyword">&gt;</span>(buffer_int + get_col_sum_size());</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <a class="code" href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a> strat(_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#abb02a9fd23c6187807ad015022708985">_ci</a>);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi=0; multi&lt;_args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">_nmulti</a>; multi++) {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            strat.transforms.PrepareB(B_buffer + (multi * _buffer_per_multi), B + (multi * B_multi_stride), ldb, 0, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">_Nsize</a>, 0, _args.<a class="code" href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">_Ksize</a>);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        _B_pretransposed = B_buffer;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a27df64c6276eb144594c5d37d1110b20">  234</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a27df64c6276eb144594c5d37d1110b20">set_pretransposed_B_data</a>(<span class="keywordtype">void</span> *buffer)<span class="keyword"> override </span>{</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        _B_pretransposed = <span class="keyword">reinterpret_cast&lt;</span>Toi *<span class="keyword">&gt;</span>(buffer);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a7cde60064c88a363415fc0639d09cc3e">  238</a></span>&#160;    <a class="code" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a> <a class="code" href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a7cde60064c88a363415fc0639d09cc3e">get_config</a>()<span class="keyword"> override </span>{</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="structarm__gemm_1_1_gemm_config.xhtml">GemmConfig</a> c;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a1ade5ed8fc2bd356dfe390ad634ca9e6">method</a> = <a class="code" href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1">GemmMethod::GEMV_PRETRANSPOSED</a>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#acc7f8048c4c8eb94458999a3e13fc519">inner_block_size</a> = k_block;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a3266f7e33a1db61de7fad71bf193d101">outer_block_size</a> = n_block;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        c.<a class="code" href="structarm__gemm_1_1_gemm_config.xhtml#a61e0e449fd7e8647d521cafd4f1d55a3">filter</a> = get_type_name&lt;strategy&gt;();</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">return</span> c;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;} <span class="comment">// namespace arm_gemm</span></div><div class="ttc" id="namespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00070">utils.hpp:70</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_abb02a9fd23c6187807ad015022708985"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#abb02a9fd23c6187807ad015022708985">arm_gemm::GemmArgs::_ci</a></div><div class="ttdeci">const CPUInfo * _ci</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00145">arm_gemm.hpp:145</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a967adad6c21766e82315265eccfd0ca5"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a967adad6c21766e82315265eccfd0ca5">arm_gemm::GemmArgs::_nmulti</a></div><div class="ttdeci">unsigned int _nmulti</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00151">arm_gemm.hpp:151</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a27df64c6276eb144594c5d37d1110b20"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a27df64c6276eb144594c5d37d1110b20">arm_gemm::GemvPretransposed::set_pretransposed_B_data</a></div><div class="ttdeci">void set_pretransposed_B_data(void *buffer) override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00234">gemv_pretransposed.hpp:234</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_ac5c8d64b5f5a1c32846af7e260c56f04"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#ac5c8d64b5f5a1c32846af7e260c56f04">arm_gemm::GemmArgs::_Nsize</a></div><div class="ttdeci">unsigned int _Nsize</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00147">arm_gemm.hpp:147</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_a3e10740489c6494181b9bb7c3f8fb36d"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#a3e10740489c6494181b9bb7c3f8fb36d">arm_gemm::GemmArgs::_act</a></div><div class="ttdeci">Activation _act</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00153">arm_gemm.hpp:153</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00065">utils.hpp:65</a></div></div>
<div class="ttc" id="mergeresults_8hpp_xhtml"><div class="ttname"><a href="mergeresults_8hpp.xhtml">mergeresults.hpp</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="barrier_8hpp_source.xhtml#l00030">barrier.hpp:30</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a21d4abeb421380e0af50776ed5362430"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a21d4abeb421380e0af50776ed5362430">arm_compute::test::validation::if</a></div><div class="ttdeci">if(cpu_isa.bf16)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00213">Cast.cpp:213</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_acf6183a5e4721a137bfce29c8b2febdb"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#acf6183a5e4721a137bfce29c8b2febdb">arm_gemm::GemmArgs::_cfg</a></div><div class="ttdeci">const GemmConfig * _cfg</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00157">arm_gemm.hpp:157</a></div></div>
<div class="ttc" id="arm__gemm_8hpp_xhtml"><div class="ttname"><a href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_acc7f8048c4c8eb94458999a3e13fc519"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#acc7f8048c4c8eb94458999a3e13fc519">arm_gemm::GemmConfig::inner_block_size</a></div><div class="ttdeci">unsigned int inner_block_size</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00110">arm_gemm.hpp:110</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_a3266f7e33a1db61de7fad71bf193d101"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#a3266f7e33a1db61de7fad71bf193d101">arm_gemm::GemmConfig::outer_block_size</a></div><div class="ttdeci">unsigned int outer_block_size</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00111">arm_gemm.hpp:111</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml">arm_gemm::GemmConfig</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00106">arm_gemm.hpp:106</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml">arm_gemm::GemmArgs</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00142">arm_gemm.hpp:142</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a28341e4e1158f3446a8dfa13c9f5c6f0"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a28341e4e1158f3446a8dfa13c9f5c6f0">arm_gemm::GemvPretransposed::pretranspose_B_array</a></div><div class="ttdeci">void pretranspose_B_array(void *buffer, const To *B, const int ldb, const int B_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00218">gemv_pretransposed.hpp:218</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_coordinate_xhtml_a9bbea489f6defd913b01a39e05e708e4"><div class="ttname"><a href="classarm__gemm_1_1_n_d_coordinate.xhtml#a9bbea489f6defd913b01a39e05e708e4">arm_gemm::NDCoordinate::get_position</a></div><div class="ttdeci">int_t get_position(int_t d) const</div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00176">ndrange.hpp:176</a></div></div>
<div class="ttc" id="transform_8hpp_xhtml"><div class="ttname"><a href="transform_8hpp.xhtml">transform.hpp</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a7cde60064c88a363415fc0639d09cc3e"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a7cde60064c88a363415fc0639d09cc3e">arm_gemm::GemvPretransposed::get_config</a></div><div class="ttdeci">GemmConfig get_config() override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00238">gemv_pretransposed.hpp:238</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_ac5dec5063a75604fdc60555f15577b94"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ac5dec5063a75604fdc60555f15577b94">arm_gemm::GemvPretransposed::B_is_pretransposed</a></div><div class="ttdeci">bool B_is_pretransposed() const override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00191">gemv_pretransposed.hpp:191</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_a1ade5ed8fc2bd356dfe390ad634ca9e6"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#a1ade5ed8fc2bd356dfe390ad634ca9e6">arm_gemm::GemmConfig::method</a></div><div class="ttdeci">GemmMethod method</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00108">arm_gemm.hpp:108</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_aa7cfff39cbb2be65cd40042a75e5ae1c"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#aa7cfff39cbb2be65cd40042a75e5ae1c">arm_gemm::GemvPretransposed::B_pretranspose_required</a></div><div class="ttdeci">bool B_pretranspose_required() const override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00195">gemv_pretransposed.hpp:195</a></div></div>
<div class="ttc" id="bias__adder_8hpp_xhtml"><div class="ttname"><a href="bias__adder_8hpp.xhtml">bias_adder.hpp</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_ae8b170dcb376fe60270f4675f84e4477"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#ae8b170dcb376fe60270f4675f84e4477">N</a></div><div class="ttdeci">unsigned int N</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00056">CpuGemmAssemblyDispatch.cpp:56</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a0ae716040d875abeeba60aa4a6b73363"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a0ae716040d875abeeba60aa4a6b73363">arm_gemm::GemvPretransposed::requantize_bias</a></div><div class="ttdeci">void requantize_bias(void *in_buffer, const To *B, const int ldb, const int B_multi_stride) override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00204">gemv_pretransposed.hpp:204</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_af96bef5f590df4bd6149576c22be99bb"><div class="ttname"><a href="working__space_8hpp.xhtml#af96bef5f590df4bd6149576c22be99bb">strategy</a></div><div class="ttdeci">const StratType * strategy</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00105">working_space.hpp:105</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml">arm_gemm::GemvPretransposed</a></div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00088">gemv_pretransposed.hpp:88</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_common_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml">arm_gemm::GemmCommon</a></div><div class="ttdef"><b>Definition:</b> <a href="gemm__common_8hpp_source.xhtml#l00161">gemm_common.hpp:161</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a06403ad5596b5405787cfca12e5b815e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">arm_compute::test::validation::run</a></div><div class="ttdeci">lstmq run()</div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a8f983ca114ef72d25515a8651ea1d0e7"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a8f983ca114ef72d25515a8651ea1d0e7">arm_gemm::GemvPretransposed::get_window_size</a></div><div class="ttdeci">ndrange_t get_window_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00138">gemv_pretransposed.hpp:138</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1"><div class="ttname"><a href="namespacearm__gemm.xhtml#a24fb31c876e67f529bd128983460f6f5a0b9b2932cba72171c53823118313f2a1">arm_gemm::GemmMethod::GEMV_PRETRANSPOSED</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_coordinate_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_n_d_coordinate.xhtml">arm_gemm::NDCoordinate</a></div><div class="ttdoc">NDCoordinate builds upon a range, but specifies a starting position in addition to a size which it in...</div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00151">ndrange.hpp:151</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_ad483117e698abf4718d215c3b7ddd74a"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ad483117e698abf4718d215c3b7ddd74a">arm_gemm::GemvPretransposed::GemvPretransposed</a></div><div class="ttdeci">GemvPretransposed(const GemmArgs &amp;args, const OutputStage &amp;os={})</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00119">gemv_pretransposed.hpp:119</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_requantize32_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00169">arm_gemm.hpp:169</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a0f7c3bb1a6bbcb34dc0988ef61510c38"><div class="ttname"><a href="namespacearm__gemm.xhtml#a0f7c3bb1a6bbcb34dc0988ef61510c38">arm_gemm::compute_col_sums</a></div><div class="ttdeci">void compute_col_sums(const Requantize32 &amp;qp, unsigned int width, unsigned int height, const T *input, unsigned int in_stride, int32_t *col_bias, unsigned int depth, unsigned int multi, unsigned int first_col)</div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_a1d37407e8d582183b35dedbf7fa43b43"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#a1d37407e8d582183b35dedbf7fa43b43">arm_gemm::GemvPretransposed::execute</a></div><div class="ttdeci">void execute(const ndcoord_t &amp;work_range, const ndcoord_t &amp;, int) override</div><div class="ttdoc">Main execute member fucntion. </div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00143">gemv_pretransposed.hpp:143</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_config_xhtml_a61e0e449fd7e8647d521cafd4f1d55a3"><div class="ttname"><a href="structarm__gemm_1_1_gemm_config.xhtml#a61e0e449fd7e8647d521cafd4f1d55a3">arm_gemm::GemmConfig::filter</a></div><div class="ttdeci">std::string filter</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00109">arm_gemm.hpp:109</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_range_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_n_d_range.xhtml">arm_gemm::NDRange</a></div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00034">ndrange.hpp:34</a></div></div>
<div class="ttc" id="structarm__gemm_1_1_gemm_args_xhtml_adb59e12af95e4ab605ffc3e12b41de58"><div class="ttname"><a href="structarm__gemm_1_1_gemm_args.xhtml#adb59e12af95e4ab605ffc3e12b41de58">arm_gemm::GemmArgs::_Ksize</a></div><div class="ttdeci">unsigned int _Ksize</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00148">arm_gemm.hpp:148</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a47196b5f5be413bedc213df1640c19cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a47196b5f5be413bedc213df1640c19cb">arm_compute::test::validation::n</a></div><div class="ttdeci">const unsigned int n</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00360">GEMMMatrixMultiplyNative.cpp:360</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_n_d_coordinate_xhtml_a582a56796981d98bba73d4de244bd21e"><div class="ttname"><a href="classarm__gemm_1_1_n_d_coordinate.xhtml#a582a56796981d98bba73d4de244bd21e">arm_gemm::NDCoordinate::get_position_end</a></div><div class="ttdeci">int_t get_position_end(int_t d) const</div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00190">ndrange.hpp:190</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemv_pretransposed_xhtml_ae9fc7380e533c43a1d91e48a7578e412"><div class="ttname"><a href="classarm__gemm_1_1_gemv_pretransposed.xhtml#ae9fc7380e533c43a1d91e48a7578e412">arm_gemm::GemvPretransposed::get_B_pretransposed_array_size</a></div><div class="ttdeci">size_t get_B_pretransposed_array_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="gemv__pretransposed_8hpp_source.xhtml#l00200">gemv_pretransposed.hpp:200</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
<div class="ttc" id="_cpu_gemm_assembly_dispatch_8cpp_xhtml_a42247993f81d6a8f73d2e0cb805c663b"><div class="ttname"><a href="_cpu_gemm_assembly_dispatch_8cpp.xhtml#a42247993f81d6a8f73d2e0cb805c663b">K</a></div><div class="ttdeci">unsigned int K</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00057">CpuGemmAssemblyDispatch.cpp:57</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="gemv__pretransposed_8hpp.xhtml">gemv_pretransposed.hpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:36 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
