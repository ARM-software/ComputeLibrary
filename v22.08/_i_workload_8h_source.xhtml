<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/experimental/IWorkload.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_i_workload_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IWorkload.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_workload_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IWORKLOAD_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IWORKLOAD_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2experimental_2_types_8h.xhtml">arm_compute/core/experimental/Types.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dependency_graph_8h.xhtml">arm_compute/core/experimental/DependencyGraph.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Describes when a Unit Workload is run.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">   43</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604eb">   45</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604eb">Stage</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1">Prepare</a>, <span class="comment">/**&lt; Only run once at the beginning. */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">Run</a>,     <span class="comment">/**&lt; Run every time after the first time. */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    };</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">   50</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604eb">Stage</a>       <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">stage</a>;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a163ae54c3797abfcc089feeaf34d93e2">   51</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a163ae54c3797abfcc089feeaf34d93e2">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> &amp;stage0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> &amp;stage1)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">return</span> stage0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">stage</a> == stage1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">stage</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;};<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/** Type of memory used by a Workload Tensor</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">   59</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153">Core</a>      = 0, <span class="comment">/**&lt; Core memory used by the Workload Tensor, e.g. for argument tensors */</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">Auxiliary</a> = 1, <span class="comment">/**&lt; Auxiliary memory required by the Workload Tensor, e.g. for temporary tensors */</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;};</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af1fe48a2d01ec15359623bc0bed03798">   65</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83">AuxMemoryLifetime</a> = <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83">MemoryLifetime</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/** Memory Info for a @ref WorkloadTensor of Auxiliary memory type. This communicates to the user how much additional</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *  memory is required for auxiliary tensors</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">   70</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3b69d0d94e03ef6d7b51d3806149d4f2">   74</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3b69d0d94e03ef6d7b51d3806149d4f2">AuxMemoryInfo</a>(<span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment = 0) noexcept</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        : size(size),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          alignment(alignment)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#ad8dca0dfdc69d6171b157935586ababd">   80</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#ad8dca0dfdc69d6171b157935586ababd">AuxMemoryInfo</a>(<a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83">AuxMemoryLifetime</a> lifetime, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment = 0) noexcept</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        : lifetime(lifetime),</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          size(size),</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;          alignment(alignment)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a29c2bac86b03b598340e8426730ed488">   86</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a29c2bac86b03b598340e8426730ed488">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;info0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;info1)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> info0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a9746d350dcad83bc12c631de42c2d859">lifetime</a> == info1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a9746d350dcad83bc12c631de42c2d859">lifetime</a> &amp;&amp; info0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a854352f53b148adc24983a58a1866d66">size</a> == info1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a854352f53b148adc24983a58a1866d66">size</a> &amp;&amp; info0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a> == info1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">alignment</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a9746d350dcad83bc12c631de42c2d859">   91</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83">AuxMemoryLifetime</a> lifetime{ <a class="code" href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a">AuxMemoryLifetime::Temporary</a> }; <span class="comment">/**&lt; Memory lifetime*/</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a854352f53b148adc24983a58a1866d66">   92</a></span>&#160;    <span class="keywordtype">size_t</span>            size{ 0 };                                <span class="comment">/**&lt; Total memory size in bytes */</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">   93</a></span>&#160;    <span class="keywordtype">size_t</span>            alignment{ 64 };                          <span class="comment">/**&lt; Memory alignment in bytes */</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;};</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/** A descriptor for IWorkload Tensors.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">   98</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">WorkloadTensor</a></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">  100</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a150a709e86e7134d17cd063de6810b6c">  101</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>            <span class="keywordtype">id</span>{};          <span class="comment">/**&lt; Id of the workload tensor */</span></div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a66586871d49e316858191051fc6d298c">  102</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>{};         <span class="comment">/**&lt; TensorInfo associated with the workload tensor */</span></div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a94027e3c81d728a99b19a9f91ea0f267">  103</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>    memory_type{}; <span class="comment">/**&lt; Memory type */</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#abd1839b751c3e3abfec78177d70b8cb4">  104</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> memory_info{}; <span class="comment">/**&lt; Auxiliary memory information. This can be ignored if the memory type is Core */</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;};<span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/** The basic atomic unit in an @ref IWorkload. It contains exactly one kernel to run.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">  109</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">UnitWorkload</a></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">  111</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#a150a709e86e7134d17cd063de6810b6c">  112</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>                <span class="keywordtype">id</span>{};    <span class="comment">/**&lt; Id of the unit workload */</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">  113</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">stage</a>{}; <span class="comment">/**&lt; Stage */</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">/** Run-time-agnostic, platform-specific graph that describes everything required to run a workload</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"> *  It can be configured into an Arm Compute Library runtime, integrated into the runtime of another framework, or integrated into the compilation flow</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">  119</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">  121</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a>     = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">UnitWorkload::Id</a>;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">  122</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a>            = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">WorkloadTensor::Id</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a>()          = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">  125</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> graph{}; <span class="comment">/**&lt; Dependency graph of the workload tensors and the unit workloads */</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;};</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IWORKLOAD_H</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a854352f53b148adc24983a58a1866d66"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a854352f53b148adc24983a58a1866d66">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::size</a></div><div class="ttdeci">size_t size</div><div class="ttdoc">Total memory size in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00092">IWorkload.h:92</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_a3fb003addd6c323793f8251ef3708d5b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">arm_compute::experimental::dynamic_fusion::IWorkload::UnitWorkId</a></div><div class="ttdeci">UnitWorkload::Id UnitWorkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00121">IWorkload.h:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">arm_compute::experimental::dynamic_fusion::DependencyGraph</a></div><div class="ttdoc">The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00051">DependencyGraph.h:51</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_a883f9b9e0d3b0efbf982dc8c1d814ccc"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a883f9b9e0d3b0efbf982dc8c1d814ccc">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::stage</a></div><div class="ttdeci">Stage stage</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00050">IWorkload.h:50</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_a163ae54c3797abfcc089feeaf34d93e2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#a163ae54c3797abfcc089feeaf34d93e2">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::operator==</a></div><div class="ttdeci">friend bool operator==(const UnitWorkloadStage &amp;stage0, const UnitWorkloadStage &amp;stage1)</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00051">IWorkload.h:51</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::UnitWorkload::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00111">IWorkload.h:111</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a9746d350dcad83bc12c631de42c2d859"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a9746d350dcad83bc12c631de42c2d859">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::lifetime</a></div><div class="ttdeci">AuxMemoryLifetime lifetime</div><div class="ttdoc">Memory lifetime. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00091">IWorkload.h:91</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a83168e6cb289d732cc78427b51f93153">arm_compute::experimental::dynamic_fusion::MemoryType::Core</a></div><div class="ttdoc">Core memory used by the Workload Tensor, e.g. </div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">arm_compute::experimental::dynamic_fusion::MemoryType</a></div><div class="ttdeci">MemoryType</div><div class="ttdoc">Type of memory used by a Workload Tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00059">IWorkload.h:59</a></div></div>
<div class="ttc" id="arm__compute_2core_2experimental_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2experimental_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Prepare</a></div><div class="ttdoc">Only run once at the beginning. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a3afda29223eeda35afd21a6c5e121ba2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3afda29223eeda35afd21a6c5e121ba2">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::alignment</a></div><div class="ttdeci">size_t alignment</div><div class="ttdoc">Memory alignment in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00093">IWorkload.h:93</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkload</a></div><div class="ttdoc">The basic atomic unit in an IWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00109">IWorkload.h:109</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83a10d85d7664a911bcaec89732098c269a">arm_compute::experimental::MemoryLifetime::Temporary</a></div></div>
<div class="ttc" id="_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdoc">Run every time after the first time. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_ad8dca0dfdc69d6171b157935586ababd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#ad8dca0dfdc69d6171b157935586ababd">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::AuxMemoryInfo</a></div><div class="ttdeci">AuxMemoryInfo(AuxMemoryLifetime lifetime, size_t size, size_t alignment=0) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00080">IWorkload.h:80</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::MemoryType::Auxiliary</a></div><div class="ttdoc">Auxiliary memory required by the Workload Tensor, e.g. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a3b69d0d94e03ef6d7b51d3806149d4f2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a3b69d0d94e03ef6d7b51d3806149d4f2">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::AuxMemoryInfo</a></div><div class="ttdeci">AuxMemoryInfo(size_t size, size_t alignment=0) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00074">IWorkload.h:74</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage</a></div><div class="ttdoc">Describes when a Unit Workload is run. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00043">IWorkload.h:43</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::WorkloadTensor::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00100">IWorkload.h:100</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="_dependency_graph_8h_xhtml"><div class="ttname"><a href="_dependency_graph_8h.xhtml">DependencyGraph.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory Info for a WorkloadTensor of Auxiliary memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00070">IWorkload.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_a738a4655df65d4e18d9cd5f63fe320cd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">arm_compute::experimental::dynamic_fusion::IWorkload::Tid</a></div><div class="ttdeci">WorkloadTensor::Id Tid</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00122">IWorkload.h:122</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">arm_compute::experimental::dynamic_fusion::IWorkload</a></div><div class="ttdoc">Run-time-agnostic, platform-specific graph that describes everything required to run a workload It ca...</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00119">IWorkload.h:119</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aac5e2a1f61e8ea5255aca62f83e9124f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">arm_compute::experimental::dynamic_fusion::DependencyGraph::Id</a></div><div class="ttdeci">SerialIdAllocator::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00073">DependencyGraph.h:73</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_xhtml_a90cbc7f3fa8bbc097dfd0429b31efb83"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#a90cbc7f3fa8bbc097dfd0429b31efb83">arm_compute::experimental::MemoryLifetime</a></div><div class="ttdeci">MemoryLifetime</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00090">Types.h:90</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml_a29c2bac86b03b598340e8426730ed488"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml#a29c2bac86b03b598340e8426730ed488">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo::operator==</a></div><div class="ttdeci">friend bool operator==(const AuxMemoryInfo &amp;info0, const AuxMemoryInfo &amp;info1)</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00086">IWorkload.h:86</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604eb"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604eb">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage</a></div><div class="ttdeci">Stage</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00045">IWorkload.h:45</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">arm_compute::experimental::dynamic_fusion::WorkloadTensor</a></div><div class="ttdoc">A descriptor for IWorkload Tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00098">IWorkload.h:98</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_a0d10d1f11f896cb40f799a595f5f383.xhtml">experimental</a></li><li class="navelem"><a class="el" href="_i_workload_8h.xhtml">IWorkload.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
