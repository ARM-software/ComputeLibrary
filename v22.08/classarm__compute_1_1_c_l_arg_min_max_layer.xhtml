<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLArgMinMaxLayer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_arg_min_max_layer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLArgMinMaxLayer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Function to calculate the index of the minimum or maximum values in a tensor based on an axis.  
 <a href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_arg_min_max_layer_8h_source.xhtml">CLArgMinMaxLayer.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLArgMinMaxLayer:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_arg_min_max_layer__coll__graph.svg" width="158" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a20363c232a7b612c56fe58994e6cbb38"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a20363c232a7b612c56fe58994e6cbb38">CLArgMinMaxLayer</a> (std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; memory_manager=nullptr)</td></tr>
<tr class="memdesc:a20363c232a7b612c56fe58994e6cbb38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a20363c232a7b612c56fe58994e6cbb38">More...</a><br /></td></tr>
<tr class="separator:a20363c232a7b612c56fe58994e6cbb38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a7522f38e9c6edb51e4adbd6b3bb3be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a5a7522f38e9c6edb51e4adbd6b3bb3be">CLArgMinMaxLayer</a> (const <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a5a7522f38e9c6edb51e4adbd6b3bb3be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#a5a7522f38e9c6edb51e4adbd6b3bb3be">More...</a><br /></td></tr>
<tr class="separator:a5a7522f38e9c6edb51e4adbd6b3bb3be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e98e9a0fd242396ab0f512983668489"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a4e98e9a0fd242396ab0f512983668489">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;)=delete</td></tr>
<tr class="memdesc:a4e98e9a0fd242396ab0f512983668489"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#a4e98e9a0fd242396ab0f512983668489">More...</a><br /></td></tr>
<tr class="separator:a4e98e9a0fd242396ab0f512983668489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc8640ef34f45e24d69c430397478b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#aedc8640ef34f45e24d69c430397478b0">CLArgMinMaxLayer</a> (<a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:aedc8640ef34f45e24d69c430397478b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be moved.  <a href="#aedc8640ef34f45e24d69c430397478b0">More...</a><br /></td></tr>
<tr class="separator:aedc8640ef34f45e24d69c430397478b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4b9df6d577c5e462e03cb01d87e632"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a3f4b9df6d577c5e462e03cb01d87e632">operator=</a> (<a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&amp;)=delete</td></tr>
<tr class="memdesc:a3f4b9df6d577c5e462e03cb01d87e632"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be moved.  <a href="#a3f4b9df6d577c5e462e03cb01d87e632">More...</a><br /></td></tr>
<tr class="separator:a3f4b9df6d577c5e462e03cb01d87e632"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f27793f582ad95afb187284e9506b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a04f27793f582ad95afb187284e9506b8">~CLArgMinMaxLayer</a> ()</td></tr>
<tr class="memdesc:a04f27793f582ad95afb187284e9506b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a04f27793f582ad95afb187284e9506b8">More...</a><br /></td></tr>
<tr class="separator:a04f27793f582ad95afb187284e9506b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a331ee82f6186da06d42766e3c8ad7a7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a331ee82f6186da06d42766e3c8ad7a7a">configure</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, int axis, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;op)</td></tr>
<tr class="memdesc:a331ee82f6186da06d42766e3c8ad7a7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the input and output tensors.  <a href="#a331ee82f6186da06d42766e3c8ad7a7a">More...</a><br /></td></tr>
<tr class="separator:a331ee82f6186da06d42766e3c8ad7a7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeebea4165ce508a809469704f5011d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#abeebea4165ce508a809469704f5011d5">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;compile_context, const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *input, int axis, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *output, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;op)</td></tr>
<tr class="memdesc:abeebea4165ce508a809469704f5011d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the input and output tensors.  <a href="#abeebea4165ce508a809469704f5011d5">More...</a><br /></td></tr>
<tr class="separator:abeebea4165ce508a809469704f5011d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8ca6af696d79377d724e7fce26a9f7e9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a8ca6af696d79377d724e7fce26a9f7e9">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, int axis, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;op)</td></tr>
<tr class="memdesc:a8ca6af696d79377d724e7fce26a9f7e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a>.  <a href="#a8ca6af696d79377d724e7fce26a9f7e9">More...</a><br /></td></tr>
<tr class="separator:a8ca6af696d79377d724e7fce26a9f7e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Function to calculate the index of the minimum or maximum values in a tensor based on an axis. </p>
<dl class="section note"><dt>Note</dt><dd>The default data type for an uninitialized output tensor is signed 32-bit integer (S32). It is the user's responsibility to check that the results do not overflow because the indices are computed in unsigned 32-bit (U32). </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8h_source.xhtml#l00048">48</a> of file <a class="el" href="_c_l_arg_min_max_layer_8h_source.xhtml">CLArgMinMaxLayer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a20363c232a7b612c56fe58994e6cbb38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20363c232a7b612c56fe58994e6cbb38">&#9670;&nbsp;</a></span>CLArgMinMaxLayer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>memory_manager</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">memory_manager</td><td>(Optional) <a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> manager. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a04f27793f582ad95afb187284e9506b8">CLArgMinMaxLayer::~CLArgMinMaxLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    : _memory_group(std::move(memory_manager)), _results_vector(), _not_reshaped_output(), _reduction_kernels_vector(), _reshape(), _num_of_stages(), _reduction_axis()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5a7522f38e9c6edb51e4adbd6b3bb3be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a7522f38e9c6edb51e4adbd6b3bb3be">&#9670;&nbsp;</a></span>CLArgMinMaxLayer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="aedc8640ef34f45e24d69c430397478b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedc8640ef34f45e24d69c430397478b0">&#9670;&nbsp;</a></span>CLArgMinMaxLayer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be moved. </p>

</div>
</div>
<a id="a04f27793f582ad95afb187284e9506b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04f27793f582ad95afb187284e9506b8">&#9670;&nbsp;</a></span>~CLArgMinMaxLayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

<p class="reference">Referenced by <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00041">CLArgMinMaxLayer::CLArgMinMaxLayer()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a331ee82f6186da06d42766e3c8ad7a7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a331ee82f6186da06d42766e3c8ad7a7a">&#9670;&nbsp;</a></span>configure() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the input and output tensors. </p>
<p>Valid data layouts:</p><ul>
<li>All</li>
</ul>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src </th><th align="left">dst  </th></tr>
<tr>
<td align="left">QASYMM8 </td><td align="left">U32, S32 </td></tr>
<tr>
<td align="left">QASYMM8_SIGNED </td><td align="left">U32, S32 </td></tr>
<tr>
<td align="left">S32 </td><td align="left">U32, S32 </td></tr>
<tr>
<td align="left">F16 </td><td align="left">U32, S32 </td></tr>
<tr>
<td align="left">F32 </td><td align="left">U32, S32 </td></tr>
</table>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input source tensor. Data types supported: QASYMM8/QASYMM8_SIGNED/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>Axis to find max/min index. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output source tensor. Data types supported: U32/S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">op</td><td>Reduction operation to perform. Operations supported: ARG_IDX_MAX, ARG_IDX_MIN </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary::get()</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a331ee82f6186da06d42766e3c8ad7a7a">configure</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_compile_context(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, axis, output, op);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_arg_min_max_layer_xhtml_a331ee82f6186da06d42766e3c8ad7a7a"><div class="ttname"><a href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml#a331ee82f6186da06d42766e3c8ad7a7a">arm_compute::CLArgMinMaxLayer::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, int axis, ICLTensor *output, const ReductionOperation &amp;op)</div><div class="ttdoc">Set the input and output tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00116">CLArgMinMaxLayer.cpp:116</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abeebea4165ce508a809469704f5011d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abeebea4165ce508a809469704f5011d5">&#9670;&nbsp;</a></span>configure() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>compile_context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the input and output tensors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">compile_context</td><td>The compile context to be used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input source tensor. Data types supported: QASYMM8/QASYMM8_SIGNED/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>Axis to find max/min index. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Output source tensor. Data types supported: U32/S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">op</td><td>Reduction operation to perform. Operations supported: ARG_IDX_MAX, ARG_IDX_MIN </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00127">CLTensorAllocator::allocate()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00042">arm_compute::auto_init_if_empty()</a>, <a class="el" href="src_2runtime_2_utils_8cpp_source.xhtml#l00068">arm_compute::utils::calculate_number_of_stages_only_x_axis()</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01243">arm_compute::misc::shape_calculator::compute_reduced_shape()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00052">CLReshapeLayer::configure()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="_memory_group_8h_source.xhtml#l00079">MemoryGroup::manage()</a>, <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">arm_compute::test::validation::output_shape</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, and <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::UNKNOWN</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, axis, output, op);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    _num_of_stages  = <a class="code" href="namespacearm__compute_1_1utils.xhtml#af07b27af58f76f71f59dced337f285b8">utils::calculate_number_of_stages_only_x_axis</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;dimension(0), axis);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    _reduction_axis = axis;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">const</span> TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>     = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape(), axis, <span class="keyword">false</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>          output_data_type = (output-&gt;info()-&gt;data_type() == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a>) ? <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a> : output-&gt;info()-&gt;data_type();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*output-&gt;info(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;clone()-&gt;set_tensor_shape(output_shape).set_data_type(output_data_type).reset_padding().set_is_resizable(<span class="keyword">true</span>));</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Configure reduction operation kernels</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    _reduction_kernels_vector.reserve(_num_of_stages);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">auto</span> add_reduction_kernel = [<span class="keyword">this</span>, &amp;compile_context, axis, op](<span class="keyword">const</span> ICLTensor * <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> ICLTensor * prev_output, ICLTensor * output)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        _reduction_kernels_vector.emplace_back(std::make_unique&lt;CLArgMinMaxLayerKernel&gt;());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        _reduction_kernels_vector.back()-&gt;configure(compile_context, input, prev_output, output, axis, op);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    };</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_not_reshaped_output);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Create temporary tensors</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span>(_num_of_stages == 1)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        add_reduction_kernel(input, <span class="keyword">nullptr</span>, &amp;_not_reshaped_output);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        _results_vector.resize(_num_of_stages - 1);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>{ input-&gt;info()-&gt;tensor_shape() };</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _num_of_stages - 1; i++)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.set(0, ceil(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>.x() / 128.f));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            _results_vector[i].allocator()-&gt;init(input-&gt;info()-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>).set_data_type(output_data_type));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment">// Apply ReductionOperation only on first kernel</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_results_vector[0]);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        add_reduction_kernel(input, <span class="keyword">nullptr</span>, &amp;_results_vector[0]);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="comment">// Apply ReductionOperation on intermediate stages</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 1; i &lt; _num_of_stages - 1; ++i)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_results_vector[i]);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            add_reduction_kernel(input, &amp;_results_vector[i - 1], &amp;_results_vector[i]);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            _results_vector[i - 1].allocator()-&gt;allocate();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="comment">// Apply ReductionOperation on the last stage</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> last_stage = _num_of_stages - 1;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        add_reduction_kernel(input, &amp;_results_vector[last_stage - 1], &amp;_not_reshaped_output);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        _results_vector[last_stage - 1].allocator()-&gt;allocate();</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    _reshape.<a class="code" href="classarm__compute_1_1_c_l_reshape_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">configure</a>(compile_context, &amp;_not_reshaped_output, output);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    _not_reshaped_output.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utils_xhtml_af07b27af58f76f71f59dced337f285b8"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#af07b27af58f76f71f59dced337f285b8">arm_compute::utils::calculate_number_of_stages_only_x_axis</a></div><div class="ttdeci">unsigned int calculate_number_of_stages_only_x_axis(size_t input_x_dimension, unsigned int axis)</div><div class="ttdoc">Calculate number of stages for parallel implementations. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_utils_8cpp_source.xhtml#l00068">Utils.cpp:68</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor&amp;#39;s allocator. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00079">MemoryGroup.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_aff7ab3043f63660295d229ebc9e6c2b1"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a></div><div class="ttdeci">TensorShape compute_reduced_shape(const TensorShape &amp;input, unsigned int axis, bool keep_dims=true)</div><div class="ttdoc">Calculate the reduced shape of a tensor given an axis. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l01243">ShapeCalculator.h:1243</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00042">AutoConfiguration.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00127">CLTensorAllocator.cpp:127</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::GPUTarget::UNKNOWN</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_reshape_layer_xhtml_a074e10cfb217e657b9e81adeca2abc68"><div class="ttname"><a href="classarm__compute_1_1_c_l_reshape_layer.xhtml#a074e10cfb217e657b9e81adeca2abc68">arm_compute::CLReshapeLayer::configure</a></div><div class="ttdeci">void configure(const ICLTensor *input, ICLTensor *output)</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs and outputs. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_reshape_layer_8cpp_source.xhtml#l00052">CLReshapeLayer.cpp:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4e98e9a0fd242396ab0f512983668489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e98e9a0fd242396ab0f512983668489">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="a3f4b9df6d577c5e462e03cb01d87e632"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f4b9df6d577c5e462e03cb01d87e632">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be moved. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For CPU kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue. ">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing. ">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00179">179</a> of file <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00237">CLScheduler::enqueue()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, and <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00073">CLReshapeLayer::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    MemoryGroupResourceScope scope_mg(_memory_group);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; _num_of_stages; ++i)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">enqueue</a>(*_reduction_kernels_vector[i], <span class="keyword">false</span>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    _reshape.<a class="code" href="classarm__compute_1_1_c_l_reshape_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_reshape_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_c_l_reshape_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::CLReshapeLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_reshape_layer_8cpp_source.xhtml#l00073">CLReshapeLayer.cpp:73</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_ae1a643e517f50bf0392fb6516dd7cf67"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ae1a643e517f50bf0392fb6516dd7cf67">arm_compute::CLScheduler::enqueue</a></div><div class="ttdeci">void enqueue(ICLKernel &amp;kernel, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00237">CLScheduler.cpp:237</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8ca6af696d79377d724e7fce26a9f7e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ca6af696d79377d724e7fce26a9f7e9">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input source tensor info. Data types supported: QASYMM8/QASYMM8_SIGNED/S32/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>Axis to find max/min index. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td>Output source tensor info. Data types supported: U32/S32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">op</td><td>Reduction operation to perform. Operations supported: ARG_IDX_MAX, ARG_IDX_MIN</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ARG_IDX_MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ARG_IDX_MIN</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_c_l_validate_8h_source.xhtml#l00035">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00439">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>, <a class="el" href="_error_8h_source.xhtml#l00244">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="src_2runtime_2_utils_8cpp_source.xhtml#l00068">arm_compute::utils::calculate_number_of_stages_only_x_axis()</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01243">arm_compute::misc::shape_calculator::compute_reduced_shape()</a>, <a class="el" href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00046">Dimensions&lt; size_t &gt;::num_max_dimensions</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::QASYMM8_SIGNED</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00155">arm_compute::test::validation::qinfo</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">ITensorInfo::quantization_info()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00079">TensorShape::set()</a>, <a class="el" href="src_2core_2_tensor_info_8cpp_source.xhtml#l00287">TensorInfo::set_data_type()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aaf74be25e2392705f29352ffaa4b1f9d">ITensorInfo::set_num_channels()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">ITensorInfo::set_quantization_info()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">ITensorInfo::set_tensor_shape()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">arm_compute::test::validation::shape</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00065">CLReshapeLayer::validate()</a>, and <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00149">CLArgMinMaxLayerKernel::validate()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_arg_min_max_8cpp_source.xhtml#l00064">arm_compute::test::validation::DATA_TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(op != <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a> &amp;&amp; op != <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>, <span class="stringliteral">&quot;Invalid reduction operation&quot;</span>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(axis &gt;= static_cast&lt;int&gt;(<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">TensorShape::num_max_dimensions</a>), <span class="stringliteral">&quot;Reduction axis greater than max number of dimensions&quot;</span>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(axis &gt; 3, <span class="stringliteral">&quot;Unsupported reduction axis&quot;</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_of_stages = <a class="code" href="namespacearm__compute_1_1utils.xhtml#af07b27af58f76f71f59dced337f285b8">utils::calculate_number_of_stages_only_x_axis</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;dimension(0), axis);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>   output_data_type = <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    TensorInfo not_reshaped_output;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_num_channles = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> input_qinfo        = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;quantization_info();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() != 0)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        output_data_type                       = output-&gt;data_type();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">const</span> TensorInfo expected_output_shape = output-&gt;clone()-&gt;set_tensor_shape(<a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape(), axis, <span class="keyword">false</span>));</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(&amp;expected_output_shape, output);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">auto</span> shape_before_reshape = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    shape_before_reshape.set(axis, 1);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> initialize_tensorinfo = [](TensorInfo &amp; ti, TensorShape <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <span class="keywordtype">int</span> num_channels, QuantizationInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        ti.set_data_type(data_type).set_tensor_shape(shape).set_num_channels(num_channels).set_quantization_info(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">qinfo</a>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    };</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    initialize_tensorinfo(not_reshaped_output, shape_before_reshape, output_data_type, input_num_channles, input_qinfo);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">if</span>(num_of_stages == 1)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml#a58e2cc52ec6a6cb1ccff69618e62b316">CLArgMinMaxLayerKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">nullptr</span>, &amp;not_reshaped_output, axis, op));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">// Create temporary tensor infos</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        std::vector&lt;TensorInfo&gt; sums_vector(num_of_stages - 1);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment">// Create intermediate tensor info</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        TensorShape shape{ <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape() };</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; num_of_stages - 1; i++)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            shape.set(0, ceil(shape.x() / 128.f));</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            sums_vector[i].set_data_type(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;data_type());</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            sums_vector[i].set_tensor_shape(shape);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            sums_vector[i].set_num_channels(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;num_channels());</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">// Validate ReductionOperation only on first kernel</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml#a58e2cc52ec6a6cb1ccff69618e62b316">CLArgMinMaxLayerKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">nullptr</span>, &amp;sums_vector[0], axis, op));</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">// Validate ReductionOperation on intermediate stages</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 1; i &lt; num_of_stages - 1; ++i)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml#a58e2cc52ec6a6cb1ccff69618e62b316">CLArgMinMaxLayerKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;sums_vector[i - 1], &amp;sums_vector[i], axis, op));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">// Validate ReductionOperation on the last stage</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> last_stage = num_of_stages - 1;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml#a58e2cc52ec6a6cb1ccff69618e62b316">CLArgMinMaxLayerKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, &amp;sums_vector[last_stage - 1], &amp;not_reshaped_output, axis, op));</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_c_l_reshape_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">CLReshapeLayer::validate</a>(&amp;not_reshaped_output, output));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utils_xhtml_af07b27af58f76f71f59dced337f285b8"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#af07b27af58f76f71f59dced337f285b8">arm_compute::utils::calculate_number_of_stages_only_x_axis</a></div><div class="ttdeci">unsigned int calculate_number_of_stages_only_x_axis(size_t input_x_dimension, unsigned int axis)</div><div class="ttdoc">Calculate number of stages for parallel implementations. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_utils_8cpp_source.xhtml#l00068">Utils.cpp:68</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_reshape_layer_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_c_l_reshape_layer.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::CLReshapeLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLReshapeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_reshape_layer_8cpp_source.xhtml#l00065">CLReshapeLayer.cpp:65</a></div></div>
<div class="ttc" id="_c_l_validate_8h_xhtml_ab82bd5de18ef067ae5d9ba4af8065dd6"><div class="ttname"><a href="_c_l_validate_8h.xhtml#ab82bd5de18ef067ae5d9ba4af8065dd6">ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_F16_UNSUPPORTED(tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_validate_8h_source.xhtml#l00035">CLValidate.h:35</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdoc">Index of the min value. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdoc">Index of the max value. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned </div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_aff7ab3043f63660295d229ebc9e6c2b1"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#aff7ab3043f63660295d229ebc9e6c2b1">arm_compute::misc::shape_calculator::compute_reduced_shape</a></div><div class="ttdeci">TensorShape compute_reduced_shape(const TensorShape &amp;input, unsigned int axis, bool keep_dims=true)</div><div class="ttdoc">Calculate the reduced shape of a tensor given an axis. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l01243">ShapeCalculator.h:1243</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_arg_min_max_layer_kernel_xhtml_a58e2cc52ec6a6cb1ccff69618e62b316"><div class="ttname"><a href="classarm__compute_1_1_c_l_arg_min_max_layer_kernel.xhtml#a58e2cc52ec6a6cb1ccff69618e62b316">arm_compute::CLArgMinMaxLayerKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *prev_output, const ITensorInfo *output, unsigned int axis, ReductionOperation op)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLArgMinMaxLayerKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00149">CLArgMinMaxLayerKernel.cpp:149</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00439">Validate.h:439</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad85d7becf0c6e3cffbc255489808e219"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad85d7becf0c6e3cffbc255489808e219">arm_compute::test::validation::qinfo</a></div><div class="ttdeci">const QuantizationInfo qinfo</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00155">Im2Col.cpp:155</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">Validate.h:788</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a1b67d5b720119d50faa286c774579ecc"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a1b67d5b720119d50faa286c774579ecc">arm_compute::Dimensions&lt; size_t &gt;::num_max_dimensions</a></div><div class="ttdeci">static constexpr size_t num_max_dimensions</div><div class="ttdoc">Number of dimensions the tensor has. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00046">Dimensions.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/functions/<a class="el" href="_c_l_arg_min_max_layer_8h_source.xhtml">CLArgMinMaxLayer.h</a></li>
<li>src/runtime/CL/functions/<a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml">CLArgMinMaxLayer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_arg_min_max_layer.xhtml">CLArgMinMaxLayer</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:45 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
