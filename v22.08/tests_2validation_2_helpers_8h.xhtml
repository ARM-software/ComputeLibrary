<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/Helpers.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('tests_2validation_2_helpers_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Helpers.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml">arm_compute/core/Utils.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_half_8h_source.xhtml">support/Half.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_globals_8h_source.xhtml">tests/Globals.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_simple_tensor_8h_source.xhtml">tests/SimpleTensor.h</a>&quot;</code><br />
<code>#include &lt;math.h&gt;</code><br />
<code>#include &lt;random&gt;</code><br />
<code>#include &lt;type_traits&gt;</code><br />
<code>#include &lt;utility&gt;</code><br />
</div>
<p><a href="tests_2validation_2_helpers_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point.xhtml">is_floating_point&lt; T &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1validation_1_1is__floating__point_3_01half_01_4.xhtml">is_floating_point&lt; half &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2022 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9a1aa7d40588cbc644eb7d45d008b1f0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9a1aa7d40588cbc644eb7d45d008b1f0"><td class="memTemplItemLeft" align="right" valign="top">std::pair&lt; T, T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9a1aa7d40588cbc644eb7d45d008b1f0">get_activation_layer_test_bounds</a> (ActivationLayerInfo::ActivationFunction activation, DataType data_type)</td></tr>
<tr class="memdesc:a9a1aa7d40588cbc644eb7d45d008b1f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to get the testing range for each activation layer.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a9a1aa7d40588cbc644eb7d45d008b1f0">More...</a><br /></td></tr>
<tr class="separator:a9a1aa7d40588cbc644eb7d45d008b1f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa401e451095ed01dd78f1ae8c026eb6e"><td class="memItemLeft" align="right" valign="top">TensorShape&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa401e451095ed01dd78f1ae8c026eb6e">calculate_depth_concatenate_shape</a> (const std::vector&lt; TensorShape &gt; &amp;input_shapes)</td></tr>
<tr class="memdesc:aa401e451095ed01dd78f1ae8c026eb6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate output tensor shape give a vector of input tensor to concatenate.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa401e451095ed01dd78f1ae8c026eb6e">More...</a><br /></td></tr>
<tr class="separator:aa401e451095ed01dd78f1ae8c026eb6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a871322e9858290606dadc4f22b2f7013"><td class="memItemLeft" align="right" valign="top">TensorShape&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a871322e9858290606dadc4f22b2f7013">calculate_concatenate_shape</a> (const std::vector&lt; TensorShape &gt; &amp;input_shapes, size_t axis)</td></tr>
<tr class="memdesc:a871322e9858290606dadc4f22b2f7013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate output tensor shape for the concatenate operation along a given axis.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a871322e9858290606dadc4f22b2f7013">More...</a><br /></td></tr>
<tr class="separator:a871322e9858290606dadc4f22b2f7013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4abd07e8f6156560b479dda97b303d11"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4abd07e8f6156560b479dda97b303d11"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4abd07e8f6156560b479dda97b303d11">convert_from_asymmetric</a> (const SimpleTensor&lt; T &gt; &amp;src)</td></tr>
<tr class="memdesc:a4abd07e8f6156560b479dda97b303d11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an asymmetric quantized simple tensor into float using tensor quantization information.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4abd07e8f6156560b479dda97b303d11">More...</a><br /></td></tr>
<tr class="separator:a4abd07e8f6156560b479dda97b303d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08b4210abf179d6cbea4365b7d85d498"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a08b4210abf179d6cbea4365b7d85d498"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08b4210abf179d6cbea4365b7d85d498">convert_to_asymmetric</a> (const SimpleTensor&lt; float &gt; &amp;src, const QuantizationInfo &amp;quantization_info)</td></tr>
<tr class="memdesc:a08b4210abf179d6cbea4365b7d85d498"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert float simple tensor into quantized using specified quantization information.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a08b4210abf179d6cbea4365b7d85d498">More...</a><br /></td></tr>
<tr class="separator:a08b4210abf179d6cbea4365b7d85d498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32db8010537a9ed07718d91b16366097"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a32db8010537a9ed07718d91b16366097"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; float &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a32db8010537a9ed07718d91b16366097">convert_from_symmetric</a> (const SimpleTensor&lt; T &gt; &amp;src)</td></tr>
<tr class="memdesc:a32db8010537a9ed07718d91b16366097"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert quantized simple tensor into float using tensor quantization information.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a32db8010537a9ed07718d91b16366097">More...</a><br /></td></tr>
<tr class="separator:a32db8010537a9ed07718d91b16366097"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8f9926d24cb38c66c611ff7d157d9d2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ad8f9926d24cb38c66c611ff7d157d9d2"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad8f9926d24cb38c66c611ff7d157d9d2">convert_to_symmetric</a> (const SimpleTensor&lt; float &gt; &amp;src, const QuantizationInfo &amp;quantization_info)</td></tr>
<tr class="memdesc:ad8f9926d24cb38c66c611ff7d157d9d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert float simple tensor into quantized using specified quantization information.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad8f9926d24cb38c66c611ff7d157d9d2">More...</a><br /></td></tr>
<tr class="separator:ad8f9926d24cb38c66c611ff7d157d9d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a683cf9b1a237f2d8326735a1c5e881ed">matrix_multiply</a> (const SimpleTensor&lt; T &gt; &amp;a, const SimpleTensor&lt; T &gt; &amp;b, SimpleTensor&lt; T &gt; &amp;out)</td></tr>
<tr class="memdesc:a683cf9b1a237f2d8326735a1c5e881ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix multiply between 2 float simple tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a683cf9b1a237f2d8326735a1c5e881ed">More...</a><br /></td></tr>
<tr class="separator:a683cf9b1a237f2d8326735a1c5e881ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a67a7d3407f0ab92d1c80ccd0ea8908e0">transpose_matrix</a> (const SimpleTensor&lt; T &gt; &amp;in, SimpleTensor&lt; T &gt; &amp;out)</td></tr>
<tr class="memdesc:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose matrix.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a67a7d3407f0ab92d1c80ccd0ea8908e0">More...</a><br /></td></tr>
<tr class="separator:a67a7d3407f0ab92d1c80ccd0ea8908e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9399f3f1910e0f236cd6f4613bd4397">get_tile</a> (const SimpleTensor&lt; T &gt; &amp;in, SimpleTensor&lt; T &gt; &amp;tile, const Coordinates &amp;coord)</td></tr>
<tr class="memdesc:ab9399f3f1910e0f236cd6f4613bd4397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a 2D tile from a tensor.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9399f3f1910e0f236cd6f4613bd4397">More...</a><br /></td></tr>
<tr class="separator:ab9399f3f1910e0f236cd6f4613bd4397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1e0de8172e8e875f08d040d03b164a5"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:af1e0de8172e8e875f08d040d03b164a5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af1e0de8172e8e875f08d040d03b164a5">zeros</a> (SimpleTensor&lt; T &gt; &amp;in, const Coordinates &amp;anchor, const TensorShape &amp;shape)</td></tr>
<tr class="memdesc:af1e0de8172e8e875f08d040d03b164a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill with zeros the input tensor in the area defined by anchor and shape.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#af1e0de8172e8e875f08d040d03b164a5">More...</a><br /></td></tr>
<tr class="separator:af1e0de8172e8e875f08d040d03b164a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55866d648f6da2a3aaf3965bd1685868"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55866d648f6da2a3aaf3965bd1685868">get_quantized_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max)</td></tr>
<tr class="memdesc:a55866d648f6da2a3aaf3965bd1685868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute quantized min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a55866d648f6da2a3aaf3965bd1685868">More...</a><br /></td></tr>
<tr class="separator:a55866d648f6da2a3aaf3965bd1685868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3f8bde11d609cd616779df8f1ad7a2ec">get_quantized_qasymm8_signed_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max)</td></tr>
<tr class="memdesc:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute asymmetric quantized signed min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3f8bde11d609cd616779df8f1ad7a2ec">More...</a><br /></td></tr>
<tr class="separator:a3f8bde11d609cd616779df8f1ad7a2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7075ff9f78b0d90bbe428f1406d669b"><td class="memItemLeft" align="right" valign="top">std::pair&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7075ff9f78b0d90bbe428f1406d669b">get_symm_quantized_per_channel_bounds</a> (const QuantizationInfo &amp;quant_info, float min, float max, size_t channel_id=0)</td></tr>
<tr class="memdesc:ae7075ff9f78b0d90bbe428f1406d669b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to compute symmetric quantized min and max bounds.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae7075ff9f78b0d90bbe428f1406d669b">More...</a><br /></td></tr>
<tr class="separator:ae7075ff9f78b0d90bbe428f1406d669b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c64fbc3051e1827aae916d6d26d280"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a16c64fbc3051e1827aae916d6d26d280">add_padding_x</a> (std::initializer_list&lt; ITensor * &gt; tensors, const DataLayout &amp;data_layout=DataLayout::NHWC, bool only_right_pad=false)</td></tr>
<tr class="memdesc:a16c64fbc3051e1827aae916d6d26d280"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add random padding along the X axis (between 1 and 16 columns per side) to all the input tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a16c64fbc3051e1827aae916d6d26d280">More...</a><br /></td></tr>
<tr class="separator:a16c64fbc3051e1827aae916d6d26d280"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8a9442d04523985994ff83aebc5927d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa8a9442d04523985994ff83aebc5927d">add_padding_y</a> (std::initializer_list&lt; ITensor * &gt; tensors, const DataLayout &amp;data_layout=DataLayout::NHWC)</td></tr>
<tr class="memdesc:aa8a9442d04523985994ff83aebc5927d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add random padding along the Y axis (between 1 and 4 rows per side) to all the input tensors.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa8a9442d04523985994ff83aebc5927d">More...</a><br /></td></tr>
<tr class="separator:aa8a9442d04523985994ff83aebc5927d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="tests_2validation_2_helpers_8h.xhtml">Helpers.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:42 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
