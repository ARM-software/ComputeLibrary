<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: INEOperator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">INEOperator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Basic interface for functions which have a single async CPU kernel.  
 <a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_n_e_operator_8h_source.xhtml">INEOperator.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for INEOperator:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1_i_n_e_operator__coll__graph.svg" width="112" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d9d1b2676ea513d58e85161ce554c49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a5d9d1b2676ea513d58e85161ce554c49">INEOperator</a> (<a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *ctx=nullptr)</td></tr>
<tr class="memdesc:a5d9d1b2676ea513d58e85161ce554c49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a5d9d1b2676ea513d58e85161ce554c49">More...</a><br /></td></tr>
<tr class="separator:a5d9d1b2676ea513d58e85161ce554c49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a612c94f92504d3d3573c9812a068cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a0a612c94f92504d3d3573c9812a068cc">INEOperator</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0a612c94f92504d3d3573c9812a068cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#a0a612c94f92504d3d3573c9812a068cc">More...</a><br /></td></tr>
<tr class="separator:a0a612c94f92504d3d3573c9812a068cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7194c5a29c17390d46dd35d13bf02655"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a7194c5a29c17390d46dd35d13bf02655">INEOperator</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a7194c5a29c17390d46dd35d13bf02655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="#a7194c5a29c17390d46dd35d13bf02655">More...</a><br /></td></tr>
<tr class="separator:a7194c5a29c17390d46dd35d13bf02655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5860f3d24d5eee1c5103ec1054cedd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#af5860f3d24d5eee1c5103ec1054cedd3">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;)=delete</td></tr>
<tr class="memdesc:af5860f3d24d5eee1c5103ec1054cedd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#af5860f3d24d5eee1c5103ec1054cedd3">More...</a><br /></td></tr>
<tr class="separator:af5860f3d24d5eee1c5103ec1054cedd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14d9fa00ede181e3d5fe209f3a29eb11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a14d9fa00ede181e3d5fe209f3a29eb11">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a14d9fa00ede181e3d5fe209f3a29eb11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="#a14d9fa00ede181e3d5fe209f3a29eb11">More...</a><br /></td></tr>
<tr class="separator:a14d9fa00ede181e3d5fe209f3a29eb11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656e5f62c7603eaaf2b00bdd05d56986"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a656e5f62c7603eaaf2b00bdd05d56986">~INEOperator</a> ()</td></tr>
<tr class="memdesc:a656e5f62c7603eaaf2b00bdd05d56986"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a656e5f62c7603eaaf2b00bdd05d56986">More...</a><br /></td></tr>
<tr class="separator:a656e5f62c7603eaaf2b00bdd05d56986"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684a54d1fb1634a348a585c6b5e76df0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) override</td></tr>
<tr class="memdesc:a684a54d1fb1634a348a585c6b5e76df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#a684a54d1fb1634a348a585c6b5e76df0">More...</a><br /></td></tr>
<tr class="separator:a684a54d1fb1634a348a585c6b5e76df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) override</td></tr>
<tr class="memdesc:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="#aff8f5e4223fd2a3020c8b252c8982d3a">More...</a><br /></td></tr>
<tr class="separator:aff8f5e4223fd2a3020c8b252c8982d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea714e0b46ed9e9d14440dbc0ece4013"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#aea714e0b46ed9e9d14440dbc0ece4013">workspace</a> () const override</td></tr>
<tr class="memdesc:aea714e0b46ed9e9d14440dbc0ece4013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the memory requirements required by the workspace.  <a href="#aea714e0b46ed9e9d14440dbc0ece4013">More...</a><br /></td></tr>
<tr class="separator:aea714e0b46ed9e9d14440dbc0ece4013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1_i_operator')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a></td></tr>
<tr class="memitem:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a> ()=default</td></tr>
<tr class="memdesc:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">More...</a><br /></td></tr>
<tr class="separator:a3da3a4cfa91daf144e828fa521760ed5 inherit pub_methods_classarm__compute_1_1experimental_1_1_i_operator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Basic interface for functions which have a single async CPU kernel. </p>

<p class="definition">Definition at line <a class="el" href="_i_n_e_operator_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_i_n_e_operator_8h_source.xhtml">INEOperator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5d9d1b2676ea513d58e85161ce554c49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d9d1b2676ea513d58e85161ce554c49">&#9670;&nbsp;</a></span>INEOperator() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_runtime_context.xhtml">IRuntimeContext</a> *&#160;</td>
          <td class="paramname"><em>ctx</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td>Runtime context to be used by the function </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_i_n_e_operator_8cpp_source.xhtml">INEOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    : _kernel(), _ctx(ctx), _workspace()</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0a612c94f92504d3d3573c9812a068cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a612c94f92504d3d3573c9812a068cc">&#9670;&nbsp;</a></span>INEOperator() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a7194c5a29c17390d46dd35d13bf02655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7194c5a29c17390d46dd35d13bf02655">&#9670;&nbsp;</a></span>INEOperator() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move constructor. </p>

</div>
</div>
<a id="a656e5f62c7603eaaf2b00bdd05d56986"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a656e5f62c7603eaaf2b00bdd05d56986">&#9670;&nbsp;</a></span>~INEOperator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af5860f3d24d5eee1c5103ec1054cedd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5860f3d24d5eee1c5103ec1054cedd3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a14d9fa00ede181e3d5fe209f3a29eb11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14d9fa00ede181e3d5fe209f3a29eb11">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default move assignment operator. </p>

</div>
</div>
<a id="aff8f5e4223fd2a3020c8b252c8982d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8f5e4223fd2a3020c8b252c8982d3a">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>constants</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepare the function for executing. </p>
<p>Any one off pre-processing step required by the function is handled here</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">constants</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the constants tensors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Prepare stage might not need all the function's buffers' backing memory to be available in order to execute </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuGemm</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuDepthwiseConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuDepthwiseConv2dAssemblyDispatch</a>, and <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">CpuScale</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_i_n_e_operator_8cpp_source.xhtml">INEOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_dequantize_8cpp_source.xhtml#l00049">CpuDequantize::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(constants);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a684a54d1fb1634a348a585c6b5e76df0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684a54d1fb1634a348a585c6b5e76df0">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="struct_vector.xhtml" title="Structure to hold Vector information. ">Vector</a> that contains the tensors to operate on. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml#a98d9392a7bdeca6788ac682e0febfd23">NESynthetizeFunctionWithZeroConstantKernelBorder&lt; K &gt;</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemm</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuComplexMul</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDirectConv3d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDepthwiseConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuGemmLowpOutputStage</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuSoftmaxGeneric&lt; IS_LOG &gt;</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_mul.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuMul</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuPool2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDepthwiseConv2dAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_add.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuAdd</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConcatenate</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuPool3d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_scale.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuScale</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuConvertFullyConnectedWeights</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuElementwiseUnary</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuDequantize</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuQuantize</a>, and <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml#a684a54d1fb1634a348a585c6b5e76df0">CpuElementwiseBase</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_i_n_e_operator_8cpp_source.xhtml">INEOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00080">ITensorPack::empty()</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, and <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">IScheduler::schedule_op()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00033">CpuElementwiseBase::run()</a>, <a class="el" href="_cpu_elementwise_unary_8cpp_source.xhtml#l00048">CpuElementwiseUnary::run()</a>, <a class="el" href="_cpu_add_8cpp_source.xhtml#l00051">CpuAdd::run()</a>, and <a class="el" href="_cpu_softmax_8cpp_source.xhtml#l00158">CpuSoftmaxGeneric&lt; IS_LOG &gt;::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">if</span>(tensors.empty())</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;No inputs provided&quot;</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a>(tensors, _kernel-&gt;window());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1_i_n_e_operator_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::experimental::INEOperator::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_i_n_e_operator_8cpp_source.xhtml#l00040">INEOperator.cpp:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aea714e0b46ed9e9d14440dbc0ece4013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea714e0b46ed9e9d14440dbc0ece4013">&#9670;&nbsp;</a></span>workspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a> workspace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the memory requirements required by the workspace. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">IOperator</a>.</p>

<p>Reimplemented in <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmLowpMatrixMultiplyCore</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemm</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuFullyConnected</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuWinogradConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuGemmDirectConv2d</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuSoftmaxGeneric&lt; IS_LOG &gt;</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuDepthwiseConv2dAssemblyDispatch</a>, <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuPool2d</a>, and <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml#a74ae0d6e96f38fecd38471431786b870">CpuPool3d</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_n_e_operator_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_i_n_e_operator_8cpp_source.xhtml">INEOperator.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> _workspace;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/NEON/<a class="el" href="_i_n_e_operator_8h_source.xhtml">INEOperator.h</a></li>
<li>src/runtime/NEON/<a class="el" href="_i_n_e_operator_8cpp_source.xhtml">INEOperator.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">INEOperator</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:49 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
