<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/activation/generic/neon/qasymm8.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('activation_2generic_2neon_2qasymm8_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">qasymm8.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="activation_2generic_2neon_2qasymm8_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_helpers_8h.xhtml">arm_compute/core/Helpers.h</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_asymm_8h.xhtml">src/core/NEON/NEAsymm.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_math_8h.xhtml">src/core/NEON/NEMath.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="wrapper_8h.xhtml">src/core/NEON/wrapper/wrapper.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;arm_neon.h&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>cpu</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#ifdef __aarch64__</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">void</span> substitute_bytes_neon(</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> uint8_t        *table,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordtype">size_t</span>                num_strings,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">size_t</span>                string_length,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> uint8_t *<span class="keyword">const</span> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    uint8_t *<span class="keyword">const</span>       *output)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    __asm__ __volatile__(</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="stringliteral">&quot;ldr q16, [%x[table], #0x0]\n&quot;</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="stringliteral">&quot;ldr q17, [%x[table], #0x10]\n&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="stringliteral">&quot;mov x22, #0x0\n&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;ldr q18, [%x[table], #0x20]\n&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="stringliteral">&quot;ldr q19, [%x[table], #0x30]\n&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="stringliteral">&quot;ldr q20, [%x[table], #0x40]\n&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="stringliteral">&quot;ldr q21, [%x[table], #0x50]\n&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="stringliteral">&quot;ldr q22, [%x[table], #0x60]\n&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;ldr q23, [%x[table], #0x70]\n&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;ldr q24, [%x[table], #0x80]\n&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="stringliteral">&quot;ldr q25, [%x[table], #0x90]\n&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="stringliteral">&quot;ldr q26, [%x[table], #0xa0]\n&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="stringliteral">&quot;ldr q27, [%x[table], #0xb0]\n&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="stringliteral">&quot;ldr q28, [%x[table], #0xc0]\n&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="stringliteral">&quot;ldr q29, [%x[table], #0xd0]\n&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="stringliteral">&quot;ldr q30, [%x[table], #0xe0]\n&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="stringliteral">&quot;ldr q31, [%x[table], #0xf0]\n&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="stringliteral">&quot;1:&quot;</span> <span class="comment">// string loop</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="stringliteral">&quot;ldr x21, [%x[input], x22, LSL #0x3]\n&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="stringliteral">&quot;ldr x20, [%x[output], x22, LSL #0x3]\n&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="stringliteral">&quot;movi v12.16b, #0x40\n&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="stringliteral">&quot;movi v11.16b, #0x80\n&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="stringliteral">&quot;movi v10.16b, #0xc0\n&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="stringliteral">&quot;mov x19, %x[string_length]\n&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="stringliteral">&quot;2:&quot;</span> <span class="comment">// 4 rounds: width loop</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="stringliteral">&quot;cmp x19, #0x30\n&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="stringliteral">&quot;bge 27f\n&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;tbz x19, #5, 10f\n&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.16b }, [x21], #0x10\n&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.16b }, [x21], #0x10\n&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 6f\n&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="stringliteral">&quot;ldr d14, [x21], #0x8\n&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 4f\n&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.s }[2], [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 3f\n&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.h }[6], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[14], [x21]\n&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="stringliteral">&quot;3:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_44</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[12], [x21]\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="stringliteral">&quot;4:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_40</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 5f\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.h }[4], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[10], [x21]\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="stringliteral">&quot;5:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_40</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[8], [x21]\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="stringliteral">&quot;6:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_4_32</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 8f\n&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="stringliteral">&quot;ldr s14, [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 7f\n&quot;</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.h }[2], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[6], [x21]\n&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="stringliteral">&quot;7:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_36</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[4], [x21]\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="stringliteral">&quot;8:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_32</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 9f\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="stringliteral">&quot;ldr h14, [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="stringliteral">&quot;ld1 { v14.b }[2], [x21]\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="stringliteral">&quot;9:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_32</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="stringliteral">&quot;ldr b14, [x21, #0x0]\n&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="stringliteral">&quot;10:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_16_0</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="stringliteral">&quot;tbz x19, #4, 18f\n&quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.16b }, [x21], #0x10\n&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 14f\n&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="stringliteral">&quot;ldr d13, [x21], #0x8\n&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 12f\n&quot;</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.s }[2], [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 11f\n&quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.h }[6], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[14], [x21]\n&quot;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="stringliteral">&quot;11:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_28</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[12], [x21]\n&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="stringliteral">&quot;12:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_24</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 13f\n&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.h }[4], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[10], [x21]\n&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="stringliteral">&quot;13:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_24</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[8], [x21]\n&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="stringliteral">&quot;14:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_4_16</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 16f\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="stringliteral">&quot;ldr s13, [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 15f\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.h }[2], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[6], [x21]\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="stringliteral">&quot;15:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_20</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[4], [x21]\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="stringliteral">&quot;16:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_16</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 17f\n&quot;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="stringliteral">&quot;ldr h13, [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="stringliteral">&quot;ld1 { v13.b }[2], [x21]\n&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="stringliteral">&quot;17:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_16</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="stringliteral">&quot;ldr b13, [x21, #0x0]\n&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="stringliteral">&quot;18:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_8_0</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 22f\n&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="stringliteral">&quot;ldr d9, [x21], #0x8\n&quot;</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 20f\n&quot;</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.s }[2], [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 19f\n&quot;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.h }[6], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[14], [x21]\n&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="stringliteral">&quot;19:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_12</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[12], [x21]\n&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="stringliteral">&quot;20:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_8</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 21f\n&quot;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.h }[4], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[10], [x21]\n&quot;</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="stringliteral">&quot;21:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_8</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[8], [x21]\n&quot;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="stringliteral">&quot;22:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_4_0</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 24f\n&quot;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="stringliteral">&quot;ldr s9, [x21], #0x4\n&quot;</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 23f\n&quot;</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.h }[2], [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[6], [x21]\n&quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="stringliteral">&quot;23:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_4</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[4], [x21]\n&quot;</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="stringliteral">&quot;24:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_2_0</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 25f\n&quot;</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="stringliteral">&quot;ldr h9, [x21], #0x2\n&quot;</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 26f\n&quot;</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="stringliteral">&quot;ld1 { v9.b }[2], [x21]\n&quot;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="stringliteral">&quot;b 26f\n&quot;</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="stringliteral">&quot;25:&quot;</span> <span class="comment">// 4 rounds: Partial load: partial_1_0</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="stringliteral">&quot;ldr b9, [x21, #0x0]\n&quot;</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="stringliteral">&quot;26:&quot;</span> <span class="comment">// 4 rounds: Partial load: Done</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="stringliteral">&quot;b 28f\n&quot;</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="stringliteral">&quot;27:&quot;</span> <span class="comment">// 4 rounds: Full load</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="stringliteral">&quot;ldr q9, [x21, #0x0]\n&quot;</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="stringliteral">&quot;ldr q13, [x21, #0x10]\n&quot;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="stringliteral">&quot;ldr q14, [x21, #0x20]\n&quot;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="stringliteral">&quot;add x21, x21, #0x30\n&quot;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="stringliteral">&quot;28:&quot;</span> <span class="comment">// 4 rounds: Load done</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="stringliteral">&quot;sub v8.16b, v9.16b, v12.16b\n&quot;</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="stringliteral">&quot;sub v7.16b, v9.16b, v11.16b\n&quot;</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="stringliteral">&quot;tbl v8.16b, { v20.16b, v21.16b, v22.16b, v23.16b }, v8.16b\n&quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="stringliteral">&quot;sub v6.16b, v9.16b, v10.16b\n&quot;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="stringliteral">&quot;sub v5.16b, v13.16b, v12.16b\n&quot;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="stringliteral">&quot;tbl v9.16b, { v16.16b, v17.16b, v18.16b, v19.16b }, v9.16b\n&quot;</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="stringliteral">&quot;sub v4.16b, v13.16b, v11.16b\n&quot;</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="stringliteral">&quot;sub v3.16b, v13.16b, v10.16b\n&quot;</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="stringliteral">&quot;tbl v7.16b, { v24.16b, v25.16b, v26.16b, v27.16b }, v7.16b\n&quot;</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="stringliteral">&quot;sub v2.16b, v14.16b, v12.16b\n&quot;</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="stringliteral">&quot;sub v1.16b, v14.16b, v11.16b\n&quot;</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="stringliteral">&quot;tbl v6.16b, { v28.16b, v29.16b, v30.16b, v31.16b }, v6.16b\n&quot;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="stringliteral">&quot;sub v0.16b, v14.16b, v10.16b\n&quot;</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="stringliteral">&quot;tbl v13.16b, { v16.16b, v17.16b, v18.16b, v19.16b }, v13.16b\n&quot;</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="stringliteral">&quot;tbl v5.16b, { v20.16b, v21.16b, v22.16b, v23.16b }, v5.16b\n&quot;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="stringliteral">&quot;tbl v4.16b, { v24.16b, v25.16b, v26.16b, v27.16b }, v4.16b\n&quot;</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="stringliteral">&quot;tbl v3.16b, { v28.16b, v29.16b, v30.16b, v31.16b }, v3.16b\n&quot;</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="stringliteral">&quot;orr v9.16b, v9.16b, v8.16b\n&quot;</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="stringliteral">&quot;tbl v14.16b, { v16.16b, v17.16b, v18.16b, v19.16b }, v14.16b\n&quot;</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="stringliteral">&quot;tbl v2.16b, { v20.16b, v21.16b, v22.16b, v23.16b }, v2.16b\n&quot;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="stringliteral">&quot;orr v7.16b, v7.16b, v6.16b\n&quot;</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="stringliteral">&quot;tbl v1.16b, { v24.16b, v25.16b, v26.16b, v27.16b }, v1.16b\n&quot;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="stringliteral">&quot;tbl v0.16b, { v28.16b, v29.16b, v30.16b, v31.16b }, v0.16b\n&quot;</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="stringliteral">&quot;orr v13.16b, v13.16b, v5.16b\n&quot;</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="stringliteral">&quot;orr v4.16b, v4.16b, v3.16b\n&quot;</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="stringliteral">&quot;orr v14.16b, v14.16b, v2.16b\n&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="stringliteral">&quot;cmp x19, #0x30\n&quot;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="stringliteral">&quot;orr v1.16b, v1.16b, v0.16b\n&quot;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="stringliteral">&quot;orr v9.16b, v9.16b, v7.16b\n&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="stringliteral">&quot;orr v13.16b, v13.16b, v4.16b\n&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="stringliteral">&quot;orr v14.16b, v14.16b, v1.16b\n&quot;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="stringliteral">&quot;bge 53f\n&quot;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="stringliteral">&quot;tbz x19, #5, 36f\n&quot;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="stringliteral">&quot;st1 { v9.16b }, [x20], #0x10\n&quot;</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="stringliteral">&quot;st1 { v13.16b }, [x20], #0x10\n&quot;</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 32f\n&quot;</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="stringliteral">&quot;str d14, [x20], #0x8\n&quot;</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 30f\n&quot;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="stringliteral">&quot;st1 { v14.s }[2], [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 29f\n&quot;</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="stringliteral">&quot;st1 { v14.h }[6], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[14], [x20]\n&quot;</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="stringliteral">&quot;29:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_44</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[12], [x20]\n&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="stringliteral">&quot;30:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_40</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 31f\n&quot;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="stringliteral">&quot;st1 { v14.h }[4], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[10], [x20]\n&quot;</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="stringliteral">&quot;31:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_40</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[8], [x20]\n&quot;</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="stringliteral">&quot;32:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_4_32</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 34f\n&quot;</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="stringliteral">&quot;str s14, [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 33f\n&quot;</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="stringliteral">&quot;st1 { v14.h }[2], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[6], [x20]\n&quot;</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="stringliteral">&quot;33:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_36</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[4], [x20]\n&quot;</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="stringliteral">&quot;34:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_32</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 35f\n&quot;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="stringliteral">&quot;str h14, [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="stringliteral">&quot;st1 { v14.b }[2], [x20]\n&quot;</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="stringliteral">&quot;35:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_32</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="stringliteral">&quot;str b14, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="stringliteral">&quot;36:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_16_0</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="stringliteral">&quot;tbz x19, #4, 44f\n&quot;</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="stringliteral">&quot;st1 { v9.16b }, [x20], #0x10\n&quot;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 40f\n&quot;</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="stringliteral">&quot;str d13, [x20], #0x8\n&quot;</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 38f\n&quot;</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="stringliteral">&quot;st1 { v13.s }[2], [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 37f\n&quot;</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="stringliteral">&quot;st1 { v13.h }[6], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[14], [x20]\n&quot;</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="stringliteral">&quot;37:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_28</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[12], [x20]\n&quot;</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="stringliteral">&quot;38:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_24</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 39f\n&quot;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="stringliteral">&quot;st1 { v13.h }[4], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[10], [x20]\n&quot;</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="stringliteral">&quot;39:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_24</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[8], [x20]\n&quot;</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="stringliteral">&quot;40:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_4_16</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 42f\n&quot;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="stringliteral">&quot;str s13, [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 41f\n&quot;</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="stringliteral">&quot;st1 { v13.h }[2], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[6], [x20]\n&quot;</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="stringliteral">&quot;41:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_20</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[4], [x20]\n&quot;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="stringliteral">&quot;42:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_16</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 43f\n&quot;</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <span class="stringliteral">&quot;str h13, [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="stringliteral">&quot;st1 { v13.b }[2], [x20]\n&quot;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="stringliteral">&quot;43:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_16</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="stringliteral">&quot;str b13, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="stringliteral">&quot;44:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_8_0</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="stringliteral">&quot;tbz x19, #3, 48f\n&quot;</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="stringliteral">&quot;str d9, [x20], #0x8\n&quot;</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 46f\n&quot;</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="stringliteral">&quot;st1 { v9.s }[2], [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 45f\n&quot;</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="stringliteral">&quot;st1 { v9.h }[6], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[14], [x20]\n&quot;</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="stringliteral">&quot;45:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_12</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[12], [x20]\n&quot;</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="stringliteral">&quot;46:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_8</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 47f\n&quot;</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="stringliteral">&quot;st1 { v9.h }[4], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[10], [x20]\n&quot;</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="stringliteral">&quot;47:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_8</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[8], [x20]\n&quot;</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="stringliteral">&quot;48:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_4_0</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="stringliteral">&quot;tbz x19, #2, 50f\n&quot;</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="stringliteral">&quot;str s9, [x20], #0x4\n&quot;</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 49f\n&quot;</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="stringliteral">&quot;st1 { v9.h }[2], [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[6], [x20]\n&quot;</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="stringliteral">&quot;49:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_4</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[4], [x20]\n&quot;</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="stringliteral">&quot;50:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_2_0</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="stringliteral">&quot;tbz x19, #1, 51f\n&quot;</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="stringliteral">&quot;str h9, [x20], #0x2\n&quot;</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="stringliteral">&quot;tbz x19, #0, 52f\n&quot;</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="stringliteral">&quot;st1 { v9.b }[2], [x20]\n&quot;</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="stringliteral">&quot;b 52f\n&quot;</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="stringliteral">&quot;51:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: partial_1_0</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="stringliteral">&quot;str b9, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="stringliteral">&quot;52:&quot;</span> <span class="comment">// 4 rounds: Partial writeback: Done</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="stringliteral">&quot;b 54f\n&quot;</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="stringliteral">&quot;53:&quot;</span> <span class="comment">// 4 rounds: Full writeback</span></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="stringliteral">&quot;str q9, [x20, #0x0]\n&quot;</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="stringliteral">&quot;str q13, [x20, #0x10]\n&quot;</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="stringliteral">&quot;str q14, [x20, #0x20]\n&quot;</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="stringliteral">&quot;add x20, x20, #0x30\n&quot;</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="stringliteral">&quot;54:&quot;</span> <span class="comment">// 4 rounds: Writeback done</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="stringliteral">&quot;subs x19, x19, #0x30\n&quot;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="stringliteral">&quot;bgt 2b\n&quot;</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="stringliteral">&quot;add x22, x22, #0x1\n&quot;</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="stringliteral">&quot;cmp x22, %x[num_strings]\n&quot;</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="stringliteral">&quot;bne 1b\n&quot;</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        :</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        : [input] <span class="stringliteral">&quot;r&quot;</span>(input), [num_strings] <span class="stringliteral">&quot;r&quot;</span>(num_strings), [output] <span class="stringliteral">&quot;r&quot;</span>(output), [string_length] <span class="stringliteral">&quot;r&quot;</span>(string_length), [table] <span class="stringliteral">&quot;r&quot;</span>(table)</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;v0&quot;</span>, <span class="stringliteral">&quot;v1&quot;</span>, <span class="stringliteral">&quot;v2&quot;</span>, <span class="stringliteral">&quot;v3&quot;</span>, <span class="stringliteral">&quot;v4&quot;</span>, <span class="stringliteral">&quot;v5&quot;</span>, <span class="stringliteral">&quot;v6&quot;</span>, <span class="stringliteral">&quot;v7&quot;</span>, <span class="stringliteral">&quot;v8&quot;</span>, <span class="stringliteral">&quot;v9&quot;</span>, <span class="stringliteral">&quot;v10&quot;</span>, <span class="stringliteral">&quot;v11&quot;</span>, <span class="stringliteral">&quot;v12&quot;</span>, <span class="stringliteral">&quot;v13&quot;</span>, <span class="stringliteral">&quot;v14&quot;</span>, <span class="stringliteral">&quot;v16&quot;</span>, <span class="stringliteral">&quot;v17&quot;</span>, <span class="stringliteral">&quot;v18&quot;</span>, <span class="stringliteral">&quot;v19&quot;</span>, <span class="stringliteral">&quot;v20&quot;</span>, <span class="stringliteral">&quot;v21&quot;</span>, <span class="stringliteral">&quot;v22&quot;</span>, <span class="stringliteral">&quot;v23&quot;</span>, <span class="stringliteral">&quot;v24&quot;</span>, <span class="stringliteral">&quot;v25&quot;</span>, <span class="stringliteral">&quot;v26&quot;</span>, <span class="stringliteral">&quot;v27&quot;</span>, <span class="stringliteral">&quot;v28&quot;</span>, <span class="stringliteral">&quot;v29&quot;</span>, <span class="stringliteral">&quot;v30&quot;</span>, <span class="stringliteral">&quot;v31&quot;</span>, <span class="stringliteral">&quot;x19&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a3ec129e4d324d680d7de89fdc335d77b">  420</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3ec129e4d324d680d7de89fdc335d77b">neon_qasymm8_activation_lut</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;{</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#afd58441adf1f2570be5b0be4070465cf">ActivationLayerInfo::is_lut_supported</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>(), src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">#ifdef __aarch64__</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> window_step_x  = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>();</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(window, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(src, win_collapsed);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(dst, win_collapsed);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(input.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keyword">auto</span>       output_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(output.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        substitute_bytes_neon(act_info.lut().data(), 1u, window_step_x, &amp;input_ptr, &amp;output_ptr);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    },</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="preprocessor">#else  // #ifdef __aarch64__</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(src);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(dst);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(act_info);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(window);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;LUT Only supported in aarch64.&quot;</span>);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#afd810229385586c08de20cf832eac6b4">  445</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#afd810229385586c08de20cf832eac6b4">neon_qasymm8_activation</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;act_info, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window)</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    constexpr <span class="keywordtype">int</span>                                 window_step_x  = 16;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                                    window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                                    window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(window.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">ActivationLayerInfo::ActivationFunction</a> act            = act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">activation</a>();</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win_collapsed = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">collapse_if_possible</a>(window, <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    win_collapsed.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, 1, 1));</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(src, win_collapsed);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="classarm__compute_1_1_iterator.xhtml">Iterator</a> output(dst, win_collapsed);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_in    = src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qi_out   = dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            va       = vdupq_n_u8(<a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in));</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            vb       = vdupq_n_u8(<a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in));</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               a        = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>(), qi_in);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>        = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>(), qi_in);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a>               const_0  = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(0.f, qi_in);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">qasymm8x16_t</a>            vconst_0 = vdupq_n_u8(const_0);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>                    vconst_1 = vdupq_n_f32(1.f);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="preprocessor">#ifndef __aarch64__</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> vconst_0_f32 = vdupq_n_f32(0);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keyword">const</span> float32x4_t va_f32 = vdupq_n_f32(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>());</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keyword">const</span> float32x4_t vb_f32 = vdupq_n_f32(act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>());</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>       a_f32  = act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">a</a>();</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>       b_f32  = act_info.<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">b</a>();</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor">#ifndef __aarch64__</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_6_f32     = vdupq_n_f32(6.f);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_0_f32     = vdupq_n_f32(0.f);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_3_f32     = vdupq_n_f32(3.f);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> const_inv_6_f32 = vdupq_n_f32(0.166666667f);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="comment">// Initialise scale/offset for re-quantization</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordtype">float</span>       s  = qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordtype">float</span>       o  = -qi_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a> * s + qi_out.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    float32x4_t vs = vdupq_n_f32(s);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    float32x4_t vo = vdupq_n_f32(o);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win_collapsed, [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr  = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> *<span class="keyword">&gt;</span>(input.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> output_ptr = <span class="keyword">reinterpret_cast&lt;</span><a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> *<span class="keyword">&gt;</span>(output.<a class="code" href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">ptr</a>());</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <a class="code" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">wrapper::traits::neon_bitvector_t&lt;qasymm8_t, wrapper::traits::BitWidth::W128&gt;</a> tmp;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="comment">// Compute S elements per iteration</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="keywordtype">int</span> x = window_start_x;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> vin = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                tmp = vmaxq_u8(vconst_0, vin);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            }</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            {</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                tmp = vminq_u8(va, vmaxq_u8(vconst_0, vin));</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            }</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                tmp = vminq_u8(va, vmaxq_u8(vb, vin));</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">vmlaq_qasymm8</a>(tmp, vs, vo);</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            }</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            {</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                {</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[0])))),</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[1])))),</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[2])))),</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">wrapper::vdiv</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vconst_1, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">wrapper::vexpq</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">wrapper::vneg</a>(vin_deq.val[3])))),</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                    }</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                };</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            }</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>)</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            {</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                {</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    {</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[0], vb_f32))),</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[1], vb_f32))),</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[2], vb_f32))),</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">wrapper::vtanh</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[3], vb_f32))),</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                    }</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                };</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            }</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="preprocessor">#ifndef __aarch64__ // LUT-based implementation is used for aarch64 instead.</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaab15c8ee86990d0e2f174a1841b0594be">ActivationLayerInfo::ActivationFunction::HARD_SWISH</a>)</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            {</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                <span class="comment">// De-quantize</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                <span class="comment">// Perform activation</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                {</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                    {</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[0], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(const_inv_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(const_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vin_deq.val[0], const_3_f32))))),</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[1], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(const_inv_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(const_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vin_deq.val[1], const_3_f32))))),</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[2], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(const_inv_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(const_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vin_deq.val[2], const_3_f32))))),</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vin_deq.val[3], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(const_inv_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(const_6_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(const_0_f32, <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vin_deq.val[3], const_3_f32))))),</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    }</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                };</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                <span class="comment">// Re-quantize to new output space</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            }</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationLayerInfo::ActivationFunction::LEAKY_RELU</a>)</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            {</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> vin_deq = <a class="code" href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">vdequantize</a>(vin, qi_in);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                <span class="keyword">const</span> uint32x4x4_t pos_mask =</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                {</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                    {</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(vin_deq.val[0], vconst_0_f32),</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(vin_deq.val[1], vconst_0_f32),</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(vin_deq.val[2], vconst_0_f32),</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">wrapper::vcgt</a>(vin_deq.val[3], vconst_0_f32),</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    }</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                };</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                <span class="keyword">const</span> float32x4x4_t tmp_dep =</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                {</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    {</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(pos_mask.val[0], vin_deq.val[0], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, vin_deq.val[0])),</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(pos_mask.val[1], vin_deq.val[1], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, vin_deq.val[1])),</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(pos_mask.val[2], vin_deq.val[2], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, vin_deq.val[2])),</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                        <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">wrapper::vbsl</a>(pos_mask.val[3], vin_deq.val[3], <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(va_f32, vin_deq.val[3])),</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                };</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                tmp = <a class="code" href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">vquantize</a>(tmp_dep, qi_out);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            }</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            {</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            }</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">wrapper::vstore</a>(output_ptr + x, tmp);</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        }</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="comment">// Compute left-over elements</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        {</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> in  = *(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> *<span class="keyword">&gt;</span>(input_ptr + x));</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">qasymm8_t</a> tmp = 0;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">ActivationLayerInfo::ActivationFunction::RELU</a>)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                tmp = std::max(const_0, in);</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                tmp = utility::clamp&lt;int32_t, qasymm8_t&gt;(tmp * s + o);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a>)</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            {</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                tmp = std::min(a, std::max(const_0, in));</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                tmp = utility::clamp&lt;int32_t, qasymm8_t&gt;(tmp * s + o);</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            }</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            {</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                tmp = std::min(a, std::max(b, in));</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                tmp = utility::clamp&lt;int32_t, qasymm8_t&gt;(tmp * s + o);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            }</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>)</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            {</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                tmp_f       = 1.f / (1.f + std::exp(-tmp_f));</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            }</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>)</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            {</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                tmp_f       = a_f32 * std::tanh(b_f32 * tmp_f);</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            }</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">#ifndef __aarch64__ // LUT-based implementation is used for aarch64 instead.</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaab15c8ee86990d0e2f174a1841b0594be">ActivationLayerInfo::ActivationFunction::HARD_SWISH</a>)</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                tmp_f       = tmp_f * ((std::min(std::max((tmp_f + 3), 0.0f), 6.0f)) * 0.166666667f);</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            }</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>(act == <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">ActivationLayerInfo::ActivationFunction::LEAKY_RELU</a>)</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            {</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                <span class="keywordtype">float</span> tmp_f = <a class="code" href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">dequantize_qasymm8</a>(in, qi_in);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                tmp_f       = tmp_f &gt; 0 ? tmp_f : tmp_f * a_f32;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                tmp         = <a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(tmp_f, qi_out);</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            }</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="preprocessor">#endif // __aarch64__</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported activation function&quot;</span>);</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            *(output_ptr + x) = tmp;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        }</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    },</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;}</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;} <span class="comment">// namespace cpu</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a533635332a3a17c16d8f21c77e15e907"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a533635332a3a17c16d8f21c77e15e907">arm_compute::wrapper::vdiv</a></div><div class="ttdeci">float32x2_t vdiv(const float32x2_t &amp;a, const float32x2_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="div_8h_source.xhtml#l00058">div.h:58</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_acbccd6a89f4cdd679773ce30f7959db0"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#acbccd6a89f4cdd679773ce30f7959db0">arm_compute::wrapper::vtanh</a></div><div class="ttdeci">float32x4_t vtanh(const float32x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="tanh_8h_source.xhtml#l00040">tanh.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac1d8253f8b422e143ab989ad2a4d29dd"><div class="ttname"><a href="namespacearm__compute.xhtml#ac1d8253f8b422e143ab989ad2a4d29dd">arm_compute::dequantize_qasymm8</a></div><div class="ttdeci">float dequantize_qasymm8(uint8_t value, const INFO_TYPE &amp;qinfo)</div><div class="ttdoc">Dequantize a value given an unsigned 8-bit asymmetric quantization scheme. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00359">QuantizationInfo.h:359</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00303">QuantizationInfo.h:303</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaad346bb4679d29be241279f15d7795c1c">arm_compute::ActivationLayerInfo::ActivationFunction::RELU</a></div><div class="ttdoc">Rectifier (  ) </div></div>
<div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a485ae62f3ade6c8d33c5c2e85b29c3a7"><div class="ttname"><a href="namespacearm__compute.xhtml#a485ae62f3ade6c8d33c5c2e85b29c3a7">arm_compute::vdequantize</a></div><div class="ttdeci">float32x4x2_t vdequantize(const uint8x8_t &amp;qv, const UniformQuantizationInfo &amp;qi)</div><div class="ttdoc">Dequantize a neon vector holding 8 quantized values. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00415">NEAsymm.h:415</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_aec65e090c2276e8c8f8dffb6e3edd178"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#aec65e090c2276e8c8f8dffb6e3edd178">arm_compute::ActivationLayerInfo::a</a></div><div class="ttdeci">float a() const</div><div class="ttdoc">Get the alpha value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01668">Types.h:1668</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml">arm_compute::UniformQuantizationInfo</a></div><div class="ttdoc">Quantization info when assuming per layer quantization. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00044">QuantizationInfo.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image&amp;#39;s dimensions with a start, end and step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00079">Window.h:79</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::UniformQuantizationInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00066">QuantizationInfo.h:66</a></div></div>
<div class="ttc" id="_n_e_asymm_8h_xhtml"><div class="ttname"><a href="_n_e_asymm_8h.xhtml">NEAsymm.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01625">Types.h:1625</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9ea"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">arm_compute::ActivationLayerInfo::ActivationFunction</a></div><div class="ttdeci">ActivationFunction</div><div class="ttdoc">Available activation functions. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01629">Types.h:1629</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aba8de9eaa10a7cb45c5aa603585d0e4c"><div class="ttname"><a href="namespacearm__compute.xhtml#aba8de9eaa10a7cb45c5aa603585d0e4c">arm_compute::vmlaq_qasymm8</a></div><div class="ttdeci">uint8x16_t vmlaq_qasymm8(qasymm8x16_t vd, float32x4_t vs, float32x4_t vo)</div><div class="ttdoc">Perform a multiply-accumulate on all 16 components of a QASYMM8 vector. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8inl_source.xhtml#l00026">NEAsymm.inl:26</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaab15c8ee86990d0e2f174a1841b0594be"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaab15c8ee86990d0e2f174a1841b0594be">arm_compute::ActivationLayerInfo::ActivationFunction::HARD_SWISH</a></div><div class="ttdoc">Hard-swish (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00087">Dimensions.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_a3ec129e4d324d680d7de89fdc335d77b"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3ec129e4d324d680d7de89fdc335d77b">arm_compute::cpu::neon_qasymm8_activation_lut</a></div><div class="ttdeci">void neon_qasymm8_activation_lut(const ITensor *src, ITensor *dst, const ActivationLayerInfo &amp;act_info, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00420">qasymm8.cpp:420</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a663ce71e1992366180fcb85b0a874e2f"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a663ce71e1992366180fcb85b0a874e2f">arm_compute::Window::collapse_if_possible</a></div><div class="ttdeci">Window collapse_if_possible(const Window &amp;full_window, size_t first, size_t last, bool *has_collapsed=nullptr) const</div><div class="ttdoc">Collapse the dimensions between first and last if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00068">Window.inl:68</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00150">QuantizationInfo.h:150</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml_ab260e292b1df3944bc1d55a9b2301e41"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml#ab260e292b1df3944bc1d55a9b2301e41">arm_compute::Iterator::ptr</a></div><div class="ttdeci">constexpr uint8_t * ptr() const</div><div class="ttdoc">Return a pointer to the current pixel. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00139">Helpers.inl:139</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">arm_compute::ActivationLayerInfo::ActivationFunction::LOGISTIC</a></div><div class="ttdoc">Logistic (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_aa24da6d1c1ce97217bab0291ce404fa7"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">arm_compute::wrapper::vneg</a></div><div class="ttdeci">int8x8_t vneg(const int8x8_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="neg_8h_source.xhtml#l00039">neg.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdoc">Lower and Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="namespacearm__compute_1_1cpu_xhtml_afd810229385586c08de20cf832eac6b4"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#afd810229385586c08de20cf832eac6b4">arm_compute::cpu::neon_qasymm8_activation</a></div><div class="ttdeci">void neon_qasymm8_activation(const ITensor *src, ITensor *dst, const ActivationLayerInfo &amp;act_info, const Window &amp;window)</div><div class="ttdef"><b>Definition:</b> <a href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00445">qasymm8.cpp:445</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a7eedba29396b0db728bffdf5f202d85c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a7eedba29396b0db728bffdf5f202d85c">arm_compute::wrapper::vcgt</a></div><div class="ttdeci">uint8x8_t vcgt(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="cgt_8h_source.xhtml#l00039">cgt.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8e5924674eee0f441d54eb75d656700f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8e5924674eee0f441d54eb75d656700f">arm_compute::wrapper::vbsl</a></div><div class="ttdeci">uint8x8_t vbsl(const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</div><div class="ttdef"><b>Definition:</b> <a href="bsl_8h_source.xhtml#l00039">bsl.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaacc516ab03b98f1c908ddf6ed4a7c45e9">arm_compute::ActivationLayerInfo::ActivationFunction::BOUNDED_RELU</a></div><div class="ttdoc">Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaac7e80a3de04936f4e423e1b564fdca10">arm_compute::ActivationLayerInfo::ActivationFunction::LEAKY_RELU</a></div><div class="ttdoc">Leaky Rectifier (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">arm_compute::ActivationLayerInfo::ActivationFunction::TANH</a></div><div class="ttdoc">Hyperbolic tangent (  ) </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab8938bcb3ec0f5f8d93285eb3a28b701"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8938bcb3ec0f5f8d93285eb3a28b701">arm_compute::qasymm8_t</a></div><div class="ttdeci">uint8_t qasymm8_t</div><div class="ttdoc">8 bit quantized asymmetric scalar value </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00039">QuantizationInfo.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a97bd6c077f3c7769f575b82988b9b668"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">arm_compute::UniformQuantizationInfo::offset</a></div><div class="ttdeci">int32_t offset</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00067">QuantizationInfo.h:67</a></div></div>
<div class="ttc" id="_n_e_math_8h_xhtml"><div class="ttname"><a href="_n_e_math_8h.xhtml">NEMath.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a4ff1249e423ae9bfab075f5317c4d004"><div class="ttname"><a href="namespacearm__compute.xhtml#a4ff1249e423ae9bfab075f5317c4d004">arm_compute::vquantize</a></div><div class="ttdeci">uint8x8_t vquantize(const float32x4x2_t &amp;qv, const UniformQuantizationInfo &amp;qi)</div><div class="ttdoc">Quantize a neon vector holding 8 floating point values. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00602">NEAsymm.h:602</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_ae7943ea9c1f74dc72c62d4cc3966a459"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">arm_compute::wrapper::vstore</a></div><div class="ttdeci">void vstore(uint8_t *ptr, uint8x8_t val)</div><div class="ttdef"><b>Definition:</b> <a href="store_8h_source.xhtml#l00039">store.h:39</a></div></div>
<div class="ttc" id="arm__compute_2core_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_1_1traits_xhtml_ad302081ac4baa4f94e7628d84421052c"><div class="ttname"><a href="namespacearm__compute_1_1wrapper_1_1traits.xhtml#ad302081ac4baa4f94e7628d84421052c">arm_compute::wrapper::traits::neon_bitvector_t</a></div><div class="ttdeci">typename neon_bitvector&lt; T, BW &gt;::type neon_bitvector_t</div><div class="ttdoc">Helper type template to get the type of a neon vector. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_n_e_o_n_2wrapper_2_traits_8h_source.xhtml#l00130">traits.h:130</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a9e0fb1d1462557f28966ae19988532c2"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a9e0fb1d1462557f28966ae19988532c2">arm_compute::ActivationLayerInfo::activation</a></div><div class="ttdeci">ActivationFunction activation() const</div><div class="ttdoc">Get the type of activation function. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01663">Types.h:1663</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a02a00a5d20986f3a7ab72b9c86be3a54"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a02a00a5d20986f3a7ab72b9c86be3a54">arm_compute::ActivationLayerInfo::b</a></div><div class="ttdeci">float b() const</div><div class="ttdoc">Get the beta value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01673">Types.h:1673</a></div></div>
<div class="ttc" id="wrapper_8h_xhtml"><div class="ttname"><a href="wrapper_8h.xhtml">wrapper.h</a></div><div class="ttdoc">Includes all wrapper headers at once. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00102">Window.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_iterator_xhtml"><div class="ttname"><a href="classarm__compute_1_1_iterator.xhtml">arm_compute::Iterator</a></div><div class="ttdoc">Iterator updated by execute_window_loop for each window element. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_helpers_8h_source.xhtml#l00046">Helpers.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_a3d35fe714076b40450ba6ba870fae322"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">arm_compute::wrapper::vexpq</a></div><div class="ttdeci">float32x4_t vexpq(const float32x4_t &amp;a)</div><div class="ttdef"><b>Definition:</b> <a href="exp_8h_source.xhtml#l00047">exp.h:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_afd58441adf1f2570be5b0be4070465cf"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#afd58441adf1f2570be5b0be4070465cf">arm_compute::ActivationLayerInfo::is_lut_supported</a></div><div class="ttdeci">static bool is_lut_supported(ActivationFunction act_func, DataType data_type)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01702">Types.h:1702</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00159">Window.h:159</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac7e1832b8c58f07a98fc8d390b16ac27"><div class="ttname"><a href="namespacearm__compute.xhtml#ac7e1832b8c58f07a98fc8d390b16ac27">arm_compute::qasymm8x16_t</a></div><div class="ttdeci">uint8x16_t qasymm8x16_t</div><div class="ttdoc">8 bit quantized asymmetric vector with 16 elements </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_asymm_8h_source.xhtml#l00037">NEAsymm.h:37</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_2e9db72303743e246212143d27c33218.xhtml">activation</a></li><li class="navelem"><a class="el" href="dir_0eda15e1c70fe142771981aa2f90fcba.xhtml">generic</a></li><li class="navelem"><a class="el" href="dir_ec26abe846424348b3bb0efb37d4dfc7.xhtml">neon</a></li><li class="navelem"><a class="el" href="activation_2generic_2neon_2qasymm8_8cpp.xhtml">qasymm8.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:37 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
