<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::test::framework Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1test_1_1framework.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::test::framework Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1framework_1_1dataset"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml">dataset</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1framework_1_1detail"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework_1_1detail.xhtml">detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">CommonOptions</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Common command line options used to configure the framework.  <a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml">DataTestCase</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data test case class.  <a href="classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml">DataTestCaseFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of a test case factory to create data test cases.  <a href="classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml">FileNotFound</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error class for when some external assets are missing.  <a href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml">Fixture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract fixture class.  <a href="classarm__compute_1_1test_1_1framework_1_1_fixture.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main framework class.  <a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">FrameworkConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml" title="Main framework class. ">Framework</a> configuration structure.  <a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml">Instrument</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for classes that can be used to measure performance.  <a href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml">InstrumentsStats</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate common statistics for a set of measurements.  <a href="classarm__compute_1_1test_1_1framework_1_1_instruments_stats.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml">ISchedulerUser</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_scheduler.xhtml" title="Configurable scheduler which supports multiple multithreading APIs and choosing between different sch...">Scheduler</a> user interface.  <a href="classarm__compute_1_1test_1_1framework_1_1_i_scheduler_user.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml">JSONPrinter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces JSON output.  <a href="classarm__compute_1_1test_1_1framework_1_1_j_s_o_n_printer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml">MaliCounter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> implementation for mali hw counters.  <a href="classarm__compute_1_1test_1_1framework_1_1_mali_counter.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic measurement that stores values as either double or long long int.  <a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_memory_usage.xhtml">OpenCLMemoryUsage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> collecting memory usage information for OpenCL.  <a href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_memory_usage.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml">PMU</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class provides access to CPU hardware counters.  <a href="classarm__compute_1_1test_1_1framework_1_1_p_m_u.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml">PMUCounter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of an instrument to count CPU cycles.  <a href="classarm__compute_1_1test_1_1framework_1_1_p_m_u_counter.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml">PrettyPrinter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of a <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> that produces human readable output.  <a href="classarm__compute_1_1test_1_1framework_1_1_pretty_printer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract printer class used by the <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> to present output.  <a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml" title="Profiler class to collect benchmark numbers. ">Profiler</a> class to collect benchmark numbers.  <a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_instrument.xhtml" title="Interface for classes that can be used to measure performance. ">Instrument</a> creating measurements based on the information returned by clGetEventProfilingInfo for each OpenCL kernel executed.  <a href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml">SimpleTestCaseFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of a test case factory to create non-data test cases.  <a href="classarm__compute_1_1test_1_1framework_1_1_simple_test_case_factory.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml">TestCase</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract test case class.  <a href="classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">TestCaseFactory</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract factory class to create test cases.  <a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error class for failures during test execution.  <a href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">TestFilter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test filter class.  <a href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a test case.  <a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class to store results of a test.  <a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation of an instrument to measure elapsed wall-clock time in milliseconds.  <a href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a2a9beba9ddfcbb1d1d7f695c9d86296e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> = std::pair&lt; <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">InstrumentType</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> &gt;</td></tr>
<tr class="separator:a2a9beba9ddfcbb1d1d7f695c9d86296e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a269bd170c08a7c4842c2a62e918f2684"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a269bd170c08a7c4842c2a62e918f2684">OpenCLTimer</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a>&lt; false &gt;</td></tr>
<tr class="separator:a269bd170c08a7c4842c2a62e918f2684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7a4d964c8ac4712a767d7e72be73a8e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac7a4d964c8ac4712a767d7e72be73a8e">OpenCLTimestamps</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a>&lt; true &gt;</td></tr>
<tr class="separator:ac7a4d964c8ac4712a767d7e72be73a8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51a7da881c52f992609a40c63253b8ae"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a51a7da881c52f992609a40c63253b8ae">SchedulerTimer</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>&lt; false &gt;</td></tr>
<tr class="separator:a51a7da881c52f992609a40c63253b8ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabd87e6be0a792475c0a9b7f513484ea"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aabd87e6be0a792475c0a9b7f513484ea">SchedulerTimestamps</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>&lt; true &gt;</td></tr>
<tr class="separator:aabd87e6be0a792475c0a9b7f513484ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b3991056bda9276eb18b7ccdefa7bf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac4b3991056bda9276eb18b7ccdefa7bf">WallClockTimer</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a>&lt; false &gt;</td></tr>
<tr class="separator:ac4b3991056bda9276eb18b7ccdefa7bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c71d530a2f689779f6ddc7952b80cad"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7c71d530a2f689779f6ddc7952b80cad">WallClockTimestamps</a> = <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a>&lt; true &gt;</td></tr>
<tr class="separator:a7c71d530a2f689779f6ddc7952b80cad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a7edf31944a6144ffd493d2f9a7bfb5cf"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> : unsigned int { <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a> = ~0U, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">DISABLED</a> = 0, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">PRECOMMIT</a> = 1, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">NIGHTLY</a> = 2
 }<tr class="memdesc:a7edf31944a6144ffd493d2f9a7bfb5cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Possible dataset modes.  <a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a7edf31944a6144ffd493d2f9a7bfb5cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca1fd1d8935433e6ba2e3918214e07f9"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">CONFIG</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">TESTS</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">ERRORS</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">DEBUG</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">MEASUREMENTS</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a5fb1f955b45e38e31789286a1790398d">ALL</a>
<br />
 }<tr class="memdesc:aca1fd1d8935433e6ba2e3918214e07f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Severity of the information.  <a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:aca1fd1d8935433e6ba2e3918214e07f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a01a70ad3a22d8b80c413e8a5977100"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> : unsigned int { <br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693">NONE</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">SCALE_1K</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">SCALE_1M</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">TIME_US</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">TIME_MS</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">TIME_S</a>
<br />
 }</td></tr>
<tr class="separator:a3a01a70ad3a22d8b80c413e8a5977100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6b258eb313f96447f4f0e273431005"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">InstrumentType</a> : unsigned int { <br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a5fb1f955b45e38e31789286a1790398d">ALL</a> = ~0U, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab50339a10e1de285ac99d4c3990b8693">NONE</a> = 0, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">WALL_CLOCK_TIMER</a> = 0x0100, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">PMU</a> = 0x0200, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7">PMU_CYCLE_COUNTER</a> = 0x0201, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257">PMU_INSTRUCTION_COUNTER</a> = 0x0202, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">MALI</a> = 0x0300, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">OPENCL_TIMER</a> = 0x0400, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">SCHEDULER_TIMER</a> = 0x0500, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">OPENCL_MEMORY_USAGE</a> = 0x0600, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">WALL_CLOCK_TIMESTAMPS</a> = 0x0700, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">OPENCL_TIMESTAMPS</a> = 0x0800, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">SCHEDULER_TIMESTAMPS</a> = 0x0900
<br />
 }</td></tr>
<tr class="separator:aac6b258eb313f96447f4f0e273431005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043aa97de3c71ad015852f46ec4cc6ad"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a> { <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6adab50339a10e1de285ac99d4c3990b8693">NONE</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">JSON</a>, 
<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">PRETTY</a>
 }</td></tr>
<tr class="separator:a043aa97de3c71ad015852f46ec4cc6ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ac82666ff37e69696e3945d175a50e363"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac82666ff37e69696e3945d175a50e363">make_printable</a> (int8_t value)</td></tr>
<tr class="separator:ac82666ff37e69696e3945d175a50e363"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35a144970ce43625f8b9af17264b3d45"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a35a144970ce43625f8b9af17264b3d45">make_printable</a> (const <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> wf)</td></tr>
<tr class="separator:a35a144970ce43625f8b9af17264b3d45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2abe3b2eae7dbf37ba0370baf7b8608d"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2abe3b2eae7dbf37ba0370baf7b8608d">make_printable</a> (uint8_t value)</td></tr>
<tr class="separator:a2abe3b2eae7dbf37ba0370baf7b8608d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5acaca5463f6a0958c7bc243adda0e14"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5acaca5463f6a0958c7bc243adda0e14"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a5acaca5463f6a0958c7bc243adda0e14">make_printable</a> (T &amp;&amp;value)</td></tr>
<tr class="separator:a5acaca5463f6a0958c7bc243adda0e14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7457955ed1c49b6478071caa7b5c5be2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7457955ed1c49b6478071caa7b5c5be2">ARM_COMPUTE_PRINT_INFO</a> ()</td></tr>
<tr class="separator:a7457955ed1c49b6478071caa7b5c5be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1afd1c498fb3a1d2315e4c6d87d15754"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754">dataset_mode_from_name</a> (const std::string &amp;<a class="el" href="_n_e_select_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>)</td></tr>
<tr class="separator:a1afd1c498fb3a1d2315e4c6d87d15754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54873f7d8b0103a09a589b01e8cdd31f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a54873f7d8b0103a09a589b01e8cdd31f">operator &amp;</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> t1, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> t2)</td></tr>
<tr class="separator:a54873f7d8b0103a09a589b01e8cdd31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab41cdda516d16fb4d7f1217fc93c7814"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ab41cdda516d16fb4d7f1217fc93c7814">operator|</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> t1, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> t2)</td></tr>
<tr class="separator:ab41cdda516d16fb4d7f1217fc93c7814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59f57ab337b18c6dcd298fdd062fd804"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a59f57ab337b18c6dcd298fdd062fd804">operator|=</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> &amp;t1, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> t2)</td></tr>
<tr class="separator:a59f57ab337b18c6dcd298fdd062fd804"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd1325e94d00cb3d986e766000b3e38"><td class="memItemLeft" align="right" valign="top">inline ::std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aecd1325e94d00cb3d986e766000b3e38">operator&gt;&gt;</a> (::std::istream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> &amp;mode)</td></tr>
<tr class="separator:aecd1325e94d00cb3d986e766000b3e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a57b6c1d3a82001ad4f83676fbb9302"><td class="memItemLeft" align="right" valign="top">inline ::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9a57b6c1d3a82001ad4f83676fbb9302">operator&lt;&lt;</a> (::std::ostream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> mode)</td></tr>
<tr class="separator:a9a57b6c1d3a82001ad4f83676fbb9302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace86dc6f3dfa4f3c256b3999ab250c0a"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ace86dc6f3dfa4f3c256b3999ab250c0a">to_string</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> mode)</td></tr>
<tr class="separator:ace86dc6f3dfa4f3c256b3999ab250c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b68e691a66d273555f1a8f06c2d387"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a60b68e691a66d273555f1a8f06c2d387">log_level_from_name</a> (const std::string &amp;<a class="el" href="_n_e_select_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>)</td></tr>
<tr class="separator:a60b68e691a66d273555f1a8f06c2d387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a549a58715637ff6fd467d33777a15f2c"><td class="memItemLeft" align="right" valign="top">::std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a549a58715637ff6fd467d33777a15f2c">operator&gt;&gt;</a> (::std::istream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> &amp;level)</td></tr>
<tr class="separator:a549a58715637ff6fd467d33777a15f2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a380fb68611f394f4f7525c463a3588dc"><td class="memItemLeft" align="right" valign="top">::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a380fb68611f394f4f7525c463a3588dc">operator&lt;&lt;</a> (::std::ostream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> level)</td></tr>
<tr class="separator:a380fb68611f394f4f7525c463a3588dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab92295a2eda07d5ec770244f8e47dbb7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ab92295a2eda07d5ec770244f8e47dbb7">to_string</a> (<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> level)</td></tr>
<tr class="separator:ab92295a2eda07d5ec770244f8e47dbb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec753fd569ec1bf169e26013898eb4a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9ec753fd569ec1bf169e26013898eb4a">operator&lt;</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;lhs, const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;rhs)</td></tr>
<tr class="separator:a9ec753fd569ec1bf169e26013898eb4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd83c7910de214ea12bc25e7482892a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#afd83c7910de214ea12bc25e7482892a0">instrument_type_from_name</a> (const std::string &amp;<a class="el" href="_n_e_select_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>)</td></tr>
<tr class="separator:afd83c7910de214ea12bc25e7482892a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24f9c11e339a0326e95e07e0c97cb405"><td class="memItemLeft" align="right" valign="top">inline ::std::stringstream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a24f9c11e339a0326e95e07e0c97cb405">operator&gt;&gt;</a> (::std::stringstream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> &amp;instrument)</td></tr>
<tr class="separator:a24f9c11e339a0326e95e07e0c97cb405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab74cc570397d9855e79eb6cade93b3e6"><td class="memItemLeft" align="right" valign="top">inline ::std::stringstream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ab74cc570397d9855e79eb6cade93b3e6">operator&lt;&lt;</a> (::std::stringstream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> instrument)</td></tr>
<tr class="separator:ab74cc570397d9855e79eb6cade93b3e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613d31469acfd34ea5c3df83e6d9f5f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a613d31469acfd34ea5c3df83e6d9f5f3">log_format_from_name</a> (const std::string &amp;<a class="el" href="_n_e_select_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>)</td></tr>
<tr class="separator:a613d31469acfd34ea5c3df83e6d9f5f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2a48b8d3c69f0f1bd7d02ab8adf9812"><td class="memItemLeft" align="right" valign="top">inline ::std::stringstream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#af2a48b8d3c69f0f1bd7d02ab8adf9812">operator&gt;&gt;</a> (::std::stringstream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a> &amp;format)</td></tr>
<tr class="separator:af2a48b8d3c69f0f1bd7d02ab8adf9812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9ba7d0cf26575884c0c2cfe5fb529b6"><td class="memItemLeft" align="right" valign="top">inline ::std::stringstream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac9ba7d0cf26575884c0c2cfe5fb529b6">operator&lt;&lt;</a> (::std::stringstream &amp;stream, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a> format)</td></tr>
<tr class="separator:ac9ba7d0cf26575884c0c2cfe5fb529b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d331575f41ec3bf8e31afce9a89cd2a"><td class="memItemLeft" align="right" valign="top">inline ::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a5d331575f41ec3bf8e31afce9a89cd2a">operator&lt;&lt;</a> (::std::ostream &amp;stream, <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a> status)</td></tr>
<tr class="separator:a5d331575f41ec3bf8e31afce9a89cd2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d63b2b6033b19236853f5f21d990b5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9d63b2b6033b19236853f5f21d990b5b">sleep_in_seconds</a> (float seconds)</td></tr>
<tr class="memdesc:a9d63b2b6033b19236853f5f21d990b5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the calling thread to sleep for a specified number of seconds.  <a href="#a9d63b2b6033b19236853f5f21d990b5b">More...</a><br /></td></tr>
<tr class="separator:a9d63b2b6033b19236853f5f21d990b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce487275e4d9e2072af217789dcdcc5"><td class="memTemplParams" colspan="2">template&lt;typename O , typename F , typename... As, int... S&gt; </td></tr>
<tr class="memitem:a1ce487275e4d9e2072af217789dcdcc5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a1ce487275e4d9e2072af217789dcdcc5">apply_impl</a> (O *obj, F &amp;&amp;func, const std::tuple&lt; As... &gt; &amp;args, detail::sequence&lt; S... &gt;)</td></tr>
<tr class="separator:a1ce487275e4d9e2072af217789dcdcc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:adeaa0a402395806e538066d09bcd668b"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">instruments_info</a></td></tr>
<tr class="separator:adeaa0a402395806e538066d09bcd668b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a2a9beba9ddfcbb1d1d7f695c9d86296e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a9beba9ddfcbb1d1d7f695c9d86296e">&#9670;&nbsp;</a></span>InstrumentsDescription</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> =  std::pair&lt;<a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">InstrumentType</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_instruments_8h_source.xhtml#l00069">69</a> of file <a class="el" href="_instruments_8h_source.xhtml">Instruments.h</a>.</p>

</div>
</div>
<a id="a269bd170c08a7c4842c2a62e918f2684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a269bd170c08a7c4842c2a62e918f2684">&#9670;&nbsp;</a></span>OpenCLTimer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a269bd170c08a7c4842c2a62e918f2684">OpenCLTimer</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a>&lt;false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_open_c_l_timer_8h_source.xhtml">OpenCLTimer.h</a>.</p>

</div>
</div>
<a id="ac7a4d964c8ac4712a767d7e72be73a8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7a4d964c8ac4712a767d7e72be73a8e">&#9670;&nbsp;</a></span>OpenCLTimestamps</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac7a4d964c8ac4712a767d7e72be73a8e">OpenCLTimestamps</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_open_c_l_clock.xhtml">OpenCLClock</a>&lt;true&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_open_c_l_timer_8h_source.xhtml#l00082">82</a> of file <a class="el" href="_open_c_l_timer_8h_source.xhtml">OpenCLTimer.h</a>.</p>

</div>
</div>
<a id="a51a7da881c52f992609a40c63253b8ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51a7da881c52f992609a40c63253b8ae">&#9670;&nbsp;</a></span>SchedulerTimer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a51a7da881c52f992609a40c63253b8ae">SchedulerTimer</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>&lt;false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_scheduler_timer_8h_source.xhtml#l00112">112</a> of file <a class="el" href="_scheduler_timer_8h_source.xhtml">SchedulerTimer.h</a>.</p>

</div>
</div>
<a id="aabd87e6be0a792475c0a9b7f513484ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabd87e6be0a792475c0a9b7f513484ea">&#9670;&nbsp;</a></span>SchedulerTimestamps</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aabd87e6be0a792475c0a9b7f513484ea">SchedulerTimestamps</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_scheduler_clock.xhtml">SchedulerClock</a>&lt;true&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_scheduler_timer_8h_source.xhtml#l00113">113</a> of file <a class="el" href="_scheduler_timer_8h_source.xhtml">SchedulerTimer.h</a>.</p>

</div>
</div>
<a id="ac4b3991056bda9276eb18b7ccdefa7bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4b3991056bda9276eb18b7ccdefa7bf">&#9670;&nbsp;</a></span>WallClockTimer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#ac4b3991056bda9276eb18b7ccdefa7bf">WallClockTimer</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a>&lt;false&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8h_source.xhtml#l00083">83</a> of file <a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a>.</p>

</div>
</div>
<a id="a7c71d530a2f689779f6ddc7952b80cad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c71d530a2f689779f6ddc7952b80cad">&#9670;&nbsp;</a></span>WallClockTimestamps</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7c71d530a2f689779f6ddc7952b80cad">WallClockTimestamps</a> =  <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_wall_clock.xhtml">WallClock</a>&lt;true&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_wall_clock_timer_8h_source.xhtml#l00084">84</a> of file <a class="el" href="_wall_clock_timer_8h_source.xhtml">WallClockTimer.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a7edf31944a6144ffd493d2f9a7bfb5cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7edf31944a6144ffd493d2f9a7bfb5cf">&#9670;&nbsp;</a></span>DatasetMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> : unsigned int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Possible dataset modes. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"></a>ALL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b"></a>DISABLED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97"></a>PRECOMMIT&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3"></a>NIGHTLY&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                       : <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>       = ~0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">DISABLED</a>  = 0,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">PRECOMMIT</a> = 1,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">NIGHTLY</a>   = 2</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">arm_compute::test::framework::DatasetMode::PRECOMMIT</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">arm_compute::test::framework::DatasetMode::DISABLED</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">arm_compute::test::framework::DatasetMode::NIGHTLY</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aac6b258eb313f96447f4f0e273431005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac6b258eb313f96447f4f0e273431005">&#9670;&nbsp;</a></span>InstrumentType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">InstrumentType</a> : unsigned int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a5fb1f955b45e38e31789286a1790398d"></a>ALL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005ab50339a10e1de285ac99d4c3990b8693"></a>NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92"></a>WALL_CLOCK_TIMER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8"></a>PMU&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7"></a>PMU_CYCLE_COUNTER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257"></a>PMU_INSTRUCTION_COUNTER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1"></a>MALI&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90"></a>OPENCL_TIMER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a"></a>SCHEDULER_TIMER&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b"></a>OPENCL_MEMORY_USAGE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99"></a>WALL_CLOCK_TIMESTAMPS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e"></a>OPENCL_TIMESTAMPS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28"></a>SCHEDULER_TIMESTAMPS&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_instruments_8h_source.xhtml#l00046">46</a> of file <a class="el" href="_instruments_8h_source.xhtml">Instruments.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                          : <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>                     = ~0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">NONE</a>                    = 0,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">WALL_CLOCK_TIMER</a>        = 0x0100,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">PMU</a>                     = 0x0200,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7">PMU_CYCLE_COUNTER</a>       = 0x0201,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257">PMU_INSTRUCTION_COUNTER</a> = 0x0202,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">MALI</a>                    = 0x0300,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">OPENCL_TIMER</a>            = 0x0400,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">SCHEDULER_TIMER</a>         = 0x0500,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">OPENCL_MEMORY_USAGE</a>     = 0x0600,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">WALL_CLOCK_TIMESTAMPS</a>   = 0x0700,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">OPENCL_TIMESTAMPS</a>       = 0x0800,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">SCHEDULER_TIMESTAMPS</a>    = 0x0900,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">arm_compute::test::framework::InstrumentType::OPENCL_TIMESTAMPS</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdoc">No quantization. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">arm_compute::test::framework::InstrumentType::SCHEDULER_TIMESTAMPS</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">arm_compute::test::framework::InstrumentType::SCHEDULER_TIMER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">arm_compute::test::framework::InstrumentType::WALL_CLOCK_TIMER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">arm_compute::test::framework::InstrumentType::OPENCL_MEMORY_USAGE</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">arm_compute::test::framework::InstrumentType::WALL_CLOCK_TIMESTAMPS</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">arm_compute::test::framework::InstrumentType::PMU</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257">arm_compute::test::framework::InstrumentType::PMU_INSTRUCTION_COUNTER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7">arm_compute::test::framework::InstrumentType::PMU_CYCLE_COUNTER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">arm_compute::test::framework::InstrumentType::MALI</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">arm_compute::test::framework::InstrumentType::OPENCL_TIMER</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a043aa97de3c71ad015852f46ec4cc6ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a043aa97de3c71ad015852f46ec4cc6ad">&#9670;&nbsp;</a></span>LogFormat</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a043aa97de3c71ad015852f46ec4cc6adab50339a10e1de285ac99d4c3990b8693"></a>NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8"></a>JSON&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f"></a>PRETTY&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml#l00036">36</a> of file <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml">Printers.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">NONE</a>,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">JSON</a>,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">PRETTY</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div><div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdoc">No quantization. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">arm_compute::test::framework::LogFormat::PRETTY</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">arm_compute::test::framework::LogFormat::JSON</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aca1fd1d8935433e6ba2e3918214e07f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca1fd1d8935433e6ba2e3918214e07f9">&#9670;&nbsp;</a></span>LogLevel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Severity of the information. </p>
<p>Each category includes the ones above it.</p>
<p>NONE == Only for filtering. Not used to tag information. CONFIG == Configuration info. TESTS == Information about the tests. ERRORS == Violated assertions/expectations. DEBUG == More violated assertions/expectations. MEASUREMENTS == Information about measurements. ALL == Only for filtering. Not used to tag information. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"></a>NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73"></a>CONFIG&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430"></a>TESTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"></a>ERRORS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15"></a>DEBUG&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8"></a>MEASUREMENTS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca1fd1d8935433e6ba2e3918214e07f9a5fb1f955b45e38e31789286a1790398d"></a>ALL&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_exceptions_8h_source.xhtml#l00050">50</a> of file <a class="el" href="_exceptions_8h_source.xhtml">Exceptions.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">NONE</a>,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">CONFIG</a>,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">TESTS</a>,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">ERRORS</a>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">DEBUG</a>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">MEASUREMENTS</a>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">arm_compute::test::framework::LogLevel::MEASUREMENTS</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdoc">No quantization. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">arm_compute::test::framework::LogLevel::CONFIG</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">arm_compute::test::framework::LogLevel::TESTS</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">arm_compute::test::framework::LogLevel::DEBUG</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3a01a70ad3a22d8b80c413e8a5977100"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a01a70ad3a22d8b80c413e8a5977100">&#9670;&nbsp;</a></span>ScaleFactor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100">ScaleFactor</a> : unsigned int</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100ab50339a10e1de285ac99d4c3990b8693"></a>NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2"></a>SCALE_1K&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5"></a>SCALE_1M&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39"></a>TIME_US&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61"></a>TIME_MS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1"></a>TIME_S&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_instrument_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_instrument_8h_source.xhtml">Instrument.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                       : <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">NONE</a>,     <span class="comment">/* Default scale */</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">SCALE_1K</a>, <span class="comment">/* 1000          */</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">SCALE_1M</a>, <span class="comment">/* 1 000 000     */</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">TIME_US</a>,  <span class="comment">/* Microseconds  */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">TIME_MS</a>,  <span class="comment">/* Milliseconds  */</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">TIME_S</a>,   <span class="comment">/* Seconds       */</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div><div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">arm_compute::GEMMLowpOutputStageType::NONE</a></div><div class="ttdoc">No quantization. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::ScaleFactor::TIME_MS</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::ScaleFactor::TIME_S</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">arm_compute::test::framework::ScaleFactor::SCALE_1K</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">arm_compute::test::framework::ScaleFactor::TIME_US</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">arm_compute::test::framework::ScaleFactor::SCALE_1M</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1ce487275e4d9e2072af217789dcdcc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ce487275e4d9e2072af217789dcdcc5">&#9670;&nbsp;</a></span>apply_impl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::test::framework::apply_impl </td>
          <td>(</td>
          <td class="paramtype">O *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">F &amp;&amp;&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::tuple&lt; As... &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">detail::sequence&lt; S... &gt;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00072">72</a> of file <a class="el" href="tests_2framework_2_utils_8h_source.xhtml">Utils.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00079">arm_compute::test::apply()</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    (obj-&gt;*func)(std::get&lt;S&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)...);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7457955ed1c49b6478071caa7b5c5be2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7457955ed1c49b6478071caa7b5c5be2">&#9670;&nbsp;</a></span>ARM_COMPUTE_PRINT_INFO()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::test::framework::ARM_COMPUTE_PRINT_INFO </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_asserts_8h_source.xhtml#l00064">64</a> of file <a class="el" href="_asserts_8h_source.xhtml">Asserts.h</a>.</p>

<p class="reference">References <a class="el" href="_framework_8cpp_source.xhtml#l00161">Framework::clear_test_info()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00124">Framework::get()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00244">Framework::log_info()</a>, and <a class="el" href="_framework_8cpp_source.xhtml#l00171">Framework::print_test_info()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_g_e_m_m_matrix_multiply_reshaped_8cpp_source.xhtml#l00569">arm_compute::test::validation::combine()</a>, <a class="el" href="_g_e_m_m_lowp_matrix_multiply_reshaped_only_rhs_m_m_u_l_8cpp_source.xhtml#l00100">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE()</a>, <a class="el" href="_c_l_2_depthwise_convolution_layer_native_8cpp_source.xhtml#l00186">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE_NEW()</a>, <a class="el" href="_validation_8h_source.xhtml#l00380">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00460">arm_compute::test::validation::validate_wrap()</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::stringstream msg;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a>().<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">print_test_info</a>(msg);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a>().<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">log_info</a>(msg.str());</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a>().<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">clear_test_info</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a2899d3c2cd558569c0fd015419fe7a20"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">arm_compute::test::framework::Framework::print_test_info</a></div><div class="ttdeci">void print_test_info(std::ostream &amp;os) const</div><div class="ttdoc">Print test info. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00171">Framework.cpp:171</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a60b060774255916807ef1cca44bfbfe1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">arm_compute::test::framework::Framework::log_info</a></div><div class="ttdeci">void log_info(const std::string &amp;info)</div><div class="ttdoc">Print the debug information that has already been logged. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00244">Framework.cpp:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00124">Framework.cpp:124</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_afb6a973ccd27225a87d59d93ca458720"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">arm_compute::test::framework::Framework::clear_test_info</a></div><div class="ttdeci">void clear_test_info()</div><div class="ttdoc">Clear the collected test info. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00161">Framework.cpp:161</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1afd1c498fb3a1d2315e4c6d87d15754"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1afd1c498fb3a1d2315e4c6d87d15754">&#9670;&nbsp;</a></span>dataset_mode_from_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> dataset_mode_from_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_dataset_modes_8cpp_source.xhtml">DatasetModes.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">DISABLED</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">NIGHTLY</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">PRECOMMIT</a>, and <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00147">arm_compute::test::tolower()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_dataset_modes_8h_source.xhtml#l00069">operator&gt;&gt;()</a>, and <a class="el" href="_dataset_modes_8h_source.xhtml#l00060">operator|=()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, DatasetMode&gt; modes =</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        { <span class="stringliteral">&quot;all&quot;</span>, DatasetMode::ALL },</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        { <span class="stringliteral">&quot;disabled&quot;</span>, DatasetMode::DISABLED },</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        { <span class="stringliteral">&quot;precommit&quot;</span>, DatasetMode::PRECOMMIT },</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        { <span class="stringliteral">&quot;nightly&quot;</span>, DatasetMode::NIGHTLY },</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    };</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">return</span> modes.at(<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::out_of_range &amp;)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00205">Utility.h:205</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afd83c7910de214ea12bc25e7482892a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd83c7910de214ea12bc25e7482892a0">&#9670;&nbsp;</a></span>instrument_type_from_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> instrument_type_from_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_instruments_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_instruments_8cpp_source.xhtml">Instruments.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">MALI</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">OPENCL_MEMORY_USAGE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">OPENCL_TIMER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">OPENCL_TIMESTAMPS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">PMU</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7">PMU_CYCLE_COUNTER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257">PMU_INSTRUCTION_COUNTER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">SCALE_1K</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">SCALE_1M</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">SCHEDULER_TIMER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">SCHEDULER_TIMESTAMPS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">TIME_MS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">TIME_S</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">TIME_US</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00147">arm_compute::test::tolower()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">WALL_CLOCK_TIMER</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">WALL_CLOCK_TIMESTAMPS</a>.</p>

<p class="reference">Referenced by <a class="el" href="_instruments_8h_source.xhtml#l00073">operator&gt;&gt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, framework::InstrumentsDescription&gt; types =</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        { <span class="stringliteral">&quot;all&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::ALL, ScaleFactor::NONE) },</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        { <span class="stringliteral">&quot;none&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::NONE, ScaleFactor::NONE) },</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        { <span class="stringliteral">&quot;wall_clock&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMER, ScaleFactor::NONE) },</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timer&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMER, ScaleFactor::NONE) },</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timer_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMER, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timer_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMER, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timestamps&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMESTAMPS, ScaleFactor::NONE) },</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timestamps_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMESTAMPS, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        { <span class="stringliteral">&quot;wall_clock_timestamps_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::WALL_CLOCK_TIMESTAMPS, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        { <span class="stringliteral">&quot;scheduler_timestamps&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMESTAMPS, ScaleFactor::NONE) },</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        { <span class="stringliteral">&quot;scheduler_timestamps_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMESTAMPS, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        { <span class="stringliteral">&quot;scheduler_timestamps_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMESTAMPS, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        { <span class="stringliteral">&quot;scheduler_timer&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMER, ScaleFactor::NONE) },</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        { <span class="stringliteral">&quot;scheduler_timer_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMER, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        { <span class="stringliteral">&quot;scheduler_timer_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::SCHEDULER_TIMER, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        { <span class="stringliteral">&quot;pmu&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::PMU, ScaleFactor::NONE) },</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        { <span class="stringliteral">&quot;pmu_k&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::PMU, ScaleFactor::SCALE_1K) },</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        { <span class="stringliteral">&quot;pmu_m&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::PMU, ScaleFactor::SCALE_1M) },</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        { <span class="stringliteral">&quot;pmu_cycles&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::PMU_CYCLE_COUNTER, ScaleFactor::NONE) },</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        { <span class="stringliteral">&quot;pmu_instructions&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::PMU_INSTRUCTION_COUNTER, ScaleFactor::NONE) },</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        { <span class="stringliteral">&quot;mali&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::MALI, ScaleFactor::NONE) },</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        { <span class="stringliteral">&quot;mali_k&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::MALI, ScaleFactor::SCALE_1K) },</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        { <span class="stringliteral">&quot;mali_m&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::MALI, ScaleFactor::SCALE_1M) },</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        { <span class="stringliteral">&quot;opencl_timestamps&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMESTAMPS, ScaleFactor::NONE) },</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        { <span class="stringliteral">&quot;opencl_timestamps_us&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMESTAMPS, ScaleFactor::TIME_US) },</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        { <span class="stringliteral">&quot;opencl_timestamps_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMESTAMPS, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        { <span class="stringliteral">&quot;opencl_timestamps_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMESTAMPS, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        { <span class="stringliteral">&quot;opencl_timer&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMER, ScaleFactor::NONE) },</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        { <span class="stringliteral">&quot;opencl_timer_us&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMER, ScaleFactor::TIME_US) },</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        { <span class="stringliteral">&quot;opencl_timer_ms&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMER, ScaleFactor::TIME_MS) },</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        { <span class="stringliteral">&quot;opencl_timer_s&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_TIMER, ScaleFactor::TIME_S) },</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        { <span class="stringliteral">&quot;opencl_memory_usage&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_MEMORY_USAGE, ScaleFactor::NONE) },</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        { <span class="stringliteral">&quot;opencl_memory_usage_k&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_MEMORY_USAGE, ScaleFactor::SCALE_1K) },</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        { <span class="stringliteral">&quot;opencl_memory_usage_m&quot;</span>, std::pair&lt;InstrumentType, ScaleFactor&gt;(InstrumentType::OPENCL_MEMORY_USAGE, ScaleFactor::SCALE_1M) },</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    };</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> types.at(<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::out_of_range &amp;)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00205">Utility.h:205</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a613d31469acfd34ea5c3df83e6d9f5f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a613d31469acfd34ea5c3df83e6d9f5f3">&#9670;&nbsp;</a></span>log_format_from_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a> log_format_from_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_printers_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_printers_8cpp_source.xhtml">Printers.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">JSON</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">PRETTY</a>, and <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00147">arm_compute::test::tolower()</a>.</p>

<p class="reference">Referenced by <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml#l00045">operator&gt;&gt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, LogFormat&gt; formats =</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        { <span class="stringliteral">&quot;pretty&quot;</span>, LogFormat::PRETTY },</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        { <span class="stringliteral">&quot;none&quot;</span>, LogFormat::NONE },</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        { <span class="stringliteral">&quot;json&quot;</span>, LogFormat::JSON },</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    };</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">return</span> formats.at(<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::out_of_range &amp;)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00205">Utility.h:205</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a60b68e691a66d273555f1a8f06c2d387"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b68e691a66d273555f1a8f06c2d387">&#9670;&nbsp;</a></span>log_level_from_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> log_level_from_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_exceptions_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_exceptions_8cpp_source.xhtml">Exceptions.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">CONFIG</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">DEBUG</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">ERRORS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">MEASUREMENTS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">TESTS</a>, and <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00147">arm_compute::test::tolower()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_exceptions_8cpp_source.xhtml#l00060">operator&gt;&gt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;std::string, LogLevel&gt; levels =</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        { <span class="stringliteral">&quot;none&quot;</span>, LogLevel::NONE },</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        { <span class="stringliteral">&quot;config&quot;</span>, LogLevel::CONFIG },</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        { <span class="stringliteral">&quot;tests&quot;</span>, LogLevel::TESTS },</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        { <span class="stringliteral">&quot;errors&quot;</span>, LogLevel::ERRORS },</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        { <span class="stringliteral">&quot;debug&quot;</span>, LogLevel::DEBUG },</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        { <span class="stringliteral">&quot;measurements&quot;</span>, LogLevel::MEASUREMENTS },</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        { <span class="stringliteral">&quot;all&quot;</span>, LogLevel::ALL },</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    };</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> levels.at(<a class="code" href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">tolower</a>(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::out_of_range &amp;)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_abb96ad5c7071ec3a47ea5f07e817a636"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#abb96ad5c7071ec3a47ea5f07e817a636">arm_compute::utility::tolower</a></div><div class="ttdeci">std::string tolower(std::string string)</div><div class="ttdoc">Convert string to lower case. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00205">Utility.h:205</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac82666ff37e69696e3945d175a50e363"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac82666ff37e69696e3945d175a50e363">&#9670;&nbsp;</a></span>make_printable() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int arm_compute::test::framework::make_printable </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_asserts_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_asserts_8h_source.xhtml">Asserts.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_validation_8h_source.xhtml#l00380">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00460">arm_compute::test::validation::validate_wrap()</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a35a144970ce43625f8b9af17264b3d45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35a144970ce43625f8b9af17264b3d45">&#9670;&nbsp;</a></span>make_printable() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string arm_compute::test::framework::make_printable </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a>&#160;</td>
          <td class="paramname"><em>wf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_asserts_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_asserts_8h_source.xhtml">Asserts.h</a>.</p>

<p class="reference">References <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00079">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a1d8c24abe3cf6edd704d126d1d2a5420">arm_compute::to_string</a>(wf);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a1d8c24abe3cf6edd704d126d1d2a5420"><div class="ttname"><a href="namespacearm__compute.xhtml#a1d8c24abe3cf6edd704d126d1d2a5420">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const T &amp;val)</div><div class="ttdoc">Fallback method: try to use std::to_string: </div><div class="ttdef"><b>Definition:</b> <a href="utils_2_type_printer_8h_source.xhtml#l00079">TypePrinter.h:79</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2abe3b2eae7dbf37ba0370baf7b8608d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2abe3b2eae7dbf37ba0370baf7b8608d">&#9670;&nbsp;</a></span>make_printable() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int arm_compute::test::framework::make_printable </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_asserts_8h_source.xhtml#l00052">52</a> of file <a class="el" href="_asserts_8h_source.xhtml">Asserts.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5acaca5463f6a0958c7bc243adda0e14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5acaca5463f6a0958c7bc243adda0e14">&#9670;&nbsp;</a></span>make_printable() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T arm_compute::test::framework::make_printable </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_asserts_8h_source.xhtml#l00059">59</a> of file <a class="el" href="_asserts_8h_source.xhtml">Asserts.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a54873f7d8b0103a09a589b01e8cdd31f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54873f7d8b0103a09a589b01e8cdd31f">&#9670;&nbsp;</a></span>operator &()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> arm_compute::test::framework::operator&amp; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>t2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00048">48</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::underlying_type&lt;DatasetMode&gt;::type</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a><span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a><span class="keyword">&gt;</span>(t1) &amp; static_cast&lt;type&gt;(t2));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9ec753fd569ec1bf169e26013898eb4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ec753fd569ec1bf169e26013898eb4a">&#9670;&nbsp;</a></span>operator<()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_compute::test::framework::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_framework_8h_source.xhtml#l00086">86</a> of file <a class="el" href="_framework_8h_source.xhtml">Framework.h</a>.</p>

<p class="reference">References <a class="el" href="_framework_8h_source.xhtml#l00080">TestInfo::id</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> lhs.id &lt; rhs.id;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac9ba7d0cf26575884c0c2cfe5fb529b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9ba7d0cf26575884c0c2cfe5fb529b6">&#9670;&nbsp;</a></span>operator<<() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::stringstream&amp; arm_compute::test::framework::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::stringstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml#l00053">53</a> of file <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml">Printers.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada0ecd11c1d7a287401d148a23bbd7a2f8">JSON</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ada2b908e3bfd5ebc739a3ce26d5045b76f">PRETTY</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">switch</span>(format)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">case</span> LogFormat::PRETTY:</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;PRETTY&quot;</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">case</span> LogFormat::NONE:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;NONE&quot;</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">case</span> LogFormat::JSON:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;JSON&quot;</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported log format&quot;</span>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a380fb68611f394f4f7525c463a3588dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a380fb68611f394f4f7525c463a3588dc">&#9670;&nbsp;</a></span>operator<<() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_exceptions_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_exceptions_8cpp_source.xhtml">Exceptions.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">CONFIG</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">DEBUG</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">ERRORS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">MEASUREMENTS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">TESTS</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">switch</span>(<a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">case</span> LogLevel::NONE:</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;NONE&quot;</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">case</span> LogLevel::CONFIG:</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;CONFIG&quot;</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">case</span> LogLevel::TESTS:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;TESTS&quot;</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">case</span> LogLevel::ERRORS:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;ERRORS&quot;</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">case</span> LogLevel::DEBUG:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;DEBUG&quot;</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">case</span> LogLevel::MEASUREMENTS:</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;MEASUREMENTS&quot;</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">case</span> LogLevel::ALL:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;ALL&quot;</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported log level&quot;</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00681">GemmTuner.py:681</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9a57b6c1d3a82001ad4f83676fbb9302"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a57b6c1d3a82001ad4f83676fbb9302">&#9670;&nbsp;</a></span>operator<<() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::test::framework::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00077">77</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">DISABLED</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">NIGHTLY</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">PRECOMMIT</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">switch</span>(<a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">case</span> DatasetMode::DISABLED:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;DISABLED&quot;</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">case</span> DatasetMode::PRECOMMIT:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;PRECOMMIT&quot;</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">case</span> DatasetMode::NIGHTLY:</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;NIGHTLY&quot;</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">case</span> DatasetMode::ALL:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;ALL&quot;</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported dataset mode&quot;</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="namespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00165">clang_tidy_rules.py:165</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab74cc570397d9855e79eb6cade93b3e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab74cc570397d9855e79eb6cade93b3e6">&#9670;&nbsp;</a></span>operator<<() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::stringstream&amp; arm_compute::test::framework::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::stringstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a>&#160;</td>
          <td class="paramname"><em>instrument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_instruments_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_instruments_8h_source.xhtml">Instruments.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">ALL</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">MALI</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">NONE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">OPENCL_MEMORY_USAGE</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">OPENCL_TIMER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">OPENCL_TIMESTAMPS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">PMU</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae84d32a2737edd67fcd3616cf7a674f7">PMU_CYCLE_COUNTER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ae6848a94f594156fc477885835034257">PMU_INSTRUCTION_COUNTER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">SCALE_1K</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">SCALE_1M</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">SCHEDULER_TIMER</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">SCHEDULER_TIMESTAMPS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">TIME_MS</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">TIME_S</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">TIME_US</a>, <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">WALL_CLOCK_TIMER</a>, and <a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">WALL_CLOCK_TIMESTAMPS</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">switch</span>(instrument.first)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">case</span> InstrumentType::WALL_CLOCK_TIMESTAMPS:</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMESTAMPS&quot;</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMESTAMPS_MS&quot;</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMESTAMPS_S&quot;</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">case</span> InstrumentType::WALL_CLOCK_TIMER:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMER&quot;</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMER_MS&quot;</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;WALL_CLOCK_TIMER_S&quot;</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">case</span> InstrumentType::SCHEDULER_TIMESTAMPS:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMESTAMPS&quot;</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMESTAMPS_MS&quot;</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMESTAMPS_S&quot;</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">case</span> InstrumentType::SCHEDULER_TIMER:</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMER&quot;</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMER_MS&quot;</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;SCHEDULER_TIMER_S&quot;</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">case</span> InstrumentType::PMU:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;PMU&quot;</span>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1K:</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;PMU_K&quot;</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1M:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;PMU_M&quot;</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">case</span> InstrumentType::PMU_CYCLE_COUNTER:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;PMU_CYCLE_COUNTER&quot;</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">case</span> InstrumentType::PMU_INSTRUCTION_COUNTER:</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;PMU_INSTRUCTION_COUNTER&quot;</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">case</span> InstrumentType::MALI:</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;MALI&quot;</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1K:</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;MALI_K&quot;</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1M:</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;MALI_M&quot;</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">case</span> InstrumentType::OPENCL_TIMESTAMPS:</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMESTAMPS&quot;</span>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_US:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMESTAMPS_US&quot;</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMESTAMPS_MS&quot;</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMESTAMPS_S&quot;</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">case</span> InstrumentType::OPENCL_TIMER:</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMER&quot;</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_US:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMER_US&quot;</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_MS:</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMER_MS&quot;</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::TIME_S:</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_TIMER_S&quot;</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">case</span> InstrumentType::OPENCL_MEMORY_USAGE:</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">switch</span>(instrument.second)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::NONE:</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_MEMORY_USAGE&quot;</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1K:</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_MEMORY_USAGE_K&quot;</span>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="keywordflow">case</span> ScaleFactor::SCALE_1M:</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    stream &lt;&lt; <span class="stringliteral">&quot;OPENCL_MEMORY_USAGE_M&quot;</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument scale&quot;</span>);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">case</span> InstrumentType::ALL:</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;ALL&quot;</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordflow">case</span> InstrumentType::NONE:</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;NONE&quot;</span>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported instrument type&quot;</span>);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5d331575f41ec3bf8e31afce9a89cd2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d331575f41ec3bf8e31afce9a89cd2a">&#9670;&nbsp;</a></span>operator<<() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::test::framework::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">TestCaseFactory::Status</a>&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_test_case_factory_8h_source.xhtml#l00162">162</a> of file <a class="el" href="_test_case_factory_8h_source.xhtml">TestCaseFactory.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba18ff74f43da410c5529f7d6fca84f115">TestCaseFactory::ACTIVE</a>, <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">TestCaseFactory::DISABLED</a>, and <a class="el" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestCaseFactory::EXPECTED_FAILURE</a>.</p>
<div class="fragment"><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">switch</span>(status)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">case</span> TestCaseFactory::Status::ACTIVE:</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;ACTIVE&quot;</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">case</span> TestCaseFactory::Status::EXPECTED_FAILURE:</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;EXPECTED_FAILURE&quot;</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">case</span> TestCaseFactory::Status::DISABLED:</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;DISABLED&quot;</span>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;Unsupported test case factory status&quot;</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af2a48b8d3c69f0f1bd7d02ab8adf9812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2a48b8d3c69f0f1bd7d02ab8adf9812">&#9670;&nbsp;</a></span>operator>>() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::stringstream&amp; arm_compute::test::framework::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">::std::stringstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a043aa97de3c71ad015852f46ec4cc6ad">LogFormat</a> &amp;&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml#l00045">45</a> of file <a class="el" href="tests_2framework_2printers_2_printers_8h_source.xhtml">Printers.h</a>.</p>

<p class="reference">References <a class="el" href="_printers_8cpp_source.xhtml#l00037">log_format_from_name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::string value;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    stream &gt;&gt; value;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    format = <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a613d31469acfd34ea5c3df83e6d9f5f3">log_format_from_name</a>(value);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a613d31469acfd34ea5c3df83e6d9f5f3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a613d31469acfd34ea5c3df83e6d9f5f3">arm_compute::test::framework::log_format_from_name</a></div><div class="ttdeci">LogFormat log_format_from_name(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_printers_8cpp_source.xhtml#l00037">Printers.cpp:37</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a549a58715637ff6fd467d33777a15f2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a549a58715637ff6fd467d33777a15f2c">&#9670;&nbsp;</a></span>operator>>() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::istream &amp; operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">::std::istream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> &amp;&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_exceptions_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_exceptions_8cpp_source.xhtml">Exceptions.cpp</a>.</p>

<p class="reference">References <a class="el" href="_exceptions_8cpp_source.xhtml#l00037">log_level_from_name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::string value;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    stream &gt;&gt; value;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a> = <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a60b68e691a66d273555f1a8f06c2d387">log_level_from_name</a>(value);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00681">GemmTuner.py:681</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a60b68e691a66d273555f1a8f06c2d387"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a60b68e691a66d273555f1a8f06c2d387">arm_compute::test::framework::log_level_from_name</a></div><div class="ttdeci">LogLevel log_level_from_name(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00037">Exceptions.cpp:37</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aecd1325e94d00cb3d986e766000b3e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecd1325e94d00cb3d986e766000b3e38">&#9670;&nbsp;</a></span>operator>>() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::istream&amp; arm_compute::test::framework::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">::std::istream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> &amp;&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00069">69</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="_dataset_modes_8cpp_source.xhtml#l00036">dataset_mode_from_name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::string value;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    stream &gt;&gt; value;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a> = <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754">dataset_mode_from_name</a>(value);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a1afd1c498fb3a1d2315e4c6d87d15754"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754">arm_compute::test::framework::dataset_mode_from_name</a></div><div class="ttdeci">DatasetMode dataset_mode_from_name(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8cpp_source.xhtml#l00036">DatasetModes.cpp:36</a></div></div>
<div class="ttc" id="namespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00165">clang_tidy_rules.py:165</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a24f9c11e339a0326e95e07e0c97cb405"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24f9c11e339a0326e95e07e0c97cb405">&#9670;&nbsp;</a></span>operator>>() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::stringstream&amp; arm_compute::test::framework::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">::std::stringstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>instrument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_instruments_8h_source.xhtml#l00073">73</a> of file <a class="el" href="_instruments_8h_source.xhtml">Instruments.h</a>.</p>

<p class="reference">References <a class="el" href="_instruments_8cpp_source.xhtml#l00037">instrument_type_from_name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::string value;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    stream &gt;&gt; value;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    instrument = <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#afd83c7910de214ea12bc25e7482892a0">instrument_type_from_name</a>(value);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_afd83c7910de214ea12bc25e7482892a0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#afd83c7910de214ea12bc25e7482892a0">arm_compute::test::framework::instrument_type_from_name</a></div><div class="ttdeci">InstrumentsDescription instrument_type_from_name(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8cpp_source.xhtml#l00037">Instruments.cpp:37</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab41cdda516d16fb4d7f1217fc93c7814"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab41cdda516d16fb4d7f1217fc93c7814">&#9670;&nbsp;</a></span>operator|()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> arm_compute::test::framework::operator| </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>t2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00054">54</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::underlying_type&lt;DatasetMode&gt;::type</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a><span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a><span class="keyword">&gt;</span>(t1) | static_cast&lt;type&gt;(t2));</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a59f57ab337b18c6dcd298fdd062fd804"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59f57ab337b18c6dcd298fdd062fd804">&#9670;&nbsp;</a></span>operator|=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&amp; arm_compute::test::framework::operator|= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a> &amp;&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>t2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00060">60</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="_dataset_modes_8cpp_source.xhtml#l00036">dataset_mode_from_name()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">name</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">using</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::underlying_type&lt;DatasetMode&gt;::type</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    t1         = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a><span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a><span class="keyword">&gt;</span>(t1) | static_cast&lt;type&gt;(t2));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> t1;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes. </div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9d63b2b6033b19236853f5f21d990b5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d63b2b6033b19236853f5f21d990b5b">&#9670;&nbsp;</a></span>sleep_in_seconds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::test::framework::sleep_in_seconds </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>seconds</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Makes the calling thread to sleep for a specified number of seconds. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">seconds</td><td>Amount of seconds to sleep. Will return immediately if less or equal to zero. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="tests_2framework_2_utils_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="tests_2framework_2_utils_8cpp_source.xhtml">Utils.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00164">arm_compute::test::arithmetic_to_string()</a>, and <a class="el" href="_framework_8cpp_source.xhtml#l00543">Framework::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// Early return on non-positive input</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span>(seconds &lt;= 0.f)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#ifndef NO_MULTI_THREADING</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">const</span> int64_t us = <span class="keyword">static_cast&lt;</span>int64_t<span class="keyword">&gt;</span>(seconds * 1e6);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::this_thread::sleep_for(std::chrono::microseconds(us));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* NO_MULTI_THREADING */</span><span class="preprocessor"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ace86dc6f3dfa4f3c256b3999ab250c0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace86dc6f3dfa4f3c256b3999ab250c0a">&#9670;&nbsp;</a></span>to_string() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string arm_compute::test::framework::to_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_dataset_modes_8h_source.xhtml#l00100">100</a> of file <a class="el" href="_dataset_modes_8h_source.xhtml">DatasetModes.h</a>.</p>

<p class="reference">References <a class="el" href="clang__tidy__rules_8py_source.xhtml#l00165">clang_tidy_rules::mode</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_dataset_8h_source.xhtml#l00087">RangeDataset&lt; T &gt;::iterator::description()</a>, <a class="el" href="_singleton_dataset_8h_source.xhtml#l00094">SingletonDataset&lt; T &gt;::iterator::description()</a>, and <a class="el" href="_container_dataset_8h_source.xhtml#l00100">ContainerDataset&lt; T &gt;::iterator::description()</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::stringstream stream;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    stream &lt;&lt; <a class="code" href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">mode</a>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> stream.str();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="ttc" id="namespaceclang__tidy__rules_xhtml_a1a6b6fb557d8d37d59700faf4e4c9167"><div class="ttname"><a href="namespaceclang__tidy__rules.xhtml#a1a6b6fb557d8d37d59700faf4e4c9167">clang_tidy_rules.mode</a></div><div class="ttdeci">mode</div><div class="ttdef"><b>Definition:</b> <a href="clang__tidy__rules_8py_source.xhtml#l00165">clang_tidy_rules.py:165</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab92295a2eda07d5ec770244f8e47dbb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab92295a2eda07d5ec770244f8e47dbb7">&#9670;&nbsp;</a></span>to_string() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string to_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_exceptions_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="_exceptions_8cpp_source.xhtml">Exceptions.cpp</a>.</p>

<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00681">GemmTuner::level</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::stringstream stream;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    stream &lt;&lt; <a class="code" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> stream.str();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="ttc" id="namespace_gemm_tuner_xhtml_afde8e18a788ccc92fc61cab298bca7e3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">GemmTuner.level</a></div><div class="ttdeci">level</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00681">GemmTuner.py:681</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="adeaa0a402395806e538066d09bcd668b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adeaa0a402395806e538066d09bcd668b">&#9670;&nbsp;</a></span>instruments_info</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a> &gt; instruments_info</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_framework_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="_framework_8cpp_source.xhtml">Framework.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>, and <a class="el" href="_scheduler_timer_8cpp_source.xhtml#l00139">SchedulerClock&lt; output_timestamps &gt;::SchedulerClock()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:52 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
