<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validate_examples/graph_fully_connected.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('graph__fully__connected_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">graph_fully_connected.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="graph__fully__connected_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2020 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8h.xhtml">arm_compute/graph.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_accessor_8h.xhtml">tests/NEON/Accessor.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fully_connected_layer_8h.xhtml">tests/validation/reference/FullyConnectedLayer.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_permute_8h.xhtml">tests/validation/reference/Permute.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_graph_options_8h.xhtml">utils/CommonGraphOptions.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_utils_8h.xhtml">utils/GraphUtils.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;utils/Utils.h&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validate_example_8h.xhtml">ValidateExample.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph__validate__utils_8h.xhtml">graph_validate_utils.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/** Fully connected command line options used to configure the graph examples</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> * (Similar to common options)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * The options in this object get populated when &quot;parse()&quot; is called on the parser used to construct it.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> * The expected workflow is:</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * CommandLineParser parser;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * CommonOptions options( parser );</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * parser.parse(argc, argv);</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">class </span>FullyConnectedOptions final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml">CommonGraphValidateOptions</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">explicit</span> FullyConnectedOptions(<a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">CommandLineParser</a> &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>) noexcept</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        : <a class="code" href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml">CommonGraphValidateOptions</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;          width(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;width&quot;</span>, 3)),</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;          <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;batch&quot;</span>, 1)),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;          input_scale(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;float&gt;</a>&gt;(<span class="stringliteral">&quot;input_scale&quot;</span>, 1.0f)),</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;          input_offset(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;input_offset&quot;</span>, 0)),</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;          weights_scale(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;float&gt;</a>&gt;(<span class="stringliteral">&quot;weights_scale&quot;</span>, 1.0f)),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;          weights_offset(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;weights_offset&quot;</span>, 0)),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;          output_scale(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;float&gt;</a>&gt;(<span class="stringliteral">&quot;output_scale&quot;</span>, 1.0f)),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;          output_offset(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;output_offset&quot;</span>, 0)),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          num_outputs(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;num_outputs&quot;</span>, 1)),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;          input_range_low(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;uint64_t&gt;</a>&gt;(<span class="stringliteral">&quot;input_range_low&quot;</span>)),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;          input_range_high(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;uint64_t&gt;</a>&gt;(<span class="stringliteral">&quot;input_range_high&quot;</span>)),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          weights_range_low(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;uint64_t&gt;</a>&gt;(<span class="stringliteral">&quot;weights_range_low&quot;</span>)),</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;          weights_range_high(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption&lt;uint64_t&gt;</a>&gt;(<span class="stringliteral">&quot;weights_range_high&quot;</span>))</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        width-&gt;set_help(<span class="stringliteral">&quot;Set Input dimension width&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>-&gt;set_help(<span class="stringliteral">&quot;Set Input dimension batch&quot;</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        input_scale-&gt;set_help(<span class="stringliteral">&quot;Quantization scale from QASYMM8&quot;</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        input_offset-&gt;set_help(<span class="stringliteral">&quot;Quantization offset from QASYMM8&quot;</span>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        weights_scale-&gt;set_help(<span class="stringliteral">&quot;Quantization scale from QASYMM8&quot;</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        weights_offset-&gt;set_help(<span class="stringliteral">&quot;Quantization offset from QASYMM8&quot;</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        output_scale-&gt;set_help(<span class="stringliteral">&quot;Quantization scale from QASYMM8&quot;</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        output_offset-&gt;set_help(<span class="stringliteral">&quot;Quantization offset from QASYMM8&quot;</span>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        num_outputs-&gt;set_help(<span class="stringliteral">&quot;Number of outputs.&quot;</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        input_range_low-&gt;set_help(<span class="stringliteral">&quot;Lower bound for input randomization range&quot;</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        input_range_high-&gt;set_help(<span class="stringliteral">&quot;Lower bound for input randomization range&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        weights_range_low-&gt;set_help(<span class="stringliteral">&quot;Lower bound for input randomization range&quot;</span>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        weights_range_high-&gt;set_help(<span class="stringliteral">&quot;Lower bound for input randomization range&quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /** Fill out the supplied parameters with user supplied parameters</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * @param[out] os            Output stream.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @param[in]  common_params Example parameters to output</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @return None.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">void</span> consume_parameters(<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml">ExampleParams</a> &amp;common_params)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a2474a5474cbff19523a51eb1de01cda4">width</a>      = width-&gt;value();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#ad1793c1a8dd3db1a8c4e2d76eadf0036">batch</a>      = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>-&gt;value();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a> = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(input_scale-&gt;value(), input_offset-&gt;value());</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a6e1311c23c64b1a05475e5de91d75429">range_low</a>  = input_range_low-&gt;value();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#af0b9179895ca471157ea7edb8f07ef18">range_high</a> = input_range_high-&gt;value();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a> = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(weights_scale-&gt;value(), weights_offset-&gt;value());</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a6e1311c23c64b1a05475e5de91d75429">range_low</a>  = weights_range_low-&gt;value();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#af0b9179895ca471157ea7edb8f07ef18">range_high</a> = weights_range_high-&gt;value();</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#ab6692d047db2f0c872e4dfc55f958533">output</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a> = <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(output_scale-&gt;value(), output_offset-&gt;value());</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a>                   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>-&gt;value();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        common_params.<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml#a901823eca780b42971295d670ca93a89">fully_connected</a>.<a class="code" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a8473cdd04f05bb326d412a61e32c77cb">num_outputs</a> = num_outputs-&gt;value();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> print_parameters(::std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml">ExampleParams</a> &amp;common_params)<span class="keyword"> override</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;Threads : &quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#ae5f124b6706064b8b8a507d1b8967ab8">common_params</a>.<a class="code" href="structarm__compute_1_1utils_1_1_framework_params.xhtml#a4f987a98d3e1221916748962e45399fe">threads</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;Target : &quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#ae5f124b6706064b8b8a507d1b8967ab8">common_params</a>.<a class="code" href="structarm__compute_1_1utils_1_1_framework_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">target</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;Data type : &quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;Input dimensions(X,Y, Channels, Batch) : (&quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a2474a5474cbff19523a51eb1de01cda4">width</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#ad12fc34ce789bce6c8a05d8a17138534">height</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#accc3b8fde7c3ba545f41521e46f42e4c">fm</a> &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#ad1793c1a8dd3db1a8c4e2d76eadf0036">batch</a> &lt;&lt; <span class="stringliteral">&quot;)&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;           &lt;&lt; std::endl;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;Number of outputs : &quot;</span> &lt;&lt; common_params.<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml#a901823eca780b42971295d670ca93a89">fully_connected</a>.<a class="code" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a8473cdd04f05bb326d412a61e32c77cb">num_outputs</a> &lt;&lt; std::endl;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    FullyConnectedOptions(<span class="keyword">const</span> FullyConnectedOptions &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    FullyConnectedOptions &amp;operator=(<span class="keyword">const</span> FullyConnectedOptions &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    FullyConnectedOptions(FullyConnectedOptions &amp;&amp;) noexcept(true) = <a class="code" href="namespace_gemm_tuner.xhtml#affb1327b18bf08a379d19eef89cf1ed1">default</a>;<span class="comment"></span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    FullyConnectedOptions &amp;operator=(FullyConnectedOptions &amp;&amp;) noexcept(true) = default;<span class="comment"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /** Default destructor */</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    ~FullyConnectedOptions() override = default;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;private:</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *width;              <span class="comment">/**&lt; Input width */</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">batch</a>;              <span class="comment">/**&lt; Input batch */</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">float</span>&gt;    *input_scale;        <span class="comment">/**&lt; Input Quantization scale from QASSYMM8 */</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *input_offset;       <span class="comment">/**&lt; Input Quantization offset from QASSYMM8 */</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">float</span>&gt;    *weights_scale;      <span class="comment">/**&lt; Weights Quantization scale from QASSYMM8 */</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *weights_offset;     <span class="comment">/**&lt; Weights Quantization offset from QASSYMM8 */</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">float</span>&gt;    *output_scale;       <span class="comment">/**&lt; Output Quantization scale from QASSYMM8 */</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *output_offset;      <span class="comment">/**&lt; Output Quantization offset from QASSYMM8 */</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;<span class="keywordtype">int</span>&gt;      *num_outputs;        <span class="comment">/**&lt; Number of outputs. */</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;uint64_t&gt; *input_range_low;    <span class="comment">/**&lt; Lower bound for input randomization range */</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;uint64_t&gt; *input_range_high;   <span class="comment">/**&lt; Upper bound for input randomization range */</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;uint64_t&gt; *weights_range_low;  <span class="comment">/**&lt; Lower bound for weights randomization range */</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">SimpleOption</a>&lt;uint64_t&gt; *weights_range_high; <span class="comment">/**&lt; Upper bound for weights randomization range */</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;};</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">/** Fully Connected Layer Graph example validation accessor class */</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;template &lt;typename D&gt;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;class FullyConnectedVerifyAccessor final : public <a class="code" href="classarm__compute_1_1utils_1_1_verify_accessor.xhtml">VerifyAccessor</a>&lt;D&gt;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">using</span> BaseClassType = <a class="code" href="classarm__compute_1_1utils_1_1_verify_accessor.xhtml">VerifyAccessor&lt;D&gt;</a>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">using</span> BaseClassType::BaseClassType;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">using</span> BaseClassType::_params;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">using</span> TBias = <span class="keyword">typename</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">std::conditional&lt;std::is_same&lt;typename std::decay&lt;D&gt;::type</a>, uint8_t&gt;::value, int32_t, D&gt;<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">::type</a>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Inherited methods overriden:</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">void</span> create_tensors(<a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;D&gt;</a>     &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;D&gt;</a>     &amp;weights,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                        <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;TBias&gt;</a> &amp;<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>                                &amp;tensor)<span class="keyword"> override</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">// Calculate Tensor shapes for verification</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>      <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a>        = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_params.input.width, _params.input.height, _params.input.fm, _params.input.batch);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> input_descriptor   = <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>(input_shape, _params.data_type, _params.input.quant_info);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> weights_descriptor = FullyConnectedLayerNode::compute_weights_descriptor(input_descriptor,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                                                                                        _params.fully_connected.num_outputs,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                                                                                        _params.fully_connected.info,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                                                                        _params.weights.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> output_desciptor = FullyConnectedLayerNode::compute_output_descriptor(input_descriptor, _params.fully_connected.num_outputs, _params.output.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="comment">//Create Input tensors</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        src     = <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;D&gt;</a> { input_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>, _params.data_type, 1, input_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a> };</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        weights = <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;D&gt;</a> { weights_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>, _params.data_type, 1, weights_descriptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a> };</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        bias    = <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">SimpleTensor&lt;TBias&gt;</a> { <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(tensor.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>().<a class="code" href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">x</a>()), _params.data_type, 1, _params.input.quant_info };</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>(<a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;tensor)<span class="keyword"> override</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(tensor);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>      input_shape      = <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(_params.input.width, _params.input.height, _params.input.fm, _params.input.batch);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> input_descriptor = <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>(input_shape, _params.data_type, _params.input.quant_info);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> output_desciptor = FullyConnectedLayerNode::compute_output_descriptor(input_descriptor, _params.fully_connected.num_outputs, _params.output.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">return</span> output_desciptor.<a class="code" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">shape</a>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;D&gt;</a> reference(<a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;D&gt;</a>     &amp;src,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                 <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;D&gt;</a>     &amp;weights,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                 <a class="code" href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor&lt;TBias&gt;</a> &amp;bias,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a>         &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>)<span class="keyword"> override</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">return</span> reference::fully_connected_layer&lt;D&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, weights, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a>, _params.output.quant_info);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">float</span> relative_tolerance()<span class="keyword"> override</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">const</span> std::map&lt;arm_compute::graph::Target, const std::map&lt;DataType, float&gt;&gt; relative_tolerance</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::Target::CL</a>,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.2f },</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.05f },</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 1.0f }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            },</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">arm_compute::graph::Target::NEON</a>,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.2f },</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.01f },</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 1.0f }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        };</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> relative_tolerance.at(_params.common_params.target).at(_params.data_type);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordtype">float</span> absolute_tolerance()<span class="keyword"> override</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keyword">const</span> std::map&lt;Target, const std::map&lt;DataType, float&gt;&gt; absolute_tolerance</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">Target::CL</a>,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.0f },</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.0001f },</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 1.0f }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            },</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09">Target::NEON</a>,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.3f },</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.1f },</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 1.0f }</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        };</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> absolute_tolerance.at(_params.common_params.target).at(_params.data_type);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">float</span> tolerance_number()<span class="keyword"> override</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keyword">const</span> std::map&lt;Target, const std::map&lt;DataType, float&gt;&gt; absolute_tolerance</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">Target::CL</a>,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.07f },</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.07f },</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 0.0f }</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            },</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <a class="code" href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09">Target::NEON</a>,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                {   { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>, 0.07f },</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, 0.0f },</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    { <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, 0.0f }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                }</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        };</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">return</span> absolute_tolerance.at(_params.common_params.target).at(_params.data_type);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;};</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">class </span>GraphFullyConnectedValidateExample final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml">GraphValidateExample</a>&lt;FullyConnectedLayer, FullyConnectedOptions, FullyConnectedVerifyAccessor&gt;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;{</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#a07594d6d567cdd219788762307f60941">GraphValidateExample::graph</a>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    GraphFullyConnectedValidateExample()</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        : <a class="code" href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml">GraphValidateExample</a>(<span class="stringliteral">&quot;Fully_connected Graph example&quot;</span>)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    }</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a> GraphFunctionLayer(<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml">ExampleParams</a> &amp;params)<span class="keyword"> override</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> lower = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a6e1311c23c64b1a05475e5de91d75429">range_low</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> upper = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#af0b9179895ca471157ea7edb8f07ef18">range_high</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">input</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> weights_lower = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a6e1311c23c64b1a05475e5de91d75429">range_low</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> weights_upper = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a>(params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#af0b9179895ca471157ea7edb8f07ef18">range_high</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">data_type</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>(params.<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml#a901823eca780b42971295d670ca93a89">fully_connected</a>.<a class="code" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a8473cdd04f05bb326d412a61e32c77cb">num_outputs</a>,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                   <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab7e905c7bfd2944e67bd069a3de3e7a2">get_random_accessor</a>(weights_lower, weights_upper, 1),</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                   <a class="code" href="namespacearm__compute_1_1graph__utils.xhtml#ab7e905c7bfd2944e67bd069a3de3e7a2">get_random_accessor</a>(lower, upper, 2),</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                   params.<a class="code" href="structarm__compute_1_1utils_1_1_example_params.xhtml#a901823eca780b42971295d670ca93a89">fully_connected</a>.<a class="code" href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a52743cedeb270ec4767fd8cccdd1adfd">info</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">weights</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>, params.<a class="code" href="structarm__compute_1_1utils_1_1_common_params.xhtml#ab6692d047db2f0c872e4dfc55f958533">output</a>.<a class="code" href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">quant_info</a>);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;};</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">/** Main program for Graph fully_connected test</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment"> * @param[in] argc Number of arguments</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment"> * @param[in] argv Arguments ( Input dimensions [width, batch]</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment"> *                             Fully connected  [num_outputs,type]</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment"> *                             Verification[tolerance_number,absolute_tolerance,relative_tolerance] )</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00310"></a><span class="lineno"><a class="line" href="graph__fully__connected_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  310</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="graph__fully__connected_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">return</span> arm_compute::utils::run_example&lt;GraphFullyConnectedValidateExample&gt;(argc, argv);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div><div class="ttc" id="_accessor_8h_xhtml"><div class="ttname"><a href="_accessor_8h.xhtml">Accessor.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a1fcd64682b37ed3c2098d0094ce788d8"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a1fcd64682b37ed3c2098d0094ce788d8">arm_compute::graph::TensorDescriptor::shape</a></div><div class="ttdeci">TensorShape shape</div><div class="ttdoc">Tensor shape. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00109">TensorDescriptor.h:109</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_params_xhtml_aca3dcdcaa91edc6ede106e9d4454925b"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_params.xhtml#aca3dcdcaa91edc6ede106e9d4454925b">arm_compute::utils::CommonParams::input</a></div><div class="ttdeci">TensorParams input</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00138">graph_validate_utils.h:138</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">arm_compute::graph::Target::NEON</a></div><div class="ttdoc">Arm® Neon™ capable target device. </div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml">arm_compute::PixelValue</a></div><div class="ttdoc">Class describing the value of a pixel for any image format. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00034">PixelValue.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_ad1793c1a8dd3db1a8c4e2d76eadf0036"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#ad1793c1a8dd3db1a8c4e2d76eadf0036">arm_compute::utils::TensorParams::batch</a></div><div class="ttdeci">int batch</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00111">graph_validate_utils.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9acaf162e9233294cadf62d2a71a14ca09">arm_compute::DeviceType::NEON</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_8dox_source.xhtml#l00026">tests.dox:26</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">arm_compute::graph::TensorDescriptor</a></div><div class="ttdoc">Tensor metadata class. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00038">TensorDescriptor.h:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_framework_params_xhtml_a4f987a98d3e1221916748962e45399fe"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_framework_params.xhtml#a4f987a98d3e1221916748962e45399fe">arm_compute::utils::FrameworkParams::threads</a></div><div class="ttdeci">int threads</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00130">graph_validate_utils.h:130</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_common_graph_validate_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_common_graph_validate_options.xhtml">arm_compute::utils::CommonGraphValidateOptions</a></div><div class="ttdoc">CommonGraphValidateOptions command line options used to configure the graph examples. </div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00227">graph_validate_utils.h:227</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_ad12fc34ce789bce6c8a05d8a17138534"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#ad12fc34ce789bce6c8a05d8a17138534">arm_compute::utils::TensorParams::height</a></div><div class="ttdeci">int height</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00109">graph_validate_utils.h:109</a></div></div>
<div class="ttc" id="_graph_8h_xhtml"><div class="ttname"><a href="_graph_8h.xhtml">graph.h</a></div><div class="ttdoc">Includes all the Graph headers at once. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad258d4c51629346fceac4679b3209ad9a5bc574a47246f122016869b32a6aa6f0">arm_compute::DeviceType::CL</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00045">CommandLineParser.h:45</a></div></div>
<div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_framework_params_xhtml_a29d9bc83bfba2fba21af47e575569dde"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_framework_params.xhtml#a29d9bc83bfba2fba21af47e575569dde">arm_compute::utils::FrameworkParams::target</a></div><div class="ttdeci">arm_compute::graph::Target target</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00131">graph_validate_utils.h:131</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml_ab7e905c7bfd2944e67bd069a3de3e7a2"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml#ab7e905c7bfd2944e67bd069a3de3e7a2">arm_compute::graph_utils::get_random_accessor</a></div><div class="ttdeci">std::unique_ptr&lt; graph::ITensorAccessor &gt; get_random_accessor(PixelValue lower, PixelValue upper, const std::random_device::result_type seed=0)</div><div class="ttdoc">Generates appropriate random accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00461">GraphUtils.h:461</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::Format::F16</a></div><div class="ttdoc">1 channel, 1 F16 per channel </div></div>
<div class="ttc" id="_fully_connected_layer_8h_xhtml"><div class="ttname"><a href="_fully_connected_layer_8h.xhtml">FullyConnectedLayer.h</a></div></div>
<div class="ttc" id="_validate_example_8h_xhtml"><div class="ttname"><a href="_validate_example_8h.xhtml">ValidateExample.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_aa87f8fc26981b0f3228a78c83b95b802"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#aa87f8fc26981b0f3228a78c83b95b802">arm_compute::Dimensions::x</a></div><div class="ttdeci">T x() const</div><div class="ttdoc">Alias to access the size of the first dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00087">Dimensions.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="structarm__compute_1_1graph_1_1_tensor_descriptor_xhtml_a65bc62ff84efcb7e4a410600480a4dc9"><div class="ttname"><a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">arm_compute::graph::TensorDescriptor::quant_info</a></div><div class="ttdeci">QuantizationInfo quant_info</div><div class="ttdoc">Quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_descriptor_8h_source.xhtml#l00112">TensorDescriptor.h:112</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_a6e1311c23c64b1a05475e5de91d75429"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a6e1311c23c64b1a05475e5de91d75429">arm_compute::utils::TensorParams::range_low</a></div><div class="ttdeci">uint64_t range_low</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00114">graph_validate_utils.h:114</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af78b3c8c9ad65dcb4bfa1d2fee424308"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">arm_compute::test::validation::input_shape</a></div><div class="ttdeci">const auto input_shape</div><div class="ttdoc">Validate test suite is to test ARM_COMPUTE_RETURN_ON_* macros we use to check the validity of given a...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00405">ConvolutionLayer.cpp:405</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_affb1327b18bf08a379d19eef89cf1ed1"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#affb1327b18bf08a379d19eef89cf1ed1">GemmTuner.default</a></div><div class="ttdeci">default</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00668">GemmTuner.py:668</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_params_xhtml_a901f5f80dfec4ef700c14947ca8397c9"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9">arm_compute::utils::CommonParams::data_type</a></div><div class="ttdeci">arm_compute::DataType data_type</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00143">graph_validate_utils.h:143</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="_graph_utils_8h_xhtml"><div class="ttname"><a href="_graph_utils_8h.xhtml">GraphUtils.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned </div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_af0b9179895ca471157ea7edb8f07ef18"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#af0b9179895ca471157ea7edb8f07ef18">arm_compute::utils::TensorParams::range_high</a></div><div class="ttdeci">uint64_t range_high</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00115">graph_validate_utils.h:115</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_example_params_xhtml"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_example_params.xhtml">arm_compute::utils::ExampleParams</a></div><div class="ttdoc">Structure holding all the graph Example parameters. </div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00177">graph_validate_utils.h:177</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml">arm_compute::graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_topological_sort_8h_source.xhtml#l00033">TopologicalSort.h:33</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_fully_connected_params_xhtml_a52743cedeb270ec4767fd8cccdd1adfd"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a52743cedeb270ec4767fd8cccdd1adfd">arm_compute::utils::FullyConnectedParams::info</a></div><div class="ttdeci">FullyConnectedLayerInfo info</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00172">graph_validate_utils.h:172</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_accc3b8fde7c3ba545f41521e46f42e4c"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#accc3b8fde7c3ba545f41521e46f42e4c">arm_compute::utils::TensorParams::fm</a></div><div class="ttdeci">int fm</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00110">graph_validate_utils.h:110</a></div></div>
<div class="ttc" id="graph__validate__utils_8h_xhtml"><div class="ttname"><a href="graph__validate__utils_8h.xhtml">graph_validate_utils.h</a></div></div>
<div class="ttc" id="_common_graph_options_8h_xhtml"><div class="ttname"><a href="_common_graph_options_8h.xhtml">CommonGraphOptions.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_params_xhtml_a39e23cca85d22b36fc18fbed987af01b"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_params.xhtml#a39e23cca85d22b36fc18fbed987af01b">arm_compute::utils::CommonParams::weights</a></div><div class="ttdeci">TensorParams weights</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00139">graph_validate_utils.h:139</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1_simple_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1_simple_tensor.xhtml">arm_compute::test::SimpleTensor</a></div><div class="ttdoc">Simple tensor object that stores elements in a consecutive chunk of memory. </div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_8h_source.xhtml#l00058">SimpleTensor.h:58</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_example_params_xhtml_a901823eca780b42971295d670ca93a89"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_example_params.xhtml#a901823eca780b42971295d670ca93a89">arm_compute::utils::ExampleParams::fully_connected</a></div><div class="ttdeci">FullyConnectedParams fully_connected</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00179">graph_validate_utils.h:179</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml">arm_compute::utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_safe_ops_8h_source.xhtml#l00034">SafeOps.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_fully_connected_params_xhtml_a8473cdd04f05bb326d412a61e32c77cb"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_fully_connected_params.xhtml#a8473cdd04f05bb326d412a61e32c77cb">arm_compute::utils::FullyConnectedParams::num_outputs</a></div><div class="ttdeci">int num_outputs</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00173">graph_validate_utils.h:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_params_xhtml_ab6692d047db2f0c872e4dfc55f958533"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_params.xhtml#ab6692d047db2f0c872e4dfc55f958533">arm_compute::utils::CommonParams::output</a></div><div class="ttdeci">TensorParams output</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00141">graph_validate_utils.h:141</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph__utils_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph__utils.xhtml">arm_compute::graph_utils</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8h_source.xhtml#l00044">GraphUtils.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_verify_accessor_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_verify_accessor.xhtml">arm_compute::utils::VerifyAccessor</a></div><div class="ttdoc">Graph example validation accessor class. </div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00349">graph_validate_utils.h:349</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_fully_connected_layer.xhtml">arm_compute::graph::frontend::FullyConnectedLayer</a></div><div class="ttdoc">Fully Connected Layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layers_8h_source.xhtml#l00710">Layers.h:710</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a59c0fe7170dec3dfc80b80a33fc48955"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a59c0fe7170dec3dfc80b80a33fc48955">arm_compute::test::validation::batch</a></div><div class="ttdeci">const unsigned int batch</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00362">GEMMMatrixMultiplyNative.cpp:362</a></div></div>
<div class="ttc" id="_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_a2474a5474cbff19523a51eb1de01cda4"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a2474a5474cbff19523a51eb1de01cda4">arm_compute::utils::TensorParams::width</a></div><div class="ttdeci">int width</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00108">graph_validate_utils.h:108</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">GemmTuner.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00640">GemmTuner.py:640</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml">arm_compute::graph::frontend</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00031">ILayer.h:31</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_common_params_xhtml_ae5f124b6706064b8b8a507d1b8967ab8"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_common_params.xhtml#ae5f124b6706064b8b8a507d1b8967ab8">arm_compute::utils::CommonParams::common_params</a></div><div class="ttdeci">FrameworkParams common_params</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00137">graph_validate_utils.h:137</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></div><div class="ttdef"><b>Definition:</b> <a href="_abs_layer_8cpp_source.xhtml#l00041">AbsLayer.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_graph_validate_example_xhtml_a07594d6d567cdd219788762307f60941"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml#a07594d6d567cdd219788762307f60941">arm_compute::utils::GraphValidateExample::graph</a></div><div class="ttdeci">arm_compute::graph::frontend::Stream graph</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00690">graph_validate_utils.h:690</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::Target::CL</a></div><div class="ttdoc">OpenCL capable target device. </div></div>
<div class="ttc" id="graph__fully__connected_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="graph__fully__connected_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main program for Graph fully_connected test. </div><div class="ttdef"><b>Definition:</b> <a href="graph__fully__connected_8cpp_source.xhtml#l00310">graph_fully_connected.cpp:310</a></div></div>
<div class="ttc" id="_permute_8h_xhtml"><div class="ttname"><a href="_permute_8h.xhtml">Permute.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml">arm_compute::utils::SimpleOption&lt; int &gt;</a></div></div>
<div class="ttc" id="classarm__compute_1_1utils_1_1_graph_validate_example_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_graph_validate_example.xhtml">arm_compute::utils::GraphValidateExample</a></div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00628">graph_validate_utils.h:628</a></div></div>
<div class="ttc" id="structarm__compute_1_1utils_1_1_tensor_params_xhtml_a65bc62ff84efcb7e4a410600480a4dc9"><div class="ttname"><a href="structarm__compute_1_1utils_1_1_tensor_params.xhtml#a65bc62ff84efcb7e4a410600480a4dc9">arm_compute::utils::TensorParams::quant_info</a></div><div class="ttdeci">QuantizationInfo quant_info</div><div class="ttdef"><b>Definition:</b> <a href="graph__validate__utils_8h_source.xhtml#l00112">graph_validate_utils.h:112</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_c17e235a7be576fb898bcc8e94f529de.xhtml">validate_examples</a></li><li class="navelem"><a class="el" href="graph__fully__connected_8cpp.xhtml">graph_fully_connected.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:40 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
