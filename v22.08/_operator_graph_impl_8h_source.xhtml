<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/WorkloadImpl/OperatorGraphImpl.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_operator_graph_impl_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OperatorGraphImpl.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_operator_graph_impl_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPHIMPL</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPHIMPL</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_8h.xhtml">arm_compute/core/experimental/ClWorkload.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_desc_pack_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ITensorDescPack.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_deep_copy_8h.xhtml">support/DeepCopy.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">   44</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">OperatorComplexity</a></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">Complex</a> = 0,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Simple</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a>;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">   51</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">   54</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>          = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aca658a68ee1b7e69934ad27b3de3957b">   56</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aca658a68ee1b7e69934ad27b3de3957b">OpTensorContent</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        : id{ <span class="keywordtype">id</span> }, desc{}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a66802dd6ecc47d400acf400eaab6376a">   60</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a66802dd6ecc47d400acf400eaab6376a">OpTensorContent</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *desc)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        : id{ <span class="keywordtype">id</span> }, desc{ desc }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a>()                       = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;&amp;)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a98891457179bbe6ff7edcbf63ce88a04">   69</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a98891457179bbe6ff7edcbf63ce88a04">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">OpTensorContent</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> desc == other.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aaf16d8c575940cda81e904c1285b11c6">desc</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#adfb505060334802baaf44e1239b09193">   74</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#adfb505060334802baaf44e1239b09193">get_tensor_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> desc;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#ae916fa337fdb4d4c10e5a4ce46a29f2e">   78</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#ae916fa337fdb4d4c10e5a4ce46a29f2e">get_tensor_info</a>()</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> desc;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a150a709e86e7134d17cd063de6810b6c">   83</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>           <span class="keywordtype">id</span>{};</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aaf16d8c575940cda81e904c1285b11c6">   84</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *desc{};</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">   87</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">   90</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>          = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#ae89e8fc9f1f4f8aa1a4e2f3d1c32cd01">   92</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#ae89e8fc9f1f4f8aa1a4e2f3d1c32cd01">OperatorContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a> &amp;tensors)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        : _graph{ graph }, _id{ <span class="keywordtype">id</span> }, _tensors{ tensors }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;op) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;op) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;&amp;op)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;&amp;op)            = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>()                                  = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">OperatorComplexity</a> complexity() <span class="keyword">const</span>               = 0;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *_graph {};</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>                                   _id{};</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a>     _tensors{};</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;};</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">  111</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a4eaae335d8c8c54bdc7ccd8e71bc7c62">  115</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a4eaae335d8c8c54bdc7ccd8e71bc7c62">Conv2dContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a> &amp;tensors)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(graph, id, tensors), desc(desc), forced_method(), forced_method_enabled(false)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Temporary. Do not need to pass ConvolutionMethod</span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a107cca1b13ba7f723ef1564e2d35a880">  120</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a107cca1b13ba7f723ef1564e2d35a880">Conv2dContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a> &amp;tensors, <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> method)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(graph, id, tensors), desc(desc), forced_method(method), forced_method_enabled(true)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a>()                     = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;&amp;)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">Conv2dContent</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae4b8374122377edd5b53f631d8860c06">  130</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">OperatorComplexity</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae4b8374122377edd5b53f631d8860c06">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">OperatorComplexity::Complex</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae48d3b4269cdd18f5507d3c4e00ca5d7">  134</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae48d3b4269cdd18f5507d3c4e00ca5d7">set_method</a>(<a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> method)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        forced_method_enabled = <span class="keyword">true</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        forced_method         = method;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph) <span class="keyword">const override</span>;<span class="comment"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">    /** Replicate heuristics of @ref ClConv2d::get_convolution_method(), except that non-supported data types and data layouts are removed from the heuristics</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @param src</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     * @param weights</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @param dst</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * @param conv2d_desc</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param gpu_target</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @return ConvolutionMethod</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> select_conv_method(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ab211a304154342c9b79855da938cbc88">  152</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a>  desc{};</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#accab095ff3f3406397b7034d31c6b0d3">  153</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> forced_method{ <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da48a8d451a651128acd0863f6bd2d4a84">ConvolutionMethod::GEMM_CONV2D</a> };</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a59771d2f4ed449446be3d7d227da5786">  154</a></span>&#160;    <span class="keywordtype">bool</span>              forced_method_enabled{ <span class="keyword">false</span> };</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> translate_direct_conv2d(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph) <span class="keyword">const</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;};</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">  160</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#aa7bff531053c0a54fe07c9ea557e49ce">  164</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#aa7bff531053c0a54fe07c9ea557e49ce">ElementwiseContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a> &amp;tensors)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(graph, id, tensors), desc(desc)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    ~<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a>()                          = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;&amp;)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;operator=(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">ElementwiseContent</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#ae4b8374122377edd5b53f631d8860c06">  174</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">OperatorComplexity</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#ae4b8374122377edd5b53f631d8860c06">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">OperatorComplexity::Simple</a>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph) <span class="keyword">const override</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> desc{};</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;};</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">  184</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;{</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#aea014bdff9cc224b3059d02109460293">  188</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#aea014bdff9cc224b3059d02109460293">FloorContent</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;OpTensorContent&gt;</a> &amp;tensors)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a>(graph, id, tensors), desc(desc)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    ~<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a>()                    = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;&amp;)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;operator=(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">FloorContent</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">OperatorContent</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#ae4b8374122377edd5b53f631d8860c06">  198</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">OperatorComplexity</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#ae4b8374122377edd5b53f631d8860c06">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">OperatorComplexity::Simple</a>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph) <span class="keyword">const override</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> desc{};</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;};</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">  208</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;{</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ContentT, <span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#ae64306c052aba3a825fc523f8f10f5d2">  212</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#ae64306c052aba3a825fc523f8f10f5d2">add_node</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">Operator::Id</a> <span class="keywordtype">id</span>, Args &amp;&amp;... <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        operators[id] = utils::memory::make_deep_unique&lt;OperatorContent, ContentT&gt;(<span class="keyword">this</span>, id, std::forward&lt;Args&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)...);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Args&gt;</div><div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a2f35efed60816600b44faaba9da1163f">  218</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a2f35efed60816600b44faaba9da1163f">add_tensor</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">OpTensor::Id</a> <span class="keywordtype">id</span>, Args &amp;&amp;... <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        tensors[id] = utils::memory::make_deep_unique&lt;OpTensorContent, OpTensorContent&gt;(id, std::forward&lt;Args&gt;(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)...);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a86289b5f51647fbb77a76d05a63a6b7e">  223</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">Dependency</a>  = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a>;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#afb5f6514f7b73ba3b9cb7913c94d67ad">  224</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#afb5f6514f7b73ba3b9cb7913c94d67ad">OperatorMap</a> = std::map&lt;Operator::Id, utils::memory::deep_unique_ptr&lt;OperatorContent&gt;&gt;;</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a079bd5eeebd4eae4b45918e404b4042e">  225</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a079bd5eeebd4eae4b45918e404b4042e">OpTensorMap</a> = std::map&lt;OpTensor::Id, utils::memory::deep_unique_ptr&lt;OpTensorContent&gt;&gt;;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">Implementation</a>()  = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">Implementation</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a61472acfb5c12edbb09feba57871c818">  230</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a61472acfb5c12edbb09feba57871c818">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph1)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">return</span> graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">graph</a> &amp;&amp; graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">operators</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">operators</a> &amp;&amp; graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a8ab011f9aab792685edbdf86be0b7ff5">tensors</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a8ab011f9aab792685edbdf86be0b7ff5">tensors</a>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">  235</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">Dependency</a>  graph{};</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">  236</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#afb5f6514f7b73ba3b9cb7913c94d67ad">OperatorMap</a> operators{};</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a8ab011f9aab792685edbdf86be0b7ff5">  237</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a079bd5eeebd4eae4b45918e404b4042e">OpTensorMap</a> tensors{};</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#ae29aa2d4ae440022daaed1107eb306b3">  238</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>      status{};</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;};</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;std::vector&lt;const OperatorContent *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;std::vector&lt;OperatorContent *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;graph);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">translate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">OperatorGraph::Implementation</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPHIMPL</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_afb5f6514f7b73ba3b9cb7913c94d67ad"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#afb5f6514f7b73ba3b9cb7913c94d67ad">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::OperatorMap</a></div><div class="ttdeci">std::map&lt; Operator::Id, utils::memory::deep_unique_ptr&lt; OperatorContent &gt; &gt; OperatorMap</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00224">OperatorGraphImpl.h:224</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">arm_compute::experimental::dynamic_fusion::DependencyGraph</a></div><div class="ttdoc">The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00051">DependencyGraph.h:51</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_a107cca1b13ba7f723ef1564e2d35a880"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a107cca1b13ba7f723ef1564e2d35a880">arm_compute::experimental::dynamic_fusion::Conv2dContent::Conv2dContent</a></div><div class="ttdeci">Conv2dContent(const OperatorGraph::Implementation *graph, Id id, const Conv2dDescriptor &amp;desc, const ITensorDescPack&lt; OpTensorContent &gt; &amp;tensors, ConvolutionMethod method)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00120">OperatorGraphImpl.h:120</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::OperatorContent::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00090">OperatorGraphImpl.h:90</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::ComponentType::Simple</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_a66802dd6ecc47d400acf400eaab6376a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a66802dd6ecc47d400acf400eaab6376a">arm_compute::experimental::dynamic_fusion::OpTensorContent::OpTensorContent</a></div><div class="ttdeci">OpTensorContent(Id id, ITensorInfo *desc)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00060">OperatorGraphImpl.h:60</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00182">ClKernelGraph.h:182</a></div></div>
<div class="ttc" id="_cl_workload_8h_xhtml"><div class="ttname"><a href="_cl_workload_8h.xhtml">ClWorkload.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a61472acfb5c12edbb09feba57871c818"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a61472acfb5c12edbb09feba57871c818">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::operator==</a></div><div class="ttdeci">friend bool operator==(const OperatorGraph::Implementation &amp;graph0, const OperatorGraph::Implementation &amp;graph1)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00230">OperatorGraphImpl.h:230</a></div></div>
<div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content_xhtml_aa7bff531053c0a54fe07c9ea557e49ce"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#aa7bff531053c0a54fe07c9ea557e49ce">arm_compute::experimental::dynamic_fusion::ElementwiseContent::ElementwiseContent</a></div><div class="ttdeci">ElementwiseContent(const OperatorGraph::Implementation *graph, Id id, const ElementwiseDescriptor &amp;desc, const ITensorDescPack&lt; OpTensorContent &gt; &amp;tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00164">OperatorGraphImpl.h:164</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da48a8d451a651128acd0863f6bd2d4a84"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da48a8d451a651128acd0863f6bd2d4a84">arm_compute::ConvolutionMethod::GEMM_CONV2D</a></div><div class="ttdoc">Direct 2D GEMM convolution. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_a98891457179bbe6ff7edcbf63ce88a04"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#a98891457179bbe6ff7edcbf63ce88a04">arm_compute::experimental::dynamic_fusion::OpTensorContent::operator==</a></div><div class="ttdeci">bool operator==(const OpTensorContent &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00069">OperatorGraphImpl.h:69</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml">arm_compute::experimental::dynamic_fusion::OperatorContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00087">OperatorGraphImpl.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content_xhtml_aea014bdff9cc224b3059d02109460293"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#aea014bdff9cc224b3059d02109460293">arm_compute::experimental::dynamic_fusion::FloorContent::FloorContent</a></div><div class="ttdeci">FloorContent(const OperatorGraph::Implementation *graph, Id id, const FloorDescriptor &amp;desc, const ITensorDescPack&lt; OpTensorContent &gt; &amp;tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00188">OperatorGraphImpl.h:188</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_aca658a68ee1b7e69934ad27b3de3957b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aca658a68ee1b7e69934ad27b3de3957b">arm_compute::experimental::dynamic_fusion::OpTensorContent::OpTensorContent</a></div><div class="ttdeci">OpTensorContent(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00056">OperatorGraphImpl.h:56</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_a4eaae335d8c8c54bdc7ccd8e71bc7c62"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#a4eaae335d8c8c54bdc7ccd8e71bc7c62">arm_compute::experimental::dynamic_fusion::Conv2dContent::Conv2dContent</a></div><div class="ttdeci">Conv2dContent(const OperatorGraph::Implementation *graph, Id id, const Conv2dDescriptor &amp;desc, const ITensorDescPack&lt; OpTensorContent &gt; &amp;tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00115">OperatorGraphImpl.h:115</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml">arm_compute::experimental::dynamic_fusion::FloorContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00184">OperatorGraphImpl.h:184</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::OpTensorContent::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00054">OperatorGraphImpl.h:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml">arm_compute::experimental::dynamic_fusion::ElementwiseContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00160">OperatorGraphImpl.h:160</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_ae64306c052aba3a825fc523f8f10f5d2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#ae64306c052aba3a825fc523f8f10f5d2">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::add_node</a></div><div class="ttdeci">void add_node(Operator::Id id, Args &amp;&amp;... args)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00212">OperatorGraphImpl.h:212</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a5403557297e77f4648580ccb49c4173a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a5403557297e77f4648580ccb49c4173a">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::operators</a></div><div class="ttdeci">OperatorMap operators</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00236">OperatorGraphImpl.h:236</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_ae48d3b4269cdd18f5507d3c4e00ca5d7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae48d3b4269cdd18f5507d3c4e00ca5d7">arm_compute::experimental::dynamic_fusion::Conv2dContent::set_method</a></div><div class="ttdeci">void set_method(ConvolutionMethod method)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00134">OperatorGraphImpl.h:134</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a8ab011f9aab792685edbdf86be0b7ff5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a8ab011f9aab792685edbdf86be0b7ff5">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::tensors</a></div><div class="ttdeci">OpTensorMap tensors</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00237">OperatorGraphImpl.h:237</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_add46c47c06ea70a8be0a2b3d67723bff"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#add46c47c06ea70a8be0a2b3d67723bff">arm_compute::experimental::dynamic_fusion::OperatorComplexity</a></div><div class="ttdeci">OperatorComplexity</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00044">OperatorGraphImpl.h:44</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a079bd5eeebd4eae4b45918e404b4042e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a079bd5eeebd4eae4b45918e404b4042e">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::OpTensorMap</a></div><div class="ttdeci">std::map&lt; OpTensor::Id, utils::memory::deep_unique_ptr&lt; OpTensorContent &gt; &gt; OpTensorMap</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00225">OperatorGraphImpl.h:225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0e5a222683b4e850a681a8b7f593f9c3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">arm_compute::experimental::dynamic_fusion::traverse</a></div><div class="ttdeci">std::vector&lt; const ClKernel * &gt; traverse(const ClKernelFusionGroup &amp;group)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">ClFusedKernelGraph.cpp:50</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00134">Types.h:134</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a7d17b6e1662f7d156474fbb3d2288347"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a7d17b6e1662f7d156474fbb3d2288347">arm_compute::experimental::dynamic_fusion::translate</a></div><div class="ttdeci">Status translate(ClKernelGraph &amp;kernel_graph, const OperatorGraph::Implementation &amp;op_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00414">OperatorGraphImpl.cpp:414</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml_ae4b8374122377edd5b53f631d8860c06"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml#ae4b8374122377edd5b53f631d8860c06">arm_compute::experimental::dynamic_fusion::Conv2dContent::complexity</a></div><div class="ttdeci">OperatorComplexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00130">OperatorGraphImpl.h:130</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a2f35efed60816600b44faaba9da1163f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a2f35efed60816600b44faaba9da1163f">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::add_tensor</a></div><div class="ttdeci">void add_tensor(OpTensor::Id id, Args &amp;&amp;... args)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00218">OperatorGraphImpl.h:218</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::FloorDescriptor</a></div><div class="ttdoc">Descriptor for Floor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00205">OperatorGraph.h:205</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00208">OperatorGraphImpl.h:208</a></div></div>
<div class="ttc" id="_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">arm_compute::experimental::dynamic_fusion::ITensorDescPack</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00039">ITensorDescPack.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml_a49509a42eb2f3dfac81faeb4fa4e82b3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml#a49509a42eb2f3dfac81faeb4fa4e82b3">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation::graph</a></div><div class="ttdeci">Dependency graph</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00235">OperatorGraphImpl.h:235</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::ComponentType::Complex</a></div></div>
<div class="ttc" id="_i_tensor_desc_pack_8h_xhtml"><div class="ttname"><a href="_i_tensor_desc_pack_8h.xhtml">ITensorDescPack.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_xhtml_aebc5dc6e56fe725378002f1454d09978"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">arm_compute::experimental::dynamic_fusion::OpTensor::Id</a></div><div class="ttdeci">int Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00071">OperatorGraph.h:71</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor</a></div><div class="ttdoc">Descriptor for Elementwise binary operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00182">OperatorGraph.h:182</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_content.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00111">OperatorGraphImpl.h:111</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml">arm_compute::experimental::dynamic_fusion::OpTensorContent</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00051">OperatorGraphImpl.h:51</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_adfb505060334802baaf44e1239b09193"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#adfb505060334802baaf44e1239b09193">arm_compute::experimental::dynamic_fusion::OpTensorContent::get_tensor_info</a></div><div class="ttdeci">const ITensorInfo * get_tensor_info() const</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00074">OperatorGraphImpl.h:74</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor</a></div><div class="ttdoc">Descriptor for Conv2dDescriptor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00148">OperatorGraph.h:148</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_ae916fa337fdb4d4c10e5a4ce46a29f2e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#ae916fa337fdb4d4c10e5a4ce46a29f2e">arm_compute::experimental::dynamic_fusion::OpTensorContent::get_tensor_info</a></div><div class="ttdeci">ITensorInfo * get_tensor_info()</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00078">OperatorGraphImpl.h:78</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets. </div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content_xhtml_ae4b8374122377edd5b53f631d8860c06"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_content.xhtml#ae4b8374122377edd5b53f631d8860c06">arm_compute::experimental::dynamic_fusion::FloorContent::complexity</a></div><div class="ttdeci">OperatorComplexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00198">OperatorGraphImpl.h:198</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a562285808c3bd1107ae49be79d24d41f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">arm_compute::test::validation::conv2d_desc</a></div><div class="ttdeci">const auto conv2d_desc</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00254">Integration_OperatorFuseMovenetSubGraph1.cpp:254</a></div></div>
<div class="ttc" id="_deep_copy_8h_xhtml"><div class="ttname"><a href="_deep_copy_8h.xhtml">DeepCopy.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content_xhtml_ae4b8374122377edd5b53f631d8860c06"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_content.xhtml#ae4b8374122377edd5b53f631d8860c06">arm_compute::experimental::dynamic_fusion::ElementwiseContent::complexity</a></div><div class="ttdeci">OperatorComplexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00174">OperatorGraphImpl.h:174</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content_xhtml_ae89e8fc9f1f4f8aa1a4e2f3d1c32cd01"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_content.xhtml#ae89e8fc9f1f4f8aa1a4e2f3d1c32cd01">arm_compute::experimental::dynamic_fusion::OperatorContent::OperatorContent</a></div><div class="ttdeci">OperatorContent(const OperatorGraph::Implementation *graph, Id id, const ITensorDescPack&lt; OpTensorContent &gt; &amp;tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00092">OperatorGraphImpl.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aac5e2a1f61e8ea5255aca62f83e9124f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">arm_compute::experimental::dynamic_fusion::DependencyGraph::Id</a></div><div class="ttdeci">SerialIdAllocator::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00073">DependencyGraph.h:73</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content_xhtml_aaf16d8c575940cda81e904c1285b11c6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_content.xhtml#aaf16d8c575940cda81e904c1285b11c6">arm_compute::experimental::dynamic_fusion::OpTensorContent::desc</a></div><div class="ttdeci">ITensorInfo * desc</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00084">OperatorGraphImpl.h:84</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_af08b2231cd81fad5422b1d7240d26806"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">arm_compute::experimental::dynamic_fusion::operator==</a></div><div class="ttdeci">bool operator==(const OpTensor &amp;t0, const OpTensor &amp;t1)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00103">OperatorGraphImpl.cpp:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_xhtml_aebc5dc6e56fe725378002f1454d09978"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">arm_compute::experimental::dynamic_fusion::Operator::Id</a></div><div class="ttdeci">int Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00110">OperatorGraph.h:110</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_4a5d79691feea64a5adaad9e433740c9.xhtml">WorkloadImpl</a></li><li class="navelem"><a class="el" href="_operator_graph_impl_8h.xhtml">OperatorGraphImpl.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
