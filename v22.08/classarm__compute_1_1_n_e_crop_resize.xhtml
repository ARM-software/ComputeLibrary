<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: NECropResize Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_n_e_crop_resize.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">NECropResize Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Function to perform cropping and resizing.  
 <a href="classarm__compute_1_1_n_e_crop_resize.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for NECropResize:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_n_e_crop_resize__coll__graph.svg" width="184" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6a94720cb2462585bbc08fab0cc7b8b9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a6a94720cb2462585bbc08fab0cc7b8b9">NECropResize</a> ()</td></tr>
<tr class="memdesc:a6a94720cb2462585bbc08fab0cc7b8b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a6a94720cb2462585bbc08fab0cc7b8b9">More...</a><br /></td></tr>
<tr class="separator:a6a94720cb2462585bbc08fab0cc7b8b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb102bbeeffac07a6156acf4206e06d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#afdb102bbeeffac07a6156acf4206e06d">NECropResize</a> (const <a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;)=delete</td></tr>
<tr class="memdesc:afdb102bbeeffac07a6156acf4206e06d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#afdb102bbeeffac07a6156acf4206e06d">More...</a><br /></td></tr>
<tr class="separator:afdb102bbeeffac07a6156acf4206e06d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab74eec646004aea5365d72b4e17262ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ab74eec646004aea5365d72b4e17262ff">operator=</a> (const <a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;)=delete</td></tr>
<tr class="memdesc:ab74eec646004aea5365d72b4e17262ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="#ab74eec646004aea5365d72b4e17262ff">More...</a><br /></td></tr>
<tr class="separator:ab74eec646004aea5365d72b4e17262ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62f6cbc4f146a1381a4c198f1990c494"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a62f6cbc4f146a1381a4c198f1990c494">NECropResize</a> (<a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a62f6cbc4f146a1381a4c198f1990c494"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a62f6cbc4f146a1381a4c198f1990c494">More...</a><br /></td></tr>
<tr class="separator:a62f6cbc4f146a1381a4c198f1990c494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408b9226f4641fd0973b7f189527a566"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a408b9226f4641fd0973b7f189527a566">operator=</a> (<a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a408b9226f4641fd0973b7f189527a566"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="#a408b9226f4641fd0973b7f189527a566">More...</a><br /></td></tr>
<tr class="separator:a408b9226f4641fd0973b7f189527a566"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4492d0dbf86e67bcf410acf42b36cdb8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a4492d0dbf86e67bcf410acf42b36cdb8">~NECropResize</a> ()</td></tr>
<tr class="memdesc:a4492d0dbf86e67bcf410acf42b36cdb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a4492d0dbf86e67bcf410acf42b36cdb8">More...</a><br /></td></tr>
<tr class="separator:a4492d0dbf86e67bcf410acf42b36cdb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad075a22faee6e9429942ecb654ccba8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aad075a22faee6e9429942ecb654ccba8">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *boxes, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *box_ind, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> crop_size, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> method=<a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a>, float extrapolation_value=0)</td></tr>
<tr class="memdesc:aad075a22faee6e9429942ecb654ccba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure kernel.  <a href="#aad075a22faee6e9429942ecb654ccba8">More...</a><br /></td></tr>
<tr class="separator:aad075a22faee6e9429942ecb654ccba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1717410afd0be936c6213a63c8005fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a> () override</td></tr>
<tr class="memdesc:ad1717410afd0be936c6213a63c8005fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the kernels contained in the function.  <a href="#ad1717410afd0be936c6213a63c8005fb">More...</a><br /></td></tr>
<tr class="separator:ad1717410afd0be936c6213a63c8005fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_function"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_function')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_function.xhtml">IFunction</a></td></tr>
<tr class="memitem:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">~IFunction</a> ()=default</td></tr>
<tr class="memdesc:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_function.xhtml#ab921ecc3f3f6ae2b4bd61f3e1998d8c4">More...</a><br /></td></tr>
<tr class="separator:ab921ecc3f3f6ae2b4bd61f3e1998d8c4 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">prepare</a> ()</td></tr>
<tr class="memdesc:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare the function for executing.  <a href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26">More...</a><br /></td></tr>
<tr class="separator:a820f7291c24155a2980512fae45aac26 inherit pub_methods_classarm__compute_1_1_i_function"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0ed104d390dd9598873ff85231998946"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a0ed104d390dd9598873ff85231998946">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *input, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *boxes, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *box_ind, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> crop_size, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> method, float extrapolation_value)</td></tr>
<tr class="memdesc:a0ed104d390dd9598873ff85231998946"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>.  <a href="#a0ed104d390dd9598873ff85231998946">More...</a><br /></td></tr>
<tr class="separator:a0ed104d390dd9598873ff85231998946"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:abe85e6a0ad7bb27a45a35689209ad8b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">_output</a></td></tr>
<tr class="separator:abe85e6a0ad7bb27a45a35689209ad8b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad079478f73a5eac133d029fc1ff10225"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a></td></tr>
<tr class="separator:ad079478f73a5eac133d029fc1ff10225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac17c6ba3cfe6338930b20d4541ff8b34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a></td></tr>
<tr class="separator:ac17c6ba3cfe6338930b20d4541ff8b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e6dad2c0f2799f694d00240cb728859"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a></td></tr>
<tr class="separator:a5e6dad2c0f2799f694d00240cb728859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3d8a6d89a7d670fb1f17be016bd88fe"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_n_e_crop_kernel.xhtml">NECropKernel</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a></td></tr>
<tr class="separator:ac3d8a6d89a7d670fb1f17be016bd88fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e58fba18219bc16ed958e62fd887701"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a></td></tr>
<tr class="separator:a7e58fba18219bc16ed958e62fd887701"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeba0f6c60cf9ecafb60928b6c6b4c547"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a></td></tr>
<tr class="separator:aeba0f6c60cf9ecafb60928b6c6b4c547"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05254b9c1c9d4a736764d8d45eb97210"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a></td></tr>
<tr class="separator:a05254b9c1c9d4a736764d8d45eb97210"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Function to perform cropping and resizing. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00039">39</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6a94720cb2462585bbc08fab0cc7b8b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a94720cb2462585bbc08fab0cc7b8b9">&#9670;&nbsp;</a></span>NECropResize() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00037">37</a> of file <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml">NECropResize.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    : <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">_output</a>(<span class="keyword">nullptr</span>), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>(0), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>(0), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a>(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a>(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a>(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>()</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac3d8a6d89a7d670fb1f17be016bd88fe"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">arm_compute::NECropResize::_crop</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NECropKernel &gt; &gt; _crop</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00109">NECropResize.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::NECropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00107">NECropResize.h:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a05254b9c1c9d4a736764d8d45eb97210"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">arm_compute::NECropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00112">NECropResize.h:112</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_abe85e6a0ad7bb27a45a35689209ad8b6"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">arm_compute::NECropResize::_output</a></div><div class="ttdeci">ITensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00104">NECropResize.h:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::NECropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00105">NECropResize.h:105</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a7e58fba18219bc16ed958e62fd887701"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">arm_compute::NECropResize::_scale</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NEScale &gt; &gt; _scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00110">NECropResize.h:110</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::NECropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00106">NECropResize.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_aeba0f6c60cf9ecafb60928b6c6b4c547"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">arm_compute::NECropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00111">NECropResize.h:111</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afdb102bbeeffac07a6156acf4206e06d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdb102bbeeffac07a6156acf4206e06d">&#9670;&nbsp;</a></span>NECropResize() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a62f6cbc4f146a1381a4c198f1990c494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62f6cbc4f146a1381a4c198f1990c494">&#9670;&nbsp;</a></span>NECropResize() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a4492d0dbf86e67bcf410acf42b36cdb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4492d0dbf86e67bcf410acf42b36cdb8">&#9670;&nbsp;</a></span>~NECropResize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aad075a22faee6e9429942ecb654ccba8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad075a22faee6e9429942ecb654ccba8">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>boxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>box_ind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td>
          <td class="paramname"><em>crop_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9aad6fddf718ad19b063e02fdd7e8e3e65">InterpolationPolicy::BILINEAR</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>extrapolation_value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure kernel. </p>
<p>Valid data layouts:</p><ul>
<li>NHWC</li>
</ul>
<p>Valid data type configurations: </p><table class="doxtable">
<tr>
<th align="left">src0 </th><th align="left">src1 </th><th align="left">src2 </th><th align="left">dst  </th></tr>
<tr>
<td align="left">All </td><td align="left">F32 </td><td align="left">F32 </td><td align="left">F32 </td></tr>
</table>
<dl class="section note"><dt>Note</dt><dd>Supported tensor rank: up to 4 </dd>
<dd>
Box indices may be outside of the bounds, in which case <code>extrapolation_value</code> is used. </dd>
<dd>
Start and end indices of boxes are inclusive.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor containing N batches of 3D images to be cropped. Data type supported: U8/U16/S16/U32/S32/F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">boxes</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> containing the boxes used to crop the images. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box_ind</td><td>One dimensional tensor containing the batch index of the 3D image in <code>input</code> that the corresponding box in <code>boxes</code> will be applied to. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">output</td><td>Destination tensor containing a cropped and resized image for each box in <code>boxes</code>. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">crop_size</td><td>The dimensions that each cropped image will be resized to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>The policy to be used when resizing image. Default is bilinear. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extrapolation_value</td><td>Value to be used for values outside of the image for cropping and resizing. Default is 0. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml">NECropResize.cpp</a>.</p>

<p class="reference">References <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00109">NECropResize::_crop</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00111">NECropResize::_crop_results</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00107">NECropResize::_extrapolation_value</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00106">NECropResize::_method</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00105">NECropResize::_num_boxes</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00104">NECropResize::_output</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00110">NECropResize::_scale</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00112">NECropResize::_scaled_results</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::NHWC</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00042">NECropResize::validate()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00437">Coordinates2D::x</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00438">Coordinates2D::y</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a0ed104d390dd9598873ff85231998946">NECropResize::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info(), boxes-&gt;info(), box_ind-&gt;info(), output-&gt;info(), crop_size, method, extrapolation_value));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, boxes, box_ind, output, crop_size, method, extrapolation_value);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a> = boxes-&gt;info()-&gt;tensor_shape()[1];</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    TensorShape out_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape()[0], crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a>, crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a>);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">_output</a>              = output;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>              = method;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a> = extrapolation_value;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// For each crop box:</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// - A crop kernel is used to extract the initial cropped image as specified by boxes[i] from the 3D image input[box_ind[i]].</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// - A tensor is required to hold this initial cropped image.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// - A scale function is used to resize the cropped image to the size specified by crop_size.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// - A tensor is required to hold the final scaled image before it is copied into the 4D output</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">//   that will hold all final cropped and scaled 3D images.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a>.reserve(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a>.reserve(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>.reserve(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a>.reserve(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>; ++i)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">auto</span>       crop_tensor = std::make_unique&lt;Tensor&gt;();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        TensorInfo crop_result_info(1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        crop_result_info.set_data_layout(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        crop_tensor-&gt;allocator()-&gt;init(crop_result_info);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">auto</span>       scale_tensor = std::make_unique&lt;Tensor&gt;();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        TensorInfo scaled_result_info(out_shape, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        scaled_result_info.set_data_layout(<a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        scale_tensor-&gt;allocator()-&gt;init(scaled_result_info);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">auto</span> crop_kernel  = std::make_unique&lt;NECropKernel&gt;();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keyword">auto</span> scale_kernel = std::make_unique&lt;NEScale&gt;();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        crop_kernel-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, boxes, box_ind, crop_tensor.get(), i, <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a>.emplace_back(std::move(crop_kernel));</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>.emplace_back(std::move(scale_tensor));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a>.emplace_back(std::move(crop_tensor));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a>.emplace_back(std::move(scale_kernel));</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac3d8a6d89a7d670fb1f17be016bd88fe"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">arm_compute::NECropResize::_crop</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NECropKernel &gt; &gt; _crop</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00109">NECropResize.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::NECropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00107">NECropResize.h:107</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a05254b9c1c9d4a736764d8d45eb97210"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">arm_compute::NECropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00112">NECropResize.h:112</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_abe85e6a0ad7bb27a45a35689209ad8b6"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">arm_compute::NECropResize::_output</a></div><div class="ttdeci">ITensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00104">NECropResize.h:104</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a0ed104d390dd9598873ff85231998946"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a0ed104d390dd9598873ff85231998946">arm_compute::NECropResize::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *boxes, const ITensorInfo *box_ind, const ITensorInfo *output, Coordinates2D crop_size, InterpolationPolicy method, float extrapolation_value)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NESlice. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8cpp_source.xhtml#l00042">NECropResize.cpp:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::NECropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00105">NECropResize.h:105</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a6150e0515f7202e2fb518f7206ed97dc"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">Coordinates2D::x</a></div><div class="ttdeci">int x</div><div class="ttdoc">The x coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00030">types.h:30</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a7e58fba18219bc16ed958e62fd887701"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">arm_compute::NECropResize::_scale</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NEScale &gt; &gt; _scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00110">NECropResize.h:110</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a0a2f84ed7838f07779ae24c5a9086d33"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">Coordinates2D::y</a></div><div class="ttdeci">int y</div><div class="ttdoc">The y coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00031">types.h:31</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::NECropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00106">NECropResize.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_aeba0f6c60cf9ecafb60928b6c6b4c547"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">arm_compute::NECropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00111">NECropResize.h:111</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab74eec646004aea5365d72b4e17262ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab74eec646004aea5365d72b4e17262ff">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied (As this class contains pointers) </p>

</div>
</div>
<a id="a408b9226f4641fd0973b7f189527a566"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a408b9226f4641fd0973b7f189527a566">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ad1717410afd0be936c6213a63c8005fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1717410afd0be936c6213a63c8005fb">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run the kernels contained in the function. </p>
<p>For CPU kernels:</p><ul>
<li>Multi-threading is used for the kernels which are parallelisable.</li>
<li>By default std::thread::hardware_concurrency() threads are used.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classarm__compute_1_1_c_p_p_scheduler.xhtml#ae64eebaa07f4d2da6cc2ba538c3cb095">CPPScheduler::set_num_threads()</a> can be used to manually set the number of threads</dd></dl>
<p>For OpenCL kernels:</p><ul>
<li>All the kernels are enqueued on the queue associated with <a class="el" href="classarm__compute_1_1_c_l_scheduler.xhtml" title="Provides global access to a CL context and command queue. ">CLScheduler</a>.</li>
<li>The queue is then flushed.</li>
</ul>
<dl class="section note"><dt>Note</dt><dd>The function will not block until the kernels are executed. It is the user's responsibility to wait. </dd>
<dd>
Will call <a class="el" href="classarm__compute_1_1_i_function.xhtml#a820f7291c24155a2980512fae45aac26" title="Prepare the function for executing. ">prepare()</a> on first run if hasn't been done </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_function.xhtml#a18954417d3124a8095783ea13dc6d00b">IFunction</a>.</p>

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml">NECropResize.cpp</a>.</p>

<p class="reference">References <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00109">NECropResize::_crop</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00111">NECropResize::_crop_results</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00107">NECropResize::_extrapolation_value</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00106">NECropResize::_method</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00105">NECropResize::_num_boxes</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00104">NECropResize::_output</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00110">NECropResize::_scale</a>, <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00112">NECropResize::_scaled_results</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">arm_compute::CONSTANT</a>, <a class="el" href="_window_8h_source.xhtml#l00047">Window::DimZ</a>, <a class="el" href="_scheduler_8cpp_source.xhtml#l00094">Scheduler::get()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">IScheduler::schedule()</a>, and <a class="el" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::TOP_LEFT</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">_output</a> == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Unconfigured function&quot;</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">_num_boxes</a>; ++i)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// Size of the crop box in _boxes and thus the shape of _crop_results[i]</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">// may not be known until run-time and so the kernels cannot be configured until then.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a>[i]-&gt;configure_output_shape();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a>[i]-&gt;allocator()-&gt;allocate();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">schedule</a>(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">_crop</a>[i].<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">// Scale the cropped image.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a>[i]-&gt;configure(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">_crop_results</a>[i].<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>[i].<span class="keyword">get</span>(), ScaleKernelInfo{ <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">_method</a>, <a class="code" href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">BorderMode::CONSTANT</a>, PixelValue(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">_extrapolation_value</a>), <a class="code" href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">SamplingPolicy::TOP_LEFT</a>, <span class="keyword">false</span> });</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>[i]-&gt;allocator()-&gt;allocate();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">_scale</a>[i]-&gt;run();</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">// Copy scaled image into output.</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        std::copy_n(<a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>[i]-&gt;buffer(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">_scaled_results</a>[i]-&gt;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>()-&gt;total_size(), <a class="code" href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">_output</a>-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a>(Coordinates(0, 0, 0, i)));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_adbd73147d41e8a640bc299d12613c31e"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">arm_compute::ITensor::ptr_to_element</a></div><div class="ttdeci">uint8_t * ptr_to_element(const Coordinates &amp;id) const</div><div class="ttdoc">Return a pointer to the element at the passed coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00063">ITensor.h:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac3d8a6d89a7d670fb1f17be016bd88fe"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac3d8a6d89a7d670fb1f17be016bd88fe">arm_compute::NECropResize::_crop</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NECropKernel &gt; &gt; _crop</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00109">NECropResize.h:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a5e6dad2c0f2799f694d00240cb728859"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a5e6dad2c0f2799f694d00240cb728859">arm_compute::NECropResize::_extrapolation_value</a></div><div class="ttdeci">float _extrapolation_value</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00107">NECropResize.h:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a05254b9c1c9d4a736764d8d45eb97210"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a05254b9c1c9d4a736764d8d45eb97210">arm_compute::NECropResize::_scaled_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _scaled_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00112">NECropResize.h:112</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_abe85e6a0ad7bb27a45a35689209ad8b6"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#abe85e6a0ad7bb27a45a35689209ad8b6">arm_compute::NECropResize::_output</a></div><div class="ttdeci">ITensor * _output</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00104">NECropResize.h:104</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ad079478f73a5eac133d029fc1ff10225"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ad079478f73a5eac133d029fc1ff10225">arm_compute::NECropResize::_num_boxes</a></div><div class="ttdeci">size_t _num_boxes</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00105">NECropResize.h:105</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1"><div class="ttname"><a href="namespacearm__compute.xhtml#a16a59381d4d74d17d86d69eb4d286d7ba747385047b85ae751f83adb36435a3c1">arm_compute::SamplingPolicy::TOP_LEFT</a></div><div class="ttdoc">Samples are taken at pixel top left corner. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_a7e58fba18219bc16ed958e62fd887701"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#a7e58fba18219bc16ed958e62fd887701">arm_compute::NECropResize::_scale</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; NEScale &gt; &gt; _scale</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00110">NECropResize.h:110</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a4e58f95544bd5ac6559a421671bd9842"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">arm_compute::IScheduler::schedule</a></div><div class="ttdeci">virtual void schedule(ICPPKernel *kernel, const Hints &amp;hints)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92"><div class="ttname"><a href="namespacearm__compute.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a8d6b5cada83510220f59e00ce86d4d92">arm_compute::PaddingMode::CONSTANT</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_ac17c6ba3cfe6338930b20d4541ff8b34"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#ac17c6ba3cfe6338930b20d4541ff8b34">arm_compute::NECropResize::_method</a></div><div class="ttdeci">InterpolationPolicy _method</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00106">NECropResize.h:106</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_resize_xhtml_aeba0f6c60cf9ecafb60928b6c6b4c547"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_resize.xhtml#aeba0f6c60cf9ecafb60928b6c6b4c547">arm_compute::NECropResize::_crop_results</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Tensor &gt; &gt; _crop_results</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_resize_8h_source.xhtml#l00111">NECropResize.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0ed104d390dd9598873ff85231998946"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ed104d390dd9598873ff85231998946">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>boxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>box_ind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td>
          <td class="paramname"><em>crop_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>extrapolation_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration of <a class="el" href="classarm__compute_1_1_n_e_slice.xhtml">NESlice</a>. </p>
<dl class="section note"><dt>Note</dt><dd>Supported tensor rank: up to 4 </dd>
<dd>
Box indices may be outside of the bounds, in which case <code>extrapolation_value</code> is used. </dd>
<dd>
Start and end indices of boxes are inclusive.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Source tensor containing N batches of 3D images to be cropped. Data type supported: U8/U16/S16/U32/S32/F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">boxes</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> info for the tensor containing the boxes used to crop the images. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box_ind</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> info for the one dimensional tensor containing the batch index of the 3D image in <code>input</code> that the corresponding box in <code>boxes</code> will be applied to. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">output</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface. ">Tensor</a> info for the destination tensor containing a cropped and resized image for each box in <code>boxes</code>. Data type supported: F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">crop_size</td><td>The dimensions that each cropped image will be resized to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>The policy to be used when resizing image. Default is bilinear. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">extrapolation_value</td><td>Value to be used for values outside of the image for cropping and resizing. Default is 0.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml">NECropResize.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::AREA</a>, <a class="el" href="_error_8h_source.xhtml#l00296">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00690">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00490">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00284">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>, <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="classarm__compute_1_1misc_1_1_i_cloneable.xhtml#a4d10e5012a872e7f78f2b539b673049d">ICloneable&lt; T &gt;::clone()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00210">NECropKernel::validate()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00437">Coordinates2D::x</a>, and <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00438">Coordinates2D::y</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a> &lt;= 0 || crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a> &lt;= 0);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(method == <a class="code" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">InterpolationPolicy::AREA</a>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    TensorInfo temp_info;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_crop_kernel.xhtml#a0b1369db011f9d5603d2f6ab4bab8548">NECropKernel::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;clone().get(), boxes-&gt;clone().get(), box_ind-&gt;clone().get(), &amp;temp_info, boxes-&gt;tensor_shape()[1] - 1, extrapolation_value));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(output-&gt;total_size() &gt; 0)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a>(output, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        TensorShape out_shape(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;tensor_shape()[0], crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">x</a>, crop_size.<a class="code" href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">y</a>, boxes-&gt;tensor_shape()[1]);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a>(output-&gt;tensor_shape(), out_shape);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_abdb9168800c70e5e2c4c020a3b905738"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00490">Validate.h:490</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a1da797d2762c1cdbb73bfc83136c3a38"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00284">Validate.h:284</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_crop_kernel_xhtml_a0b1369db011f9d5603d2f6ab4bab8548"><div class="ttname"><a href="classarm__compute_1_1_n_e_crop_kernel.xhtml#a0b1369db011f9d5603d2f6ab4bab8548">arm_compute::NECropKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *crop_boxes, const ITensorInfo *box_ind, const ITensorInfo *output, uint32_t crop_box_ind=0, float extrapolation_value=0)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CLStridedSliceKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_crop_kernel_8cpp_source.xhtml#l00210">NECropKernel.cpp:210</a></div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a6150e0515f7202e2fb518f7206ed97dc"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a6150e0515f7202e2fb518f7206ed97dc">Coordinates2D::x</a></div><div class="ttdeci">int x</div><div class="ttdoc">The x coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00030">types.h:30</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4"><div class="ttname"><a href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9a639aaa22a784d5e5cb03a522267e79c4">arm_compute::InterpolationPolicy::AREA</a></div><div class="ttdoc">Output values are determined by averaging the source pixels whose areas fall under the area of the de...</div></div>
<div class="ttc" id="struct_coordinates2_d_xhtml_a0a2f84ed7838f07779ae24c5a9086d33"><div class="ttname"><a href="struct_coordinates2_d.xhtml#a0a2f84ed7838f07779ae24c5a9086d33">Coordinates2D::y</a></div><div class="ttdeci">int y</div><div class="ttdoc">The y coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00031">types.h:31</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aef783de4ec01874dbec6054a5868aea2"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00690">Validate.h:690</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ac3d8a6d89a7d670fb1f17be016bd88fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3d8a6d89a7d670fb1f17be016bd88fe">&#9670;&nbsp;</a></span>_crop</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_n_e_crop_kernel.xhtml">NECropKernel</a>&gt; &gt; _crop</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00109">109</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="aeba0f6c60cf9ecafb60928b6c6b4c547"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeba0f6c60cf9ecafb60928b6c6b4c547">&#9670;&nbsp;</a></span>_crop_results</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>&gt; &gt; _crop_results</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00111">111</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="a5e6dad2c0f2799f694d00240cb728859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e6dad2c0f2799f694d00240cb728859">&#9670;&nbsp;</a></span>_extrapolation_value</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float _extrapolation_value</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00107">107</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="ac17c6ba3cfe6338930b20d4541ff8b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac17c6ba3cfe6338930b20d4541ff8b34">&#9670;&nbsp;</a></span>_method</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> _method</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00106">106</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="ad079478f73a5eac133d029fc1ff10225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad079478f73a5eac133d029fc1ff10225">&#9670;&nbsp;</a></span>_num_boxes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t _num_boxes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00105">105</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="abe85e6a0ad7bb27a45a35689209ad8b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe85e6a0ad7bb27a45a35689209ad8b6">&#9670;&nbsp;</a></span>_output</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>* _output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00104">104</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="a7e58fba18219bc16ed958e62fd887701"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e58fba18219bc16ed958e62fd887701">&#9670;&nbsp;</a></span>_scale</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a>&gt; &gt; _scale</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<a id="a05254b9c1c9d4a736764d8d45eb97210"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05254b9c1c9d4a736764d8d45eb97210">&#9670;&nbsp;</a></span>_scaled_results</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_tensor.xhtml">Tensor</a>&gt; &gt; _scaled_results</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_crop_resize_8h_source.xhtml#l00112">112</a> of file <a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, and <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/NEON/functions/<a class="el" href="_n_e_crop_resize_8h_source.xhtml">NECropResize.h</a></li>
<li>src/runtime/NEON/functions/<a class="el" href="_n_e_crop_resize_8cpp_source.xhtml">NECropResize.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_n_e_crop_resize.xhtml">NECropResize</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:47 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
