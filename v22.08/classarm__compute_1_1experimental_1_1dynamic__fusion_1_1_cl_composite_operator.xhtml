<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClCompositeOperator Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClCompositeOperator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> runtime to run a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_composite_operator_8h_source.xhtml">ClCompositeOperator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af887bee7b2c4fce272f2b577d1b76d9c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#af887bee7b2c4fce272f2b577d1b76d9c">ClCompositeOperator</a> ()</td></tr>
<tr class="separator:af887bee7b2c4fce272f2b577d1b76d9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53764da497edd54e3660ced6c495cd8a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a53764da497edd54e3660ced6c495cd8a">~ClCompositeOperator</a> ()</td></tr>
<tr class="separator:a53764da497edd54e3660ced6c495cd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaafe061c90d7bcd5b9a573e841fd4e4a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aaafe061c90d7bcd5b9a573e841fd4e4a">configure</a> (const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;ctx, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload)</td></tr>
<tr class="memdesc:aaafe061c90d7bcd5b9a573e841fd4e4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> with a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> This includes the compilation of Cl kernels inside the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>.  <a href="#aaafe061c90d7bcd5b9a573e841fd4e4a">More...</a><br /></td></tr>
<tr class="separator:aaafe061c90d7bcd5b9a573e841fd4e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab9ab60672d5e3feefa1d02c028a8bcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#aab9ab60672d5e3feefa1d02c028a8bcc">prepare</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;tensor_pack_map)</td></tr>
<tr class="memdesc:aab9ab60672d5e3feefa1d02c028a8bcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue prepare workloads.  <a href="#aab9ab60672d5e3feefa1d02c028a8bcc">More...</a><br /></td></tr>
<tr class="separator:aab9ab60672d5e3feefa1d02c028a8bcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3871efa4a6ba468a7a931707f49afe50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a3871efa4a6ba468a7a931707f49afe50">run</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;tensor_pack_map)</td></tr>
<tr class="memdesc:a3871efa4a6ba468a7a931707f49afe50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue run workloads.  <a href="#a3871efa4a6ba468a7a931707f49afe50">More...</a><br /></td></tr>
<tr class="separator:a3871efa4a6ba468a7a931707f49afe50"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a42f867173a9af2a6cb925e9b6699dc4c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a42f867173a9af2a6cb925e9b6699dc4c">validate</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload)</td></tr>
<tr class="memdesc:a42f867173a9af2a6cb925e9b6699dc4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml" title="Workload for Cl backend. ">ClWorkload</a> <code>workload</code>.  <a href="#a42f867173a9af2a6cb925e9b6699dc4c">More...</a><br /></td></tr>
<tr class="separator:a42f867173a9af2a6cb925e9b6699dc4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml" title="Operator Handle This can be used to further modify an existing operator. ">Operator</a> runtime to run a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>. </p>
<dl class="section note"><dt>Note</dt><dd>User must explicitly call prepare before run otherwise run will fail. </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="dynamic_fusion_2cl_fused_conv2d_elementwise_add_8cpp-example.xhtml#_a47">dynamic_fusion/cl_fused_conv2d_elementwise_add.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8h_source.xhtml#l00151">151</a> of file <a class="el" href="_cl_composite_operator_8h_source.xhtml">ClCompositeOperator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af887bee7b2c4fce272f2b577d1b76d9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af887bee7b2c4fce272f2b577d1b76d9c">&#9670;&nbsp;</a></span>ClCompositeOperator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a53764da497edd54e3660ced6c495cd8a">ClCompositeOperator::~ClCompositeOperator()</a>.</p>
<div class="fragment"><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    : _impl{ std::make_unique&lt;Implementation&gt;() }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a53764da497edd54e3660ced6c495cd8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53764da497edd54e3660ced6c495cd8a">&#9670;&nbsp;</a></span>~ClCompositeOperator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00167">ClCompositeOperator::ClCompositeOperator()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aaafe061c90d7bcd5b9a573e841fd4e4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaafe061c90d7bcd5b9a573e841fd4e4a">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;&#160;</td>
          <td class="paramname"><em>workload</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a> with a <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> This includes the compilation of Cl kernels inside the <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml" title="CLCompileContext class. ">CLCompileContext</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">workload</td><td><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml" title="Workload for Cl backend. ">ClWorkload</a> to configure with </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00174">174</a> of file <a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="_i_workload_8h_source.xhtml#l00125">IWorkload::graph</a>, <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">arm_compute::test::validation::k</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1">UnitWorkloadStage::Prepare</a>, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Run</a>, <a class="el" href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00380">DependencyGraph::topological_sort()</a>, <a class="el" href="_cl_workload_8h_source.xhtml#l00199">ClWorkload::unit_workloads</a>, <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00203">ClCompositeOperator::validate()</a>, and <a class="el" href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">arm_compute::test::validation::workload</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_u_n_i_t_2dynamic__fusion_2_floor_8cpp_source.xhtml#l00058">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;{</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a42f867173a9af2a6cb925e9b6699dc4c">ClCompositeOperator::validate</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>));</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    _impl-&gt;_workload = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">// Traverse workloads in topological order</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> sorted = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>.graph.topological_sort().second;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;node : sorted)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keyword">auto</span> work  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>.unit_workloads.at(node.op);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">auto</span> stage = work.stage.stage;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>     = std::make_unique&lt;ClCompositeKernel&gt;();</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>-&gt;configure(ctx, work.code);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">switch</span>(stage)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">UnitWorkloadStage::Stage::Run</a>:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                _impl-&gt;_kernels.emplace(work.id, std::move(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>));</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1">UnitWorkloadStage::Stage::Prepare</a>:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                _impl-&gt;_kernels_prep.emplace(work.id, std::move(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>));</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Invalid stage&quot;</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebaf8199556cf6a62ca9268aa50c99b34a1">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Prepare</a></div><div class="ttdoc">Only run once at the beginning. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml_aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml#aca8133200c1122e29b87b314d82604ebac5301693c4e792bcd5a479ef38fb8f8d">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage::Stage::Run</a></div><div class="ttdoc">Run every time after the first time. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator_xhtml_a42f867173a9af2a6cb925e9b6699dc4c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml#a42f867173a9af2a6cb925e9b6699dc4c">arm_compute::experimental::dynamic_fusion::ClCompositeOperator::validate</a></div><div class="ttdeci">static Status validate(const ClWorkload &amp;workload)</div><div class="ttdoc">Validate ClWorkload workload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_composite_operator_8cpp_source.xhtml#l00203">ClCompositeOperator.cpp:203</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aab9ab60672d5e3feefa1d02c028a8bcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab9ab60672d5e3feefa1d02c028a8bcc">&#9670;&nbsp;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void prepare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_pack_map</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue prepare workloads. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tensor_pack_map</td><td>Tensors required by the prepare workloads </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00208">208</a> of file <a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, and <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00094">TensorPackMap::get_tensor_pack()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_u_n_i_t_2dynamic__fusion_2_floor_8cpp_source.xhtml#l00058">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;{</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span>(!_impl-&gt;_is_prepared)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;id_kernel_pair : _impl-&gt;_kernels_prep)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">bool</span> flush_queue = <span class="keyword">false</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> uwk_id      = id_kernel_pair.first;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keyword">auto</span>       kernel      = id_kernel_pair.second.get();</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*kernel, tensor_pack_map.get_tensor_pack(uwk_id), ClExecutionDescriptor{}, flush_queue);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        _impl-&gt;_is_prepared = <span class="keyword">true</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler.cpp:243</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3871efa4a6ba468a7a931707f49afe50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3871efa4a6ba468a7a931707f49afe50">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void run </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tensor_pack_map.xhtml">TensorPackMap</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_pack_map</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enqueue run workloads. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tensor_pack_map</td><td>Tensors required by the run workloads </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler::enqueue_op()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler::get()</a>, and <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00094">TensorPackMap::get_tensor_pack()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_2_u_n_i_t_2dynamic__fusion_2_floor_8cpp_source.xhtml#l00058">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(!_impl-&gt;_is_prepared, <span class="stringliteral">&quot;Operator is not prepared&quot;</span>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;id_kernel_pair : _impl-&gt;_kernels)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment">// Flush the command queue on the last kernel</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> flush_queue = <span class="keyword">false</span>;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> uwk_id      = id_kernel_pair.first;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keyword">auto</span>       kernel      = id_kernel_pair.second.get();</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">enqueue_op</a>(*kernel, tensor_pack_map.get_tensor_pack(uwk_id), ClExecutionDescriptor{}, flush_queue);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a5c0fc6f465cae029d60ffdfc7f3e99d9"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a5c0fc6f465cae029d60ffdfc7f3e99d9">arm_compute::CLScheduler::enqueue_op</a></div><div class="ttdeci">void enqueue_op(ICLKernel &amp;kernel, ITensorPack &amp;tensors, bool flush=true)</div><div class="ttdoc">Schedule the execution of the passed kernel if possible. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00243">CLScheduler.cpp:243</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a42f867173a9af2a6cb925e9b6699dc4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f867173a9af2a6cb925e9b6699dc4c">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;&#160;</td>
          <td class="paramname"><em>workload</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Validate <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml" title="Workload for Cl backend. ">ClWorkload</a> <code>workload</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">workload</td><td><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml" title="Workload for Cl backend. ">ClWorkload</a> to be validated</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_status.xhtml" title="Status class. ">Status</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00203">203</a> of file <a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cl_workload_8h_source.xhtml#l00202">ClWorkload::status</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_composite_operator_8cpp_source.xhtml#l00174">ClCompositeOperator::configure()</a>, and <a class="el" href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00170">arm_compute::test::validation::TEST_CASE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>.status;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/experimental/<a class="el" href="_cl_composite_operator_8h_source.xhtml">ClCompositeOperator.h</a></li>
<li>src/gpu/cl/operators/experimental/dynamic_fusion/<a class="el" href="_cl_composite_operator_8cpp_source.xhtml">ClCompositeOperator.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_composite_operator.xhtml">ClCompositeOperator</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
