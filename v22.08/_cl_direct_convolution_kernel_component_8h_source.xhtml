<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/components/ClDirectConvolutionKernelComponent.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_direct_convolution_kernel_component_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClDirectConvolutionKernelComponent.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_direct_convolution_kernel_component_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IMPL_COMPONENTS_CLDIRECTCONVOLUTIONKERNELCOMPONENT_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IMPL_COMPONENTS_CLDIRECTCONVOLUTIONKERNELCOMPONENT_H</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h.xhtml">src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/Common.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_type_printer_8h.xhtml">utils/TypePrinter.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml">   39</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml">ClDirectConvolutionKernelComponent</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">IClKernelComponent</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a40a7e5b80375817bb22a1903addc3f94">   42</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a40a7e5b80375817bb22a1903addc3f94">ClDirectConvolutionKernelComponent</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> *blueprint, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a> &amp;desc,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> &amp;weight, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a> &amp;<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a>{})</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a107bc55d669c46d434a9abf6e30515a2">IClKernelComponent</a>(blueprint), _desc{ desc }, _src{ src }, _weight{ weight }, _bias{ <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a> }, _dst{ dst }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">ComponentType</a>         <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">get_component_type</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::set&lt;std::string&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">get_headers_list</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    std::string           <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">get_additional_macros</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::string           <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">get_component_code</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>                <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a>       <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a3c85bffe05646af0d433b64941688e34">get_args</a>();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">generate_build_options</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">   56</a></span>&#160;    <span class="keyword">virtual</span> std::vector&lt;Link&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">get_links</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">return</span> { _src, _weight, _bias, _dst };</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">get_tag_lut</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable) <span class="keyword">const override</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">allocate_shared_vars</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable) <span class="keyword">const override</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">   64</a></span>&#160;    <span class="keyword">virtual</span> std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">name</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;direct_convolution_&quot;</span> + <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4de2494f0551776a532a883d3b190b33">to_string</a>(_blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>)-&gt;data_layout()) + <span class="stringliteral">&quot;_&quot;</span> + <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4de2494f0551776a532a883d3b190b33">std::to_string</a>(<span class="keywordtype">id</span>());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a> _desc{};</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a>                           _src{};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a>                           _weight{};</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a>                           _bias{};</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">Link</a>                           _dst{};</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_IMPL_COMPONENTS_CLDIRECTCONVOLUTIONKERNELCOMPONENT_H</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a283deece00423ed5bd0c9486f305a6f4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_headers_list</a></div><div class="ttdeci">std::set&lt; std::string &gt; get_headers_list() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00046">ClDirectConvolutionKernelComponent.cpp:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a0d6affc039a39f5b58d6cbe8e54da94a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_tag_lut</a></div><div class="ttdeci">virtual TagLUT get_tag_lut(const SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Get the tag look-up table used to instantiate the component code. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00347">ClDirectConvolutionKernelComponent.cpp:347</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a0d19762e6a4b065fe0a480eb8477ac43"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::generate_build_options</a></div><div class="ttdeci">CLBuildOptions generate_build_options() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00294">ClDirectConvolutionKernelComponent.cpp:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a1e3d775fbfca319cecae8d377d335b8a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_component_code</a></div><div class="ttdeci">std::string get_component_code() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00097">ClDirectConvolutionKernelComponent.cpp:97</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a4de2494f0551776a532a883d3b190b33"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4de2494f0551776a532a883d3b190b33">arm_compute::experimental::dynamic_fusion::to_string</a></div><div class="ttdeci">std::string to_string(const CLBuildOptions &amp;cl_build_opts)</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_utils_8h_source.xhtml#l00051">Utils.h:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a1d067dee0e43375aefdc128fb00d409d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_component_type</a></div><div class="ttdeci">ComponentType get_component_type() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00041">ClDirectConvolutionKernelComponent.cpp:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml">arm_compute::experimental::dynamic_fusion::SharedVarLink</a></div><div class="ttdoc">Specifies a shared variable link for a component. </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00076">Common.h:76</a></div></div>
<div class="ttc" id="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_xhtml"><div class="ttname"><a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h.xhtml">Common.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a7d9ccece3683c788ad8703513badd963"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a7d9ccece3683c788ad8703513badd963">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_links</a></div><div class="ttdeci">virtual std::vector&lt; Link &gt; get_links() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8h_source.xhtml#l00056">ClDirectConvolutionKernelComponent.h:56</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa9587b64a9fbf98bfe730f42dea9c09e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">arm_compute::experimental::dynamic_fusion::ClKernelArgList</a></div><div class="ttdeci">std::map&lt; int, ClKernelArgDescriptor &gt; ClKernelArgList</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00087">ClWorkload.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelBlueprint</a></div><div class="ttdoc">Intermediate representation of the final, complete kernel source. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_building_a_p_i_8h_source.xhtml#l00046">ClKernelBuildingAPI.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_a107bc55d669c46d434a9abf6e30515a2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a107bc55d669c46d434a9abf6e30515a2">arm_compute::experimental::dynamic_fusion::IClKernelComponent::IClKernelComponent</a></div><div class="ttdeci">IClKernelComponent(ClKernelBlueprint *blueprint)</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00294">Common.h:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8h_source.xhtml#l00039">ClDirectConvolutionKernelComponent.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00051">ClDirectConvolutionKernelComponent.cpp:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">arm_compute::experimental::dynamic_fusion::SharedVarTable</a></div><div class="ttdoc">A table of all the variables used in the kernel / blueprint Because we limit the DependencyGraph in t...</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00092">Common.h:92</a></div></div>
<div class="ttc" id="utils_2_type_printer_8h_xhtml"><div class="ttname"><a href="utils_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a3c85bffe05646af0d433b64941688e34"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a3c85bffe05646af0d433b64941688e34">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_args</a></div><div class="ttdeci">ClKernelArgList get_args()</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a149b376735e266985c6a5c8c79efeace"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_additional_macros</a></div><div class="ttdeci">std::string get_additional_macros() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00092">ClDirectConvolutionKernelComponent.cpp:92</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml_a647b7b591b8726421b7b5f45fbe6933a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arm_compute::experimental::dynamic_fusion::SharedVarLink::arg_id</a></div><div class="ttdeci">ArgumentID arg_id</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00078">Common.h:78</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00036">ClKernelDescriptors.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_afc9312fdb90fc545e0d102d7f3b6341e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#afc9312fdb90fc545e0d102d7f3b6341e">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::name</a></div><div class="ttdeci">virtual std::string name() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8h_source.xhtml#l00064">ClDirectConvolutionKernelComponent.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a73304dca4b472b11836efa13d53767f5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::allocate_shared_vars</a></div><div class="ttdeci">virtual void allocate_shared_vars(SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Allocate all shared variables used by the component in the vtable. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00328">ClDirectConvolutionKernelComponent.cpp:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::IClKernelComponent::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00292">Common.h:292</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">arm_compute::experimental::dynamic_fusion::ComponentType</a></div><div class="ttdeci">ComponentType</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00247">Common.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a40a7e5b80375817bb22a1903addc3f94"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a40a7e5b80375817bb22a1903addc3f94">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::ClDirectConvolutionKernelComponent</a></div><div class="ttdeci">ClDirectConvolutionKernelComponent(ClKernelBlueprint *blueprint, const ClDirectConv2dKernelDescriptor &amp;desc, const Link &amp;src, const Link &amp;weight, const Link &amp;dst, const Link &amp;bias=Link{})</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8h_source.xhtml#l00042">ClDirectConvolutionKernelComponent.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml">arm_compute::experimental::dynamic_fusion::IClKernelComponent</a></div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00256">Common.h:256</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_145dd76969821cf771138378bb8274dc.xhtml">ClKernelBuildingImpl</a></li><li class="navelem"><a class="el" href="dir_cc845e4cb0a4830714d7be3c2daa81c7.xhtml">components</a></li><li class="navelem"><a class="el" href="_cl_direct_convolution_kernel_component_8h.xhtml">ClDirectConvolutionKernelComponent.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
