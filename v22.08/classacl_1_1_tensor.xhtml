<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Tensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classacl_1_1_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Tensor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> class.  
 <a href="classacl_1_1_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for Tensor:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classacl_1_1_tensor__coll__graph.svg" width="212" height="203"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af71c95744d72572defee0bc3e53530c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#af71c95744d72572defee0bc3e53530c8">Tensor</a> (<a class="el" href="classacl_1_1_context.xhtml">Context</a> &amp;ctx, const <a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;desc, <a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> *status=nullptr)</td></tr>
<tr class="memdesc:af71c95744d72572defee0bc3e53530c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#af71c95744d72572defee0bc3e53530c8">More...</a><br /></td></tr>
<tr class="separator:af71c95744d72572defee0bc3e53530c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a993f232f4c79265dde0292b14d827759"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#a993f232f4c79265dde0292b14d827759">Tensor</a> (<a class="el" href="classacl_1_1_context.xhtml">Context</a> &amp;ctx, const <a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;desc, bool allocate, <a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> *status)</td></tr>
<tr class="memdesc:a993f232f4c79265dde0292b14d827759"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a993f232f4c79265dde0292b14d827759">More...</a><br /></td></tr>
<tr class="separator:a993f232f4c79265dde0292b14d827759"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4dae3db20740c9ffda9e83e73e373ff"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#ad4dae3db20740c9ffda9e83e73e373ff">map</a> ()</td></tr>
<tr class="memdesc:ad4dae3db20740c9ffda9e83e73e373ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maps the backing memory of a given tensor that can be used by the host to access any contents.  <a href="#ad4dae3db20740c9ffda9e83e73e373ff">More...</a><br /></td></tr>
<tr class="separator:ad4dae3db20740c9ffda9e83e73e373ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c87d216f8f74cc18176fe86b303ca4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#ac1c87d216f8f74cc18176fe86b303ca4">unmap</a> (void *handle)</td></tr>
<tr class="memdesc:ac1c87d216f8f74cc18176fe86b303ca4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmaps tensor's memory.  <a href="#ac1c87d216f8f74cc18176fe86b303ca4">More...</a><br /></td></tr>
<tr class="separator:ac1c87d216f8f74cc18176fe86b303ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38198174a275be845cdb10bb4e6aca88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#a38198174a275be845cdb10bb4e6aca88">import</a> (void *handle, <a class="el" href="namespaceacl.xhtml#afedf28d42d92fc1609c264c3c8e3f7f1">ImportType</a> <a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>)</td></tr>
<tr class="memdesc:a38198174a275be845cdb10bb4e6aca88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Import external memory to a given tensor object.  <a href="#a38198174a275be845cdb10bb4e6aca88">More...</a><br /></td></tr>
<tr class="separator:a38198174a275be845cdb10bb4e6aca88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a1f1bfaf3fca05c7743669cfbf80c9d"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#a8a1f1bfaf3fca05c7743669cfbf80c9d">get_size</a> ()</td></tr>
<tr class="memdesc:a8a1f1bfaf3fca05c7743669cfbf80c9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the tensor in byte.  <a href="#a8a1f1bfaf3fca05c7743669cfbf80c9d">More...</a><br /></td></tr>
<tr class="separator:a8a1f1bfaf3fca05c7743669cfbf80c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adeb6061e4e0914bff60a51e493f240"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1_tensor.xhtml#a4adeb6061e4e0914bff60a51e493f240">get_descriptor</a> ()</td></tr>
<tr class="memdesc:a4adeb6061e4e0914bff60a51e493f240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the descriptor of this tensor.  <a href="#a4adeb6061e4e0914bff60a51e493f240">More...</a><br /></td></tr>
<tr class="separator:a4adeb6061e4e0914bff60a51e493f240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classacl_1_1detail_1_1_object_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classacl_1_1detail_1_1_object_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase&lt; AclTensor_ &gt;</a></td></tr>
<tr class="memitem:aade7d4fd73ec27397ca54503f21e8509 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#aade7d4fd73ec27397ca54503f21e8509">~ObjectBase</a> ()=default</td></tr>
<tr class="memdesc:aade7d4fd73ec27397ca54503f21e8509 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classacl_1_1detail_1_1_object_base.xhtml#aade7d4fd73ec27397ca54503f21e8509">More...</a><br /></td></tr>
<tr class="separator:aade7d4fd73ec27397ca54503f21e8509 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e27a8389170822648aacab5b4dfd56 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#aa6e27a8389170822648aacab5b4dfd56">ObjectBase</a> (const <a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;)=default</td></tr>
<tr class="memdesc:aa6e27a8389170822648aacab5b4dfd56 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="classacl_1_1detail_1_1_object_base.xhtml#aa6e27a8389170822648aacab5b4dfd56">More...</a><br /></td></tr>
<tr class="separator:aa6e27a8389170822648aacab5b4dfd56 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3893a712a54177071bec59e06d4e05cd inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#a3893a712a54177071bec59e06d4e05cd">ObjectBase</a> (<a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;&amp;)=default</td></tr>
<tr class="memdesc:a3893a712a54177071bec59e06d4e05cd inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move Constructor.  <a href="classacl_1_1detail_1_1_object_base.xhtml#a3893a712a54177071bec59e06d4e05cd">More...</a><br /></td></tr>
<tr class="separator:a3893a712a54177071bec59e06d4e05cd inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5d3c90ad8bbc807c842b5bd0ddf42bf inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#ad5d3c90ad8bbc807c842b5bd0ddf42bf">operator=</a> (const <a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;)=default</td></tr>
<tr class="memdesc:ad5d3c90ad8bbc807c842b5bd0ddf42bf inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="classacl_1_1detail_1_1_object_base.xhtml#ad5d3c90ad8bbc807c842b5bd0ddf42bf">More...</a><br /></td></tr>
<tr class="separator:ad5d3c90ad8bbc807c842b5bd0ddf42bf inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd0f68e78e7ef6841c9f2cceb19b9c26 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#abd0f68e78e7ef6841c9f2cceb19b9c26">operator=</a> (<a class="el" href="classacl_1_1detail_1_1_object_base.xhtml">ObjectBase</a>&lt; <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> &gt; &amp;&amp;)=default</td></tr>
<tr class="memdesc:abd0f68e78e7ef6841c9f2cceb19b9c26 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assignment operator.  <a href="classacl_1_1detail_1_1_object_base.xhtml#abd0f68e78e7ef6841c9f2cceb19b9c26">More...</a><br /></td></tr>
<tr class="separator:abd0f68e78e7ef6841c9f2cceb19b9c26 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae0bb25345787a936c230ec9d3ee2ae inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#a9ae0bb25345787a936c230ec9d3ee2ae">reset</a> (<a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> *val)</td></tr>
<tr class="memdesc:a9ae0bb25345787a936c230ec9d3ee2ae inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset object value.  <a href="classacl_1_1detail_1_1_object_base.xhtml#a9ae0bb25345787a936c230ec9d3ee2ae">More...</a><br /></td></tr>
<tr class="separator:a9ae0bb25345787a936c230ec9d3ee2ae inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2393e8bd15daa23d3cde726fd05fa78 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#ac2393e8bd15daa23d3cde726fd05fa78">get</a> () const</td></tr>
<tr class="memdesc:ac2393e8bd15daa23d3cde726fd05fa78 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access uderlying object.  <a href="classacl_1_1detail_1_1_object_base.xhtml#ac2393e8bd15daa23d3cde726fd05fa78">More...</a><br /></td></tr>
<tr class="separator:ac2393e8bd15daa23d3cde726fd05fa78 inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac051b2568208e363ae2dffb23c0ad9ba inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_acl_tensor__.xhtml">AclTensor_</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classacl_1_1detail_1_1_object_base.xhtml#ac051b2568208e363ae2dffb23c0ad9ba">get</a> ()</td></tr>
<tr class="memdesc:ac051b2568208e363ae2dffb23c0ad9ba inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access uderlying object.  <a href="classacl_1_1detail_1_1_object_base.xhtml#ac051b2568208e363ae2dffb23c0ad9ba">More...</a><br /></td></tr>
<tr class="separator:ac051b2568208e363ae2dffb23c0ad9ba inherit pub_methods_classacl_1_1detail_1_1_object_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> class. </p>
<p><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> is an mathematical construct that can represent an N-Dimensional space.</p>
<dl class="section note"><dt>Note</dt><dd>Maximum dimensionality support is 6 internally at the moment </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00584">584</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af71c95744d72572defee0bc3e53530c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af71c95744d72572defee0bc3e53530c8">&#9670;&nbsp;</a></span>Tensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classacl_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classacl_1_1_context.xhtml">Context</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> *&#160;</td>
          <td class="paramname"><em>status</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> memory is allocated</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td><a class="el" href="classacl_1_1_context.xhtml" title="Context classAvailable tuning modes. ">Context</a> from where the tensor will be created from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> descriptor to be used </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">status</td><td>Status information if requested </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00595">595</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        : <a class="code" href="classacl_1_1_tensor.xhtml#af71c95744d72572defee0bc3e53530c8">Tensor</a>(ctx, desc, <span class="keyword">true</span>, status)</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    }</div><div class="ttc" id="classacl_1_1_tensor_xhtml_af71c95744d72572defee0bc3e53530c8"><div class="ttname"><a href="classacl_1_1_tensor.xhtml#af71c95744d72572defee0bc3e53530c8">acl::Tensor::Tensor</a></div><div class="ttdeci">Tensor(Context &amp;ctx, const TensorDescriptor &amp;desc, StatusCode *status=nullptr)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00595">Acl.hpp:595</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a993f232f4c79265dde0292b14d827759"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a993f232f4c79265dde0292b14d827759">&#9670;&nbsp;</a></span>Tensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classacl_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classacl_1_1_context.xhtml">Context</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allocate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> *&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ctx</td><td><a class="el" href="classacl_1_1_context.xhtml" title="Context classAvailable tuning modes. ">Context</a> from where the tensor will be created from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td><a class="el" href="classacl_1_1_tensor.xhtml" title="Tensor class. ">Tensor</a> descriptor to be used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allocate</td><td>Flag to indicate if the tensor needs to be allocated </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">status</td><td>Status information if requested </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00606">606</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00068">AclCreateTensor()</a>, <a class="el" href="_acl_8hpp_source.xhtml#l00156">ObjectBase&lt; T &gt;::get()</a>, and <a class="el" href="_acl_8hpp_source.xhtml#l00538">TensorDescriptor::get()</a>.</p>
<div class="fragment"><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <a class="code" href="struct_acl_tensor__.xhtml">AclTensor</a>  tensor;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_entrypoints_8h.xhtml#acd5a3091549e64d2259d97113aed9d50">AclCreateTensor</a>(&amp;tensor, ctx.get(), desc.get(), allocate));</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <a class="code" href="classacl_1_1detail_1_1_object_base.xhtml#a9ae0bb25345787a936c230ec9d3ee2ae">reset</a>(tensor);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to create tensor!&quot;</span>);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">if</span>(status)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            *status = st;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        }</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    }</div><div class="ttc" id="classacl_1_1detail_1_1_object_base_xhtml_a9ae0bb25345787a936c230ec9d3ee2ae"><div class="ttname"><a href="classacl_1_1detail_1_1_object_base.xhtml#a9ae0bb25345787a936c230ec9d3ee2ae">acl::detail::ObjectBase&lt; AclTensor_ &gt;::reset</a></div><div class="ttdeci">void reset(AclTensor_ *val)</div><div class="ttdoc">Reset object value. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00148">Acl.hpp:148</a></div></div>
<div class="ttc" id="struct_acl_tensor___xhtml"><div class="ttname"><a href="struct_acl_tensor__.xhtml">AclTensor_</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_v2_8h_source.xhtml#l00030">ITensorV2.h:30</a></div></div>
<div class="ttc" id="_acl_entrypoints_8h_xhtml_acd5a3091549e64d2259d97113aed9d50"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#acd5a3091549e64d2259d97113aed9d50">AclCreateTensor</a></div><div class="ttdeci">AclStatus AclCreateTensor(AclTensor *tensor, AclContext ctx, const AclTensorDescriptor *desc, bool allocate)</div><div class="ttdoc">Create a Tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00068">AclTensor.cpp:68</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4adeb6061e4e0914bff60a51e493f240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4adeb6061e4e0914bff60a51e493f240">&#9670;&nbsp;</a></span>get_descriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classacl_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> get_descriptor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the descriptor of this tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>The descriptor describing the characteristics of this tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00670">670</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00175">AclGetTensorDescriptor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <a class="code" href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a> desc;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>          st = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_utils_8h.xhtml#a508c3d453eee61abe6a9beaf36c3a208">AclGetTensorDescriptor</a>(_object.get(), &amp;desc));</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to get the descriptor of the tensor&quot;</span>);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keywordflow">return</span> TensorDescriptor(desc);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    }</div><div class="ttc" id="struct_acl_tensor_descriptor_xhtml"><div class="ttname"><a href="struct_acl_tensor_descriptor.xhtml">AclTensorDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_acl_types_8h_source.xhtml#l00191">AclTypes.h:191</a></div></div>
<div class="ttc" id="_acl_utils_8h_xhtml_a508c3d453eee61abe6a9beaf36c3a208"><div class="ttname"><a href="_acl_utils_8h.xhtml#a508c3d453eee61abe6a9beaf36c3a208">AclGetTensorDescriptor</a></div><div class="ttdeci">AclStatus AclGetTensorDescriptor(AclTensor tensor, AclTensorDescriptor *desc)</div><div class="ttdoc">Get the descriptor of this tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00175">AclTensor.cpp:175</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8a1f1bfaf3fca05c7743669cfbf80c9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a1f1bfaf3fca05c7743669cfbf80c9d">&#9670;&nbsp;</a></span>get_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t get_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the size of the tensor in byte. </p>
<dl class="section note"><dt>Note</dt><dd>The size isn't based on allocated memory, but based on information in its descriptor (dimensions, data type, etc.).</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The size of the tensor in byte </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00659">659</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00158">AclGetTensorSize()</a>.</p>
<div class="fragment"><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    {</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        uint64_t   size{ 0 };</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_utils_8h.xhtml#a3765ad55daa863d5ae9b5aa3b69b29e7">AclGetTensorSize</a>(_object.get(), &amp;size));</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to get the size of the tensor&quot;</span>);</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">return</span> size;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    }</div><div class="ttc" id="_acl_utils_8h_xhtml_a3765ad55daa863d5ae9b5aa3b69b29e7"><div class="ttname"><a href="_acl_utils_8h.xhtml#a3765ad55daa863d5ae9b5aa3b69b29e7">AclGetTensorSize</a></div><div class="ttdeci">AclStatus AclGetTensorSize(AclTensor tensor, uint64_t *size)</div><div class="ttdoc">__cplusplus </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00158">AclTensor.cpp:158</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a38198174a275be845cdb10bb4e6aca88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38198174a275be845cdb10bb4e6aca88">&#9670;&nbsp;</a></span>import()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> import </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceacl.xhtml#afedf28d42d92fc1609c264c3c8e3f7f1">ImportType</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Import external memory to a given tensor object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>External memory handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Type of memory to be imported</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00647">647</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00130">AclTensorImport()</a>, and <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>.</p>
<div class="fragment"><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    {</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_entrypoints_8h.xhtml#a3296c2f66ee36d849ae4d51fdd1d0521">AclTensorImport</a>(_object.get(), handle, detail::as_cenum&lt;AclImportMemoryType&gt;(<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>)));</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to import external memory to tensor!&quot;</span>);</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    }</div><div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="_acl_entrypoints_8h_xhtml_a3296c2f66ee36d849ae4d51fdd1d0521"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#a3296c2f66ee36d849ae4d51fdd1d0521">AclTensorImport</a></div><div class="ttdeci">AclStatus AclTensorImport(AclTensor tensor, void *handle, AclImportMemoryType type)</div><div class="ttdoc">Import external memory to a given tensor object. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00130">AclTensor.cpp:130</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad4dae3db20740c9ffda9e83e73e373ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4dae3db20740c9ffda9e83e73e373ff">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* map </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Maps the backing memory of a given tensor that can be used by the host to access any contents. </p>
<dl class="section return"><dt>Returns</dt><dd>A valid non-zero pointer in case of success else nullptr </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00621">621</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00097">AclMapTensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    {</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <span class="keywordtype">void</span>      *handle = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st     = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_entrypoints_8h.xhtml#a94b41b78fd18d9dbff5325f7636c8974">AclMapTensor</a>(_object.get(), &amp;handle));</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to map the tensor and extract the tensor&#39;s backing memory!&quot;</span>);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        <span class="keywordflow">return</span> handle;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    }</div><div class="ttc" id="_acl_entrypoints_8h_xhtml_a94b41b78fd18d9dbff5325f7636c8974"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#a94b41b78fd18d9dbff5325f7636c8974">AclMapTensor</a></div><div class="ttdeci">AclStatus AclMapTensor(AclTensor tensor, void **handle)</div><div class="ttdoc">Map a tensor&amp;#39;s backing memory to the host. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00097">AclTensor.cpp:97</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac1c87d216f8f74cc18176fe86b303ca4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1c87d216f8f74cc18176fe86b303ca4">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceacl.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> unmap </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unmaps tensor's memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>Handle to unmap</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Status code </dd></dl>

<p class="definition">Definition at line <a class="el" href="_acl_8hpp_source.xhtml#l00634">634</a> of file <a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_acl_tensor_8cpp_source.xhtml#l00116">AclUnmapTensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    {</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = detail::as_enum&lt;StatusCode&gt;(<a class="code" href="_acl_entrypoints_8h.xhtml#a22a4f3406d18376e3d8740c72e3b2a35">AclUnmapTensor</a>(_object.get(), handle));</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        report_status(st, <span class="stringliteral">&quot;[Compute Library] Failed to unmap the tensor!&quot;</span>);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div><div class="ttc" id="_acl_entrypoints_8h_xhtml_a22a4f3406d18376e3d8740c72e3b2a35"><div class="ttname"><a href="_acl_entrypoints_8h.xhtml#a22a4f3406d18376e3d8740c72e3b2a35">AclUnmapTensor</a></div><div class="ttdeci">AclStatus AclUnmapTensor(AclTensor tensor, void *handle)</div><div class="ttdoc">Unmap the tensor&amp;#39;s backing memory. </div><div class="ttdef"><b>Definition:</b> <a href="_acl_tensor_8cpp_source.xhtml#l00116">AclTensor.cpp:116</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/<a class="el" href="_acl_8hpp_source.xhtml">Acl.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceacl.xhtml">acl</a></li><li class="navelem"><a class="el" href="classacl_1_1_tensor.xhtml">Tensor</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:44 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
