<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/experimental/OperatorGraph.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_operator_graph_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OperatorGraph.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_operator_graph_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPH</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPH</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_info_8h.xhtml">arm_compute/core/ITensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/** Graph of operators to execute within a Workload. This is a pure descriptive construct.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> final</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">Implementation</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfae5a56fd8931efd58c6da23e2b2668">OperatorGraph</a>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#a46f3ddad7376b1b67eeea8f1bc734dda">~OperatorGraph</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">Implementation</a>       *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">impl</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">Implementation</a> *<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">impl</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::unique_ptr&lt;Implementation&gt; _impl;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;};</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/** Return the validity of @p op_graph, usually after performing an operation (e.g. add_tensor) on it</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * @param[in,out] op_graph OperatorGraph to be validated</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> * @return Status</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">/** Operator Tensor Handle</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * This can be either an argument tensor, or an intermediate tensor linking 2 @ref Operator s</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">   68</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> final</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">   71</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> = int;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> <span class="keywordtype">id</span> = {});<span class="comment"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /** Id of the OpTensor</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @return Id</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> id() <span class="keyword">const</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> _id{};</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;};</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">/** Provide order of @ref OpTensor by checking if @p t0 is &quot;lower than&quot; @p t1</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"> * @param[in] t0 OpTensor</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"> * @param[in] t1 OpTensor</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> * @return true   if @p t0 is lower than @p t1</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> * @return false  otherwise</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab8924eaffc5f48d813b7665ef7ffd214">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t1);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">/** Associate a TensorInfo with a newly created @ref OpTensor in the @p graph.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"> * @note @p info needs to remain in scope and valid until the workload has finished building</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"> * @note Can pass in an empty TensorInfo for a destination Tensor, in which case @p info will be inferred from the source tensors</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"> * @param[in,out] graph OperatorGraph where the tensor is added</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"> * @param[in]     info  TensorInfo to be associated</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"> * @return OpTensor</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">add_tensor</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">/** Operator Handle</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"> * This can be used to further modify an existing operator</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">  107</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> final</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">  110</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> = int;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> <span class="keywordtype">id</span> = {});<span class="comment"></span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /** Id of the Operator</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @return Id</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> id() <span class="keyword">const</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">Id</a> _id{};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">/** Provide order of @ref Operator by checking if @p op0 is &quot;lower than&quot; @p op1</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"> * @param[in] op0 Operator</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"> * @param[in] op1 Operator</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"> * @return true   if @p op0 is lower than @p op1</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"> * @return false  otherwise</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab8924eaffc5f48d813b7665ef7ffd214">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> &amp;op0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> &amp;op1);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">/** Padding information for 2D operations like Conv2dDescriptor</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">  133</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a4e5f55b5ca6d0185a7b23b447c696d08">  136</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a4e5f55b5ca6d0185a7b23b447c696d08">Padding2D</a>(<span class="keywordtype">size_t</span> left, <span class="keywordtype">size_t</span> right, <span class="keywordtype">size_t</span> top, <span class="keywordtype">size_t</span> bottom)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        : left(left), right(right), top(top), bottom(bottom)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">  140</a></span>&#160;    <span class="keywordtype">size_t</span> left   = { 0 }; <span class="comment">/**&lt;  Padding across the width dimension on the left, in elements. */</span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">  141</a></span>&#160;    <span class="keywordtype">size_t</span> right  = { 0 }; <span class="comment">/**&lt;  Padding across the width dimension on the right, in elements. */</span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">  142</a></span>&#160;    <span class="keywordtype">size_t</span> top    = { 0 }; <span class="comment">/**&lt;  Padding across the height dimension on the top, in elements. */</span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">  143</a></span>&#160;    <span class="keywordtype">size_t</span> bottom = { 0 }; <span class="comment">/**&lt;  Padding across the height dimension on the bottom, in elements. */</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;};</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">/** Descriptor for Conv2dDescriptor operation</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">  148</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">  151</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a> pad{};</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">  152</a></span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>    stride{ 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> };</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a5159123bf7ffd6ecb44e7322a9b0492e">  153</a></span>&#160;    <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>    dilation{ 1U, 1U };</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;};<span class="comment"></span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">/** Add op Conv2d to @p graph</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> * @param[in,out] graph   OperatorGraph where the operator is added to</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"> * @param[in]     desc    Operator descriptor</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"> * @param[in]     input   Input OpTensor</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"> * @param[in]     weights Weights OpTensor</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment"> * @param[in]     bias    (Optional) bias OpTensor</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"> * @param[in]     dst     Destination OpTensor</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> * @return Operator</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a859ce0f92e55dabcfe0ce42b4d0be85e">add_op_conv2d</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;desc, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> weights, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a859ce0f92e55dabcfe0ce42b4d0be85e">add_op_conv2d</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;desc, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> input, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> weights, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> dst);<span class="comment"></span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">/** (Only for Debuging and Testing) Force a conv2d method</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> * @param[in,out] graph  OperatorGraph where conv2d op is located</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> * @param[in]     conv2d Conv2d Op</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> * @param[in]     method Forced ConvolutionMethod</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0500494c1c88e005019c1046023207b9">force_conv2d_method</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> conv2d, <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> method);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">/** Descriptor for Elementwise binary operation</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">  182</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">  187</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">ArithmeticOperation</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">op</a>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;};<span class="comment"></span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">/** Add op Elementwise to @p graph, and optionally describes fusion through passing of intermediate @ref OpTensor s</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> * @param[in,out] graph OperatorGraph where the operator is added to</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> * @param[in]     desc  Operator descriptor</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> * @param[in]     lhs   Lhs OpTensor</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> * @param[in]     rhs   Rhs OpTensor</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"> * @param[in]     dst   Destination OpTensor</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"> * @return Operator</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">add_op_elementwise_op</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;desc, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> lhs, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> rhs, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> dst);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">/** Descriptor for Floor operation</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">  205</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">/* TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters start */</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">/* Non-TOSA compliant attribute parameters end */</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;};<span class="comment"></span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">/** Add op Floor to @p graph, and optionally describes fusion through passing of intermediate @ref OpTensor s</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"> * @param[in,out] graph OperatorGraph where the operator is added to</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"> * @param[in]     desc  Operator descriptor</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"> * @param[in]     src   Source OpTensor</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"> * @param[in]     dst   Destination OpTensor</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"> * @return Operator</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">Operator</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a3f7c5a493aa563a630eaec1042f95071">add_op_floor</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;desc, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> dst);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t0, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">OpTensor</a> &amp;t1);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a> &amp;pad0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">Padding2D</a> &amp;pad1);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;conv2d0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">Conv2dDescriptor</a> &amp;conv2d1);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">ElementwiseDescriptor</a> &amp;);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">FloorDescriptor</a> &amp;);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_OPERATORGRAPH</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml">arm_compute::experimental::dynamic_fusion::OpTensor</a></div><div class="ttdoc">Operator Tensor Handle This can be either an argument tensor, or an intermediate tensor linking 2 Ope...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00068">OperatorGraph.h:68</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a23d9f0c01c9e120dfb828ee922b7a8ae"><div class="ttname"><a href="namespacearm__compute.xhtml#a23d9f0c01c9e120dfb828ee922b7a8ae">arm_compute::ArithmeticOperation</a></div><div class="ttdeci">ArithmeticOperation</div><div class="ttdoc">Available element-wise operations. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00489">Types.h:489</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6ddaa43fa5e752d3a4804654ef17890b"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6ddaa43fa5e752d3a4804654ef17890b">arm_compute::experimental::dynamic_fusion::add_op_elementwise_op</a></div><div class="ttdeci">Operator add_op_elementwise_op(OperatorGraph &amp;graph, const ElementwiseDescriptor &amp;desc, OpTensor lhs, OpTensor rhs, OpTensor dst)</div><div class="ttdoc">Add op Elementwise to graph, and optionally describes fusion through passing of intermediate OpTensor...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00201">OperatorGraph.cpp:201</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph</a></div><div class="ttdoc">Graph of operators to execute within a Workload. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00042">OperatorGraph.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00134">Types.h:134</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0500494c1c88e005019c1046023207b9"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0500494c1c88e005019c1046023207b9">arm_compute::experimental::dynamic_fusion::force_conv2d_method</a></div><div class="ttdeci">void force_conv2d_method(OperatorGraph &amp;graph, Operator conv2d, ConvolutionMethod method)</div><div class="ttdoc">(Only for Debuging and Testing) Force a conv2d method </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00195">OperatorGraph.cpp:195</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_floor_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::FloorDescriptor</a></div><div class="ttdoc">Descriptor for Floor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00205">OperatorGraph.h:205</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_1_1_implementation.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph::Implementation</a></div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8h_source.xhtml#l00208">OperatorGraphImpl.h:208</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml_a46f3ddad7376b1b67eeea8f1bc734dda"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#a46f3ddad7376b1b67eeea8f1bc734dda">arm_compute::experimental::dynamic_fusion::OperatorGraph::~OperatorGraph</a></div><div class="ttdeci">~OperatorGraph()</div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="_i_tensor_info_8h_xhtml"><div class="ttname"><a href="_i_tensor_info_8h.xhtml">ITensorInfo.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor_xhtml_aebc5dc6e56fe725378002f1454d09978"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_op_tensor.xhtml#aebc5dc6e56fe725378002f1454d09978">arm_compute::experimental::dynamic_fusion::OpTensor::Id</a></div><div class="ttdeci">int Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00071">OperatorGraph.h:71</a></div></div>
<div class="ttc" id="_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor</a></div><div class="ttdoc">Descriptor for Elementwise binary operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00182">OperatorGraph.h:182</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor</a></div><div class="ttdoc">Descriptor for Conv2dDescriptor operation. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00148">OperatorGraph.h:148</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a3f7c5a493aa563a630eaec1042f95071"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a3f7c5a493aa563a630eaec1042f95071">arm_compute::experimental::dynamic_fusion::add_op_floor</a></div><div class="ttdeci">Operator add_op_floor(OperatorGraph &amp;graph, const FloorDescriptor &amp;desc, OpTensor src, OpTensor dst)</div><div class="ttdoc">Add op Floor to graph, and optionally describes fusion through passing of intermediate OpTensor s...</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00233">OperatorGraph.cpp:233</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml_abfae5a56fd8931efd58c6da23e2b2668"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfae5a56fd8931efd58c6da23e2b2668">arm_compute::experimental::dynamic_fusion::OperatorGraph::OperatorGraph</a></div><div class="ttdeci">OperatorGraph()</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00104">OperatorGraph.cpp:104</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a8aad35ee7c2bfa06456fade719732d21"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8aad35ee7c2bfa06456fade719732d21">arm_compute::experimental::dynamic_fusion::add_tensor</a></div><div class="ttdeci">OpTensor add_tensor(OperatorGraph &amp;graph, ITensorInfo &amp;info)</div><div class="ttdoc">Associate a TensorInfo with a newly created OpTensor in the graph. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00126">OperatorGraph.cpp:126</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml">arm_compute::experimental::dynamic_fusion::Operator</a></div><div class="ttdoc">Operator Handle This can be used to further modify an existing operator. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00107">OperatorGraph.h:107</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab8924eaffc5f48d813b7665ef7ffd214"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab8924eaffc5f48d813b7665ef7ffd214">arm_compute::experimental::dynamic_fusion::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const OpTensor &amp;t0, const OpTensor &amp;t1)</div><div class="ttdoc">Provide order of OpTensor by checking if t0 is &quot;lower than&quot; t1. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00084">OperatorGraph.cpp:84</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml">arm_compute::experimental::dynamic_fusion::Padding2D</a></div><div class="ttdoc">Padding information for 2D operations like Conv2dDescriptor. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00133">OperatorGraph.h:133</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_a4e5f55b5ca6d0185a7b23b447c696d08"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a4e5f55b5ca6d0185a7b23b447c696d08">arm_compute::experimental::dynamic_fusion::Padding2D::Padding2D</a></div><div class="ttdeci">Padding2D(size_t left, size_t right, size_t top, size_t bottom)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00136">OperatorGraph.h:136</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml_abfc12bb496964f0d83301d79db02f510"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml#abfc12bb496964f0d83301d79db02f510">arm_compute::experimental::dynamic_fusion::OperatorGraph::impl</a></div><div class="ttdeci">Implementation * impl()</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00111">OperatorGraph.cpp:111</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_af08b2231cd81fad5422b1d7240d26806"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">arm_compute::experimental::dynamic_fusion::operator==</a></div><div class="ttdeci">bool operator==(const OpTensor &amp;t0, const OpTensor &amp;t1)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00103">OperatorGraphImpl.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor_xhtml_a93bb3b7307a60a60b1d2329d33386c0b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_descriptor.xhtml#a93bb3b7307a60a60b1d2329d33386c0b">arm_compute::experimental::dynamic_fusion::ElementwiseDescriptor::op</a></div><div class="ttdeci">ArithmeticOperation op</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00187">OperatorGraph.h:187</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a859ce0f92e55dabcfe0ce42b4d0be85e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a859ce0f92e55dabcfe0ce42b4d0be85e">arm_compute::experimental::dynamic_fusion::add_op_conv2d</a></div><div class="ttdeci">Operator add_op_conv2d(OperatorGraph &amp;graph, const Conv2dDescriptor &amp;desc, OpTensor input, OpTensor weights, OpTensor bias, OpTensor dst)</div><div class="ttdoc">Add op Conv2d to graph. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00134">OperatorGraph.cpp:134</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_xhtml_aebc5dc6e56fe725378002f1454d09978"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator.xhtml#aebc5dc6e56fe725378002f1454d09978">arm_compute::experimental::dynamic_fusion::Operator::Id</a></div><div class="ttdeci">int Id</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00110">OperatorGraph.h:110</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_a0d10d1f11f896cb40f799a595f5f383.xhtml">experimental</a></li><li class="navelem"><a class="el" href="_operator_graph_8h.xhtml">OperatorGraph.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
