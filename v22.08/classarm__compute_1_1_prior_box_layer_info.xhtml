<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PriorBoxLayerInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_prior_box_layer_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">PriorBoxLayerInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>PriorBox layer info.  
 <a href="classarm__compute_1_1_prior_box_layer_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a02b66d0a0d561b44c99b1db8b740d1dd">PriorBoxLayerInfo</a> ()</td></tr>
<tr class="memdesc:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a02b66d0a0d561b44c99b1db8b740d1dd">More...</a><br /></td></tr>
<tr class="separator:a02b66d0a0d561b44c99b1db8b740d1dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9752ea0a44b131caa9384231944a2b8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a9752ea0a44b131caa9384231944a2b8d">PriorBoxLayerInfo</a> (const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a>, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a>, float <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a>, bool <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>=true, bool <a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a>=false, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a>={}, const std::vector&lt; float &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>={}, const <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a>=<a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>{ 0, 0 }, const std::array&lt; float, 2 &gt; &amp;<a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a>={ { 0.f, 0.f } })</td></tr>
<tr class="memdesc:a9752ea0a44b131caa9384231944a2b8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a9752ea0a44b131caa9384231944a2b8d">More...</a><br /></td></tr>
<tr class="separator:a9752ea0a44b131caa9384231944a2b8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a147b1e13f347e7b995de58f8fafd6723"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a> () const</td></tr>
<tr class="memdesc:a147b1e13f347e7b995de58f8fafd6723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get min sizes.  <a href="#a147b1e13f347e7b995de58f8fafd6723">More...</a><br /></td></tr>
<tr class="separator:a147b1e13f347e7b995de58f8fafd6723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd15b7132dbacc847969f91c72633e7d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a> () const</td></tr>
<tr class="memdesc:afd15b7132dbacc847969f91c72633e7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get min variances.  <a href="#afd15b7132dbacc847969f91c72633e7d">More...</a><br /></td></tr>
<tr class="separator:afd15b7132dbacc847969f91c72633e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="memItemLeft" align="right" valign="top">std::array&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a> () const</td></tr>
<tr class="memdesc:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the step coordinates.  <a href="#a6b45b0e0f8dd18aae641aebaf5055e4d">More...</a><br /></td></tr>
<tr class="separator:a6b45b0e0f8dd18aae641aebaf5055e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fda69c38090070865d117fe94cf0c88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a3fda69c38090070865d117fe94cf0c88">img_size</a> () const</td></tr>
<tr class="memdesc:a3fda69c38090070865d117fe94cf0c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the image size coordinates.  <a href="#a3fda69c38090070865d117fe94cf0c88">More...</a><br /></td></tr>
<tr class="separator:a3fda69c38090070865d117fe94cf0c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a> () const</td></tr>
<tr class="memdesc:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the offset.  <a href="#a8420f76d876fd4e61e653dfb6b56b5f5">More...</a><br /></td></tr>
<tr class="separator:a8420f76d876fd4e61e653dfb6b56b5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4333016b04c798f769404aad7683ec3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a> () const</td></tr>
<tr class="memdesc:a4333016b04c798f769404aad7683ec3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the flip value.  <a href="#a4333016b04c798f769404aad7683ec3d">More...</a><br /></td></tr>
<tr class="separator:a4333016b04c798f769404aad7683ec3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a636f1561bb52de88a5ef9671f28c12"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a> () const</td></tr>
<tr class="memdesc:a7a636f1561bb52de88a5ef9671f28c12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the clip value.  <a href="#a7a636f1561bb52de88a5ef9671f28c12">More...</a><br /></td></tr>
<tr class="separator:a7a636f1561bb52de88a5ef9671f28c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a> () const</td></tr>
<tr class="memdesc:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get max sizes.  <a href="#a985940fefc02bdbc0ea1c916bb0ac82b">More...</a><br /></td></tr>
<tr class="separator:a985940fefc02bdbc0ea1c916bb0ac82b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a> () const</td></tr>
<tr class="memdesc:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get aspect ratios.  <a href="#a6a8ad2364ce45d0cb7c6938544711f7c">More...</a><br /></td></tr>
<tr class="separator:a6a8ad2364ce45d0cb7c6938544711f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>PriorBox layer info. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00811">811</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a02b66d0a0d561b44c99b1db8b740d1dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02b66d0a0d561b44c99b1db8b740d1dd">&#9670;&nbsp;</a></span>PriorBoxLayerInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00815">815</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        : _min_sizes(),</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;          _variances(),</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;          _offset(),</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;          _flip(<span class="keyword">true</span>),</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;          _clip(<span class="keyword">false</span>),</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;          _max_sizes(),</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;          _aspect_ratios(),</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;          _img_size(),</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;          _steps()</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    {</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a9752ea0a44b131caa9384231944a2b8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9752ea0a44b131caa9384231944a2b8d">&#9670;&nbsp;</a></span>PriorBoxLayerInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>min_sizes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>variances</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flip</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clip</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>max_sizes</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>aspect_ratios</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> &amp;&#160;</td>
          <td class="paramname"><em>img_size</em> = <code><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a>{&#160;0,&#160;0&#160;}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::array&lt; float, 2 &gt; &amp;&#160;</td>
          <td class="paramname"><em>steps</em> = <code>{&#160;{&#160;0.f,&#160;0.f&#160;}&#160;}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">min_sizes</td><td>Min sizes vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">variances</td><td>Variances vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Offset value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flip</td><td>(Optional) Flip the aspect ratios. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">clip</td><td>(Optional) Clip coordinates so that they're within [0,1]. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">max_sizes</td><td>(Optional) Max sizes vector. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">aspect_ratios</td><td>(Optional) Aspect ratios of the boxes. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">img_size</td><td>(Optional) <a class="el" href="struct_image.xhtml" title="Structure to hold Image information. ">Image</a> size. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">steps</td><td>(Optional) Step values. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00839">839</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                                                          {}, <span class="keyword">const</span> std::vector&lt;float&gt; &amp;<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a> = {},</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keyword">const</span> <a class="code" href="struct_coordinates2_d.xhtml">Coordinates2D</a> &amp;img_size = <a class="code" href="struct_coordinates2_d.xhtml">Coordinates2D</a>{ 0, 0 }, <span class="keyword">const</span> std::array&lt;float, 2&gt; &amp;<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a> = { { 0.f, 0.f } })</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        : _min_sizes(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">min_sizes</a>),</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;          _variances(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">variances</a>),</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;          _offset(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">offset</a>),</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;          _flip(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>),</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;          _clip(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">clip</a>),</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;          _max_sizes(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">max_sizes</a>),</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;          _aspect_ratios(),</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;          _img_size(img_size),</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;          _steps(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">steps</a>)</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    {</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        _aspect_ratios.push_back(1.);</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>.size(); ++i)</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        {</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            <span class="keywordtype">float</span> ar            = <a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">aspect_ratios</a>[i];</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;            <span class="keywordtype">bool</span>  already_exist = <span class="keyword">false</span>;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> ar_new : _aspect_ratios)</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            {</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                <span class="keywordflow">if</span>(fabs(ar - ar_new) &lt; 1e-6)</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                {</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                    already_exist = <span class="keyword">true</span>;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                }</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;            }</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;            <span class="keywordflow">if</span>(!already_exist)</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;            {</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                _aspect_ratios.push_back(ar);</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">flip</a>)</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                {</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                    _aspect_ratios.push_back(1.f / ar);</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                }</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;            }</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;        }</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    }</div><div class="ttc" id="struct_coordinates2_d_xhtml"><div class="ttname"><a href="struct_coordinates2_d.xhtml">Coordinates2D</a></div><div class="ttdoc">2D Coordinates structure </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_types_8h_source.xhtml#l00028">types.h:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a6a8ad2364ce45d0cb7c6938544711f7c"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6a8ad2364ce45d0cb7c6938544711f7c">arm_compute::PriorBoxLayerInfo::aspect_ratios</a></div><div class="ttdeci">std::vector&lt; float &gt; aspect_ratios() const</div><div class="ttdoc">Get aspect ratios. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00916">Types.h:916</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a6b45b0e0f8dd18aae641aebaf5055e4d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a6b45b0e0f8dd18aae641aebaf5055e4d">arm_compute::PriorBoxLayerInfo::steps</a></div><div class="ttdeci">std::array&lt; float, 2 &gt; steps() const</div><div class="ttdoc">Get the step coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00886">Types.h:886</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a8420f76d876fd4e61e653dfb6b56b5f5"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a8420f76d876fd4e61e653dfb6b56b5f5">arm_compute::PriorBoxLayerInfo::offset</a></div><div class="ttdeci">float offset() const</div><div class="ttdoc">Get the offset. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00896">Types.h:896</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a985940fefc02bdbc0ea1c916bb0ac82b"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a985940fefc02bdbc0ea1c916bb0ac82b">arm_compute::PriorBoxLayerInfo::max_sizes</a></div><div class="ttdeci">std::vector&lt; float &gt; max_sizes() const</div><div class="ttdoc">Get max sizes. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00911">Types.h:911</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a4333016b04c798f769404aad7683ec3d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a4333016b04c798f769404aad7683ec3d">arm_compute::PriorBoxLayerInfo::flip</a></div><div class="ttdeci">bool flip() const</div><div class="ttdoc">Get the flip value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00901">Types.h:901</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_afd15b7132dbacc847969f91c72633e7d"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#afd15b7132dbacc847969f91c72633e7d">arm_compute::PriorBoxLayerInfo::variances</a></div><div class="ttdeci">std::vector&lt; float &gt; variances() const</div><div class="ttdoc">Get min variances. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00881">Types.h:881</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a7a636f1561bb52de88a5ef9671f28c12"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a7a636f1561bb52de88a5ef9671f28c12">arm_compute::PriorBoxLayerInfo::clip</a></div><div class="ttdeci">bool clip() const</div><div class="ttdoc">Get the clip value. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00906">Types.h:906</a></div></div>
<div class="ttc" id="classarm__compute_1_1_prior_box_layer_info_xhtml_a147b1e13f347e7b995de58f8fafd6723"><div class="ttname"><a href="classarm__compute_1_1_prior_box_layer_info.xhtml#a147b1e13f347e7b995de58f8fafd6723">arm_compute::PriorBoxLayerInfo::min_sizes</a></div><div class="ttdeci">std::vector&lt; float &gt; min_sizes() const</div><div class="ttdoc">Get min sizes. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00876">Types.h:876</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6a8ad2364ce45d0cb7c6938544711f7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a8ad2364ce45d0cb7c6938544711f7c">&#9670;&nbsp;</a></span>aspect_ratios()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; aspect_ratios </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get aspect ratios. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00916">916</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00047">PriorBoxLayerNode::compute_output_descriptor()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01185">arm_compute::misc::shape_calculator::compute_prior_box_shape()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_8cpp_source.xhtml#l00049">CLPriorBoxLayer::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00208">CLPriorBoxLayerKernel::run()</a>, and <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00197">CLPriorBoxLayerKernel::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    {</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        <span class="keywordflow">return</span> _aspect_ratios;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a7a636f1561bb52de88a5ef9671f28c12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a636f1561bb52de88a5ef9671f28c12">&#9670;&nbsp;</a></span>clip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool clip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the clip value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00906">906</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    {</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        <span class="keywordflow">return</span> _clip;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a4333016b04c798f769404aad7683ec3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4333016b04c798f769404aad7683ec3d">&#9670;&nbsp;</a></span>flip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool flip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the flip value. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00901">901</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;    {</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;        <span class="keywordflow">return</span> _flip;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a3fda69c38090070865d117fe94cf0c88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fda69c38090070865d117fe94cf0c88">&#9670;&nbsp;</a></span>img_size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_coordinates2_d.xhtml">Coordinates2D</a> img_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the image size coordinates. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00891">891</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    {</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;        <span class="keywordflow">return</span> _img_size;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a985940fefc02bdbc0ea1c916bb0ac82b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a985940fefc02bdbc0ea1c916bb0ac82b">&#9670;&nbsp;</a></span>max_sizes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; max_sizes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get max sizes. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00911">911</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00047">PriorBoxLayerNode::compute_output_descriptor()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01185">arm_compute::misc::shape_calculator::compute_prior_box_shape()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_8cpp_source.xhtml#l00049">CLPriorBoxLayer::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00208">CLPriorBoxLayerKernel::run()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>, and <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00197">CLPriorBoxLayerKernel::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    {</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keywordflow">return</span> _max_sizes;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a147b1e13f347e7b995de58f8fafd6723"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a147b1e13f347e7b995de58f8fafd6723">&#9670;&nbsp;</a></span>min_sizes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; min_sizes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get min sizes. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00876">876</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00047">PriorBoxLayerNode::compute_output_descriptor()</a>, <a class="el" href="_shape_calculator_8h_source.xhtml#l01185">arm_compute::misc::shape_calculator::compute_prior_box_shape()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_8cpp_source.xhtml#l00049">CLPriorBoxLayer::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00208">CLPriorBoxLayerKernel::run()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>, and <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00197">CLPriorBoxLayerKernel::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    {</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="keywordflow">return</span> _min_sizes;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a8420f76d876fd4e61e653dfb6b56b5f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8420f76d876fd4e61e653dfb6b56b5f5">&#9670;&nbsp;</a></span>offset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float offset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the offset. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00896">896</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    {</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        <span class="keywordflow">return</span> _offset;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a6b45b0e0f8dd18aae641aebaf5055e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b45b0e0f8dd18aae641aebaf5055e4d">&#9670;&nbsp;</a></span>steps()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt;float, 2&gt; steps </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the step coordinates. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00886">886</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    {</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <span class="keywordflow">return</span> _steps;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="afd15b7132dbacc847969f91c72633e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd15b7132dbacc847969f91c72633e7d">&#9670;&nbsp;</a></span>variances()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; variances </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get min variances. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00881">881</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02580">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="reference_2_prior_box_layer_8cpp_source.xhtml#l00039">arm_compute::test::validation::reference::prior_box_layer()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02218">arm_compute::to_string()</a>.</p>
<div class="fragment"><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    {</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <span class="keywordflow">return</span> _variances;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_prior_box_layer_info.xhtml">PriorBoxLayerInfo</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:48 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
