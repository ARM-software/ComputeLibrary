var namespacearm__compute_1_1opencl =
[
    [ "kernels", "namespacearm__compute_1_1opencl_1_1kernels.xhtml", "namespacearm__compute_1_1opencl_1_1kernels" ],
    [ "ClAbs", "classarm__compute_1_1opencl_1_1_cl_abs.xhtml", "classarm__compute_1_1opencl_1_1_cl_abs" ],
    [ "ClActivation", "classarm__compute_1_1opencl_1_1_cl_activation.xhtml", "classarm__compute_1_1opencl_1_1_cl_activation" ],
    [ "ClAdd", "classarm__compute_1_1opencl_1_1_cl_add.xhtml", "classarm__compute_1_1opencl_1_1_cl_add" ],
    [ "CLAuxTensorHandler", "classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml", "classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler" ],
    [ "ClCast", "classarm__compute_1_1opencl_1_1_cl_cast.xhtml", "classarm__compute_1_1opencl_1_1_cl_cast" ],
    [ "ClComplexMul", "classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml", "classarm__compute_1_1opencl_1_1_cl_complex_mul" ],
    [ "ClConcatenate", "classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml", "classarm__compute_1_1opencl_1_1_cl_concatenate" ],
    [ "ClConv2d", "classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml", "classarm__compute_1_1opencl_1_1_cl_conv2d" ],
    [ "ClConvertFullyConnectedWeights", "classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml", "classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights" ],
    [ "ClCopy", "classarm__compute_1_1opencl_1_1_cl_copy.xhtml", "classarm__compute_1_1opencl_1_1_cl_copy" ],
    [ "ClCrop", "classarm__compute_1_1opencl_1_1_cl_crop.xhtml", "classarm__compute_1_1opencl_1_1_cl_crop" ],
    [ "ClDequantize", "classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml", "classarm__compute_1_1opencl_1_1_cl_dequantize" ],
    [ "ClDirectConv2d", "classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml", "classarm__compute_1_1opencl_1_1_cl_direct_conv2d" ],
    [ "ClDirectConv3d", "classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml", "classarm__compute_1_1opencl_1_1_cl_direct_conv3d" ],
    [ "ClElementwiseDivision", "classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml", "classarm__compute_1_1opencl_1_1_cl_elementwise_division" ],
    [ "ClElementwiseMax", "classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml", "classarm__compute_1_1opencl_1_1_cl_elementwise_max" ],
    [ "ClElementwiseMin", "classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml", "classarm__compute_1_1opencl_1_1_cl_elementwise_min" ],
    [ "ClElementwisePower", "classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml", "classarm__compute_1_1opencl_1_1_cl_elementwise_power" ],
    [ "ClElementwiseSquaredDiff", "classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml", "classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff" ],
    [ "ClExp", "classarm__compute_1_1opencl_1_1_cl_exp.xhtml", "classarm__compute_1_1opencl_1_1_cl_exp" ],
    [ "ClFill", "classarm__compute_1_1opencl_1_1_cl_fill.xhtml", "classarm__compute_1_1opencl_1_1_cl_fill" ],
    [ "ClFlatten", "classarm__compute_1_1opencl_1_1_cl_flatten.xhtml", "classarm__compute_1_1opencl_1_1_cl_flatten" ],
    [ "ClFloor", "classarm__compute_1_1opencl_1_1_cl_floor.xhtml", "classarm__compute_1_1opencl_1_1_cl_floor" ],
    [ "ClFullyConnected", "classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml", "classarm__compute_1_1opencl_1_1_cl_fully_connected" ],
    [ "ClGemm", "classarm__compute_1_1opencl_1_1_cl_gemm.xhtml", "classarm__compute_1_1opencl_1_1_cl_gemm" ],
    [ "ClGemmConv2d", "classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml", "classarm__compute_1_1opencl_1_1_cl_gemm_conv2d" ],
    [ "ClGemmLowpMatrixMultiplyCore", "classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml", "classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core" ],
    [ "ClGemmLowpOutputStage", "classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml", "classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage" ],
    [ "ClKernelLibrary", "classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml", "classarm__compute_1_1opencl_1_1_cl_kernel_library" ],
    [ "ClLog", "classarm__compute_1_1opencl_1_1_cl_log.xhtml", "classarm__compute_1_1opencl_1_1_cl_log" ],
    [ "ClLogicalNot", "classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml", "classarm__compute_1_1opencl_1_1_cl_logical_not" ],
    [ "ClMul", "classarm__compute_1_1opencl_1_1_cl_mul.xhtml", "classarm__compute_1_1opencl_1_1_cl_mul" ],
    [ "ClNeg", "classarm__compute_1_1opencl_1_1_cl_neg.xhtml", "classarm__compute_1_1opencl_1_1_cl_neg" ],
    [ "ClPermute", "classarm__compute_1_1opencl_1_1_cl_permute.xhtml", "classarm__compute_1_1opencl_1_1_cl_permute" ],
    [ "ClPool2d", "classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml", "classarm__compute_1_1opencl_1_1_cl_pool2d" ],
    [ "ClPool3d", "classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml", "classarm__compute_1_1opencl_1_1_cl_pool3d" ],
    [ "ClPRelu", "classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml", "classarm__compute_1_1opencl_1_1_cl_p_relu" ],
    [ "ClQuantize", "classarm__compute_1_1opencl_1_1_cl_quantize.xhtml", "classarm__compute_1_1opencl_1_1_cl_quantize" ],
    [ "ClReshape", "classarm__compute_1_1opencl_1_1_cl_reshape.xhtml", "classarm__compute_1_1opencl_1_1_cl_reshape" ],
    [ "ClRound", "classarm__compute_1_1opencl_1_1_cl_round.xhtml", "classarm__compute_1_1opencl_1_1_cl_round" ],
    [ "ClRsqrt", "classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml", "classarm__compute_1_1opencl_1_1_cl_rsqrt" ],
    [ "ClScale", "classarm__compute_1_1opencl_1_1_cl_scale.xhtml", "classarm__compute_1_1opencl_1_1_cl_scale" ],
    [ "ClSin", "classarm__compute_1_1opencl_1_1_cl_sin.xhtml", "classarm__compute_1_1opencl_1_1_cl_sin" ],
    [ "ClSoftmax", "classarm__compute_1_1opencl_1_1_cl_softmax.xhtml", "classarm__compute_1_1opencl_1_1_cl_softmax" ],
    [ "ClSub", "classarm__compute_1_1opencl_1_1_cl_sub.xhtml", "classarm__compute_1_1opencl_1_1_cl_sub" ],
    [ "ClTranspose", "classarm__compute_1_1opencl_1_1_cl_transpose.xhtml", "classarm__compute_1_1opencl_1_1_cl_transpose" ],
    [ "ClWinogradConv2d", "classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml", "classarm__compute_1_1opencl_1_1_cl_winograd_conv2d" ]
];