<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClFusedKernelGraph Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">ClFusedKernelGraph Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClFusedKernelGraph:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph__coll__graph.svg" width="308" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afa5a1a59ec40b6fac78fa4fc6458e281"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a></td></tr>
<tr class="separator:afa5a1a59ec40b6fac78fa4fc6458e281"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a831a69d9f9da710cecb943fd1a84ffcc"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a> = std::map&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>, <a class="el" href="classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml">utils::memory::deep_unique_ptr</a>&lt; <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &gt; &gt;</td></tr>
<tr class="separator:a831a69d9f9da710cecb943fd1a84ffcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a45ac4bcb4885844ad6731758896b1ec0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a45ac4bcb4885844ad6731758896b1ec0">ClFusedKernelGraph</a> ()=default</td></tr>
<tr class="separator:a45ac4bcb4885844ad6731758896b1ec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4a93107f857375e217d20980600738d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ad4a93107f857375e217d20980600738d">~ClFusedKernelGraph</a> ()=default</td></tr>
<tr class="separator:ad4a93107f857375e217d20980600738d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27fe22ae4e4fd73cd4ca8d6846e36c4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a27fe22ae4e4fd73cd4ca8d6846e36c4a">ClFusedKernelGraph</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph)=default</td></tr>
<tr class="separator:a27fe22ae4e4fd73cd4ca8d6846e36c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a088a60c52f7dbb969f0a302873d91f3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a088a60c52f7dbb969f0a302873d91f3d">operator=</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph)=default</td></tr>
<tr class="separator:a088a60c52f7dbb969f0a302873d91f3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab63d9a8ef362ee6b2fb35acb6b5f6101"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ab63d9a8ef362ee6b2fb35acb6b5f6101">ClFusedKernelGraph</a> (<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;graph)=default</td></tr>
<tr class="separator:ab63d9a8ef362ee6b2fb35acb6b5f6101"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a429d366136799cc6b773adecda4b5cd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a429d366136799cc6b773adecda4b5cd3">operator=</a> (<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;graph)=default</td></tr>
<tr class="separator:a429d366136799cc6b773adecda4b5cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b77375e4ce41878f4c7b2f0e673c9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ae2b77375e4ce41878f4c7b2f0e673c9e">add_fusion_group</a> (const std::vector&lt; const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *&gt; &amp;fused_kernels)</td></tr>
<tr class="separator:ae2b77375e4ce41878f4c7b2f0e673c9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae0d512be0c240e4d78cc99b376e616"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#abae0d512be0c240e4d78cc99b376e616">fuse</a> (<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg0, <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg1)</td></tr>
<tr class="separator:abae0d512be0c240e4d78cc99b376e616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acce6bcb3e2ad9680f458d8eac4e2fb0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#acce6bcb3e2ad9680f458d8eac4e2fb0e">can_fuse</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg0, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg1) const</td></tr>
<tr class="separator:acce6bcb3e2ad9680f458d8eac4e2fb0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a1c4b6c76accd8db4b0d6492bfccd75f7"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a> {}</td></tr>
<tr class="separator:a1c4b6c76accd8db4b0d6492bfccd75f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089f9f50806d05f259dc08a4c3ed6219"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a> {}</td></tr>
<tr class="separator:a089f9f50806d05f259dc08a4c3ed6219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a068917c263ae8c7babff14f929ffe6e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">fusion_groups</a> {}</td></tr>
<tr class="separator:a068917c263ae8c7babff14f929ffe6e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5a6fe0d3f177e19aee60dc6eb2087649"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a5a6fe0d3f177e19aee60dc6eb2087649">operator==</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph0, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph1)</td></tr>
<tr class="separator:a5a6fe0d3f177e19aee60dc6eb2087649"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00134">134</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="afa5a1a59ec40b6fac78fa4fc6458e281"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa5a1a59ec40b6fac78fa4fc6458e281">&#9670;&nbsp;</a></span>Id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00137">137</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

</div>
</div>
<a id="a831a69d9f9da710cecb943fd1a84ffcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a831a69d9f9da710cecb943fd1a84ffcc">&#9670;&nbsp;</a></span>KernelFusionGroupMap</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a> =  std::map&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>, <a class="el" href="classarm__compute_1_1utils_1_1memory_1_1deep__unique__ptr.xhtml">utils::memory::deep_unique_ptr</a>&lt;<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a>&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00139">139</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a45ac4bcb4885844ad6731758896b1ec0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45ac4bcb4885844ad6731758896b1ec0">&#9670;&nbsp;</a></span>ClFusedKernelGraph() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad4a93107f857375e217d20980600738d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4a93107f857375e217d20980600738d">&#9670;&nbsp;</a></span>~ClFusedKernelGraph()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a27fe22ae4e4fd73cd4ca8d6846e36c4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27fe22ae4e4fd73cd4ca8d6846e36c4a">&#9670;&nbsp;</a></span>ClFusedKernelGraph() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab63d9a8ef362ee6b2fb35acb6b5f6101"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab63d9a8ef362ee6b2fb35acb6b5f6101">&#9670;&nbsp;</a></span>ClFusedKernelGraph() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae2b77375e4ce41878f4c7b2f0e673c9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2b77375e4ce41878f4c7b2f0e673c9e">&#9670;&nbsp;</a></span>add_fusion_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> add_fusion_group </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>fused_kernels</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00156">156</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">References <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">arm_compute::mlgo::parser::end()</a>, and <a class="el" href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">arm_compute::test::validation::k</a>.</p>
<div class="fragment"><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keyword">auto</span> fg = utils::memory::make_deep_unique&lt;ClKernelFusionGroup, ClKernelFusionGroup&gt;();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> : fused_kernels)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            fg-&gt;add_fused_kernel(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      src_tensors = fg-&gt;get_src_tensors();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      dst_tensors = fg-&gt;get_dst_tensors();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        std::vector&lt;Id&gt; inputs{};</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        std::transform(std::begin(src_tensors), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(src_tensors), std::back_inserter(inputs), [<span class="keyword">this</span>](<span class="keyword">auto</span> kernel)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(kernel-&gt;id);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        });</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        std::vector&lt;Id&gt; outputs{};</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        std::transform(std::begin(dst_tensors), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(dst_tensors), std::back_inserter(outputs), [<span class="keyword">this</span>](<span class="keyword">auto</span> kernel)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(kernel-&gt;id);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        });</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">add_operator</a>(inputs, outputs);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        fg-&gt;set_id(<span class="keywordtype">id</span>.second);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">fusion_groups</a>[<span class="keywordtype">id</span>.second] = std::move(fg);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">id</span>.second;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a21d46af8bdb7e587be804b405b63ac3d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_tensor</a></div><div class="ttdeci">Id add_tensor(Id merge_tensor=empty_id())</div><div class="ttdoc">Add a new tensor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00061">DependencyGraph.cpp:61</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a068917c263ae8c7babff14f929ffe6e0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fusion_groups</a></div><div class="ttdeci">KernelFusionGroupMap fusion_groups</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00404">ClFusedKernelGraph.h:404</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a5922b6c22c15729162e749f06f7f518c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_operator</a></div><div class="ttdeci">std::pair&lt; Status, DependencyGraph::Id &gt; add_operator(const std::vector&lt; Id &gt; &amp;inputs, const std::vector&lt; Id &gt; &amp;outputs)</div><div class="ttdoc">Add a new operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00103">DependencyGraph.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a089f9f50806d05f259dc08a4c3ed6219"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fg_dependency</a></div><div class="ttdeci">DependencyGraph fg_dependency</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00403">ClFusedKernelGraph.h:403</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acce6bcb3e2ad9680f458d8eac4e2fb0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acce6bcb3e2ad9680f458d8eac4e2fb0e">&#9670;&nbsp;</a></span>can_fuse()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> can_fuse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>fg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>fg1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>ASSUMPTION0: All tensors have 0 or 1 incoming kernel ASSUMPTION1: All kernels have exactly 1 dst tensor (Temporary, can be lifted once we start supporting multi-dst kernels) Note that this does not apply to fusion groups ASSUMPTION2: Simple kernels' tile infos can be overriden (share with) that of the root kernel's ASSUMPTION3: Extension of ASSUMPTION0: All tensors have 0 or 1 incoming fusion group INV0: All Fusion groups have a single root INV1: All Fusion groups have no cycles or loops within themselves &lt;- guaranteed by the underlying <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> having no cycles or loops; enforced by <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml" title="The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...">DependencyGraph</a> INV2: The <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml" title="A const view of a subgraph of the ClKernelGraph to be fused together. ">ClKernelFusionGroup</a> itself has no cycles or loops &lt;- enforced by <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml" title="The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...">DependencyGraph</a> INV3: All non-roots are Simple kernels INV4: All non roots' dst tensors have the same shape as that of the root kernel INV5: All kernels within a fusion group have the same <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml" title="Describes when a Unit Workload is run. ">UnitWorkloadStage</a> </p>

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00319">319</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00047">arm_compute::detail::have_different_dimensions()</a>, <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00126">ClKernelFusionGroup::id</a>, <a class="el" href="_dependency_graph_8h_source.xhtml#l00041">arm_compute::experimental::dynamic_fusion::is_in()</a>, <a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::RUNTIME_ERROR</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::Simple</a>, and <a class="el" href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor::t</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00096">arm_compute::experimental::dynamic_fusion::fuse()</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">        /// ASSUMPTION0: All tensors have 0 or 1 incoming kernel</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">        /// ASSUMPTION1: All kernels have exactly 1 dst tensor (Temporary, can be lifted once we start supporting multi-dst kernels)</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">        ///              Note that this does not apply to fusion groups</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">        /// ASSUMPTION2: Simple kernels&#39; tile infos can be overriden (share with) that of the root kernel&#39;s</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">        /// ASSUMPTION3: Extension of ASSUMPTION0: All tensors have 0 or 1 incoming fusion group</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">        /// INV0: All Fusion groups have a single root</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">        /// INV1: All Fusion groups have no cycles or loops within themselves &lt;- guaranteed by the underlying ClKernelGraph having no cycles or loops; enforced by DependencyGraph</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">        /// INV2: The ClKernelFusionGroup itself has no cycles or loops &lt;- enforced by DependencyGraph</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">        /// INV3: All non-roots are Simple kernels</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">        /// INV4: All non roots&#39; dst tensors have the same shape as that of the root kernel</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">        /// INV5: All kernels within a fusion group have the same UnitWorkloadStage</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"></span>        <span class="keyword">const</span> ClKernelFusionGroup *fg_src {};</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keyword">const</span> ClKernelFusionGroup *fg_dst{};</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="comment">// Check 0: Ensure fg0 and fg1 are &quot;directly connected&quot;: one of them is a direct parent of the other</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="comment">// This guarantess INV0</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="comment">// This also finds fg_src (parent / root) and fg_dst (child / non-root)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg1.id, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">dst_ops</a>(fg0.id)))</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            fg_src = &amp;fg0;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            fg_dst = &amp;fg1;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg0.id, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">dst_ops</a>(fg1.id)))</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            fg_src = &amp;fg1;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            fg_dst = &amp;fg0;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        {</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: Not directly connected fusion groups cannot be fused together&quot;</span> };</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="comment">// Find unconnected tensors between fg_src and fg_dst</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        std::vector&lt;Id&gt; unconnected_tensors{};</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>(fg_src-&gt;id))</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">src_tensors</a>(fg_dst-&gt;id)))</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                unconnected_tensors.push_back(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            }</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="comment">// Check 1: Any unconnected tensor cannot be an ancestor of fg_dst</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="comment">// This guarantees INV2: That is, the fused graph does not have any cycles or loops between different fusion groups</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : unconnected_tensors)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a04191e499f77cf9ac929a74cee6fe5c4">path_exists_from_tensor_to_op</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, fg_dst-&gt;id))</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: the fusion would result in cycles or loops&quot;</span> };</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        }</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="comment">// Check 2: All non-root fgs are simple. Ensure INV3</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">if</span>(fg_dst-&gt;get_root_kernel()-&gt;complexity() != <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Complexity::Simple</a>)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: only root kernel can be a complex kernel&quot;</span> };</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="comment">// Check 3: All non roots&#39; dst tensors have the same shape as that of the root kernel. Ensure INV4</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> root_kernel_dst_tensors = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>(fg_src-&gt;id);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(root_kernel_dst_tensors.size() != 1); <span class="comment">// (ASSUMPTION 1: All kernels have exactly 1 dst tensor)</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> root_kernel_dst_tensor_info = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a>-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(root_kernel_dst_tensors[0])-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">desc</a>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>(fg_dst-&gt;id))</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> t_info = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a>-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>)-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">desc</a>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(root_kernel_dst_tensor_info-&gt;tensor_shape(), t_info-&gt;tensor_shape(), 0))</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: all non roots&#39; dst tensors should have the same shape as that of the root kernel&quot;</span> };</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        }</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="comment">// Check 4: All kernels within a fg have the same UnitWorkloadStage. Ensure INV5</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">if</span>(!(fg_src-&gt;get_root_kernel()-&gt;config().stage == fg_dst-&gt;get_root_kernel()-&gt;config().stage))</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: all kernels within a fusion group should have the same UnitWorkloadStage&quot;</span> };</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        }</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a1c4b6c76accd8db4b0d6492bfccd75f7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::original_graph</a></div><div class="ttdeci">const ClKernelGraph * original_graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00402">ClFusedKernelGraph.h:402</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::ComponentType::Simple</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml_aaf16d8c575940cda81e904c1285b11c6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">arm_compute::experimental::dynamic_fusion::ClKernelTensor::desc</a></div><div class="ttdeci">ITensorInfo * desc</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00080">ClKernelGraph.h:80</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a911f45bf464369c75141cb4b8e34643f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">arm_compute::experimental::dynamic_fusion::DependencyGraph::src_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; src_tensors(Id op) const</div><div class="ttdoc">Get source tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00175">DependencyGraph.cpp:175</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab05719fb0811c6eb8a452864575501e2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">arm_compute::experimental::dynamic_fusion::is_in</a></div><div class="ttdeci">bool is_in(const T &amp;v, const std::vector&lt; T &gt; &amp;vec)</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00041">DependencyGraph.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_af8a6f5f77bc64f863bbd2ff194ba9696"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_ops</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_ops(Id op) const</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00369">DependencyGraph.cpp:369</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00047">Validate.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a09a3e533a331d82635595317d822247e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_tensors(Id op) const</div><div class="ttdoc">Get destination tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00181">DependencyGraph.cpp:181</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a04191e499f77cf9ac929a74cee6fe5c4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a04191e499f77cf9ac929a74cee6fe5c4">arm_compute::experimental::dynamic_fusion::DependencyGraph::path_exists_from_tensor_to_op</a></div><div class="ttdeci">bool path_exists_from_tensor_to_op(Id src_tensor, Id dst_op) const</div><div class="ttdoc">Check if there&amp;#39;s a path from src_tensor to dst_op. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00228">DependencyGraph.cpp:228</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a26ce1702be726c11355b21545e75e207"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_tensor</a></div><div class="ttdeci">ClKernelTensor * get_tensor(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00237">ClKernelGraph.h:237</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a089f9f50806d05f259dc08a4c3ed6219"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fg_dependency</a></div><div class="ttdeci">DependencyGraph fg_dependency</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00403">ClFusedKernelGraph.h:403</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abae0d512be0c240e4d78cc99b376e616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abae0d512be0c240e4d78cc99b376e616">&#9670;&nbsp;</a></span>fuse()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> fuse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>fg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>fg1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>PRE: Already checked by can_fuse, and thus all the INVs and ASSUMPTIONS still hold </p>

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00181">181</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">References <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00126">ClKernelFusionGroup::id</a>, <a class="el" href="_dependency_graph_8h_source.xhtml#l00041">arm_compute::experimental::dynamic_fusion::is_in()</a>, <a class="el" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::RUNTIME_ERROR</a>, <a class="el" href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor::t</a>, <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">arm_compute::experimental::dynamic_fusion::traverse()</a>, and <a class="el" href="_saturate_cast_8h_source.xhtml#l00057">arm_compute::utils::cast::U</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00096">arm_compute::experimental::dynamic_fusion::fuse()</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">        /// PRE: Already checked by can_fuse, and thus all the INVs and ASSUMPTIONS still hold</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"></span>        ClKernelFusionGroup *fg_src{};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        ClKernelFusionGroup *fg_dst{};</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">// Find fg_src (parent / root) and fg_dst (child / non-root)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg1.id, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">dst_ops</a>(fg0.id)))</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            fg_src = &amp;fg0;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            fg_dst = &amp;fg1;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg0.id, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">dst_ops</a>(fg1.id)))</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            fg_src = &amp;fg1;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            fg_dst = &amp;fg0;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">return</span> Status{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: Not directly connected fusion groups cannot be fused together&quot;</span> };</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">src_tensors</a>(fg_dst-&gt;id))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>(fg_src-&gt;id)))</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="comment">// Link any incoming tensors of fg_dst, that ARE NOT in between fg_src and fg_dst, to fg_src</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="comment">// Before:</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="comment">// fg_src</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="comment">// |</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="comment">// ..          t1</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="comment">// |           |</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="comment">// -&gt; fg_dst &lt;-</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <span class="comment">//</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="comment">// After:</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="comment">// fg_src &lt;---t1</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="comment">//</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> st = link_src_tensors(fg_src-&gt;id, { t });</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> dst_fgs = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a02db2fef0720798c881f6a929b765369">dst_ops_from_tensor</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">if</span>(dst_fgs.size() == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &amp;&amp; dst_fgs.at(0) == fg_dst-&gt;id)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    <span class="comment">// Remove any incoming tensors of fg_dst, that ARE in between fg_src and fg_dst</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="comment">// AND that are not connected to any other outgoing fgs (Note that they cannot connect to any other incoming fgs as all tensors can have at most 1 incoming fg (ASSUMPTION 3))</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    <span class="comment">// Before:</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    <span class="comment">// -&gt; fg_dst</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    <span class="comment">// After:</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> st = remove_fg_tensor(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                    {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                    }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    <span class="comment">// If the tensors ARE in between fg_src and fg_dst</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <span class="comment">// BUT have any other outgoing fgs than fg_dst, then we leave it as a dst tensor to the fused fg_src</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    <span class="comment">// Before:</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="comment">// |-----------</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    <span class="comment">// |          |</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="comment">// -&gt; fg_dst  -&gt; fg_other</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    <span class="comment">// After:</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="comment">// -&gt; fg_other</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="comment">// Note that this may seem like a case we shouldn&#39;t fuse. But actually all it means is that t0 is an</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    <span class="comment">// intermediate tensor between the fused fg_src and fg_dst, but only that we also STORE it to memory</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    <span class="comment">// so that any unfused fg&#39;s (fg_other in this case) can read it.</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    <span class="comment">// So all this means that we not only can STORE the tensors at the &quot;end&quot; of a fusion group,</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="comment">// but also any other tensors that are not source tensors. And all tensors that are STORED (exported),</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="comment">// can be termed &quot;dst tensors&quot; to a fusion group</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    void();</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            }</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">fg_dependency</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>(fg_dst-&gt;id))</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="comment">// Link any outgoing tensors of fg_dst to fg_src</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">// Before:</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="comment">// fg_src</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="comment">// ..</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="comment">// -&gt; fg_dst</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="comment">//    |</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="comment">//    |--------</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="comment">//    |       |</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="comment">//    |-&gt; t0  |-&gt; t1</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="comment">//</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="comment">// After:</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="comment">// fg_src</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="comment">// |--------</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="comment">// |       |</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="comment">// |-&gt; t0  |-&gt; t1</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">//</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> st = link_dst_tensors(fg_src-&gt;id, { t });</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="comment">// Merge fg_dst&#39;s graph into fg_src&#39;s graph</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> kernel : <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(*fg_dst))</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            fg_src-&gt;add_fused_kernel(kernel);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = remove_fg(fg_dst-&gt;id);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0e5a222683b4e850a681a8b7f593f9c3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">arm_compute::experimental::dynamic_fusion::traverse</a></div><div class="ttdeci">std::vector&lt; const ClKernel * &gt; traverse(const ClKernelFusionGroup &amp;group)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">ClFusedKernelGraph.cpp:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a911f45bf464369c75141cb4b8e34643f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">arm_compute::experimental::dynamic_fusion::DependencyGraph::src_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; src_tensors(Id op) const</div><div class="ttdoc">Get source tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00175">DependencyGraph.cpp:175</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab05719fb0811c6eb8a452864575501e2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">arm_compute::experimental::dynamic_fusion::is_in</a></div><div class="ttdeci">bool is_in(const T &amp;v, const std::vector&lt; T &gt; &amp;vec)</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00041">DependencyGraph.h:41</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_af8a6f5f77bc64f863bbd2ff194ba9696"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af8a6f5f77bc64f863bbd2ff194ba9696">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_ops</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_ops(Id op) const</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00369">DependencyGraph.cpp:369</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a09a3e533a331d82635595317d822247e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_tensors(Id op) const</div><div class="ttdoc">Get destination tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00181">DependencyGraph.cpp:181</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a02db2fef0720798c881f6a929b765369"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a02db2fef0720798c881f6a929b765369">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_ops_from_tensor</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_ops_from_tensor(Id tensor) const</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00213">DependencyGraph.cpp:213</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a089f9f50806d05f259dc08a4c3ed6219"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fg_dependency</a></div><div class="ttdeci">DependencyGraph fg_dependency</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00403">ClFusedKernelGraph.h:403</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a088a60c52f7dbb969f0a302873d91f3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a088a60c52f7dbb969f0a302873d91f3d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a429d366136799cc6b773adecda4b5cd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a429d366136799cc6b773adecda4b5cd3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a5a6fe0d3f177e19aee60dc6eb2087649"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a6fe0d3f177e19aee60dc6eb2087649">&#9670;&nbsp;</a></span>operator==</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>NOTE: fg_dependency may change based on the order of fusion, and thus is omitted in the comparison. The fusion groups can already guarantee the equivalence of fusion In the future we may want to enforce a stronger equivalence by implementing topological comparison between <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> s </p>

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00148">148</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">        /// NOTE: fg_dependency may change based on the order of fusion, and thus is omitted in the comparison.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">        ///       The fusion groups can already guarantee the equivalence of fusion</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">        ///       In the future we may want to enforce a stronger equivalence by implementing topological comparison between @ref DependencyGraph s</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span>        <span class="keywordflow">return</span> graph0.original_graph == graph1.original_graph &amp;&amp; graph0.fusion_groups == graph1.fusion_groups;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a089f9f50806d05f259dc08a4c3ed6219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a089f9f50806d05f259dc08a4c3ed6219">&#9670;&nbsp;</a></span>fg_dependency</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> fg_dependency {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00403">403</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">arm_compute::experimental::dynamic_fusion::generate()</a>, <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00132">arm_compute::experimental::dynamic_fusion::generate_store()</a>, and <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00061">arm_compute::experimental::dynamic_fusion::traverse()</a>.</p>

</div>
</div>
<a id="a068917c263ae8c7babff14f929ffe6e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a068917c263ae8c7babff14f929ffe6e0">&#9670;&nbsp;</a></span>fusion_groups</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a> fusion_groups {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00404">404</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00061">arm_compute::experimental::dynamic_fusion::traverse()</a>.</p>

</div>
</div>
<a id="a1c4b6c76accd8db4b0d6492bfccd75f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c4b6c76accd8db4b0d6492bfccd75f7">&#9670;&nbsp;</a></span>original_graph</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a>* original_graph {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00402">402</a> of file <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_workload_8cpp_source.xhtml#l00036">arm_compute::experimental::dynamic_fusion::build()</a>, <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">arm_compute::experimental::dynamic_fusion::generate()</a>, <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00132">arm_compute::experimental::dynamic_fusion::generate_store()</a>, and <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00083">arm_compute::experimental::dynamic_fusion::init_fusion_graph()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/core/experimental/dynamic_fusion/WorkloadImpl/<a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml">ClFusedKernelGraph.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
