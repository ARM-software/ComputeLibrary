<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/components/ClDirectConvolutionKernelComponent.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_direct_convolution_kernel_component_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClDirectConvolutionKernelComponent.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_direct_convolution_kernel_component_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_direct_convolution_kernel_component_8h.xhtml">src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/components/ClDirectConvolutionKernelComponent.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_i_c_l_kernel_8h.xhtml">src/core/CL/ICLKernel.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_auto_configuration_8h.xhtml">src/core/helpers/AutoConfiguration.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_gemm_helpers_8h.xhtml">src/gpu/cl/kernels/gemm/ClGemmHelpers.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">   41</a></span>&#160;<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">ComponentType</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">ClDirectConvolutionKernelComponent::get_component_type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">ComponentType::Complex</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">   46</a></span>&#160;std::set&lt;std::string&gt; <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">ClDirectConvolutionKernelComponent::get_headers_list</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> std::set&lt;std::string&gt; { <span class="stringliteral">&quot;helpers.h&quot;</span>, <span class="stringliteral">&quot;tile_helpers.h&quot;</span> };</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">   51</a></span>&#160;<a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">ClDirectConvolutionKernelComponent::get_window</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>    = _blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight_info = _blueprint-&gt;impl().get_kernel_argument_info(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">auto</span>       dst_info    = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// Get dst shape</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> pad_stride_info</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>()),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        static_cast&lt;unsigned int&gt;(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>()),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        static_cast&lt;unsigned int&gt;(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">left</a>),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">right</a>),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        static_cast&lt;unsigned int&gt;(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a>),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(_desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">bottom</a>),</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">DimensionRoundingType::FLOOR</a> <span class="comment">/*default rounding type*/</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    };</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>, *weight_info, pad_stride_info);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Output auto initialization if not yet initialized</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">auto_init_if_empty</a>(*dst_info, output_shape,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                       1,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>(),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                       <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">quantization_info</a>());</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vec_size = std::min(static_cast&lt;unsigned int&gt;(dst_info-&gt;tensor_shape()[0]), 4u);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_rows = (dst_info-&gt;tensor_shape()[0] &gt; 16) ? ((<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>) ? 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> : 4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>) : 1U;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// const unsigned int num_rows = 1;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// const unsigned int vec_size = tile_info.tile_dims.x();</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// const unsigned int num_rows = tile_info.tile_dims.y();</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// Create and configure kernel window</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(output_shape, <a class="code" href="classarm__compute_1_1_steps.xhtml">Steps</a>(vec_size, num_rows));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> dim_y_collapsed = <a class="code" href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">ceil_to_multiple</a>(output_shape[1] * output_shape[2], num_rows);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, dim_y_collapsed, num_rows));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, <a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml">Window::Dimension</a>(0, output_shape.total_size_upper(3), 1));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> win;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">   92</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">ClDirectConvolutionKernelComponent::get_additional_macros</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> R<span class="stringliteral">&quot;_()_&quot;; </span><span class="comment">// no macros</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">   97</a></span>&#160;std::string <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">ClDirectConvolutionKernelComponent::get_component_code</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>  = _blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> bias_info = _blueprint-&gt;impl().get_kernel_argument_info(_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>() != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>, <span class="stringliteral">&quot;Only NHWC data layout is supported by this component.&quot;</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> channel_idx   = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> k0            = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>()) ? 16u : 8u, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(channel_idx));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> leftover_loop = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(channel_idx) % k0) != 0;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::string code = R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">    //------------------ START KERNEL {{meta_kernel_id}} ---------------------</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    // IN_0(src)            {{src}}</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    // IN_1(wei)            {{weight}}</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">    )_&quot;;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(bias_info != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">    // IN_1(bia)            {{bias}}</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">    )_&quot;;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">    // OUT(dst, accum)      {{dst}}</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">    // Initialize the accumulators</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">    TILE({{ACC_DATA_TYPE}}, M0, N0, {{dst}});</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">    {</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">        // All the tensor dimensions are passed at compile time.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">        // In case of dynamic tensor support, the following dimensions should be passed as function argument.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    #define _IWEI_WIDTH {{WEI_WIDTH}}</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">    #define _IWEI_HEIGHT {{WEI_HEIGHT}}</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">    #define _ISRC_WIDTH {{src}}_w</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">    #define _ISRC_HEIGHT {{src}}_h</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">    #define _ISRC_CHANNELS {{src}}_c</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">    #define _IDST_WIDTH {{arg_dst}}_w</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral">    #define _IDST_HEIGHT {{arg_dst}}_h</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">    #define _IDST_CHANNELS {{arg_dst}}_c</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">    #define _IY_MULTIPLIER (_IWEI_WIDTH * _IWEI_HEIGHT)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">        // .v    = access the whole vector (OpenCL vector)</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        // .s[x] = access the vector element at position x (scalar access)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">        TILE(int, M0, 1, xi);</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">        TILE(int, M0, 1, yi);</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        // Convert the linear index to coordinate</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        LOOP_UNROLLING(int, i, 0, 1, M0,</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">        {</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">            xi[i].v = ((mout + i) % _IDST_WIDTH) * {{STRIDE_X}};</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">            yi[i].v = ((mout + i) / _IDST_WIDTH) * {{STRIDE_Y}};</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">            xi[i].v -= {{PAD_LEFT}};</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">            yi[i].v -= {{PAD_TOP}};</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">        })</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="stringliteral">        LOOP_UNROLLING(int, i, 0, 1, M0,</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="stringliteral">        {</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="stringliteral">            {{dst}}[i].v = 0;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="stringliteral">        })</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="stringliteral">        for(int i = 0; i &lt; (_IWEI_WIDTH * _IWEI_HEIGHT); ++i)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="stringliteral">        {</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="stringliteral">            int ck = 0;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="stringliteral">            int xk = i % _IWEI_WIDTH;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="stringliteral">            int yk = i / _IWEI_HEIGHT;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="stringliteral">            int k = 0;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="stringliteral">            for(; k &lt;= (_ISRC_CHANNELS - K0); k += K0)</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="stringliteral">            {</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="stringliteral">                TILE({{SRC_DATA_TYPE}}, M0, K0, a);</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="stringliteral">                TILE({{WEI_DATA_TYPE}}, N0, K0, b);</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="stringliteral">                LOOP_UNROLLING(int, i, 0, 1, M0,</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="stringliteral">                {</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="stringliteral">                    a[i].v = {{ZERO_VALUE}};</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="stringliteral">                })</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="stringliteral">                // Load tile from the src tensor</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">                T_LOAD_NHWC_INDIRECT({{SRC_DATA_TYPE}}, M0, K0, {{SRC_TENSOR_TYPE}}, {{src}}, bout, yk, xk, ck, _ISRC_WIDTH, _ISRC_HEIGHT, {{src}}_stride_y, xi, yi, a);</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral">                // Load tile from the weights tensor</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">                T_LOAD({{WEI_DATA_TYPE}}, N0, K0, {{WEI_TENSOR_TYPE}}, {{weight}}, ck, cout * _IY_MULTIPLIER + i, _IY_MULTIPLIER, {{weight}}_stride_y, b);</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">                // Compute the matrix multiplication between two tiles</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">                T_MMUL({{SRC_DATA_TYPE}}, {{WEI_DATA_TYPE}}, {{ACC_DATA_TYPE}}, M0, N0, K0, NT, T, a, b, {{dst}});</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral">                ck += K0;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">            }</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral">            // We voluntarily use SRC_CHANNELS rather than _DSRC_CHANNELS</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">            // This #if directive should be removed in case of dynamic tensor support</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">    )_&quot;;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(leftover_loop)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral">            // Left-over accumulations</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="stringliteral">            for(; k &lt; _ISRC_CHANNELS; ++k)</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="stringliteral">            {</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="stringliteral">                TILE({{SRC_DATA_TYPE}}, M0, 1, a);</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="stringliteral">                TILE({{WEI_DATA_TYPE}}, N0, 1, b);</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="stringliteral">                LOOP_UNROLLING(int, i, 0, 1, M0,</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="stringliteral">                {</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral">                    a[i].v = {{ZERO_VALUE}};</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="stringliteral">                })</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="stringliteral">                // Load tile from the src tensor</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="stringliteral">                T_LOAD_NHWC_INDIRECT({{SRC_DATA_TYPE}}, M0, 1, {{SRC_TENSOR_TYPE}}, {{src}}, bout, yk, xk, ck, _ISRC_WIDTH, _ISRC_HEIGHT, {{src}}_stride_y, xi, yi, a);</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="stringliteral">                // Load tile from the weights tensor</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="stringliteral">                // The T_LOAD for the left-over elements can only use BUFFER because we load one element per iteration</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="stringliteral">                T_LOAD({{WEI_DATA_TYPE}}, N0, 1, BUFFER, {{weight}}, ck, cout * _IY_MULTIPLIER + i, _IY_MULTIPLIER, {{weight}}_stride_y, b);</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="stringliteral">                // Compute the matrix multiplication between two tiles</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="stringliteral">                T_MMUL({{SRC_DATA_TYPE}}, {{WEI_DATA_TYPE}}, {{ACC_DATA_TYPE}}, M0, N0, 1, NT, T, a, b, {{dst}});</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="stringliteral">                ++ck;</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="stringliteral">            }</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="stringliteral">        )_&quot;;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="stringliteral">    #undef _I_WEI_WIDTH</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="stringliteral">    #undef _I_WEI_HEIGHT</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="stringliteral">    #undef _ISRC_WIDTH</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="stringliteral">    #undef _ISRC_HEIGHT</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="stringliteral">    #undef _ISRC_CHANNELS</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="stringliteral">    #undef _IDST_WIDTH</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">    #undef _IDST_HEIGHT</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="stringliteral">    #undef _IDST_CHANNELS</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="stringliteral">    #undef _IY_MULTIPLIER</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="stringliteral">        }</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="stringliteral">    )_&quot;;</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(bias_info != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        code += R<span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="stringliteral">            TILE({{BIA_DATA_TYPE}}, 1, N0, bias0);</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="stringliteral">            T_LOAD({{BIA_DATA_TYPE}}, 1, N0, BUFFER, {{bias}}, cout, 0, 1, 0, bias0);</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="stringliteral">            // c = c + bias[broadcasted]</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="stringliteral">            T_ELTWISE_BROADCAST_ADD_X({{ACC_DATA_TYPE}}, M0, N0, {{dst}}, bias0, {{dst}});</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="stringliteral">        )_&quot;;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="stringliteral">    code += R</span><span class="stringliteral">&quot;_(</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="stringliteral">//------------------ END KERNEL {{meta_kernel_id}} ---------------------</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="stringliteral">    )_&quot;;</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">return</span> code.c_str();</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac22ae0b39a8e2c53ed4fcbec12e49731">  251</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac22ae0b39a8e2c53ed4fcbec12e49731">export_to_cl_image_support</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor, <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu_target, <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a>)</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span>(tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()[0] % 4 || (data_layout != <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>))</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// If not floating point</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">is_data_type_float</a>(tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()))</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">if</span>(gpu_target == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">GPUTarget::G71</a> || <a class="code" href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">get_arch_from_target</a>(gpu_target) == <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    }</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment">// Check if the cl_khr_image2d_from_buffer extension is supported on the target platform</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute.xhtml#a777eb2ab77bdf5aea2d25c31b4acee2c">image2d_from_buffer_supported</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">get_device</a>()))</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="comment">// Check cl image pitch alignment</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a97428e76ac2940d45fc9772854b7fd8c">get_cl_image_pitch_alignment</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">get_device</a>()) == 0)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> image_w     = tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()[0] / 4;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> image_h     = tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()[1] * tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()[2] * tensor-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()[3];</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> max_image_w = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">get_device</a>().getInfo&lt;CL_DEVICE_IMAGE2D_MAX_WIDTH&gt;();</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> max_image_h = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">get_device</a>().getInfo&lt;CL_DEVICE_IMAGE2D_MAX_HEIGHT&gt;();</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordflow">if</span>(image_w &gt; max_image_w || image_h &gt; max_image_h)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    {</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">  294</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">ClDirectConvolutionKernelComponent::generate_build_options</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>    = _blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">auto</span>       weight_info = _blueprint-&gt;impl().get_kernel_argument_info(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dst_info    = _blueprint-&gt;impl().get_kernel_argument_info(_blueprint-&gt;impl().get_dst_id());</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="comment">// const auto tile_info  = _blueprint-&gt;impl().get_tile_info();</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channel_idx = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>     <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>();</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>    gpu_target  = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n0                 = _blueprint-&gt;impl().get_execution_window().x().step();</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m0                 = _blueprint-&gt;impl().get_execution_window().y().step();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k0                 = <a class="code" href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">adjust_vec_size</a>(<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(data_type) ? 16u : 8u, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">dimension</a>(channel_idx));</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partial_store_n0   = dst_info-&gt;dimension(0) % n0;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>         export_to_cl_image = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac22ae0b39a8e2c53ed4fcbec12e49731">export_to_cl_image_support</a>(weight_info, gpu_target, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>());</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="comment">// Update the padding for the weights tensor if we can export to cl_image</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span>(export_to_cl_image)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <a class="code" href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a>(weight_info);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> build_opts{};</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    build_opts.<a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">add_option</a>(<span class="stringliteral">&quot;-cl-fast-relaxed-math&quot;</span>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DIS_TILED&quot;</span>);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DN0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(n0));</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DM0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(m0));</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DK0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(k0));</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    build_opts.add_option(<span class="stringliteral">&quot;-DPARTIAL_N0=&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(partial_store_n0));</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordflow">return</span> build_opts;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;}</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">  328</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">ClDirectConvolutionKernelComponent::allocate_shared_vars</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable)<span class="keyword"> const</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>    = _blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight_info = _blueprint-&gt;impl().get_kernel_argument_info(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_src, _blueprint-&gt;impl().group(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>), <span class="stringliteral">&quot;src&quot;</span>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>             gpu_target         = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">target</a>();</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>                  export_to_cl_image = <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac22ae0b39a8e2c53ed4fcbec12e49731">export_to_cl_image_support</a>(weight_info, gpu_target, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>());</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">ClKernelTensorArgType</a> weight_type        = export_to_cl_image ? <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">ClKernelTensorArgType::Tensor_4D_t_Image</a> : <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_weight, _blueprint-&gt;impl().group(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, weight_type), <span class="stringliteral">&quot;weight&quot;</span>);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordflow">if</span>(!_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a5a2b7a58dc85678d08752945ff655362">is_empty</a>()) <span class="comment">// optional bias</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_bias, _blueprint-&gt;impl().group(_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110">ClKernelTensorArgType::Vector</a>), <span class="stringliteral">&quot;bias&quot;</span>);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">add</a>(_dst, _blueprint-&gt;impl().group(_dst.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>), <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>(_dst.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">ClKernelTensorArgType::Tensor_4D_t_Buffer</a>), <span class="stringliteral">&quot;dst&quot;</span>);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">  347</a></span>&#160;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">ClDirectConvolutionKernelComponent::TagLUT</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">ClDirectConvolutionKernelComponent::get_tag_lut</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">SharedVarTable</a> &amp;vtable)<span class="keyword"> const</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> lut{};</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>    = _blueprint-&gt;impl().get_kernel_argument_info(_src.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> weight_info = _blueprint-&gt;impl().get_kernel_argument_info(_weight.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> bias_info   = _blueprint-&gt;impl().get_kernel_argument_info(_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arg_id</a>);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    lut[<span class="stringliteral">&quot;src&quot;</span>]    = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_src);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    lut[<span class="stringliteral">&quot;weight&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_weight);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">if</span>(!_bias.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a5a2b7a58dc85678d08752945ff655362">is_empty</a>()) <span class="comment">// optional bias</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    {</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        lut[<span class="stringliteral">&quot;bias&quot;</span>]          = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_bias);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        lut[<span class="stringliteral">&quot;BIA_DATA_TYPE&quot;</span>] = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(bias_info-&gt;data_type());</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    lut[<span class="stringliteral">&quot;dst&quot;</span>] = vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_dst);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> dst_argument = _blueprint-&gt;impl().get_argument_shared_vars().get_dst_var();</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    lut[<span class="stringliteral">&quot;arg_dst&quot;</span>]          = dst_argument.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#ac047593b5705ef4a93109e4c7cf879f4">uniq_name</a>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// Local build options</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">id</a>();</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    lut[<span class="stringliteral">&quot;ACC_DATA_TYPE&quot;</span>]  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    lut[<span class="stringliteral">&quot;SRC_DATA_TYPE&quot;</span>]  = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>();</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    lut[<span class="stringliteral">&quot;WEI_DATA_TYPE&quot;</span>]  = weight_info-&gt;data_type();</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    lut[<span class="stringliteral">&quot;SRC_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">switch</span>(vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">get</a>(_weight).<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#ad45cdfea4355c25b90549fc54f9a57c3">desc</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">tensor_arg_type</a>)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7">ClKernelTensorArgType::Image_Export_To_ClImage2D</a>:</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0">ClKernelTensorArgType::Image_3D_Export_To_ClImage2D</a>:</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">ClKernelTensorArgType::Tensor_4D_t_Image</a>:</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;IMAGE&quot;</span>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            lut[<span class="stringliteral">&quot;WEI_TENSOR_TYPE&quot;</span>] = <span class="stringliteral">&quot;BUFFER&quot;</span>;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        }</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> width_idx  = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> height_idx = <a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>(), <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    lut[<span class="stringliteral">&quot;WEI_WIDTH&quot;</span>]      = weight_info-&gt;dimension(width_idx);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    lut[<span class="stringliteral">&quot;WEI_HEIGHT&quot;</span>]     = weight_info-&gt;dimension(height_idx);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_X&quot;</span>] = _desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">x</a>();</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    lut[<span class="stringliteral">&quot;STRIDE_Y&quot;</span>] = _desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">stride</a>.<a class="code" href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">y</a>();</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    lut[<span class="stringliteral">&quot;PAD_LEFT&quot;</span>] = _desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">left</a>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    lut[<span class="stringliteral">&quot;PAD_TOP&quot;</span>]  = _desc.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">conv2d</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">pad</a>.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">top</a>;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    lut[<span class="stringliteral">&quot;ZERO_VALUE&quot;</span>] = 0;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keywordflow">return</span> lut;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;}</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="namespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01030">Utils.h:1030</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a283deece00423ed5bd0c9486f305a6f4"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a283deece00423ed5bd0c9486f305a6f4">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_headers_list</a></div><div class="ttdeci">std::set&lt; std::string &gt; get_headers_list() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00046">ClDirectConvolutionKernelComponent.cpp:46</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml_a5a2b7a58dc85678d08752945ff655362"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a5a2b7a58dc85678d08752945ff655362">arm_compute::experimental::dynamic_fusion::SharedVarLink::is_empty</a></div><div class="ttdeci">bool is_empty() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00080">Common.h:80</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_a859088de403805f35d826df5ef39ee80"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a859088de403805f35d826df5ef39ee80">arm_compute::experimental::dynamic_fusion::Padding2D::bottom</a></div><div class="ttdeci">size_t bottom</div><div class="ttdoc">Padding across the height dimension on the bottom, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00143">OperatorGraph.h:143</a></div></div>
<div class="ttc" id="_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a777eb2ab77bdf5aea2d25c31b4acee2c"><div class="ttname"><a href="namespacearm__compute.xhtml#a777eb2ab77bdf5aea2d25c31b4acee2c">arm_compute::image2d_from_buffer_supported</a></div><div class="ttdeci">bool image2d_from_buffer_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether the cl_khr_image2d_from_buffer extension is supported. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00374">CLHelpers.cpp:374</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_acf5f12bbab64dd614bd8220c97fe484f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">arm_compute::test::validation::data_layout</a></div><div class="ttdeci">const auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00403">ConvolutionLayer.cpp:403</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a0d6affc039a39f5b58d6cbe8e54da94a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d6affc039a39f5b58d6cbe8e54da94a">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_tag_lut</a></div><div class="ttdeci">virtual TagLUT get_tag_lut(const SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Get the tag look-up table used to instantiate the component code. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00347">ClDirectConvolutionKernelComponent.cpp:347</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_3D_Export_To_ClImage2D</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_a8ea07c1841c26cf6f395ba4b3887bda0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a8ea07c1841c26cf6f395ba4b3887bda0">arm_compute::experimental::dynamic_fusion::SharedVarTable::get</a></div><div class="ttdeci">SharedVar get(const SharedVarLink &amp;var_link) const</div><div class="ttdoc">Get the SharedVar associated with var_link. </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00206">Common.h:206</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a0d19762e6a4b065fe0a480eb8477ac43"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a0d19762e6a4b065fe0a480eb8477ac43">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::generate_build_options</a></div><div class="ttdeci">CLBuildOptions generate_build_options() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00294">ClDirectConvolutionKernelComponent.cpp:294</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00107">CLScheduler.cpp:107</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ac22ae0b39a8e2c53ed4fcbec12e49731"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ac22ae0b39a8e2c53ed4fcbec12e49731">arm_compute::experimental::dynamic_fusion::export_to_cl_image_support</a></div><div class="ttdeci">bool export_to_cl_image_support(const ITensorInfo *tensor, GPUTarget gpu_target, DataLayout data_layout)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00251">ClDirectConvolutionKernelComponent.cpp:251</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a5f63b63606dbbbe54474e6e970a6738c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">arm_compute::TensorInfo::data_layout</a></div><div class="ttdeci">DataLayout data_layout() const override</div><div class="ttdoc">Get the data layout of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00291">TensorInfo.h:291</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D_t_Image</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a27561688e2fc60176608ef725a4ecb30"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a27561688e2fc60176608ef725a4ecb30">arm_compute::CLScheduler::target</a></div><div class="ttdeci">GPUTarget target() const</div><div class="ttdoc">Get the target GPU. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00049">CLScheduler.cpp:49</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe"><div class="ttname"><a href="namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849aa56c1e354d36beb85b0d881c5b2e24cbe">arm_compute::DimensionRoundingType::FLOOR</a></div><div class="ttdoc">Floor rounding. </div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string. </div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a8813441b655b97c00139c6a5a6390e97"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97">arm_compute::TensorInfo::dimension</a></div><div class="ttdeci">size_t dimension(size_t index) const override</div><div class="ttdoc">Return the size of the requested dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00205">TensorInfo.h:205</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a1e3d775fbfca319cecae8d377d335b8a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1e3d775fbfca319cecae8d377d335b8a">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_component_code</a></div><div class="ttdeci">std::string get_component_code() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00097">ClDirectConvolutionKernelComponent.cpp:97</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ac74736e3863207232a23b7181c1d0f44"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ac74736e3863207232a23b7181c1d0f44">arm_compute::TensorInfo::quantization_info</a></div><div class="ttdeci">QuantizationInfo quantization_info() const override</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00287">TensorInfo.h:287</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml_a06504ecad0ad3eab61f6a1f6ebb11b92"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#a06504ecad0ad3eab61f6a1f6ebb11b92">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::pad</a></div><div class="ttdeci">Padding2D pad</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00151">OperatorGraph.h:151</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a79515d904f73cf1711207de1b2aa6ac6">arm_compute::GPUTarget::G71</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdoc">height </div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a1d067dee0e43375aefdc128fb00d409d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a1d067dee0e43375aefdc128fb00d409d">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_component_type</a></div><div class="ttdeci">ComponentType get_component_type() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00041">ClDirectConvolutionKernelComponent.cpp:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_1_1_dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml">arm_compute::Window::Dimension</a></div><div class="ttdoc">Describe one of the image&amp;#39;s dimensions with a start, end and step. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00079">Window.h:79</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_a94b8468af876f5ab54020d5e9787a4f0"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#a94b8468af876f5ab54020d5e9787a4f0">arm_compute::Size2D::x</a></div><div class="ttdeci">size_t x() const</div><div class="ttdoc">Semantic accessor for width as x. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00075">Size2D.h:75</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_Export_To_ClImage2D</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a2355c2bf5d1950088937416baea24fe6"><div class="ttname"><a href="namespacearm__compute.xhtml#a2355c2bf5d1950088937416baea24fe6">arm_compute::get_arch_from_target</a></div><div class="ttdeci">GPUTarget get_arch_from_target(GPUTarget target)</div><div class="ttdoc">Helper function to get the GPU arch. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_g_p_u_target_8cpp_source.xhtml#l00240">GPUTarget.cpp:240</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm_xhtml_a3f923485898d40faa4df74a7b5916bac"><div class="ttname"><a href="namespacearm__compute_1_1opencl_1_1kernels_1_1gemm.xhtml#a3f923485898d40faa4df74a7b5916bac">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image</a></div><div class="ttdeci">void update_padding_for_cl_image(ITensorInfo *tensor)</div><div class="ttdoc">Update padding required to export the OpenCL buffer to OpenCL image2d. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_gemm_helpers_8cpp_source.xhtml#l00072">ClGemmHelpers.cpp:72</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType</a></div><div class="ttdeci">ClKernelTensorArgType</div><div class="ttdoc">Verbose and explicit way to enumerate all the tensor arguments variants used by all kernel implementa...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00046">ClWorkload.h:46</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor</a></div><div class="ttdoc">Describes all the info required to add a kernel argument at run time. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00070">ClWorkload.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor_xhtml_af5212d2d7b4918bf6251e1967182179f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_conv2d_descriptor.xhtml#af5212d2d7b4918bf6251e1967182179f">arm_compute::experimental::dynamic_fusion::Conv2dDescriptor::stride</a></div><div class="ttdeci">Size2D stride</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00152">OperatorGraph.h:152</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::TensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type used for each element of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00242">TensorInfo.h:242</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_build_options_xhtml_a3e2b80ff5463b7d2017de847f5c32a30"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml#a3e2b80ff5463b7d2017de847f5c32a30">arm_compute::CLBuildOptions::add_option</a></div><div class="ttdeci">void add_option(std::string option)</div><div class="ttdoc">Adds option to the existing build option list. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00041">CLCompileContext.cpp:41</a></div></div>
<div class="ttc" id="_cl_gemm_helpers_8h_xhtml"><div class="ttname"><a href="_cl_gemm_helpers_8h.xhtml">ClGemmHelpers.h</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_aa022cff9934a1a99bd77c49ca6a135a2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#aa022cff9934a1a99bd77c49ca6a135a2">arm_compute::experimental::dynamic_fusion::Padding2D::right</a></div><div class="ttdeci">size_t right</div><div class="ttdoc">Padding across the width dimension on the right, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00141">OperatorGraph.h:141</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_ae744fb5fb66aa1ce9db14ba93eab24e3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_window</a></div><div class="ttdeci">Window get_window() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00051">ClDirectConvolutionKernelComponent.cpp:51</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aaae4098f0f54b97f23d99be335c459ad"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">arm_compute::test::validation::output_shape</a></div><div class="ttdeci">const auto output_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00408">ConvolutionLayer.cpp:408</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml_a989f4d1d24ff43f92bf7f63fd5161ee5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor::tensor_arg_type</a></div><div class="ttdeci">ClKernelTensorArgType tensor_arg_type</div><div class="ttdoc">tensor argument type </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00083">ClWorkload.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="core_2_c_l_2_i_c_l_kernel_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_i_c_l_kernel_8h.xhtml">ICLKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab237a0a375cf382d52b61653248d3d4a"><div class="ttname"><a href="namespacearm__compute.xhtml#ab237a0a375cf382d52b61653248d3d4a">arm_compute::ceil_to_multiple</a></div><div class="ttdeci">auto ceil_to_multiple(S value, T divisor) -&gt; decltype(((value+divisor - 1)/divisor) *divisor)</div><div class="ttdoc">Computes the smallest number larger or equal to value that is a multiple of divisor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00071">Utils.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml">arm_compute::experimental::dynamic_fusion::SharedVarTable</a></div><div class="ttdoc">A table of all the variables used in the kernel / blueprint Because we limit the DependencyGraph in t...</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00092">Common.h:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_steps_xhtml"><div class="ttname"><a href="classarm__compute_1_1_steps.xhtml">arm_compute::Steps</a></div><div class="ttdoc">Class to describe a number of elements in each dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_steps_8h_source.xhtml#l00040">Steps.h:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00039">CLHelpers.cpp:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a37c28ce239ce7092298245ce59694917"><div class="ttname"><a href="namespacearm__compute.xhtml#a37c28ce239ce7092298245ce59694917">arm_compute::auto_init_if_empty</a></div><div class="ttdeci">bool auto_init_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape, int num_channels, DataType data_type, QuantizationInfo quantization_info=QuantizationInfo())</div><div class="ttdoc">Auto initialize the tensor info (shape, number of channels and data type) if the current assignment i...</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00042">AutoConfiguration.h:42</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::ComponentType::Complex</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00669">Types.h:669</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_a951236a0702535ba18ba51db69428658"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#a951236a0702535ba18ba51db69428658">arm_compute::experimental::dynamic_fusion::Padding2D::left</a></div><div class="ttdeci">size_t left</div><div class="ttdoc">Padding across the width dimension on the left, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00140">OperatorGraph.h:140</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var_xhtml_ad45cdfea4355c25b90549fc54f9a57c3"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#ad45cdfea4355c25b90549fc54f9a57c3">arm_compute::experimental::dynamic_fusion::SharedVarTable::SharedVar::desc</a></div><div class="ttdeci">ClKernelArgDescriptor desc</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00103">Common.h:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1_size2_d_xhtml_aaaeb4853150b7d0e8b685fd08052924f"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml#aaaeb4853150b7d0e8b685fd08052924f">arm_compute::Size2D::y</a></div><div class="ttdeci">size_t y() const</div><div class="ttdoc">Semantic accessor for height as y. </div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00084">Size2D.h:84</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Vector</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a15541ee1af263ccf663a5dc23de9fb89"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a></div><div class="ttdeci">TensorInfo src_info(src_shape, 1, data_type)</div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a97428e76ac2940d45fc9772854b7fd8c"><div class="ttname"><a href="namespacearm__compute.xhtml#a97428e76ac2940d45fc9772854b7fd8c">arm_compute::get_cl_image_pitch_alignment</a></div><div class="ttdeci">size_t get_cl_image_pitch_alignment(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the cl_image pitch alignment in pixels. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00379">CLHelpers.cpp:379</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a149b376735e266985c6a5c8c79efeace"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a149b376735e266985c6a5c8c79efeace">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::get_additional_macros</a></div><div class="ttdeci">std::string get_additional_macros() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00092">ClDirectConvolutionKernelComponent.cpp:92</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="_cl_direct_convolution_kernel_component_8h_xhtml"><div class="ttname"><a href="_cl_direct_convolution_kernel_component_8h.xhtml">ClDirectConvolutionKernelComponent.h</a></div></div>
<div class="ttc" id="_auto_configuration_8h_xhtml"><div class="ttname"><a href="_auto_configuration_8h.xhtml">AutoConfiguration.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor_xhtml_a36bf5c3e135d5f85f96afa28ffed5c5b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml#a36bf5c3e135d5f85f96afa28ffed5c5b">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernelDescriptor::conv2d</a></div><div class="ttdeci">Conv2dDescriptor conv2d</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00042">ClKernelDescriptors.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets. </div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00193">Helpers.inl:193</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link_xhtml_a647b7b591b8726421b7b5f45fbe6933a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_link.xhtml#a647b7b591b8726421b7b5f45fbe6933a">arm_compute::experimental::dynamic_fusion::SharedVarLink::arg_id</a></div><div class="ttdeci">ArgumentID arg_id</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00078">Common.h:78</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var_xhtml_ac047593b5705ef4a93109e4c7cf879f4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_shared_var.xhtml#ac047593b5705ef4a93109e4c7cf879f4">arm_compute::experimental::dynamic_fusion::SharedVarTable::SharedVar::uniq_name</a></div><div class="ttdeci">std::string uniq_name</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00102">Common.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_aaa0377e50e51d555dac6c6adda393c51"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#aaa0377e50e51d555dac6c6adda393c51">arm_compute::experimental::dynamic_fusion::SharedVarTable::add</a></div><div class="ttdeci">void add(SharedVarLink var_link, SharedVarGroup group, ClKernelArgDescriptor runtime_desc, const std::string &amp;name=&quot;unnamed&quot;)</div><div class="ttdoc">Create a SharedVar for a corresponding SharedVarLink (contains ArgumentID). </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00153">Common.h:153</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d_xhtml_ab9332a87d0af5aa12cac847eff68b7af"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_padding2_d.xhtml#ab9332a87d0af5aa12cac847eff68b7af">arm_compute::experimental::dynamic_fusion::Padding2D::top</a></div><div class="ttdeci">size_t top</div><div class="ttdoc">Padding across the height dimension on the top, in elements. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00142">OperatorGraph.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdoc">width </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a7be62dcb9603165af78bca6f2ca8ec15"><div class="ttname"><a href="namespacearm__compute.xhtml#a7be62dcb9603165af78bca6f2ca8ec15">arm_compute::adjust_vec_size</a></div><div class="ttdeci">unsigned int adjust_vec_size(unsigned int vec_size, size_t dim0)</div><div class="ttdoc">Returns the adjusted vector size in case it is less than the input&amp;#39;s first dimension, getting rounded down to its closest valid vector size. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01222">Utils.h:1222</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D_t_Buffer</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition] </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00113">Types.h:113</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component_xhtml_a73304dca4b472b11836efa13d53767f5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_convolution_kernel_component.xhtml#a73304dca4b472b11836efa13d53767f5">arm_compute::experimental::dynamic_fusion::ClDirectConvolutionKernelComponent::allocate_shared_vars</a></div><div class="ttdeci">virtual void allocate_shared_vars(SharedVarTable &amp;vtable) const override</div><div class="ttdoc">Allocate all shared variables used by the component in the vtable. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00328">ClDirectConvolutionKernelComponent.cpp:328</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_ac93cc76b563b366f030b8310a46046c3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">arm_compute::misc::shape_calculator::compute_deep_convolution_shape</a></div><div class="ttdeci">TensorShape compute_deep_convolution_shape(const TensorShape &amp;input_shape, DataLayout input_data_layout, const TensorShape &amp;weights_shape, const PadStrideInfo &amp;conv_info)</div><div class="ttdoc">Calculate the deep convolution shape output shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00713">ShapeCalculator.h:713</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::IClKernelComponent::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00292">Common.h:292</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_af5982a092e9eb743fce2d6392bdd8897"><div class="ttname"><a href="namespacearm__compute.xhtml#af5982a092e9eb743fce2d6392bdd8897">arm_compute::is_data_type_float</a></div><div class="ttdeci">bool is_data_type_float(DataType dt)</div><div class="ttdoc">Check if a given data type is of floating point type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l01010">Utils.h:1010</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0">arm_compute::experimental::dynamic_fusion::ComponentType</a></div><div class="ttdeci">ComponentType</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00247">Common.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_a483b1d20313a5ba08f297c610563bdf0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a483b1d20313a5ba08f297c610563bdf0">arm_compute::experimental::dynamic_fusion::IClKernelComponent::id</a></div><div class="ttdeci">ComponentID id() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00346">Common.h:346</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a1b3919fb1e9372257947abe01e74e3d4"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">arm_compute::CLKernelLibrary::get_device</a></div><div class="ttdeci">const cl::Device &amp; get_device()</div><div class="ttdoc">Gets the CL device for which the programs are created. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00069">CLKernelLibrary.cpp:69</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_145dd76969821cf771138378bb8274dc.xhtml">ClKernelBuildingImpl</a></li><li class="navelem"><a class="el" href="dir_cc845e4cb0a4830714d7be3c2daa81c7.xhtml">components</a></li><li class="navelem"><a class="el" href="_cl_direct_convolution_kernel_component_8cpp.xhtml">ClDirectConvolutionKernelComponent.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
