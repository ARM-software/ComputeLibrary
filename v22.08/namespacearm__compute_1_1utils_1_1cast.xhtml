<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::utils::cast Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1utils_1_1cast.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::utils::cast Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source &gt; </td></tr>
<tr class="memitem:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a9eeb4390c7aab75d31ccc9ddc8d93975">polymorphic_cast</a> (Source *v)</td></tr>
<tr class="memdesc:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic cast between two types.  <a href="#a9eeb4390c7aab75d31ccc9ddc8d93975">More...</a><br /></td></tr>
<tr class="separator:a9eeb4390c7aab75d31ccc9ddc8d93975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source &gt; </td></tr>
<tr class="memitem:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5484e8b514faf2ab4235b2aa86375c0a">polymorphic_downcast</a> (Source *v)</td></tr>
<tr class="memdesc:a5484e8b514faf2ab4235b2aa86375c0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic down cast between two types.  <a href="#a5484e8b514faf2ab4235b2aa86375c0a">More...</a><br /></td></tr>
<tr class="separator:a5484e8b514faf2ab4235b2aa86375c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5af5aa68b17a0ced5b456daf04912874"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source , typename Deleter &gt; </td></tr>
<tr class="memitem:a5af5aa68b17a0ced5b456daf04912874"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a5af5aa68b17a0ced5b456daf04912874">polymorphic_cast_unique_ptr</a> (std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;v)</td></tr>
<tr class="memdesc:a5af5aa68b17a0ced5b456daf04912874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic cast between two unique pointer types.  <a href="#a5af5aa68b17a0ced5b456daf04912874">More...</a><br /></td></tr>
<tr class="separator:a5af5aa68b17a0ced5b456daf04912874"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memTemplParams" colspan="2">template&lt;typename Target , typename Source , typename Deleter &gt; </td></tr>
<tr class="memitem:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memTemplItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#acd83d8e5cd9cae9f9ce5e57dbaecb38e">polymorphic_downcast_unique_ptr</a> (std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;v)</td></tr>
<tr class="memdesc:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic down cast between two unique pointer types.  <a href="#acd83d8e5cd9cae9f9ce5e57dbaecb38e">More...</a><br /></td></tr>
<tr class="separator:acd83d8e5cd9cae9f9ce5e57dbaecb38e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename std::enable_if&lt; std::is_same&lt; T, U &gt;::value, int &gt;::type  = 0&gt; </td></tr>
<tr class="memitem:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#aff2fdac1ef048c4a668437d172fa6b1a">saturate_cast</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> v)</td></tr>
<tr class="separator:aff2fdac1ef048c4a668437d172fa6b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbc0dfec475206b9c62d87e7405d87ee"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_integral&lt; U &gt;::value &amp;&amp;std::is_signed&lt; U &gt;() &amp;&amp;std::is_signed&lt; T &gt;() &amp;&amp;!std::is_same&lt; T, U &gt;::value &amp;&amp;sizeof(T) &gt;  = sizeof(U), int &gt; </td></tr>
<tr class="memitem:abbc0dfec475206b9c62d87e7405d87ee"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_integral&lt; <a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &gt;::value &amp;&amp;std::is_signed&lt; <a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &gt;) &amp;&amp;std::is_signed&lt; T &gt;) &amp;&amp;!std::is_same&lt; T, <a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &gt;::value &amp;&amp;sizeof(T)&lt; sizeof(<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), int &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>=0 &gt; T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#abbc0dfec475206b9c62d87e7405d87ee">saturate_cast</a> (<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> v)</td></tr>
<tr class="separator:abbc0dfec475206b9c62d87e7405d87ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a2ea3d1fc01a3a442900249ca182ffa5e"><td class="memTemplParams" colspan="2">template&lt;typename T , typename U , typename std::enable_if&lt; std::is_integral&lt; T &gt;::value &amp;&amp;std::is_integral&lt; U &gt;::value &amp;&amp;std::is_signed&lt; U &gt;() &amp;&amp;std::is_signed&lt; T &gt;() &amp;&amp;!std::is_same&lt; T, U &gt;::value &amp;&amp;sizeof(T) &gt;  = sizeof(U), int &gt; </td></tr>
<tr class="memitem:a2ea3d1fc01a3a442900249ca182ffa5e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a></td></tr>
<tr class="separator:a2ea3d1fc01a3a442900249ca182ffa5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9eeb4390c7aab75d31ccc9ddc8d93975"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9eeb4390c7aab75d31ccc9ddc8d93975">&#9670;&nbsp;</a></span>polymorphic_cast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::utils::cast::polymorphic_cast </td>
          <td>(</td>
          <td class="paramtype">Source *&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Polymorphic cast between two types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will throw an exception if cast cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00047">47</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00480">ARM_COMPUTE_THROW</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00206">CpuGemmDirectConv2d::prepare()</a>, and <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00368">CpuWinogradConv2d::prepare()</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(dynamic_cast&lt;Target&gt;(v) == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a>(std::bad_cast());</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="ttc" id="namespaceacl_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">acl::Target</a></div><div class="ttdeci">Target</div><div class="ttdoc">&lt; Target enum </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00293">Acl.hpp:293</a></div></div>
<div class="ttc" id="_error_8h_xhtml_ad5518fdae84a33ce6fbed540c6e89479"><div class="ttname"><a href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a></div><div class="ttdeci">#define ARM_COMPUTE_THROW(ex)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00480">Error.h:480</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5af5aa68b17a0ced5b456daf04912874"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5af5aa68b17a0ced5b456daf04912874">&#9670;&nbsp;</a></span>polymorphic_cast_unique_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter&gt; arm_compute::utils::cast::polymorphic_cast_unique_ptr </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Polymorphic cast between two unique pointer types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will throw an exception if cast cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type </td></tr>
    <tr><td class="paramname">Deleter</td><td>Deleter function type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00087">87</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00480">ARM_COMPUTE_THROW</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span>(dynamic_cast&lt;Target *&gt;(v.get()) == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a>(std::bad_cast());</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> r = <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.release());</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;Target, Deleter&gt;(r, std::move(v.get_deleter()));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="ttc" id="namespaceacl_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">acl::Target</a></div><div class="ttdeci">Target</div><div class="ttdoc">&lt; Target enum </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00293">Acl.hpp:293</a></div></div>
<div class="ttc" id="_error_8h_xhtml_ad5518fdae84a33ce6fbed540c6e89479"><div class="ttname"><a href="_error_8h.xhtml#ad5518fdae84a33ce6fbed540c6e89479">ARM_COMPUTE_THROW</a></div><div class="ttdeci">#define ARM_COMPUTE_THROW(ex)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00480">Error.h:480</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5484e8b514faf2ab4235b2aa86375c0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5484e8b514faf2ab4235b2aa86375c0a">&#9670;&nbsp;</a></span>polymorphic_downcast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::utils::cast::polymorphic_downcast </td>
          <td>(</td>
          <td class="paramtype">Source *&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Polymorphic down cast between two types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will assert if cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00068">68</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(dynamic_cast&lt;Target&gt;(v) != static_cast&lt;Target&gt;(v));</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a><span class="keyword">&gt;</span>(v);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespaceacl_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">acl::Target</a></div><div class="ttdeci">Target</div><div class="ttdoc">&lt; Target enum </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00293">Acl.hpp:293</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acd83d8e5cd9cae9f9ce5e57dbaecb38e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd83d8e5cd9cae9f9ce5e57dbaecb38e">&#9670;&nbsp;</a></span>polymorphic_downcast_unique_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>, Deleter&gt; arm_compute::utils::cast::polymorphic_downcast_unique_ptr </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; Source, Deleter &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Polymorphic down cast between two unique pointer types. </p>
<dl class="section warning"><dt>Warning</dt><dd>Will assert if cannot take place</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Target</td><td>Target to cast type </td></tr>
    <tr><td class="paramname">Source</td><td>Source from cast type </td></tr>
    <tr><td class="paramname">Deleter</td><td>Deleter function type</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Value to cast</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The casted value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cast_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_cast_8h_source.xhtml">Cast.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(dynamic_cast&lt;Target *&gt;(v.get()) != static_cast&lt;Target *&gt;(v.get()));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">auto</span> r = <span class="keyword">static_cast&lt;</span><a class="code" href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> *<span class="keyword">&gt;</span>(v.release());</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;Target, Deleter&gt;(r, std::move(v.get_deleter()));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespaceacl_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespaceacl.xhtml#a31488d29805a596498c0234ae392d35d">acl::Target</a></div><div class="ttdeci">Target</div><div class="ttdoc">&lt; Target enum </div><div class="ttdef"><b>Definition:</b> <a href="_acl_8hpp_source.xhtml#l00293">Acl.hpp:293</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aff2fdac1ef048c4a668437d172fa6b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff2fdac1ef048c4a668437d172fa6b1a">&#9670;&nbsp;</a></span>saturate_cast() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T saturate_cast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saturate_cast_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_saturate_cast_8h_source.xhtml">SaturateCast.h</a>.</p>

<p class="reference">References <a class="el" href="_saturate_cast_8h_source.xhtml#l00057">U</a>.</p>

<p class="reference">Referenced by <a class="el" href="reference_2_depth_convert_layer_8cpp_source.xhtml#l00042">arm_compute::test::validation::reference::depth_convert()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00091">arm_compute::cpu::neon_softmax_logits_1d_quantized()</a>, and <a class="el" href="_saturate_cast_8h_source.xhtml#l00072">saturate_cast()</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> v;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="abbc0dfec475206b9c62d87e7405d87ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbc0dfec475206b9c62d87e7405d87ee">&#9670;&nbsp;</a></span>saturate_cast() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_integral&lt;T&gt;::value &amp;&amp; std::is_integral&lt;<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>&gt;::value &amp;&amp; std::is_signed&lt;<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>&gt;) &amp;&amp; std::is_signed&lt;T&gt;) &amp;&amp; !std::is_same&lt;T, <a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>&gt;::value &amp;&amp; sizeof(T) &lt; sizeof(<a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>), int &gt;::<a class="el" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = 0 &gt; T arm_compute::utils::cast::saturate_cast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saturate_cast_8h_source.xhtml#l00072">72</a> of file <a class="el" href="_saturate_cast_8h_source.xhtml">SaturateCast.h</a>.</p>

<p class="reference">References <a class="el" href="_toolchain_support_8h_source.xhtml#l00277">arm_compute::support::cpp11::lowest()</a>, <a class="el" href="support_2_rounding_8h_source.xhtml#l00106">arm_compute::utils::rounding::round_half_away_from_zero()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00043">saturate_cast()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l00259">type</a>, and <a class="el" href="_saturate_cast_8h_source.xhtml#l00057">U</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(utility::clamp&lt;U&gt;(v, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">std::numeric_limits&lt;T&gt;::lowest</a>(), std::numeric_limits&lt;T&gt;::max()));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a73e352c61baaf9c1178da2d30105b04e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">arm_compute::support::cpp11::lowest</a></div><div class="ttdeci">T lowest()</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00277">ToolchainSupport.h:277</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a2ea3d1fc01a3a442900249ca182ffa5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ea3d1fc01a3a442900249ca182ffa5e">&#9670;&nbsp;</a></span>U</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">U</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_saturate_cast_8h_source.xhtml#l00057">57</a> of file <a class="el" href="_saturate_cast_8h_source.xhtml">SaturateCast.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00328">arm_compute::test::validation::add_padding_x()</a>, <a class="el" href="tests_2validation_2_helpers_8cpp_source.xhtml#l00352">arm_compute::test::validation::add_padding_y()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00671">arm_compute::adjust_odd_shape()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00698">arm_compute::calculate_subsampled_shape()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00508">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_iyuv()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00420">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_nv12()</a>, <a class="el" href="_color_convert_helper_8h_source.xhtml#l00596">arm_compute::test::colorconvert_helper::detail::colorconvert_rgb_to_yuv4()</a>, <a class="el" href="tests_2validation_2_c_l_2fft_8cpp_source.xhtml#l00117">arm_compute::test::validation::combine()</a>, <a class="el" href="_validation_8h_source.xhtml#l00150">arm_compute::test::validation::compare_dimensions()</a>, <a class="el" href="_concatenate_layer_8cpp_source.xhtml#l00116">arm_compute::test::validation::reference::concatenate_layer()</a>, <a class="el" href="_cl_gemm_default_config_reshaped_rhs_only_bifrost_8cpp_source.xhtml#l00050">ClGemmDefaultConfigReshapedRhsOnlyBifrost::configure()</a>, <a class="el" href="_cl_gemm_default_config_reshaped_rhs_only_valhall_8cpp_source.xhtml#l00053">ClGemmDefaultConfigReshapedRhsOnlyValhall::configure()</a>, <a class="el" href="_cl_direct_conv2d_kernel_8cpp_source.xhtml#l00147">ClDirectConv2dKernel::configure()</a>, <a class="el" href="_fused_convolution_batch_normalization_function_8h_source.xhtml#l00072">FusedConvolutionBatchNormalizationFunction&lt; TargetInfo, FusedLayerTypes &gt;::configure()</a>, <a class="el" href="_fused_convolution_batch_normalization_with_post_ops_function_8h_source.xhtml#l00073">FusedConvolutionBatchNormalizationWithPostOpsFunction&lt; TargetInfo, FusedLayerTypes &gt;::configure()</a>, <a class="el" href="_cl_direct_conv3d_kernel_8cpp_source.xhtml#l00092">ClDirectConv3dKernel::configure()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00162">CpuWinogradConv2d::configure()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00396">arm_compute::test::validation::reference::conv2d_dft()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00464">arm_compute::graph::backends::detail::create_convolution_layer()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00555">arm_compute::graph::backends::detail::create_fused_convolution_with_post_op()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00415">arm_compute::create_lws_hint_parallel_implementations()</a>, <a class="el" href="tests_2validation_2_u_n_i_t_2_tensor_info_8cpp_source.xhtml#l00044">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="tests_2validation_2_u_n_i_t_2_utils_8cpp_source.xhtml#l00054">DATA_TEST_CASE()</a>, <a class="el" href="reference_2_deconvolution_layer_8cpp_source.xhtml#l00037">arm_compute::test::validation::reference::deconvolution_layer()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00370">arm_compute::test::validation::reference::dft_2d()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00364">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00362">NPYLoader::fill_tensor()</a>, <a class="el" href="_assets_library_8h_source.xhtml#l00587">AssetsLibrary::fill_with_generator()</a>, <a class="el" href="tests_2validation_2_n_e_o_n_2fft_8cpp_source.xhtml#l00109">arm_compute::test::validation::FIXTURE_DATA_TEST_CASE()</a>, <a class="el" href="_utility_8h_source.xhtml#l00132">arm_compute::utility::foldl()</a>, <a class="el" href="_cl_fused_kernel_graph_8h_source.xhtml#l00181">ClFusedKernelGraph::fuse()</a>, <a class="el" href="_cpu_conv2d_8cpp_source.xhtml#l00123">CpuConv2d::get_convolution_method()</a>, <a class="el" href="_cl_conv2d_8cpp_source.xhtml#l00164">ClConv2d::get_convolution_method()</a>, <a class="el" href="_softmax_helpers_8cpp_source.xhtml#l00030">arm_compute::softmax_helpers::get_permutation_vector_from_softmax_axis()</a>, <a class="el" href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00176">ClElementwiseKernelComponent::get_tag_lut()</a>, <a class="el" href="_cl_direct_convolution_kernel_component_8cpp_source.xhtml#l00051">ClDirectConvolutionKernelComponent::get_window()</a>, <a class="el" href="_cl_floor_kernel_component_8cpp_source.xhtml#l00046">ClFloorKernelComponent::get_window()</a>, <a class="el" href="_cl_elementwise_kernel_component_8cpp_source.xhtml#l00048">ClElementwiseKernelComponent::get_window()</a>, <a class="el" href="_validation_8h_source.xhtml#l00308">compare&lt; AbsoluteTolerance&lt; U &gt; &gt;::operator bool()</a>, <a class="el" href="_validation_8h_source.xhtml#l00334">compare&lt; RelativeTolerance&lt; U &gt; &gt;::operator bool()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00095">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_graph_utils_8h_source.xhtml#l00665">arm_compute::graph_utils::permute_shape()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l00728">arm_compute::permute_strides()</a>, <a class="el" href="reference_2_pooling_layer_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::pooling_layer_internal()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00342">arm_compute::test::validation::reference::rdft_2d()</a>, <a class="el" href="_padding_calculator_8h_source.xhtml#l00146">PaddingCalculator::required_padding()</a>, <a class="el" href="reference_2_d_f_t_8cpp_source.xhtml#l00354">arm_compute::test::validation::reference::ridft_2d()</a>, <a class="el" href="_saturate_cast_8h_source.xhtml#l00043">saturate_cast()</a>, <a class="el" href="validation_2reference_2_scale_8cpp_source.xhtml#l00041">arm_compute::test::validation::reference::scale_core()</a>, <a class="el" href="_operator_graph_impl_8cpp_source.xhtml#l00144">Conv2dContent::select_conv_method()</a>, <a class="el" href="_zip_dataset_8h_source.xhtml#l00131">ZipDataset&lt; T, U &gt;::size()</a>, <a class="el" href="_join_dataset_8h_source.xhtml#l00142">JoinDataset&lt; T, U &gt;::size()</a>, <a class="el" href="_cartesian_product_dataset_8h_source.xhtml#l00162">CartesianProductDataset&lt; T, U &gt;::size()</a>, <a class="el" href="tests_2validation_2_c_l_2_u_n_i_t_2dynamic__fusion_2_dependency_graph_8cpp_source.xhtml#l00044">arm_compute::test::validation::TEST_CASE()</a>, <a class="el" href="_cpu_gemm_direct_conv2d_8cpp_source.xhtml#l00156">CpuGemmDirectConv2d::validate()</a>, <a class="el" href="_validation_8h_source.xhtml#l00380">arm_compute::test::validation::validate()</a>, and <a class="el" href="_validation_8h_source.xhtml#l00460">arm_compute::test::validation::validate_wrap()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils.xhtml">utils</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils_1_1cast.xhtml">cast</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:54 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
