<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classarm__compute_1_1experimental_1_1_i_operator.xhtml" title="Base class for all async functions. " alt="" coords="5,2811,88,2837"/>
<area shape="rect" id="node2" href="$classarm__compute_1_1experimental_1_1_i_c_l_operator.xhtml" title="Basic interface for functions which have a single async CL kernel. " alt="" coords="137,1475,236,1501"/>
<area shape="rect" id="node61" href="$classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml" title="Basic interface for functions which have a single async CPU kernel. " alt="" coords="136,4147,237,4173"/>
<area shape="rect" id="node3" href="$classarm__compute_1_1experimental_1_1_c_l_logical_and.xhtml" title="CLLogicalAnd" alt="" coords="373,5,482,32"/>
<area shape="rect" id="node4" href="$classarm__compute_1_1experimental_1_1_c_l_logical_or.xhtml" title="CLLogicalOr" alt="" coords="378,56,477,83"/>
<area shape="rect" id="node5" href="$classarm__compute_1_1experimental_1_1_c_l_slice.xhtml" title="Basic function to perform tensor slicing. " alt="" coords="393,107,462,133"/>
<area shape="rect" id="node6" href="$classarm__compute_1_1experimental_1_1_c_l_strided_slice.xhtml" title="Basic function to run CLStridedSliceKernel. " alt="" coords="370,157,485,184"/>
<area shape="rect" id="node7" href="$classarm__compute_1_1opencl_1_1_cl_abs.xhtml" title="Basic function to get the absolute value of an src tensor. " alt="" coords="398,208,457,235"/>
<area shape="rect" id="node8" href="$classarm__compute_1_1opencl_1_1_cl_activation.xhtml" title="Basic function to run kernels::ClActivationKernel. " alt="" coords="377,259,478,285"/>
<area shape="rect" id="node9" href="$classarm__compute_1_1opencl_1_1_cl_add.xhtml" title="Basic function to run arithmetic addition. " alt="" coords="397,309,457,336"/>
<area shape="rect" id="node10" href="$classarm__compute_1_1opencl_1_1_cl_cast.xhtml" title="Basic function to run kernels::ClCastKernel. " alt="" coords="395,360,459,387"/>
<area shape="rect" id="node11" href="$classarm__compute_1_1opencl_1_1_cl_complex_mul.xhtml" title="Basic function to run opencl::kernels::ClComplexMulKernel. " alt="" coords="369,411,485,437"/>
<area shape="rect" id="node12" href="$classarm__compute_1_1opencl_1_1_cl_concatenate.xhtml" title="Basic function to execute concatenate tensors along a given axis. " alt="" coords="369,461,486,488"/>
<area shape="rect" id="node13" href="$classarm__compute_1_1opencl_1_1_cl_conv2d.xhtml" title="Basic function to compute the convolution layer. " alt="" coords="385,512,469,539"/>
<area shape="rect" id="node14" href="$classarm__compute_1_1opencl_1_1_cl_convert_fully_connected_weights.xhtml" title="Basic function to run kernels::ClConvertFullyConnectedWeightsKernel. " alt="" coords="309,563,546,589"/>
<area shape="rect" id="node15" href="$classarm__compute_1_1opencl_1_1_cl_copy.xhtml" title="Basic function to run kernels::ClCopyKernel. " alt="" coords="393,613,461,640"/>
<area shape="rect" id="node16" href="$classarm__compute_1_1opencl_1_1_cl_crop.xhtml" title="Basic function to run kernels::ClCropKernel. " alt="" coords="395,664,460,691"/>
<area shape="rect" id="node17" href="$classarm__compute_1_1opencl_1_1_cl_dequantize.xhtml" title="Basic function to run kernels::ClDequantizeKernel that dequantizes an input tensor. " alt="" coords="373,715,482,741"/>
<area shape="rect" id="node18" href="$classarm__compute_1_1opencl_1_1_cl_direct_conv2d.xhtml" title="Basic function to simulate a directly convolution layer. " alt="" coords="366,765,489,792"/>
<area shape="rect" id="node19" href="$classarm__compute_1_1opencl_1_1_cl_direct_conv3d.xhtml" title="Basic function to simulate a directly convolution layer with 3 spatial dimensions. " alt="" coords="366,816,489,843"/>
<area shape="rect" id="node20" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_division.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for division. " alt="" coords="341,867,513,893"/>
<area shape="rect" id="node21" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_max.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for max. " alt="" coords="354,917,501,944"/>
<area shape="rect" id="node22" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_min.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for min. " alt="" coords="356,968,499,995"/>
<area shape="rect" id="node23" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_power.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for power. " alt="" coords="348,1019,507,1045"/>
<area shape="rect" id="node24" href="$classarm__compute_1_1opencl_1_1_cl_elementwise_squared_diff.xhtml" title="Basic function to run opencl::kernels::ClArithmeticKernel for squared difference. ..." alt="" coords="330,1069,525,1096"/>
<area shape="rect" id="node25" href="$classarm__compute_1_1opencl_1_1_cl_exp.xhtml" title="Basic function to perform exponential on an src tensor. " alt="" coords="398,1120,457,1147"/>
<area shape="rect" id="node26" href="$classarm__compute_1_1opencl_1_1_cl_fill.xhtml" title="Basic function to run kernels::ClFillKernel. " alt="" coords="401,1171,454,1197"/>
<area shape="rect" id="node27" href="$classarm__compute_1_1opencl_1_1_cl_flatten.xhtml" title="Basic function to flatten a given input. " alt="" coords="387,1221,467,1248"/>
<area shape="rect" id="node28" href="$classarm__compute_1_1opencl_1_1_cl_floor.xhtml" title="Basic function to run kernels::ClFloorKernel. " alt="" coords="394,1272,461,1299"/>
<area shape="rect" id="node29" href="$classarm__compute_1_1opencl_1_1_cl_fully_connected.xhtml" title="Basic function to compute a Fully Connected layer on OpenCL. " alt="" coords="360,1323,495,1349"/>
<area shape="rect" id="node30" href="$classarm__compute_1_1opencl_1_1_cl_gemm.xhtml" title="Basic function to execute GEMM on OpenCL. " alt="" coords="388,1373,467,1400"/>
<area shape="rect" id="node31" href="$classarm__compute_1_1opencl_1_1_cl_gemm_conv2d.xhtml" title="Basic function to compute the convolution layer. " alt="" coords="363,1424,491,1451"/>
<area shape="rect" id="node32" href="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_matrix_multiply_core.xhtml" title="Basic function to execute GEMMLowpMatrixMultiplyCore on OpenCL. " alt="" coords="309,1475,545,1501"/>
<area shape="rect" id="node33" href="$classarm__compute_1_1opencl_1_1_cl_gemm_lowp_output_stage.xhtml" title="Basic function to execute GEMMLowpQuantizeDown kernels on CL. " alt="" coords="330,1525,525,1552"/>
<area shape="rect" id="node34" href="$classarm__compute_1_1opencl_1_1_cl_log.xhtml" title="Basic function to perform elementwise log on an src tensor. " alt="" coords="398,1576,457,1603"/>
<area shape="rect" id="node35" href="$classarm__compute_1_1opencl_1_1_cl_logical_not.xhtml" title="Basic function to run kernels::ClElementWiseUnaryKernel for NOT operation. " alt="" coords="375,1627,479,1653"/>
<area shape="rect" id="node36" href="$classarm__compute_1_1opencl_1_1_cl_mul.xhtml" title="Basic function to run opencl::kernels::ClMulKernel. " alt="" coords="398,1677,457,1704"/>
<area shape="rect" id="node37" href="$classarm__compute_1_1opencl_1_1_cl_neg.xhtml" title="Basic function to negate an src tensor. " alt="" coords="397,1728,458,1755"/>
<area shape="rect" id="node38" href="$classarm__compute_1_1opencl_1_1_cl_permute.xhtml" title="Basic function to run kernels::ClPermuteKernel. " alt="" coords="382,1779,473,1805"/>
<area shape="rect" id="node39" href="$classarm__compute_1_1opencl_1_1_cl_pool2d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation. " alt="" coords="388,1829,467,1856"/>
<area shape="rect" id="node40" href="$classarm__compute_1_1opencl_1_1_cl_pool3d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation. " alt="" coords="388,1880,467,1907"/>
<area shape="rect" id="node41" href="$classarm__compute_1_1opencl_1_1_cl_p_relu.xhtml" title="Basic operator to run arm_compute::opencl::kernels::ClArithmeticKernel for PRELU. ..." alt="" coords="392,1931,463,1957"/>
<area shape="rect" id="node42" href="$classarm__compute_1_1opencl_1_1_cl_quantize.xhtml" title="Basic function to run kernels::ClQuantizeKernel that dequantizes an input tensor. ..." alt="" coords="381,1981,474,2008"/>
<area shape="rect" id="node43" href="$classarm__compute_1_1opencl_1_1_cl_reshape.xhtml" title="Basic function to run kernels::ClReshapeKernel. " alt="" coords="382,2032,473,2059"/>
<area shape="rect" id="node44" href="$classarm__compute_1_1opencl_1_1_cl_round.xhtml" title="Basic function to get the round (to the nearest even) value of an src tensor. " alt="" coords="390,2083,465,2109"/>
<area shape="rect" id="node45" href="$classarm__compute_1_1opencl_1_1_cl_rsqrt.xhtml" title="Basic function to perform inverse square root on an src tensor. " alt="" coords="393,2133,462,2160"/>
<area shape="rect" id="node46" href="$classarm__compute_1_1opencl_1_1_cl_scale.xhtml" title="Basic function to simulate a scale layer. " alt="" coords="392,2184,463,2211"/>
<area shape="rect" id="node47" href="$classarm__compute_1_1opencl_1_1_cl_sin.xhtml" title="Basic function to calculate sine of an src tensor. " alt="" coords="400,2235,455,2261"/>
<area shape="rect" id="node48" href="$classarm__compute_1_1opencl_1_1_cl_softmax.xhtml" title="ClSoftmax" alt="" coords="382,2285,473,2312"/>
<area shape="rect" id="node49" href="$classarm__compute_1_1opencl_1_1_cl_sub.xhtml" title="Basic function to run arithmetic subtraction. " alt="" coords="398,2336,457,2363"/>
<area shape="rect" id="node50" href="$classarm__compute_1_1opencl_1_1_cl_transpose.xhtml" title="Basic function to run kernels::ClTransposeKernel. " alt="" coords="377,2387,477,2413"/>
<area shape="rect" id="node51" href="$classarm__compute_1_1opencl_1_1_cl_winograd_conv2d.xhtml" title="Basic function to execute Winograd&#45;based convolution on OpenCL. " alt="" coords="354,2437,501,2464"/>
<area shape="rect" id="node52" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="This template synthetizes a simple IOperator which runs the given kernel K. " alt="" coords="326,2488,529,2515"/>
<area shape="rect" id="node53" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator_init_output_with_zero_and_with_zero_constant_border.xhtml" title="As above but this also initializes to zero the input tensor. " alt="" coords="293,2539,562,2595"/>
<area shape="rect" id="node54" href="$classarm__compute_1_1test_1_1_cl_synthetize_operator_with_border.xhtml" title="As above but this also setups a Zero border on the input tensor of the kernel&#39;s bordersize. " alt="" coords="332,2619,523,2661"/>
<area shape="rect" id="node55" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmLowpMatrixMultiplyReshaped\lKernel \&gt;" alt="" coords="285,2685,569,2741"/>
<area shape="rect" id="node56" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmLowpMatrixMultiplyReshaped\lOnlyRhsKernel \&gt;" alt="" coords="285,2765,569,2821"/>
<area shape="rect" id="node57" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmMatrixMultiplyNative\lKernel \&gt;" alt="" coords="312,2845,543,2901"/>
<area shape="rect" id="node58" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmMatrixMultiplyReshaped\lKernel \&gt;" alt="" coords="302,2925,553,2981"/>
<area shape="rect" id="node59" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmMatrixMultiplyReshaped\lOnlyRhsKernel \&gt;" alt="" coords="302,3005,553,3061"/>
<area shape="rect" id="node60" href="$classarm__compute_1_1test_1_1_c_l_synthetize_operator.xhtml" title="CLSynthetizeOperator\l\&lt; ClGemmReshapeLhsMatrixKernel \&gt;" alt="" coords="293,3086,561,3127"/>
<area shape="rect" id="node62" href="$classarm__compute_1_1cpu_1_1_cpu_activation.xhtml" title="Basic function to run kernels::CpuActivationKernel. " alt="" coords="371,3152,484,3179"/>
<area shape="rect" id="node63" href="$classarm__compute_1_1cpu_1_1_cpu_add.xhtml" title="Basic function to run kernels::CpuAddKernel. " alt="" coords="391,3203,463,3229"/>
<area shape="rect" id="node64" href="$classarm__compute_1_1cpu_1_1_cpu_cast.xhtml" title="Basic function to run kernels::CpuCastKernel. " alt="" coords="389,3253,465,3280"/>
<area shape="rect" id="node65" href="$classarm__compute_1_1cpu_1_1_cpu_complex_mul.xhtml" title="Basic function to run kernels::CpuComplexMulKernel. " alt="" coords="363,3304,491,3331"/>
<area shape="rect" id="node66" href="$classarm__compute_1_1cpu_1_1_cpu_concatenate.xhtml" title="Basic function to execute concatenate tensors along a given axis. " alt="" coords="363,3355,492,3381"/>
<area shape="rect" id="node67" href="$classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml" title="Basic function to simulate a convolution layer. " alt="" coords="379,3405,475,3432"/>
<area shape="rect" id="node68" href="$classarm__compute_1_1cpu_1_1_cpu_convert_fully_connected_weights.xhtml" title="Basic function to run kernels::CpuConvertFullyConnectedWeightsKernel. " alt="" coords="329,3457,526,3498"/>
<area shape="rect" id="node69" href="$classarm__compute_1_1cpu_1_1_cpu_copy.xhtml" title="Basic function to run kernels::CpuCopyKernel. " alt="" coords="387,3523,467,3549"/>
<area shape="rect" id="node70" href="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d.xhtml" title="Function to execute a depthwise convolution. " alt="" coords="345,3573,510,3600"/>
<area shape="rect" id="node71" href="$classarm__compute_1_1cpu_1_1_cpu_depthwise_conv2d_assembly_dispatch.xhtml" title="Depthwise convolution assembly kernel glue. " alt="" coords="313,3625,542,3666"/>
<area shape="rect" id="node72" href="$classarm__compute_1_1cpu_1_1_cpu_dequantize.xhtml" title="Basic function to run kernels::CpuDequantizeKernel that dequantizes an input tensor. " alt="" coords="367,3691,488,3717"/>
<area shape="rect" id="node73" href="$classarm__compute_1_1cpu_1_1_cpu_direct_conv2d.xhtml" title="Function to run the direct convolution. " alt="" coords="360,3741,495,3768"/>
<area shape="rect" id="node74" href="$classarm__compute_1_1cpu_1_1_cpu_direct_conv3d.xhtml" title="Function to run the direct convolution. " alt="" coords="360,3792,495,3819"/>
<area shape="rect" id="node75" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_base.xhtml" title="CpuElementwiseBase" alt="" coords="346,3843,509,3869"/>
<area shape="rect" id="node81" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_unary.xhtml" title="CpuElementwiseUnary" alt="" coords="342,3893,513,3920"/>
<area shape="rect" id="node82" href="$classarm__compute_1_1cpu_1_1_cpu_fill.xhtml" title="Basic function to run kernels::CpuFillKernel. " alt="" coords="395,3944,460,3971"/>
<area shape="rect" id="node83" href="$classarm__compute_1_1cpu_1_1_cpu_flatten.xhtml" title="Basic function to flatten a given input. " alt="" coords="381,3995,473,4021"/>
<area shape="rect" id="node84" href="$classarm__compute_1_1cpu_1_1_cpu_floor.xhtml" title="Basic function to run kernels::CpuFloorKernel. " alt="" coords="388,4045,467,4072"/>
<area shape="rect" id="node85" href="$classarm__compute_1_1cpu_1_1_cpu_fully_connected.xhtml" title="Basic function to compute a Fully Connected layer. " alt="" coords="354,4096,501,4123"/>
<area shape="rect" id="node86" href="$classarm__compute_1_1cpu_1_1_cpu_gemm.xhtml" title="Basic function to execute GEMM. " alt="" coords="382,4147,473,4173"/>
<area shape="rect" id="node87" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml" title="Assembly kernel glue. " alt="" coords="321,4197,533,4224"/>
<area shape="rect" id="node88" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_conv2d.xhtml" title="Basic function to compute the convolution layer. " alt="" coords="357,4248,497,4275"/>
<area shape="rect" id="node89" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_direct_conv2d.xhtml" title="CpuGemmDirectConv2d" alt="" coords="338,4299,517,4325"/>
<area shape="rect" id="node90" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_matrix_multiply_core.xhtml" title="Basic function to execute GEMMLowpMatrixMultiplyCore. " alt="" coords="303,4349,551,4376"/>
<area shape="rect" id="node91" href="$classarm__compute_1_1cpu_1_1_cpu_gemm_lowp_output_stage.xhtml" title="Basic function to execute GEMMLowpQuantizeDown kernels. " alt="" coords="324,4400,531,4427"/>
<area shape="rect" id="node92" href="$classarm__compute_1_1cpu_1_1_cpu_max_unpooling.xhtml" title="Basic function to run kernels::CpuMaxUnpoolingLayerKernel. " alt="" coords="357,4451,497,4477"/>
<area shape="rect" id="node93" href="$classarm__compute_1_1cpu_1_1_cpu_mul.xhtml" title="Basic function to run kernels::CpuMulKernel. " alt="" coords="392,4501,463,4528"/>
<area shape="rect" id="node94" href="$classarm__compute_1_1cpu_1_1_cpu_permute.xhtml" title="Basic function to run kernels::CpuPermuteKernel. " alt="" coords="376,4552,479,4579"/>
<area shape="rect" id="node95" href="$classarm__compute_1_1cpu_1_1_cpu_pool2d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation. " alt="" coords="382,4603,473,4629"/>
<area shape="rect" id="node96" href="$classarm__compute_1_1cpu_1_1_cpu_pool3d.xhtml" title="Basic function to simulate a pooling layer with the specified pooling operation. " alt="" coords="382,4653,473,4680"/>
<area shape="rect" id="node97" href="$classarm__compute_1_1cpu_1_1_cpu_quantize.xhtml" title="Basic function to run kernels::CpuQuantizeKernel that dequantizes an input tensor. " alt="" coords="375,4704,480,4731"/>
<area shape="rect" id="node98" href="$classarm__compute_1_1cpu_1_1_cpu_reshape.xhtml" title="Basic function to run kernels::CpuReshapeKernel. " alt="" coords="376,4755,479,4781"/>
<area shape="rect" id="node99" href="$classarm__compute_1_1cpu_1_1_cpu_scale.xhtml" title="Basic function to compute Scale. " alt="" coords="386,4805,469,4832"/>
<area shape="rect" id="node100" href="$classarm__compute_1_1cpu_1_1_cpu_softmax_generic.xhtml" title="Basic function to compute a SoftmaxLayer and a Log SoftmaxLayer. " alt="" coords="346,4857,509,4898"/>
<area shape="rect" id="node101" href="$classarm__compute_1_1cpu_1_1_cpu_sub.xhtml" title="Basic function to run kernels::CpuSubKernel. " alt="" coords="392,4923,463,4949"/>
<area shape="rect" id="node102" href="$classarm__compute_1_1cpu_1_1_cpu_transpose.xhtml" title="Basic function to run kernels::CpuTransposeKernel. " alt="" coords="371,4973,483,5000"/>
<area shape="rect" id="node103" href="$classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml" title="CpuWinogradConv2d" alt="" coords="348,5024,507,5051"/>
<area shape="rect" id="node104" href="$classarm__compute_1_1experimental_1_1_n_e_slice.xhtml" title="Basic function to perform tensor slicing. " alt="" coords="392,5075,463,5101"/>
<area shape="rect" id="node105" href="$classarm__compute_1_1experimental_1_1_n_e_strided_slice.xhtml" title="Basic function to run NEStridedSliceKernel. " alt="" coords="369,5125,486,5152"/>
<area shape="rect" id="node106" href="$classarm__compute_1_1test_1_1_n_e_synthetize_function_with_zero_constant_kernel_border.xhtml" title="As above but this also setups a Zero border on the input tensor of the kernel&#39;s bordersize. " alt="" coords="311,5177,544,5218"/>
<area shape="rect" id="node76" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_arithmetic.xhtml" title="Class to run cpu::kernels::CpuArithmeticKernel except for division and power. " alt="" coords="623,3718,821,3759"/>
<area shape="rect" id="node77" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison.xhtml" title="Basic function to run cpu::kernels::CpuComparisonKernel. " alt="" coords="617,3784,827,3811"/>
<area shape="rect" id="node78" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_comparison_static.xhtml" title="Basic function to run cpu::kernels::CpuComparisonKernel. " alt="" coords="617,3835,827,3877"/>
<area shape="rect" id="node79" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_division.xhtml" title="Basic function to run cpu::kernels::CpuArithmeticKernel for division. " alt="" coords="630,3901,814,3928"/>
<area shape="rect" id="node80" href="$classarm__compute_1_1cpu_1_1_cpu_elementwise_power.xhtml" title="Basic function to run cpu::kernels::CpuArithmeticKernel for power. " alt="" coords="637,3952,807,3979"/>
</map>
