<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClKernelBlueprint::Implementation Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClKernelBlueprint::Implementation Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Intermediate representation of the final, complete kernel source.  
 <a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9d2947a585bd9bdf5b87c216f57b376b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a9d2947a585bd9bdf5b87c216f57b376b">Implementation</a> ()=default</td></tr>
<tr class="separator:a9d2947a585bd9bdf5b87c216f57b376b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e7fbfbd8298563e72cb8c552d456dcd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a5e7fbfbd8298563e72cb8c552d456dcd">~Implementation</a> ()=default</td></tr>
<tr class="separator:a5e7fbfbd8298563e72cb8c552d456dcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2188f04638913931e8ddaa28cbcaff8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a2188f04638913931e8ddaa28cbcaff8a">update_merge_point</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> t_id, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> merge_point)</td></tr>
<tr class="separator:a2188f04638913931e8ddaa28cbcaff8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9325c903bb3383ac873d701e2d8fca13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a9325c903bb3383ac873d701e2d8fca13">add_kernel_tensor</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> merge_point=<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aec15c89db50c5cb48154f3e1e56303f1">DependencyGraph::empty_id</a>())</td></tr>
<tr class="separator:a9325c903bb3383ac873d701e2d8fca13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8827eb95bc1dda1177b1b3c5b21810d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a8827eb95bc1dda1177b1b3c5b21810d6">set_tile_info</a> (const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a> &amp;tile_info)</td></tr>
<tr class="separator:a8827eb95bc1dda1177b1b3c5b21810d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb1704732ec18ab12d5d5bc1bf61dd34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4">SharedVarGroup</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#aeb1704732ec18ab12d5d5bc1bf61dd34">group</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> arg_id) const</td></tr>
<tr class="separator:aeb1704732ec18ab12d5d5bc1bf61dd34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad62ac5a971e9f5189db0880c31639d6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#ad62ac5a971e9f5189db0880c31639d6b">validate_arg_ids</a> (std::initializer_list&lt; <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> &gt; args) const</td></tr>
<tr class="separator:ad62ac5a971e9f5189db0880c31639d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a651595ab12926c7cccd04fc5323a3b72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a651595ab12926c7cccd04fc5323a3b72">add_component</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a2bd7da02c0f6b7c585eeacec9f377cc8">ComponentUniquePtr</a> component)</td></tr>
<tr class="separator:a651595ab12926c7cccd04fc5323a3b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add7c7c41451ff9873f64fd90a9636251"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#add7c7c41451ff9873f64fd90a9636251">build_kernel_name</a> () const</td></tr>
<tr class="separator:add7c7c41451ff9873f64fd90a9636251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9f742e296d136e7b4f5d1efb2eecb46"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#ae9f742e296d136e7b4f5d1efb2eecb46">build_code</a> ()</td></tr>
<tr class="separator:ae9f742e296d136e7b4f5d1efb2eecb46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa94bb76b13d616fea16c02f0e26ee76"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#afa94bb76b13d616fea16c02f0e26ee76">build_config_id</a> () const</td></tr>
<tr class="memdesc:afa94bb76b13d616fea16c02f0e26ee76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate config id of the entire kernel.  <a href="#afa94bb76b13d616fea16c02f0e26ee76">More...</a><br /></td></tr>
<tr class="separator:afa94bb76b13d616fea16c02f0e26ee76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af00f1ece7a308d6febc1c5a806486e3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#af00f1ece7a308d6febc1c5a806486e3f">build_options</a> () const</td></tr>
<tr class="separator:af00f1ece7a308d6febc1c5a806486e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9128af5d4e167b32ceaf17b22b467062"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a9128af5d4e167b32ceaf17b22b467062">get_tile_info</a> () const</td></tr>
<tr class="separator:a9128af5d4e167b32ceaf17b22b467062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a096db24578aa8c6cf617f8bd1a1f4904"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a096db24578aa8c6cf617f8bd1a1f4904">get_execution_window</a> () const</td></tr>
<tr class="separator:a096db24578aa8c6cf617f8bd1a1f4904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0ee0d43fa2c0c6b0fe1e8a8412fd593"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#af0ee0d43fa2c0c6b0fe1e8a8412fd593">get_dst_id</a> () const</td></tr>
<tr class="separator:af0ee0d43fa2c0c6b0fe1e8a8412fd593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec98b88be8453fdec44492697a66e5f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#aec98b88be8453fdec44492697a66e5f3">get_arguments</a> () const</td></tr>
<tr class="separator:aec98b88be8453fdec44492697a66e5f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d338323a8a96383dc12b82a0fd7671f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">SharedVarTable::Arguments</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a1d338323a8a96383dc12b82a0fd7671f">get_argument_shared_vars</a> () const</td></tr>
<tr class="memdesc:a1d338323a8a96383dc12b82a0fd7671f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the arguments as shared vars from the vtable.  <a href="#a1d338323a8a96383dc12b82a0fd7671f">More...</a><br /></td></tr>
<tr class="separator:a1d338323a8a96383dc12b82a0fd7671f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ff8d50a482ee798058c32c5053eb072"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a3ff8d50a482ee798058c32c5053eb072">get_kernel_argument_info</a> (const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> id) const</td></tr>
<tr class="separator:a3ff8d50a482ee798058c32c5053eb072"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07ea6cf757265269f1222270bddcc2c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a07ea6cf757265269f1222270bddcc2c2">get_kernel_argument_info</a> (const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> id)</td></tr>
<tr class="separator:a07ea6cf757265269f1222270bddcc2c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d626626eee0bc4ade146973f6abb1c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#a32d626626eee0bc4ade146973f6abb1c">finalize</a> ()</td></tr>
<tr class="memdesc:a32d626626eee0bc4ade146973f6abb1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalize graph construction.  <a href="#a32d626626eee0bc4ade146973f6abb1c">More...</a><br /></td></tr>
<tr class="separator:a32d626626eee0bc4ade146973f6abb1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae529eea2206b577453cdc63c855aef2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#aae529eea2206b577453cdc63c855aef2">get_graph</a> () const</td></tr>
<tr class="separator:aae529eea2206b577453cdc63c855aef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Intermediate representation of the final, complete kernel source. </p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00418">418</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9d2947a585bd9bdf5b87c216f57b376b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d2947a585bd9bdf5b87c216f57b376b">&#9670;&nbsp;</a></span>Implementation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e7fbfbd8298563e72cb8c552d456dcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e7fbfbd8298563e72cb8c552d456dcd">&#9670;&nbsp;</a></span>~Implementation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a651595ab12926c7cccd04fc5323a3b72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a651595ab12926c7cccd04fc5323a3b72">&#9670;&nbsp;</a></span>add_component()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void add_component </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a2bd7da02c0f6b7c585eeacec9f377cc8">ComponentUniquePtr</a>&#160;</td>
          <td class="paramname"><em>component</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00465">465</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::Complex</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a324118a6721dd6b8a9b9f4e327df2bf5">arm_compute::experimental::dynamic_fusion::Input</a>, and <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0afdb0c388de01d545017cdf9ccf00eb72">arm_compute::experimental::dynamic_fusion::Store</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00089">arm_compute::experimental::dynamic_fusion::add_kcomp_direct_conv2d()</a>, <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00058">arm_compute::experimental::dynamic_fusion::add_kcomp_eltwise_op()</a>, <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00072">arm_compute::experimental::dynamic_fusion::add_kcomp_floor()</a>, and <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00105">arm_compute::experimental::dynamic_fusion::add_kcomp_store()</a>.</p>
<div class="fragment"><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    {</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        <span class="keywordflow">if</span>(component-&gt;get_component_type() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">ComponentType::Complex</a>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        {</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            ++_num_complex_components;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_num_complex_components &gt; 1, <span class="stringliteral">&quot;Only one complex component per blueprint is supported.&quot;</span>);</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="comment">// Get an unique ID for the component that&#39;s being added</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        std::vector&lt;ArgumentID&gt; src_tensors;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        std::vector&lt;ArgumentID&gt; dst_tensors;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;link : component-&gt;get_links())</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordflow">if</span>(link.is_empty())</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            {</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            }</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">if</span>(link.io == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a324118a6721dd6b8a9b9f4e327df2bf5">SharedVarIO::Input</a>)</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                src_tensors.push_back(link.arg_id);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            {</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                dst_tensors.push_back(link.arg_id);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            }</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">ComponentID</a> component_id = _graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">add_operator</a>(src_tensors, dst_tensors).second;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        component-&gt;set_id(component_id);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="comment">// Add this component to the component graph. Don&#39;t connect it to anything yet</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        _component_graph.emplace(component_id, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae13e792ef802118ab6d86fb46fa47e5c">ComponentList</a>{});</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="comment">// For every { arg_id, arg_io } passed along with this component...</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;link : component-&gt;get_links())</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> &amp;arg_id = link.arg_id;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="keyword">const</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9">SharedVarIO</a> &amp;arg_io = link.io;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="comment">// Add the arg_id to the map describing the input/output relationship between an argument and the components that use it, if it doesn&#39;t yet exist there</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="keywordflow">if</span>(_outgoing_components.find(arg_id) == _outgoing_components.end())</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            {</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                _outgoing_components.emplace(arg_id, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae13e792ef802118ab6d86fb46fa47e5c">ComponentList</a>{});</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                _incoming_components.emplace(arg_id, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae13e792ef802118ab6d86fb46fa47e5c">ComponentList</a>{});</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            }</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="comment">// If it&#39;s an input argument, connect any other component that has it as output with this component</span></div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="comment">// Additionally, set this component as one that treats this argument as &quot;Input&quot; (append to index 0)</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="comment">// This is used so that we keep track of whether two components use the same argument, one as input and one as output</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">if</span>(arg_io == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a324118a6721dd6b8a9b9f4e327df2bf5">SharedVarIO::Input</a>)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;prev_component : _incoming_components[arg_id])</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                {</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                    _component_graph[prev_component].push_back(component_id);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                _outgoing_components[arg_id].push_back(component_id);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            }</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="comment">// If it&#39;s an output argument, connect this component with any other component that has it as input</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="comment">// Additionally, set this component as one that treats this argument as &quot;Output&quot; (append to index 1)</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            {</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                <span class="keywordflow">if</span>(component-&gt;get_component_type() == <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0afdb0c388de01d545017cdf9ccf00eb72">ComponentType::Store</a>)</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                {</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst_id &gt;= 0, <span class="stringliteral">&quot;Trying to add more than one dst argument to the graph&quot;</span>);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                    _dst_id = arg_id;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                }</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;subseq_component : _outgoing_components[arg_id])</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                    _component_graph[component_id].push_back(subseq_component);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                }</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                _incoming_components[arg_id].push_back(component_id);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            }</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        }</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af2b3ac83564fdf708156b9fff27b975f">get_root_ops</a>().size() != 1, <span class="stringliteral">&quot;Trying to add more than one root to the graph&quot;</span>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="comment">// Finally, add this component to the dictionary of components</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        _components.insert(std::make_pair(component_id, std::move(component)));</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae13e792ef802118ab6d86fb46fa47e5c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae13e792ef802118ab6d86fb46fa47e5c">arm_compute::experimental::dynamic_fusion::ComponentList</a></div><div class="ttdeci">std::vector&lt; ComponentID &gt; ComponentList</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00255">Common.h:255</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0afdb0c388de01d545017cdf9ccf00eb72"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0afdb0c388de01d545017cdf9ccf00eb72">arm_compute::experimental::dynamic_fusion::ComponentType::Store</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_af2b3ac83564fdf708156b9fff27b975f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af2b3ac83564fdf708156b9fff27b975f">arm_compute::experimental::dynamic_fusion::DependencyGraph::get_root_ops</a></div><div class="ttdeci">std::vector&lt; Id &gt; get_root_ops() const</div><div class="ttdoc">Get all root ops. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00145">DependencyGraph.cpp:145</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::ComponentType::Complex</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a72fd310d933d46bd03b9d33fbb283ee9"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9">arm_compute::experimental::dynamic_fusion::SharedVarIO</a></div><div class="ttdeci">SharedVarIO</div><div class="ttdoc">We introduce the concept of Shared Variables in the context of kernel building. </div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00059">Common.h:59</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a4e1b7c599411e580eaed97443d281691"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a4e1b7c599411e580eaed97443d281691">arm_compute::experimental::dynamic_fusion::ComponentID</a></div><div class="ttdeci">DependencyGraph::Id ComponentID</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00254">Common.h:254</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a5922b6c22c15729162e749f06f7f518c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_operator</a></div><div class="ttdeci">std::pair&lt; Status, DependencyGraph::Id &gt; add_operator(const std::vector&lt; Id &gt; &amp;inputs, const std::vector&lt; Id &gt; &amp;outputs)</div><div class="ttdoc">Add a new operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00103">DependencyGraph.cpp:103</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a17988896270878f90fb442bb42b0297c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">arm_compute::experimental::dynamic_fusion::ArgumentID</a></div><div class="ttdeci">DependencyGraph::Id ArgumentID</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_building_a_p_i_8h_source.xhtml#l00041">ClKernelBuildingAPI.h:41</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a72fd310d933d46bd03b9d33fbb283ee9a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a72fd310d933d46bd03b9d33fbb283ee9a324118a6721dd6b8a9b9f4e327df2bf5">arm_compute::experimental::dynamic_fusion::SharedVarIO::Input</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9325c903bb3383ac873d701e2d8fca13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9325c903bb3383ac873d701e2d8fca13">&#9670;&nbsp;</a></span>add_kernel_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> add_kernel_tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>tensor_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>merge_point</em> = <code><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aec15c89db50c5cb48154f3e1e56303f1">DependencyGraph::empty_id</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00430">430</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00052">arm_compute::experimental::dynamic_fusion::add_tensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span> = _graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(merge_point);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">if</span>(_kernel_tensors.find(<span class="keywordtype">id</span>) == _kernel_tensors.end())</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            _kernel_tensors.insert(std::make_pair(<span class="keywordtype">id</span>, tensor_info));</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        }</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a21d46af8bdb7e587be804b405b63ac3d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_tensor</a></div><div class="ttdeci">Id add_tensor(Id merge_tensor=empty_id())</div><div class="ttdoc">Add a new tensor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00061">DependencyGraph.cpp:61</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae9f742e296d136e7b4f5d1efb2eecb46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9f742e296d136e7b4f5d1efb2eecb46">&#9670;&nbsp;</a></span>build_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string build_code </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00559">559</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary::get()</a>, <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00109">CLKernelLibrary::get_program()</a>, <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00481">arm_compute::mlgo::parser::header()</a>, and <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00307">IClKernelComponent::replace_tags()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    {</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_graph_root == -1, <span class="stringliteral">&quot;No root found in the component graph&quot;</span>);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="comment">// These data structures will hold the data from all the components in the blueprint</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        std::set&lt;std::string&gt;    headers_list{};</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        std::set&lt;std::string&gt;    additional_macros{};</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        std::vector&lt;std::string&gt; component_codes{}; <span class="comment">// vector because order matters</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <span class="comment">// Step 1: Allocate all kernel argument shared variables before generating the component code</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keyword">auto</span> stack = topological_sort();</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="keywordflow">while</span>(!stack.empty())</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        {</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="keyword">auto</span>  curr_component_id = stack.top();</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keyword">auto</span> &amp;curr_component    = _components.find(curr_component_id)-&gt;second;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            curr_component-&gt;allocate_shared_vars(_vtable);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            stack.pop();</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        }</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        <span class="comment">// Step 2: Generate component codes</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        stack = topological_sort();</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        <span class="keywordflow">while</span>(!stack.empty())</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        {</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <span class="keyword">auto</span>  curr_component_id = stack.top();</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            <span class="keyword">auto</span> &amp;curr_component    = _components.find(curr_component_id)-&gt;second;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            <span class="keyword">auto</span>       curr_headers_list      = curr_component-&gt;get_headers_list();</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            <span class="keyword">auto</span>       curr_additional_macros = curr_component-&gt;get_additional_macros();</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keyword">auto</span>       curr_component_code    = curr_component-&gt;get_component_code();</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> var_lut                = curr_component-&gt;get_tag_lut(_vtable); <span class="comment">// Ideally can be merged with get_component_code once we have finer-grained code generation technique</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            component_codes.push_back(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a8d7e5e18e2ef94f4e007c2efd7b3b3b0">IClKernelComponent::replace_tags</a>(curr_component_code, var_lut));</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            headers_list.insert(curr_headers_list.begin(), curr_headers_list.end());</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="keywordflow">if</span>(!curr_additional_macros.empty()) <span class="comment">// Some components might not have any</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            {</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                additional_macros.insert(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a8d7e5e18e2ef94f4e007c2efd7b3b3b0">IClKernelComponent::replace_tags</a>(curr_additional_macros, var_lut));</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            }</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            stack.pop();</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        <span class="comment">// Step 3: Assemble the data gathered by traversing the graph into the string &quot;code&quot;</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        std::string code = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">header</a> : headers_list)</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        {</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="preprocessor">#if defined(EMBEDDED_KERNELS)</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            code += <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">get_program</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">header</a>).first;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="preprocessor">#else  // defined(EMBEDDED_KERNELS)</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;            code += <span class="stringliteral">&quot;#include \&quot;&quot;</span> + <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">header</a> + <span class="stringliteral">&quot;\&quot;\n&quot;</span>;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="preprocessor">#endif // defined(EMBEDDED_KERNELS)</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        }</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;macros : additional_macros)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        {</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            code += macros;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        code += generate_kernel_signature(_vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">get_kernel_arguments</a>());</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        code += <span class="stringliteral">&quot;\n{\n\n&quot;</span>;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        code += <span class="stringliteral">&quot;    //------------------ START KERNEL_BUILDER_COORDINATE ---------------------\n\n&quot;</span>;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        code += generate_global_section();</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        code += <span class="stringliteral">&quot;    //------------------ END KERNEL_BUILDER_COORDINATE ---------------------\n&quot;</span>;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;component_code : component_codes)</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            code += component_code;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        }</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        code += <span class="stringliteral">&quot;}\n&quot;</span>;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keywordflow">return</span> code;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a545c28170311fa375be5684ba6f271bc"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">arm_compute::CLKernelLibrary::get_program</a></div><div class="ttdeci">std::pair&lt; std::string, bool &gt; get_program(const std::string &amp;program_name) const</div><div class="ttdoc">Gets the source of the selected program. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00109">CLKernelLibrary.cpp:109</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component_xhtml_a8d7e5e18e2ef94f4e007c2efd7b3b3b0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_cl_kernel_component.xhtml#a8d7e5e18e2ef94f4e007c2efd7b3b3b0">arm_compute::experimental::dynamic_fusion::IClKernelComponent::replace_tags</a></div><div class="ttdeci">static std::string replace_tags(const std::string &amp;code_template, const TagLUT &amp;tags)</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00307">Common.h:307</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a723a2d3874520624df4c3214ef0ec420"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a723a2d3874520624df4c3214ef0ec420">arm_compute::mlgo::parser::header</a></div><div class="ttdeci">void header(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00481">MLGOParser.cpp:481</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_a5dbf3531a263761c5a5bfae1fd8c4532"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">arm_compute::experimental::dynamic_fusion::SharedVarTable::get_kernel_arguments</a></div><div class="ttdeci">Arguments get_kernel_arguments() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00227">Common.h:227</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afa94bb76b13d616fea16c02f0e26ee76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa94bb76b13d616fea16c02f0e26ee76">&#9670;&nbsp;</a></span>build_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string build_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate config id of the entire kernel. </p>
<p>Format: kernel_name&ndash;comp0_config_id&ndash;comp1_config_id&ndash;...</p>
<dl class="section return"><dt>Returns</dt><dd>std::string </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00642">642</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">arm_compute::experimental::dynamic_fusion::traverse()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    {</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        std::string config_id = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#add7c7c41451ff9873f64fd90a9636251">build_kernel_name</a>();</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        traverse([&amp;](std::stack&lt;ComponentID&gt; stack)</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        {</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            config_id += <span class="stringliteral">&quot;--&quot;</span> + _components.find(stack.top())-&gt;second-&gt;generate_config_id() + <span class="stringliteral">&quot;--&quot;</span>;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        });</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <span class="keywordflow">return</span> config_id;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    }</div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation_xhtml_add7c7c41451ff9873f64fd90a9636251"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml#add7c7c41451ff9873f64fd90a9636251">arm_compute::experimental::dynamic_fusion::ClKernelBlueprint::Implementation::build_kernel_name</a></div><div class="ttdeci">std::string build_kernel_name() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00547">Common.h:547</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="add7c7c41451ff9873f64fd90a9636251"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add7c7c41451ff9873f64fd90a9636251">&#9670;&nbsp;</a></span>build_kernel_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string build_kernel_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00547">547</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">name</a>, and <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">arm_compute::experimental::dynamic_fusion::traverse()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    {</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a> = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        traverse([&amp;](std::stack&lt;ComponentID&gt; stack)</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        {</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            name += _components.find(stack.top())-&gt;second-&gt;name() + (stack.size() &gt; 2 ? <span class="stringliteral">&quot;___&quot;</span> : <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        });</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    }</div><div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af00f1ece7a308d6febc1c5a806486e3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af00f1ece7a308d6febc1c5a806486e3f">&#9670;&nbsp;</a></span>build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> build_options </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00653">653</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">arm_compute::experimental::dynamic_fusion::traverse()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        CLBuildOptions build_opts{};</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        traverse([&amp;](std::stack&lt;ComponentID&gt; stack)</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        {</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            build_opts.add_options(_components.find(stack.top())-&gt;second-&gt;generate_build_options().options());</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        });</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="keywordflow">return</span> build_opts;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a32d626626eee0bc4ade146973f6abb1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32d626626eee0bc4ade146973f6abb1c">&#9670;&nbsp;</a></span>finalize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void finalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finalize graph construction. </p>
<p>Graph is expected to not mutate after being finalized </p>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00724">724</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    {</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        cache_root_component();</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        assign_shared_var_group();</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a1d338323a8a96383dc12b82a0fd7671f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d338323a8a96383dc12b82a0fd7671f">&#9670;&nbsp;</a></span>get_argument_shared_vars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">SharedVarTable::Arguments</a> get_argument_shared_vars </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the arguments as shared vars from the vtable. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml">SharedVarTable::Arguments</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00698">698</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    {</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <span class="keywordflow">return</span> _vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">get_kernel_arguments</a>();</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_a5dbf3531a263761c5a5bfae1fd8c4532"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">arm_compute::experimental::dynamic_fusion::SharedVarTable::get_kernel_arguments</a></div><div class="ttdeci">Arguments get_kernel_arguments() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00227">Common.h:227</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aec98b88be8453fdec44492697a66e5f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec98b88be8453fdec44492697a66e5f3">&#9670;&nbsp;</a></span>get_arguments()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a> get_arguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00684">684</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    {</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a> arg_list{};</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;arg_var : _vtable.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">get_kernel_arguments</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml#a0ddc1695f6a02dbed6ed93e787bea98c">get_all_vars</a>())</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        {</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            arg_list[arg_var.desc.arg_id] = arg_var.desc;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        }</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="keywordflow">return</span> arg_list;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa9587b64a9fbf98bfe730f42dea9c09e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">arm_compute::experimental::dynamic_fusion::ClKernelArgList</a></div><div class="ttdeci">std::map&lt; int, ClKernelArgDescriptor &gt; ClKernelArgList</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00087">ClWorkload.h:87</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments_xhtml_a0ddc1695f6a02dbed6ed93e787bea98c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_1_1_arguments.xhtml#a0ddc1695f6a02dbed6ed93e787bea98c">arm_compute::experimental::dynamic_fusion::SharedVarTable::Arguments::get_all_vars</a></div><div class="ttdeci">std::vector&lt; SharedVar &gt; get_all_vars() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00119">Common.h:119</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table_xhtml_a5dbf3531a263761c5a5bfae1fd8c4532"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_shared_var_table.xhtml#a5dbf3531a263761c5a5bfae1fd8c4532">arm_compute::experimental::dynamic_fusion::SharedVarTable::get_kernel_arguments</a></div><div class="ttdeci">Arguments get_kernel_arguments() const</div><div class="ttdef"><b>Definition:</b> <a href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00227">Common.h:227</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af0ee0d43fa2c0c6b0fe1e8a8412fd593"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0ee0d43fa2c0c6b0fe1e8a8412fd593">&#9670;&nbsp;</a></span>get_dst_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> get_dst_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00679">679</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keywordflow">return</span> _dst_id;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a096db24578aa8c6cf617f8bd1a1f4904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a096db24578aa8c6cf617f8bd1a1f4904">&#9670;&nbsp;</a></span>get_execution_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_execution_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00671">671</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00140">arm_compute::experimental::dynamic_fusion::build()</a>.</p>
<div class="fragment"><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    {</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_graph_root == -1, <span class="stringliteral">&quot;No root found in the component graph&quot;</span>);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_dst_id == -1, <span class="stringliteral">&quot;Destination Tensor Id should be ready before calling get_execution_window()&quot;</span>);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keywordflow">return</span> _components.find(_graph_root)-&gt;second-&gt;get_window();</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    }</div><div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aae529eea2206b577453cdc63c855aef2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae529eea2206b577453cdc63c855aef2">&#9670;&nbsp;</a></span>get_graph()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> get_graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00730">730</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::Argument</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a086247a9b57fde6eefee2a0c4752242d">arm_compute::experimental::dynamic_fusion::Automatic</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afe5ece05d566f71af093d15bd4531459a8d81ac82421d1b03da58fccb9174892e">arm_compute::experimental::dynamic_fusion::BOTTOM_LEFT</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afe5ece05d566f71af093d15bd4531459a341b72aaab1308a3e6667af1e52f5def">arm_compute::experimental::dynamic_fusion::BOTTOM_RIGHT</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00103">SharedVarTable::SharedVar::desc</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00119">SharedVarTable::Arguments::get_all_vars()</a>, <a class="el" href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00145">DependencyGraph::get_root_ops()</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00101">SharedVarTable::SharedVar::group</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7abe53a0541a6d36f6ecb879fa2c584b08">arm_compute::experimental::dynamic_fusion::Image</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a963c0c0999b3c937f36565fae3b0ef54">arm_compute::experimental::dynamic_fusion::Image_3D</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0">arm_compute::experimental::dynamic_fusion::Image_3D_Export_To_ClImage2D</a>, <a class="el" href="cpu_2kernels_2floor_2neon_2fp32_8cpp_source.xhtml#l00035">arm_compute::cpu::step</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::Tensor_4D_t_Buffer</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">arm_compute::experimental::dynamic_fusion::Tensor_4D_t_Image</a>, <a class="el" href="_cl_workload_8h_source.xhtml#l00083">ClKernelArgDescriptor::tensor_arg_type</a>, <a class="el" href="src_2core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_utils_8h_source.xhtml#l00051">arm_compute::experimental::dynamic_fusion::to_string()</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afe5ece05d566f71af093d15bd4531459a747385047b85ae751f83adb36435a3c1">arm_compute::experimental::dynamic_fusion::TOP_LEFT</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afe5ece05d566f71af093d15bd4531459a901d87dedda8db733f5e6d34c4eb5fe0">arm_compute::experimental::dynamic_fusion::TOP_RIGHT</a>, <a class="el" href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">arm_compute::experimental::dynamic_fusion::traverse()</a>, <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00102">SharedVarTable::SharedVar::uniq_name</a>, and <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110">arm_compute::experimental::dynamic_fusion::Vector</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00153">arm_compute::experimental::dynamic_fusion::get_dependency_graph()</a>.</p>
<div class="fragment"><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    {</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <span class="keywordflow">return</span> _graph;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a3ff8d50a482ee798058c32c5053eb072"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ff8d50a482ee798058c32c5053eb072">&#9670;&nbsp;</a></span>get_kernel_argument_info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* get_kernel_argument_info </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00703">703</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    {</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <span class="keyword">auto</span> it = _kernel_tensors.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <span class="keywordflow">if</span>(it != _kernel_tensors.end())</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        {</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            <span class="keywordflow">return</span> it-&gt;second;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        }</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a07ea6cf757265269f1222270bddcc2c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07ea6cf757265269f1222270bddcc2c2">&#9670;&nbsp;</a></span>get_kernel_argument_info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* get_kernel_argument_info </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00713">713</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    {</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <span class="keyword">auto</span> it = _kernel_tensors.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordflow">if</span>(it != _kernel_tensors.end())</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        {</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            <span class="keywordflow">return</span> it-&gt;second;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        }</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a9128af5d4e167b32ceaf17b22b467062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9128af5d4e167b32ceaf17b22b467062">&#9670;&nbsp;</a></span>get_tile_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a> get_tile_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00665">665</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    {</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        <span class="keywordflow">return</span> _tile_info;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aeb1704732ec18ab12d5d5bc1bf61dd34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb1704732ec18ab12d5d5bc1bf61dd34">&#9670;&nbsp;</a></span>group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4">SharedVarGroup</a> group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>arg_id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00445">445</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::Argument</a>.</p>
<div class="fragment"><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">if</span>(arg_id == g_arg_placeholder)</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        {</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="comment">// In case of placeholder, don&#39;t care what we return;</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">SharedVarGroup::Argument</a>;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keywordflow">return</span> _shared_var_group_lut.at(arg_id);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ae4b4b738b88d9f339fa9154f4305f6d4a1853680a6d666b9fea2d789dd00bc7eb">arm_compute::experimental::dynamic_fusion::SharedVarGroup::Argument</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8827eb95bc1dda1177b1b3c5b21810d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8827eb95bc1dda1177b1b3c5b21810d6">&#9670;&nbsp;</a></span>set_tile_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_tile_info </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>tile_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00440">440</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00135">arm_compute::experimental::dynamic_fusion::set_tile_info()</a>.</p>
<div class="fragment"><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        _tile_info = tile_info;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a2188f04638913931e8ddaa28cbcaff8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2188f04638913931e8ddaa28cbcaff8a">&#9670;&nbsp;</a></span>update_merge_point()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> update_merge_point </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>t_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a>&#160;</td>
          <td class="paramname"><em>merge_point</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00425">425</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_kernel_building_a_p_i_8cpp_source.xhtml#l00130">arm_compute::experimental::dynamic_fusion::update_merge_point()</a>.</p>
<div class="fragment"><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">return</span> _graph.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a817a6ff79a6a2a870efd5d1a6ff60b91">update_merge_point</a>(t_id, merge_point);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a817a6ff79a6a2a870efd5d1a6ff60b91"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a817a6ff79a6a2a870efd5d1a6ff60b91">arm_compute::experimental::dynamic_fusion::DependencyGraph::update_merge_point</a></div><div class="ttdeci">Status update_merge_point(Id t_id, Id merge_point)</div><div class="ttdoc">Update merge_point to point to t_id. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00051">DependencyGraph.cpp:51</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad62ac5a971e9f5189db0880c31639d6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad62ac5a971e9f5189db0880c31639d6b">&#9670;&nbsp;</a></span>validate_arg_ids()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void validate_arg_ids </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a17988896270878f90fb442bb42b0297c">ArgumentID</a> &gt;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml#l00455">455</a> of file <a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a>.</p>

<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, and <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>.</p>
<div class="fragment"><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> arg_id : <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        {</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(arg_id);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_kernel_tensors.find(arg_id) == _kernel_tensors.end() &amp;&amp; arg_id != g_arg_placeholder,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                     <span class="stringliteral">&quot;Trying to use an argument that hasn&#39;t been added to the blueprint&quot;</span>);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    }</div><div class="ttc" id="namespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/core/experimental/dynamic_fusion/ClKernelBuildingImpl/<a class="el" href="core_2experimental_2dynamic__fusion_2_cl_kernel_building_impl_2_common_8h_source.xhtml">Common.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_1_1_implementation.xhtml">Implementation</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
