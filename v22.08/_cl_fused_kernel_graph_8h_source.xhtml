<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/WorkloadImpl/ClFusedKernelGraph.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_fused_kernel_graph_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClFusedKernelGraph.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_fused_kernel_graph_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLFUSEDKERNELGRAPH_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLFUSEDKERNELGRAPH_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dependency_graph_8h.xhtml">arm_compute/core/experimental/DependencyGraph.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_building_a_p_i_8h.xhtml">src/core/experimental/dynamic_fusion/ClKernelBuildingAPI.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_graph_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ClKernelGraph.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_deep_copy_8h.xhtml">support/DeepCopy.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">struct </span>ClKernelFusionGroup;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/** A const view of a subgraph of the @ref ClKernelGraph to be fused together</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">   47</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">   50</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a55774ab9526a3034bf7bf01187a09689">ClKernelFusionGroup</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abce0915a497036421922e68272426398">   53</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abce0915a497036421922e68272426398">ClKernelFusionGroup</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : id{ <span class="keywordtype">id</span> }, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>{}, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a>{}, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>{}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#addfc3ccea08b90d7001c23d7dfbce2d2">~ClKernelFusionGroup</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a527d977707d7a8bb41a0fef58f91b108">   59</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a527d977707d7a8bb41a0fef58f91b108">set_id</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> i)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordtype">id</span> = i;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a75b6d128d424366fa939e7cb8dec950b">   64</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a75b6d128d424366fa939e7cb8dec950b">add_fused_kernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *kernel)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">        /// PRE: Acyclicity ensured by DependencyGraph</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">        /// PRE: Connectedness ensured by DependencyGraph</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">        /// PRE: Single-rootedness ensured by User</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span>        std::vector&lt;Id&gt; src_tensors;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : kernel-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">tensors</a>().get_const_src_tensors())</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.find(<span class="keywordtype">id</span>) == <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.end())</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>[<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>] = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            src_tensors.push_back(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        std::vector&lt;Id&gt; dst_tensors;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : kernel-&gt;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">tensors</a>().get_const_dst_tensors())</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keyword">auto</span> <span class="keywordtype">id</span> = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">add_tensor</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.find(<span class="keywordtype">id</span>) == <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.end())</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>[<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>] = <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            dst_tensors.push_back(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">auto</span> <span class="keywordtype">id</span>                  = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">add_operator</a>(src_tensors, dst_tensors);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a>[<span class="keywordtype">id</span>.second] = kernel;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">id</span>.second;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abe9573bdefe0575529bf33c535474a52">   94</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abe9573bdefe0575529bf33c535474a52">get_root_kernel</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">auto</span> root_kernels = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af2b3ac83564fdf708156b9fff27b975f">get_root_ops</a>();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(root_kernels.size() != 1);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a>.at(root_kernels.at(0));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#aa1638bbce7b5fb7c83c81d499757cb8c">  101</a></span>&#160;    std::vector&lt;const ClKernelTensor *&gt; <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#aa1638bbce7b5fb7c83c81d499757cb8c">get_src_tensors</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        std::vector&lt;const ClKernelTensor *&gt; src_tensors;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> tensor_id : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">src_tensors</a>())</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            src_tensors.push_back(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.at(tensor_id));</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> src_tensors;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a9ea022383d2a3ceda79b9c1c569cca29">  111</a></span>&#160;    std::vector&lt;const ClKernelTensor *&gt; <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a9ea022383d2a3ceda79b9c1c569cca29">get_dst_tensors</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        std::vector&lt;const ClKernelTensor *&gt; dst_tensors;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> tensor_id : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">dst_tensors</a>())</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            dst_tensors.push_back(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>.at(tensor_id));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> dst_tensors;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a78a4753caf58e55340ca79c6a1008458">  121</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a78a4753caf58e55340ca79c6a1008458">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg1)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a> == fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a> &amp;&amp; fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a> == fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a> &amp;&amp; fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a> == fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a> &amp;&amp; fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a> == fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">  126</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>              <span class="keywordtype">id</span>{};</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">  127</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>{}; <span class="comment">// A subgraph of the original ClKernelGraph</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">  128</a></span>&#160;    std::map&lt;Id, const ClKernel *&gt;       <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a>{};</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">  129</a></span>&#160;    std::map&lt;Id, const ClKernelTensor *&gt; <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">tensors</a>{};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;};</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;std::vector&lt;const ClKernel *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;group);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">  134</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">  137</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">  139</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a> = std::map&lt;Id, utils::memory::deep_unique_ptr&lt;ClKernelFusionGroup&gt;&gt;;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>()                                = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>()                               = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;&amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a5a6fe0d3f177e19aee60dc6eb2087649">  148</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a5a6fe0d3f177e19aee60dc6eb2087649">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph1)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">        /// NOTE: fg_dependency may change based on the order of fusion, and thus is omitted in the comparison.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">        ///       The fusion groups can already guarantee the equivalence of fusion</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">        ///       In the future we may want to enforce a stronger equivalence by implementing topological comparison between @ref DependencyGraph s</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span>        <span class="keywordflow">return</span> graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">original_graph</a> &amp;&amp; graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">fusion_groups</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">fusion_groups</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ae2b77375e4ce41878f4c7b2f0e673c9e">  156</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ae2b77375e4ce41878f4c7b2f0e673c9e">add_fusion_group</a>(<span class="keyword">const</span> std::vector&lt;const ClKernel *&gt; &amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">fused_kernels</a>)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keyword">auto</span> fg = utils::memory::make_deep_unique&lt;ClKernelFusionGroup, ClKernelFusionGroup&gt;();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a> : fused_kernels)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            fg-&gt;add_fused_kernel(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      src_tensors = fg-&gt;get_src_tensors();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      dst_tensors = fg-&gt;get_dst_tensors();</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        std::vector&lt;Id&gt; inputs{};</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        std::transform(std::begin(src_tensors), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(src_tensors), std::back_inserter(inputs), [<span class="keyword">this</span>](<span class="keyword">auto</span> kernel)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">return</span> fg_dependency.add_tensor(kernel-&gt;id);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        });</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        std::vector&lt;Id&gt; outputs{};</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        std::transform(std::begin(dst_tensors), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(dst_tensors), std::back_inserter(outputs), [<span class="keyword">this</span>](<span class="keyword">auto</span> kernel)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> fg_dependency.add_tensor(kernel-&gt;id);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        });</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> <span class="keywordtype">id</span> = fg_dependency.add_operator(inputs, outputs);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        fg-&gt;set_id(<span class="keywordtype">id</span>.second);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        fusion_groups[<span class="keywordtype">id</span>.second] = std::move(fg);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">id</span>.second;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#abae0d512be0c240e4d78cc99b376e616">  181</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#abae0d512be0c240e4d78cc99b376e616">fuse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg0, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg1)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {<span class="comment"></span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">        /// PRE: Already checked by can_fuse, and thus all the INVs and ASSUMPTIONS still hold</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment"></span>        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> *fg_src{};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> *fg_dst{};</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">// Find fg_src (parent / root) and fg_dst (child / non-root)</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>, fg_dependency.dst_ops(fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>)))</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            fg_src = &amp;fg0;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            fg_dst = &amp;fg1;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>, fg_dependency.dst_ops(fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>)))</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            fg_src = &amp;fg1;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            fg_dst = &amp;fg0;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: Not directly connected fusion groups cannot be fused together&quot;</span> };</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : fg_dependency.src_tensors(fg_dst-&gt;id))</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, fg_dependency.dst_tensors(fg_src-&gt;id)))</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="comment">// Link any incoming tensors of fg_dst, that ARE NOT in between fg_src and fg_dst, to fg_src</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="comment">// Before:</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="comment">// fg_src</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="comment">// |</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="comment">// ..          t1</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="comment">// |           |</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="comment">// -&gt; fg_dst &lt;-</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <span class="comment">//</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="comment">// After:</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="comment">// fg_src &lt;---t1</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="comment">//</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> st = link_src_tensors(fg_src-&gt;id, { t });</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> dst_fgs = fg_dependency.dst_ops_from_tensor(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">if</span>(dst_fgs.size() == 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">U</a> &amp;&amp; dst_fgs.at(0) == fg_dst-&gt;id)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    <span class="comment">// Remove any incoming tensors of fg_dst, that ARE in between fg_src and fg_dst</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="comment">// AND that are not connected to any other outgoing fgs (Note that they cannot connect to any other incoming fgs as all tensors can have at most 1 incoming fg (ASSUMPTION 3))</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    <span class="comment">// Before:</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    <span class="comment">// -&gt; fg_dst</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    <span class="comment">// After:</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> st = remove_fg_tensor(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                    {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                    }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">else</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    <span class="comment">// If the tensors ARE in between fg_src and fg_dst</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <span class="comment">// BUT have any other outgoing fgs than fg_dst, then we leave it as a dst tensor to the fused fg_src</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    <span class="comment">// Before:</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="comment">// |-----------</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    <span class="comment">// |          |</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="comment">// -&gt; fg_dst  -&gt; fg_other</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    <span class="comment">// After:</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="comment">// fg_src</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    <span class="comment">// t0</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <span class="comment">// |</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="comment">// -&gt; fg_other</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="comment">//</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="comment">// Note that this may seem like a case we shouldn&#39;t fuse. But actually all it means is that t0 is an</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    <span class="comment">// intermediate tensor between the fused fg_src and fg_dst, but only that we also STORE it to memory</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    <span class="comment">// so that any unfused fg&#39;s (fg_other in this case) can read it.</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    <span class="comment">// So all this means that we not only can STORE the tensors at the &quot;end&quot; of a fusion group,</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="comment">// but also any other tensors that are not source tensors. And all tensors that are STORED (exported),</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="comment">// can be termed &quot;dst tensors&quot; to a fusion group</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    void();</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            }</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : fg_dependency.dst_tensors(fg_dst-&gt;id))</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="comment">// Link any outgoing tensors of fg_dst to fg_src</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">// Before:</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="comment">// fg_src</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="comment">// ..</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="comment">// -&gt; fg_dst</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="comment">//    |</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="comment">//    |--------</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="comment">//    |       |</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="comment">//    |-&gt; t0  |-&gt; t1</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="comment">//</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="comment">// After:</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="comment">// fg_src</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="comment">// |</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="comment">// |--------</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="comment">// |       |</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="comment">// |-&gt; t0  |-&gt; t1</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="comment">//</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> st = link_dst_tensors(fg_src-&gt;id, { t });</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span>(!<span class="keywordtype">bool</span>(st))</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="comment">// Merge fg_dst&#39;s graph into fg_src&#39;s graph</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> kernel : <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(*fg_dst))</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            fg_src-&gt;add_fused_kernel(kernel);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> st = remove_fg(fg_dst-&gt;id);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">return</span> st;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#acce6bcb3e2ad9680f458d8eac4e2fb0e">  319</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#acce6bcb3e2ad9680f458d8eac4e2fb0e">can_fuse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg1)<span class="keyword"> const</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">    </span>{<span class="comment"></span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">        /// ASSUMPTION0: All tensors have 0 or 1 incoming kernel</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">        /// ASSUMPTION1: All kernels have exactly 1 dst tensor (Temporary, can be lifted once we start supporting multi-dst kernels)</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">        ///              Note that this does not apply to fusion groups</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">        /// ASSUMPTION2: Simple kernels&#39; tile infos can be overriden (share with) that of the root kernel&#39;s</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">        /// ASSUMPTION3: Extension of ASSUMPTION0: All tensors have 0 or 1 incoming fusion group</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">        /// INV0: All Fusion groups have a single root</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">        /// INV1: All Fusion groups have no cycles or loops within themselves &lt;- guaranteed by the underlying ClKernelGraph having no cycles or loops; enforced by DependencyGraph</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">        /// INV2: The ClKernelFusionGroup itself has no cycles or loops &lt;- enforced by DependencyGraph</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">        /// INV3: All non-roots are Simple kernels</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">        /// INV4: All non roots&#39; dst tensors have the same shape as that of the root kernel</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">        /// INV5: All kernels within a fusion group have the same UnitWorkloadStage</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"></span>        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> *fg_src {};</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> *fg_dst{};</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="comment">// Check 0: Ensure fg0 and fg1 are &quot;directly connected&quot;: one of them is a direct parent of the other</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="comment">// This guarantess INV0</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="comment">// This also finds fg_src (parent / root) and fg_dst (child / non-root)</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>, fg_dependency.dst_ops(fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>)))</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            fg_src = &amp;fg0;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            fg_dst = &amp;fg1;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        }</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(fg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>, fg_dependency.dst_ops(fg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">id</a>)))</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            fg_src = &amp;fg1;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            fg_dst = &amp;fg0;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        {</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: Not directly connected fusion groups cannot be fused together&quot;</span> };</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="comment">// Find unconnected tensors between fg_src and fg_dst</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        std::vector&lt;Id&gt; unconnected_tensors{};</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : fg_dependency.dst_tensors(fg_src-&gt;id))</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">is_in</a>(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, fg_dependency.src_tensors(fg_dst-&gt;id)))</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                unconnected_tensors.push_back(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            }</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="comment">// Check 1: Any unconnected tensor cannot be an ancestor of fg_dst</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="comment">// This guarantees INV2: That is, the fused graph does not have any cycles or loops between different fusion groups</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : unconnected_tensors)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span>(fg_dependency.path_exists_from_tensor_to_op(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, fg_dst-&gt;id))</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: the fusion would result in cycles or loops&quot;</span> };</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        }</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="comment">// Check 2: All non-root fgs are simple. Ensure INV3</span></div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="keywordflow">if</span>(fg_dst-&gt;get_root_kernel()-&gt;complexity() != <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Complexity::Simple</a>)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: only root kernel can be a complex kernel&quot;</span> };</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="comment">// Check 3: All non roots&#39; dst tensors have the same shape as that of the root kernel. Ensure INV4</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> root_kernel_dst_tensors = fg_dependency.dst_tensors(fg_src-&gt;id);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(root_kernel_dst_tensors.size() != 1); <span class="comment">// (ASSUMPTION 1: All kernels have exactly 1 dst tensor)</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> root_kernel_dst_tensor_info = original_graph-&gt;get_tensor(root_kernel_dst_tensors[0])-&gt;desc;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : fg_dependency.dst_tensors(fg_dst-&gt;id))</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> t_info = original_graph-&gt;get_tensor(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>)-&gt;desc;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(root_kernel_dst_tensor_info-&gt;tensor_shape(), t_info-&gt;tensor_shape(), 0))</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: all non roots&#39; dst tensors should have the same shape as that of the root kernel&quot;</span> };</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        }</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="comment">// Check 4: All kernels within a fg have the same UnitWorkloadStage. Ensure INV5</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <span class="keywordflow">if</span>(!(fg_src-&gt;get_root_kernel()-&gt;config().stage == fg_dst-&gt;get_root_kernel()-&gt;config().stage))</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{ <a class="code" href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">ErrorCode::RUNTIME_ERROR</a>, <span class="stringliteral">&quot;Invalid fusion: all kernels within a fusion group should have the same UnitWorkloadStage&quot;</span> };</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        }</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">  402</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *original_graph{};</div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a089f9f50806d05f259dc08a4c3ed6219">  403</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a>      fg_dependency{};</div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">  404</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">KernelFusionGroupMap</a> fusion_groups{};</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="comment">// Note: no need to store tensors pointers in the ClFusedKernelGraph, as they are stored in side the individual fusion groups.</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> link_src_tensors(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> fg, <span class="keyword">const</span> std::vector&lt;Id&gt; &amp;src_tensors)</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    {</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : src_tensors)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            fg_dependency.link_input(fg, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        }</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    }</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> link_dst_tensors(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> fg, <span class="keyword">const</span> std::vector&lt;Id&gt; &amp;dst_tensors)</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : dst_tensors)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        {</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            fg_dependency.link_output(fg, <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    }</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> remove_fg(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> fg)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    {</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        fg_dependency.remove_operator(fg);</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        fusion_groups.erase(fg);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    }</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> remove_fg_tensor(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> tensor)</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        fg_dependency.remove_tensor(tensor);</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;};</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;std::vector&lt;const ClKernelFusionGroup *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;std::vector&lt;ClKernelFusionGroup *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;graph);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;std::pair&lt;Status, ClFusedKernelGraph&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a124185cc0f16b8bc162cf4845c91d1d2">init_fusion_graph</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;kernel_graph);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa11c975459908699abf6078773ae19b3">fuse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;fused_kernel_graph);</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8d6a9002a9d5c0fc67a8c4d547b37491">generate_store</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> &amp;bp, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;fused_kernel_graph, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">ClKernelFusionGroup</a> &amp;fg);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> &amp;ctx, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">ClFusedKernelGraph</a> &amp;fused_kernel_graph);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLFUSEDKERNELGRAPH_H</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a1c4b6c76accd8db4b0d6492bfccd75f7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a1c4b6c76accd8db4b0d6492bfccd75f7">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::original_graph</a></div><div class="ttdeci">const ClKernelGraph * original_graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00402">ClFusedKernelGraph.h:402</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a150a709e86e7134d17cd063de6810b6c"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a150a709e86e7134d17cd063de6810b6c">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::id</a></div><div class="ttdeci">Id id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00126">ClFusedKernelGraph.h:126</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkload</a></div><div class="ttdoc">Workload for Cl backend. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00173">ClWorkload.h:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a55774ab9526a3034bf7bf01187a09689"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a55774ab9526a3034bf7bf01187a09689">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::ClKernelFusionGroup</a></div><div class="ttdeci">ClKernelFusionGroup()=default</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">arm_compute::experimental::dynamic_fusion::DependencyGraph</a></div><div class="ttdoc">The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00051">DependencyGraph.h:51</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::ComponentType::Simple</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_addfc3ccea08b90d7001c23d7dfbce2d2"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#addfc3ccea08b90d7001c23d7dfbce2d2">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::~ClKernelFusionGroup</a></div><div class="ttdeci">~ClKernelFusionGroup()=default</div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a21d46af8bdb7e587be804b405b63ac3d"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a21d46af8bdb7e587be804b405b63ac3d">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_tensor</a></div><div class="ttdeci">Id add_tensor(Id merge_tensor=empty_id())</div><div class="ttdoc">Add a new tensor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00061">DependencyGraph.cpp:61</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00137">ClFusedKernelGraph.h:137</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_abae0d512be0c240e4d78cc99b376e616"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#abae0d512be0c240e4d78cc99b376e616">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fuse</a></div><div class="ttdeci">Status fuse(ClKernelFusionGroup &amp;fg0, ClKernelFusionGroup &amp;fg1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00181">ClFusedKernelGraph.h:181</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_a450f4a8b4757eaf3dee4d3a879e5820a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">arm_compute::experimental::dynamic_fusion::ClKernel::tensors</a></div><div class="ttdeci">ITensorDescPack&lt; ClKernelTensor &gt; tensors() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00106">ClKernelGraph.h:106</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00182">ClKernelGraph.h:182</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_af2b3ac83564fdf708156b9fff27b975f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#af2b3ac83564fdf708156b9fff27b975f">arm_compute::experimental::dynamic_fusion::DependencyGraph::get_root_ops</a></div><div class="ttdeci">std::vector&lt; Id &gt; get_root_ops() const</div><div class="ttdoc">Get all root ops. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00145">DependencyGraph.cpp:145</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_abcbe2ecf3e9ae25433a9a67e5d895333"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abcbe2ecf3e9ae25433a9a67e5d895333">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::fused_kernels</a></div><div class="ttdeci">std::map&lt; Id, const ClKernel * &gt; fused_kernels</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00128">ClFusedKernelGraph.h:128</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadContext</a></div><div class="ttdoc">Context (device capabilities, platform details) associated with a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00162">ClWorkload.h:162</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0e5a222683b4e850a681a8b7f593f9c3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">arm_compute::experimental::dynamic_fusion::traverse</a></div><div class="ttdeci">std::vector&lt; const ClKernel * &gt; traverse(const ClKernelFusionGroup &amp;group)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">ClFusedKernelGraph.cpp:50</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a2174ad89228c52d7553bd6a6e902f96d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a2174ad89228c52d7553bd6a6e902f96d">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::tensors</a></div><div class="ttdeci">std::map&lt; Id, const ClKernelTensor * &gt; tensors</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00129">ClFusedKernelGraph.h:129</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_ae2b77375e4ce41878f4c7b2f0e673c9e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#ae2b77375e4ce41878f4c7b2f0e673c9e">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::add_fusion_group</a></div><div class="ttdeci">Id add_fusion_group(const std::vector&lt; const ClKernel *&gt; &amp;fused_kernels)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00156">ClFusedKernelGraph.h:156</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_acce6bcb3e2ad9680f458d8eac4e2fb0e"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#acce6bcb3e2ad9680f458d8eac4e2fb0e">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::can_fuse</a></div><div class="ttdeci">Status can_fuse(const ClKernelFusionGroup &amp;fg0, const ClKernelFusionGroup &amp;fg1) const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00319">ClFusedKernelGraph.h:319</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelBlueprint</a></div><div class="ttdoc">Intermediate representation of the final, complete kernel source. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_building_a_p_i_8h_source.xhtml#l00046">ClKernelBuildingAPI.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ee8e10e12b8d521a028c681b8ba31ad"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">arm_compute::experimental::dynamic_fusion::generate</a></div><div class="ttdeci">Status generate(ClWorkload &amp;workload, const ClWorkloadContext &amp;ctx, const ClFusedKernelGraph &amp;fused_kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">ClFusedKernelGraph.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a911f45bf464369c75141cb4b8e34643f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a911f45bf464369c75141cb4b8e34643f">arm_compute::experimental::dynamic_fusion::DependencyGraph::src_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; src_tensors(Id op) const</div><div class="ttdoc">Get source tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00175">DependencyGraph.cpp:175</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00127">ClFusedKernelGraph.h:127</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_ab05719fb0811c6eb8a452864575501e2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#ab05719fb0811c6eb8a452864575501e2">arm_compute::experimental::dynamic_fusion::is_in</a></div><div class="ttdeci">bool is_in(const T &amp;v, const std::vector&lt; T &gt; &amp;vec)</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00041">DependencyGraph.h:41</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00085">ClKernelGraph.h:85</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a527d977707d7a8bb41a0fef58f91b108"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a527d977707d7a8bb41a0fef58f91b108">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::set_id</a></div><div class="ttdeci">void set_id(Id i)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00059">ClFusedKernelGraph.h:59</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa11c975459908699abf6078773ae19b3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa11c975459908699abf6078773ae19b3">arm_compute::experimental::dynamic_fusion::fuse</a></div><div class="ttdeci">Status fuse(ClFusedKernelGraph &amp;fused_kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00096">ClFusedKernelGraph.cpp:96</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml_a2ea3d1fc01a3a442900249ca182ffa5e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a2ea3d1fc01a3a442900249ca182ffa5e">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00057">SaturateCast.h:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a5a6fe0d3f177e19aee60dc6eb2087649"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a5a6fe0d3f177e19aee60dc6eb2087649">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::operator==</a></div><div class="ttdeci">friend bool operator==(const ClFusedKernelGraph &amp;graph0, const ClFusedKernelGraph &amp;graph1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00148">ClFusedKernelGraph.h:148</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00047">Validate.h:47</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579"><div class="ttname"><a href="namespacearm__compute.xhtml#a59e56af19e754a6aa26a612ebf91d05fa62be47fdd89da032cf78dfce82239579">arm_compute::ErrorCode::RUNTIME_ERROR</a></div><div class="ttdoc">Generic runtime error. </div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a75b6d128d424366fa939e7cb8dec950b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a75b6d128d424366fa939e7cb8dec950b">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::add_fused_kernel</a></div><div class="ttdeci">Id add_fused_kernel(const ClKernel *kernel)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00064">ClFusedKernelGraph.h:64</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a068917c263ae8c7babff14f929ffe6e0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a068917c263ae8c7babff14f929ffe6e0">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::fusion_groups</a></div><div class="ttdeci">KernelFusionGroupMap fusion_groups</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00404">ClFusedKernelGraph.h:404</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a09a3e533a331d82635595317d822247e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a09a3e533a331d82635595317d822247e">arm_compute::experimental::dynamic_fusion::DependencyGraph::dst_tensors</a></div><div class="ttdeci">std::vector&lt; Id &gt; dst_tensors(Id op) const</div><div class="ttdoc">Get destination tensors to an operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00181">DependencyGraph.cpp:181</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="_cl_kernel_graph_8h_xhtml"><div class="ttname"><a href="_cl_kernel_graph_8h.xhtml">ClKernelGraph.h</a></div></div>
<div class="ttc" id="_dependency_graph_8h_xhtml"><div class="ttname"><a href="_dependency_graph_8h.xhtml">DependencyGraph.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_a5922b6c22c15729162e749f06f7f518c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#a5922b6c22c15729162e749f06f7f518c">arm_compute::experimental::dynamic_fusion::DependencyGraph::add_operator</a></div><div class="ttdeci">std::pair&lt; Status, DependencyGraph::Id &gt; add_operator(const std::vector&lt; Id &gt; &amp;inputs, const std::vector&lt; Id &gt; &amp;outputs)</div><div class="ttdoc">Add a new operator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2experimental_2dynamic__fusion_2_workload_impl_2_dependency_graph_8cpp_source.xhtml#l00103">DependencyGraph.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup</a></div><div class="ttdoc">A const view of a subgraph of the ClKernelGraph to be fused together. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00047">ClFusedKernelGraph.h:47</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_abce0915a497036421922e68272426398"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abce0915a497036421922e68272426398">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::ClKernelFusionGroup</a></div><div class="ttdeci">ClKernelFusionGroup(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00053">ClFusedKernelGraph.h:53</a></div></div>
<div class="ttc" id="_deep_copy_8h_xhtml"><div class="ttname"><a href="_deep_copy_8h.xhtml">DeepCopy.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml_a831a69d9f9da710cecb943fd1a84ffcc"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml#a831a69d9f9da710cecb943fd1a84ffcc">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph::KernelFusionGroupMap</a></div><div class="ttdeci">std::map&lt; Id, utils::memory::deep_unique_ptr&lt; ClKernelFusionGroup &gt; &gt; KernelFusionGroupMap</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00139">ClFusedKernelGraph.h:139</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a9ea022383d2a3ceda79b9c1c569cca29"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a9ea022383d2a3ceda79b9c1c569cca29">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::get_dst_tensors</a></div><div class="ttdeci">std::vector&lt; const ClKernelTensor * &gt; get_dst_tensors() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00111">ClFusedKernelGraph.h:111</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aac5e2a1f61e8ea5255aca62f83e9124f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">arm_compute::experimental::dynamic_fusion::DependencyGraph::Id</a></div><div class="ttdeci">SerialIdAllocator::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00073">DependencyGraph.h:73</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_abe9573bdefe0575529bf33c535474a52"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#abe9573bdefe0575529bf33c535474a52">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::get_root_kernel</a></div><div class="ttdeci">const ClKernel * get_root_kernel() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00094">ClFusedKernelGraph.h:94</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a124185cc0f16b8bc162cf4845c91d1d2"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a124185cc0f16b8bc162cf4845c91d1d2">arm_compute::experimental::dynamic_fusion::init_fusion_graph</a></div><div class="ttdeci">std::pair&lt; Status, ClFusedKernelGraph &gt; init_fusion_graph(const ClKernelGraph &amp;kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00083">ClFusedKernelGraph.cpp:83</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_aa1638bbce7b5fb7c83c81d499757cb8c"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#aa1638bbce7b5fb7c83c81d499757cb8c">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::get_src_tensors</a></div><div class="ttdeci">std::vector&lt; const ClKernelTensor * &gt; get_src_tensors() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00101">ClFusedKernelGraph.h:101</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a8d6a9002a9d5c0fc67a8c4d547b37491"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a8d6a9002a9d5c0fc67a8c4d547b37491">arm_compute::experimental::dynamic_fusion::generate_store</a></div><div class="ttdeci">Status generate_store(ClKernelBlueprint &amp;bp, const ClFusedKernelGraph &amp;fused_kernel_graph, const ClKernelFusionGroup &amp;fg)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00132">ClFusedKernelGraph.cpp:132</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00050">ClFusedKernelGraph.h:50</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group_xhtml_a78a4753caf58e55340ca79c6a1008458"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_fusion_group.xhtml#a78a4753caf58e55340ca79c6a1008458">arm_compute::experimental::dynamic_fusion::ClKernelFusionGroup::operator==</a></div><div class="ttdeci">friend bool operator==(const ClKernelFusionGroup &amp;fg0, const ClKernelFusionGroup &amp;fg1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00121">ClFusedKernelGraph.h:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_fused_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClFusedKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8h_source.xhtml#l00134">ClFusedKernelGraph.h:134</a></div></div>
<div class="ttc" id="_cl_kernel_building_a_p_i_8h_xhtml"><div class="ttname"><a href="_cl_kernel_building_a_p_i_8h.xhtml">ClKernelBuildingAPI.h</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_4a5d79691feea64a5adaad9e433740c9.xhtml">WorkloadImpl</a></li><li class="navelem"><a class="el" href="_cl_fused_kernel_graph_8h.xhtml">ClFusedKernelGraph.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
