<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/experimental/dynamic_fusion/WorkloadImpl/ClKernelGraph.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_kernel_graph_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClKernelGraph.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_kernel_graph_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLKERNELGRAPH_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLKERNELGRAPH_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_8h.xhtml">arm_compute/core/experimental/ClWorkload.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dependency_graph_8h.xhtml">arm_compute/core/experimental/DependencyGraph.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_descriptors_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ClKernelDescriptors.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_desc_pack_8h.xhtml">src/core/experimental/dynamic_fusion/WorkloadImpl/ITensorDescPack.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_deep_copy_8h.xhtml">support/DeepCopy.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">struct </span>ClKernelGraph;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">class </span>ClKernelBlueprint;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">   45</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">Complexity</a></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Simple</a>,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">Complex</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;};</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/** Configurations for ClKernel</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">   54</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">   56</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> stage{};</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#adf98ebda8e143cf32f3ffab61dc0b7f6">   57</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">TileDescriptor</a>    tile_desc{};</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#ad23797ef0c0583b23745b17440de726d">   58</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450c">StoreType</a>         store_type{};</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a39dc8aa8f22cfaaf6c01936410d8173a">   59</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a39dc8aa8f22cfaaf6c01936410d8173a">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config1)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> config0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">stage</a> == config1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">stage</a> &amp;&amp; config0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#adf98ebda8e143cf32f3ffab61dc0b7f6">tile_desc</a> == config1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#adf98ebda8e143cf32f3ffab61dc0b7f6">tile_desc</a> &amp;&amp; config0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#ad23797ef0c0583b23745b17440de726d">store_type</a> == config1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#ad23797ef0c0583b23745b17440de726d">store_type</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;};</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">   65</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">ClKernelTensor</a></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">   68</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>         = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">ClKernelTensor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#a9583c02992022036e2aec13f4e3d9aa6">   70</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#a9583c02992022036e2aec13f4e3d9aa6">ClKernelTensor</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *desc, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;memory_info)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        : id{ <span class="keywordtype">id</span> }, desc{ desc }, memory_type{ memory_type }, memory_info{ memory_info }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#ac2f9894a04cb55030452f07e2cff31e0">   74</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#ac2f9894a04cb55030452f07e2cff31e0">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">ClKernelTensor</a> &amp;other)<span class="keyword"> const</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> desc == other.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">desc</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#a150a709e86e7134d17cd063de6810b6c">   79</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>            <span class="keywordtype">id</span>{};</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">   80</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *desc{};</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#a94027e3c81d728a99b19a9f91ea0f267">   81</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>    memory_type{};</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#abd1839b751c3e3abfec78177d70b8cb4">   82</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> memory_info{};</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">   85</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">   88</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>                         = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>()                       = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>()              = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;kernel) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;operator=(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;kernel) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;&amp;kernel)                 = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;operator=(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;&amp;kernel) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#acb82e728b09e523511ac61de8a827cd4">   95</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#acb82e728b09e523511ac61de8a827cd4">ClKernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> &amp;tensors)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        : _graph{ graph }, _id{ <span class="keywordtype">id</span> }, _config{ config }, _tensors{ tensors }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;other) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">Complexity</a> complexity() <span class="keyword">const</span>                = 0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> &amp;bp) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a6d8899600fb70fa2ab87618ddcadc1e4">  102</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a6d8899600fb70fa2ab87618ddcadc1e4">id</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> _id;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">  106</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">tensors</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> _tensors;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a220ff6a1c45002ec7d5ef4334a1c1d67">  110</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a220ff6a1c45002ec7d5ef4334a1c1d67">config</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> _config;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a>            *_graph {};</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>                              _id{};</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a>                  _config{};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> _tensors{};</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">  122</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">ClDirectConv2dKernel</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#a7c8604eecad45927688111135a2518b1">  125</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">Complexity</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#a7c8604eecad45927688111135a2518b1">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">Complexity::Complex</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">ClDirectConv2dKernel</a>()           = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">ClDirectConv2dKernel</a>() <span class="keyword">override</span> = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ad092cc9aacd4142894da8d0e8fe83c2f">  131</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ad092cc9aacd4142894da8d0e8fe83c2f">ClDirectConv2dKernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> config, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>{ graph, id, config, tensors }, desc{ desc }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *biases, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">conv2d_desc</a>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> &amp;bp) <span class="keyword">const override</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ad00561059ebf182c4b98c816e495df09">  139</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">ClDirectConv2dKernelDescriptor</a> desc{};</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;};</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">  142</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">ClElementwiseKernel</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a7c8604eecad45927688111135a2518b1">  145</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">Complexity</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a7c8604eecad45927688111135a2518b1">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Complexity::Simple</a>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">ClElementwiseKernel</a>()           = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">ClElementwiseKernel</a>() <span class="keyword">override</span> = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a10077c763be6d7e404bc2c654a2f4de7">  151</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a10077c763be6d7e404bc2c654a2f4de7">ClElementwiseKernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml">ClElementwiseKernelDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>{ graph, id, config, tensors }, desc{ desc }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *lhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *rhs, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> &amp;bp) <span class="keyword">const override</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#af22f49b40ed5e43f4bcd3d11ae01c25d">  159</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml">ClElementwiseKernelDescriptor</a> desc{};</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;};</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">  162</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">ClFloorKernel</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a7c8604eecad45927688111135a2518b1">  165</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">Complexity</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a7c8604eecad45927688111135a2518b1">complexity</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">Complexity::Simple</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">ClFloorKernel</a>()           = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">ClFloorKernel</a>() <span class="keyword">override</span> = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a35cd1094bc13ef808e9d5170eb223426">  171</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a35cd1094bc13ef808e9d5170eb223426">ClFloorKernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> *graph, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor.xhtml">ClFloorKernelDescriptor</a> &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> tensors)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a>{ graph, id, config, tensors }, desc{ desc }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> &amp;other) <span class="keyword">const override</span>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">generate</a>(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">ClKernelBlueprint</a> &amp;bp) <span class="keyword">const override</span>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a38d8c140ec24d21c91f71b4271c58e60">  179</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor.xhtml">ClFloorKernelDescriptor</a> desc{};</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;};</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">  182</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">  185</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a>              = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a6b39012db6571868057d7978b05eaaec">  186</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a6b39012db6571868057d7978b05eaaec">KernelMap</a>       = std::map&lt;Id, utils::memory::deep_unique_ptr&lt;ClKernel&gt;&gt;;</div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a4b9611e776e6755761b969913ddbf7c8">  187</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a4b9611e776e6755761b969913ddbf7c8">KernelTensorMap</a> = std::map&lt;Id, utils::memory::deep_unique_ptr&lt;ClKernelTensor&gt;&gt;;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a>()  = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#af572cc50a76d1fa4fbcf6fc4a89e7dfa">  192</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#af572cc50a76d1fa4fbcf6fc4a89e7dfa">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;graph0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;graph1)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">return</span> graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a> &amp;&amp; graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ae0e730ec3dd1aa85fe896b4be217b829">kernels</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ae0e730ec3dd1aa85fe896b4be217b829">kernels</a> &amp;&amp; graph0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9cdc03419602ac0c475d405bde831051">tensors</a> == graph1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9cdc03419602ac0c475d405bde831051">tensors</a>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a2d1666d00cc55fb45fa1ea8eba312999">  197</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a2d1666d00cc55fb45fa1ea8eba312999">add_kernel_tensor</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *desc, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;memory_info, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> &amp;tensor_id, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> merge_point = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aec15c89db50c5cb48154f3e1e56303f1">DependencyGraph::empty_id</a>())</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        tensor_id = graph.add_tensor(merge_point);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">if</span>(tensors.find(tensor_id) == tensors.end())</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            tensors[tensor_id] = utils::memory::make_deep_unique&lt;ClKernelTensor, ClKernelTensor&gt;(tensor_id, desc, memory_type, memory_info);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ContentT, <span class="keyword">typename</span> KernelDescT&gt;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">  208</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">add_kernel</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">ClKernelConfig</a> &amp;config, <span class="keyword">const</span> KernelDescT &amp;desc, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">ITensorDescPack&lt;ClKernelTensor&gt;</a> &amp;tensors, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> &amp;kernel_id)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      src_tensors = tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aff8056850f0c668e3212b7f9328a09c5">get_const_src_tensors</a>();</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>      dst_tensors = tensors.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a954c38e39aec982618c6f87688765086">get_const_dst_tensors</a>();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        std::vector&lt;Id&gt; src_tensor_ids{};</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        std::vector&lt;Id&gt; dst_tensor_ids{};</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : src_tensors)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            src_tensor_ids.push_back(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a> : dst_tensors)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            dst_tensor_ids.push_back(<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>-&gt;id);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        kernel_id          = graph.add_operator(src_tensor_ids, dst_tensor_ids).second;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>             = utils::memory::make_deep_unique&lt;ClKernel, ContentT&gt;(<span class="keyword">this</span>, kernel_id, config, desc, tensors);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        kernels[kernel_id] = std::move(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1ed47af51d009216caed66645477d505">  228</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1ed47af51d009216caed66645477d505">get_kernel</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> kernels.at(<span class="keywordtype">id</span>).get();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9afc223aa88a240be9c4bd315f5cb450">  232</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">ClKernel</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9afc223aa88a240be9c4bd315f5cb450">get_kernel</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">return</span> kernels.at(<span class="keywordtype">id</span>).get();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">  237</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">ClKernelTensor</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">get_tensor</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">return</span> tensors.at(<span class="keywordtype">id</span>).get();</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ad07fb356d751b8447a221f613c5aec0f">  241</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">ClKernelTensor</a> *<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ad07fb356d751b8447a221f613c5aec0f">get_tensor</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">return</span> tensors.at(<span class="keywordtype">id</span>).get();</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">  246</a></span>&#160;    <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">DependencyGraph</a> graph{};</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ae0e730ec3dd1aa85fe896b4be217b829">  247</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a6b39012db6571868057d7978b05eaaec">KernelMap</a>       kernels{};</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9cdc03419602ac0c475d405bde831051">  248</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a4b9611e776e6755761b969913ddbf7c8">KernelTensorMap</a> tensors{};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;};</div><div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">  250</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">DependencyGraph::Id</a>;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;std::vector&lt;const ClKernel *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;graph);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;std::vector&lt;ClKernel *&gt; <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">traverse</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">ClKernelGraph</a> &amp;graph);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLKERNELGRAPH_H</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_acb82e728b09e523511ac61de8a827cd4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#acb82e728b09e523511ac61de8a827cd4">arm_compute::experimental::dynamic_fusion::ClKernel::ClKernel</a></div><div class="ttdeci">ClKernel(const ClKernelGraph *graph, Id id, const ClKernelConfig &amp;config, const ITensorDescPack&lt; ClKernelTensor &gt; &amp;tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00095">ClKernelGraph.h:95</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml">arm_compute::experimental::dynamic_fusion::DependencyGraph</a></div><div class="ttdoc">The dependency graph of a workload, where the nodes are of 2 types: Tensor or Operator Represented as...</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00051">DependencyGraph.h:51</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a048af4e9fc68526bf6d39e80e043a456"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a048af4e9fc68526bf6d39e80e043a456">arm_compute::experimental::dynamic_fusion::validate</a></div><div class="ttdeci">Status validate(const OperatorGraph &amp;op_graph)</div><div class="ttdoc">Return the validity of op_graph, usually after performing an operation (e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8cpp_source.xhtml#l00121">OperatorGraph.cpp:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_xhtml_a7c8604eecad45927688111135a2518b1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#a7c8604eecad45927688111135a2518b1">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel::complexity</a></div><div class="ttdeci">Complexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00125">ClKernelGraph.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a1fbb1e3943c2c6c560247ac8f9289780">arm_compute::experimental::dynamic_fusion::ComponentType::Simple</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_a450f4a8b4757eaf3dee4d3a879e5820a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a450f4a8b4757eaf3dee4d3a879e5820a">arm_compute::experimental::dynamic_fusion::ClKernel::tensors</a></div><div class="ttdeci">ITensorDescPack&lt; ClKernelTensor &gt; tensors() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00106">ClKernelGraph.h:106</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a9cdc03419602ac0c475d405bde831051"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9cdc03419602ac0c475d405bde831051">arm_compute::experimental::dynamic_fusion::ClKernelGraph::tensors</a></div><div class="ttdeci">KernelTensorMap tensors</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00248">ClKernelGraph.h:248</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelGraph</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00182">ClKernelGraph.h:182</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml_aaf16d8c575940cda81e904c1285b11c6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#aaf16d8c575940cda81e904c1285b11c6">arm_compute::experimental::dynamic_fusion::ClKernelTensor::desc</a></div><div class="ttdeci">ITensorInfo * desc</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00080">ClKernelGraph.h:80</a></div></div>
<div class="ttc" id="_cl_workload_8h_xhtml"><div class="ttname"><a href="_cl_workload_8h.xhtml">ClWorkload.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_aff8056850f0c668e3212b7f9328a09c5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#aff8056850f0c668e3212b7f9328a09c5">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_const_src_tensors</a></div><div class="ttdeci">std::vector&lt; const TDesc * &gt; get_const_src_tensors() const</div><div class="ttdoc">Get the const ACL_SRC_* tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00180">ITensorDescPack.h:180</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_xhtml_a10077c763be6d7e404bc2c654a2f4de7"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a10077c763be6d7e404bc2c654a2f4de7">arm_compute::experimental::dynamic_fusion::ClElementwiseKernel::ClElementwiseKernel</a></div><div class="ttdeci">ClElementwiseKernel(const ClKernelGraph *graph, Id id, const ClKernelConfig &amp;config, const ClElementwiseKernelDescriptor &amp;desc, const ITensorDescPack&lt; ClKernelTensor &gt; tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00151">ClKernelGraph.h:151</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml_adf98ebda8e143cf32f3ffab61dc0b7f6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#adf98ebda8e143cf32f3ffab61dc0b7f6">arm_compute::experimental::dynamic_fusion::ClKernelConfig::tile_desc</a></div><div class="ttdeci">TileDescriptor tile_desc</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00057">ClKernelGraph.h:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClFloorKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00162">ClKernelGraph.h:162</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a9afc223aa88a240be9c4bd315f5cb450"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a9afc223aa88a240be9c4bd315f5cb450">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_kernel</a></div><div class="ttdeci">const ClKernel * get_kernel(Id id) const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00232">ClKernelGraph.h:232</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_a6d8899600fb70fa2ab87618ddcadc1e4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a6d8899600fb70fa2ab87618ddcadc1e4">arm_compute::experimental::dynamic_fusion::ClKernel::id</a></div><div class="ttdeci">Id id() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00102">ClKernelGraph.h:102</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0e5a222683b4e850a681a8b7f593f9c3"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0e5a222683b4e850a681a8b7f593f9c3">arm_compute::experimental::dynamic_fusion::traverse</a></div><div class="ttdeci">std::vector&lt; const ClKernel * &gt; traverse(const ClKernelFusionGroup &amp;group)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00050">ClFusedKernelGraph.cpp:50</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">arm_compute::experimental::dynamic_fusion::MemoryType</a></div><div class="ttdeci">MemoryType</div><div class="ttdoc">Type of memory used by a Workload Tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00059">IWorkload.h:59</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_xhtml_a7c8604eecad45927688111135a2518b1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a7c8604eecad45927688111135a2518b1">arm_compute::experimental::dynamic_fusion::ClFloorKernel::complexity</a></div><div class="ttdeci">Complexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00165">ClKernelGraph.h:165</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClElementwiseKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00142">ClKernelGraph.h:142</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_xhtml_ad092cc9aacd4142894da8d0e8fe83c2f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml#ad092cc9aacd4142894da8d0e8fe83c2f">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel::ClDirectConv2dKernel</a></div><div class="ttdeci">ClDirectConv2dKernel(const ClKernelGraph *graph, Id id, const ClKernelConfig config, const ClDirectConv2dKernelDescriptor &amp;desc, const ITensorDescPack&lt; ClKernelTensor &gt; tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00131">ClKernelGraph.h:131</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_blueprint.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelBlueprint</a></div><div class="ttdoc">Intermediate representation of the final, complete kernel source. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_building_a_p_i_8h_source.xhtml#l00046">ClKernelBuildingAPI.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ee8e10e12b8d521a028c681b8ba31ad"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ee8e10e12b8d521a028c681b8ba31ad">arm_compute::experimental::dynamic_fusion::generate</a></div><div class="ttdeci">Status generate(ClWorkload &amp;workload, const ClWorkloadContext &amp;ctx, const ClFusedKernelGraph &amp;fused_kernel_graph)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fused_kernel_graph_8cpp_source.xhtml#l00170">ClFusedKernelGraph.cpp:170</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml">arm_compute::experimental::dynamic_fusion::ITensorDescPack</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00039">ITensorDescPack.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00085">ClKernelGraph.h:85</a></div></div>
<div class="ttc" id="_cl_kernel_descriptors_8h_xhtml"><div class="ttname"><a href="_cl_kernel_descriptors_8h.xhtml">ClKernelDescriptors.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml_ad23797ef0c0583b23745b17440de726d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#ad23797ef0c0583b23745b17440de726d">arm_compute::experimental::dynamic_fusion::ClKernelConfig::store_type</a></div><div class="ttdeci">StoreType store_type</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00058">ClKernelGraph.h:58</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClFloorKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00054">ClKernelDescriptors.h:54</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a204edbd0a54dd4c773a4f5a0e14f450c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a204edbd0a54dd4c773a4f5a0e14f450c">arm_compute::experimental::dynamic_fusion::StoreType</a></div><div class="ttdeci">StoreType</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00103">ClKernelDescriptors.h:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::ClKernelTensor::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00068">ClKernelGraph.h:68</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelConfig</a></div><div class="ttdoc">Configurations for ClKernel. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00054">ClKernelGraph.h:54</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::ClKernel::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00088">ClKernelGraph.h:88</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a81f78fc173dedefe5a049c0aa3eed2c0a10b4eb76294b70d7fd6df997ff06edb1">arm_compute::experimental::dynamic_fusion::ComponentType::Complex</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClElementwiseKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00045">ClKernelDescriptors.h:45</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml_a9583c02992022036e2aec13f4e3d9aa6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#a9583c02992022036e2aec13f4e3d9aa6">arm_compute::experimental::dynamic_fusion::ClKernelTensor::ClKernelTensor</a></div><div class="ttdeci">ClKernelTensor(Id id, ITensorInfo *desc, MemoryType memory_type, const AuxMemoryInfo &amp;memory_info)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00070">ClKernelGraph.h:70</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00250">ClKernelGraph.h:250</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::ClKernelGraph::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00246">ClKernelGraph.h:246</a></div></div>
<div class="ttc" id="_i_tensor_desc_pack_8h_xhtml"><div class="ttname"><a href="_i_tensor_desc_pack_8h.xhtml">ITensorDescPack.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_tile_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::TileDescriptor</a></div><div class="ttdoc">Component: Store. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00079">ClKernelDescriptors.h:79</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_ae0e730ec3dd1aa85fe896b4be217b829"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ae0e730ec3dd1aa85fe896b4be217b829">arm_compute::experimental::dynamic_fusion::ClKernelGraph::kernels</a></div><div class="ttdeci">KernelMap kernels</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00247">ClKernelGraph.h:247</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage</a></div><div class="ttdoc">Describes when a Unit Workload is run. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00043">IWorkload.h:43</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml_a36ce53d08bf79109e0ca1d9a05c3cbfb"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">arm_compute::experimental::dynamic_fusion::ClKernelConfig::stage</a></div><div class="ttdeci">UnitWorkloadStage stage</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00056">ClKernelGraph.h:56</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::ClKernelGraph::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00185">ClKernelGraph.h:185</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config_xhtml_a39dc8aa8f22cfaaf6c01936410d8173a"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_config.xhtml#a39dc8aa8f22cfaaf6c01936410d8173a">arm_compute::experimental::dynamic_fusion::ClKernelConfig::operator==</a></div><div class="ttdeci">friend bool operator==(const ClKernelConfig &amp;config0, const ClKernelConfig &amp;config1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00059">ClKernelGraph.h:59</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_ad07fb356d751b8447a221f613c5aec0f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#ad07fb356d751b8447a221f613c5aec0f">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_tensor</a></div><div class="ttdeci">const ClKernelTensor * get_tensor(Id id) const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00241">ClKernelGraph.h:241</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel_xhtml_a35cd1094bc13ef808e9d5170eb223426"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_floor_kernel.xhtml#a35cd1094bc13ef808e9d5170eb223426">arm_compute::experimental::dynamic_fusion::ClFloorKernel::ClFloorKernel</a></div><div class="ttdeci">ClFloorKernel(const ClKernelGraph *graph, Id id, const ClKernelConfig &amp;config, const ClFloorKernelDescriptor &amp;desc, const ITensorDescPack&lt; ClKernelTensor &gt; tensors)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00171">ClKernelGraph.h:171</a></div></div>
<div class="ttc" id="_dependency_graph_8h_xhtml"><div class="ttname"><a href="_dependency_graph_8h.xhtml">DependencyGraph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aec15c89db50c5cb48154f3e1e56303f1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aec15c89db50c5cb48154f3e1e56303f1">arm_compute::experimental::dynamic_fusion::DependencyGraph::empty_id</a></div><div class="ttdeci">static constexpr Id empty_id()</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00097">DependencyGraph.h:97</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory Info for a WorkloadTensor of Auxiliary memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00070">IWorkload.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernel</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00122">ClKernelGraph.h:122</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a6b39012db6571868057d7978b05eaaec"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a6b39012db6571868057d7978b05eaaec">arm_compute::experimental::dynamic_fusion::ClKernelGraph::KernelMap</a></div><div class="ttdeci">std::map&lt; Id, utils::memory::deep_unique_ptr&lt; ClKernel &gt; &gt; KernelMap</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00186">ClKernelGraph.h:186</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_direct_conv2d_kernel_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClDirectConv2dKernelDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_descriptors_8h_source.xhtml#l00036">ClKernelDescriptors.h:36</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a1dbb5cee7e0db713bcdb126bd9db5d67"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1dbb5cee7e0db713bcdb126bd9db5d67">arm_compute::experimental::dynamic_fusion::ClKernelGraph::add_kernel</a></div><div class="ttdeci">Status add_kernel(const ClKernelConfig &amp;config, const KernelDescT &amp;desc, const ITensorDescPack&lt; ClKernelTensor &gt; &amp;tensors, Id &amp;kernel_id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00208">ClKernelGraph.h:208</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a562285808c3bd1107ae49be79d24d41f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a562285808c3bd1107ae49be79d24d41f">arm_compute::test::validation::conv2d_desc</a></div><div class="ttdeci">const auto conv2d_desc</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00254">Integration_OperatorFuseMovenetSubGraph1.cpp:254</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a4b9611e776e6755761b969913ddbf7c8"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a4b9611e776e6755761b969913ddbf7c8">arm_compute::experimental::dynamic_fusion::ClKernelGraph::KernelTensorMap</a></div><div class="ttdeci">std::map&lt; Id, utils::memory::deep_unique_ptr&lt; ClKernelTensor &gt; &gt; KernelTensorMap</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00187">ClKernelGraph.h:187</a></div></div>
<div class="ttc" id="_deep_copy_8h_xhtml"><div class="ttname"><a href="_deep_copy_8h.xhtml">DeepCopy.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelTensor</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00065">ClKernelGraph.h:65</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph_xhtml_aac5e2a1f61e8ea5255aca62f83e9124f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_dependency_graph.xhtml#aac5e2a1f61e8ea5255aca62f83e9124f">arm_compute::experimental::dynamic_fusion::DependencyGraph::Id</a></div><div class="ttdeci">SerialIdAllocator::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_dependency_graph_8h_source.xhtml#l00073">DependencyGraph.h:73</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel_xhtml_a7c8604eecad45927688111135a2518b1"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_elementwise_kernel.xhtml#a7c8604eecad45927688111135a2518b1">arm_compute::experimental::dynamic_fusion::ClElementwiseKernel::complexity</a></div><div class="ttdeci">Complexity complexity() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00145">ClKernelGraph.h:145</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a2d1666d00cc55fb45fa1ea8eba312999"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a2d1666d00cc55fb45fa1ea8eba312999">arm_compute::experimental::dynamic_fusion::ClKernelGraph::add_kernel_tensor</a></div><div class="ttdeci">Status add_kernel_tensor(ITensorInfo *desc, MemoryType memory_type, const AuxMemoryInfo &amp;memory_info, Id &amp;tensor_id, Id merge_point=DependencyGraph::empty_id())</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00197">ClKernelGraph.h:197</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_af572cc50a76d1fa4fbcf6fc4a89e7dfa"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#af572cc50a76d1fa4fbcf6fc4a89e7dfa">arm_compute::experimental::dynamic_fusion::ClKernelGraph::operator==</a></div><div class="ttdeci">friend bool operator==(const ClKernelGraph &amp;graph0, const ClKernelGraph &amp;graph1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00192">ClKernelGraph.h:192</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_af08b2231cd81fad5422b1d7240d26806"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#af08b2231cd81fad5422b1d7240d26806">arm_compute::experimental::dynamic_fusion::operator==</a></div><div class="ttdeci">bool operator==(const OpTensor &amp;t0, const OpTensor &amp;t1)</div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_impl_8cpp_source.xhtml#l00103">OperatorGraphImpl.cpp:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a1ed47af51d009216caed66645477d505"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a1ed47af51d009216caed66645477d505">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_kernel</a></div><div class="ttdeci">ClKernel * get_kernel(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00228">ClKernelGraph.h:228</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a1be225b6ce99897e03ffa3732d2bbe11"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a1be225b6ce99897e03ffa3732d2bbe11">arm_compute::experimental::dynamic_fusion::Complexity</a></div><div class="ttdeci">Complexity</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00045">ClKernelGraph.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack_xhtml_a954c38e39aec982618c6f87688765086"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_tensor_desc_pack.xhtml#a954c38e39aec982618c6f87688765086">arm_compute::experimental::dynamic_fusion::ITensorDescPack::get_const_dst_tensors</a></div><div class="ttdeci">std::vector&lt; const TDesc * &gt; get_const_dst_tensors() const</div><div class="ttdoc">Get the const ACL_DST_* tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_desc_pack_8h_source.xhtml#l00214">ITensorDescPack.h:214</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph_xhtml_a26ce1702be726c11355b21545e75e207"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_graph.xhtml#a26ce1702be726c11355b21545e75e207">arm_compute::experimental::dynamic_fusion::ClKernelGraph::get_tensor</a></div><div class="ttdeci">ClKernelTensor * get_tensor(Id id)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00237">ClKernelGraph.h:237</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor_xhtml_ac2f9894a04cb55030452f07e2cff31e0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_tensor.xhtml#ac2f9894a04cb55030452f07e2cff31e0">arm_compute::experimental::dynamic_fusion::ClKernelTensor::operator==</a></div><div class="ttdeci">bool operator==(const ClKernelTensor &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00074">ClKernelGraph.h:74</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_xhtml_a220ff6a1c45002ec7d5ef4334a1c1d67"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel.xhtml#a220ff6a1c45002ec7d5ef4334a1c1d67">arm_compute::experimental::dynamic_fusion::ClKernel::config</a></div><div class="ttdeci">ClKernelConfig config() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_graph_8h_source.xhtml#l00110">ClKernelGraph.h:110</a></div></div>
<div class="ttc" id="namespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_b7458c46e3e273561b07052265b89043.xhtml">experimental</a></li><li class="navelem"><a class="el" href="dir_4ba1de0cc05164046c8a7675a91253dd.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_4a5d79691feea64a5adaad9e433740c9.xhtml">WorkloadImpl</a></li><li class="navelem"><a class="el" href="_cl_kernel_graph_8h.xhtml">ClKernelGraph.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
