<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/experimental/ClWorkload.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_workload_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClWorkload.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_workload_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef ENABLE_EXPERIMENTAL_DYNAMIC_FUSION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLWORKLOAD_H</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLWORKLOAD_H</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h.xhtml">arm_compute/core/CL/CLCompileContext.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_p_u_target_8h.xhtml">arm_compute/core/GPUTarget.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_workload_8h.xhtml">arm_compute/core/experimental/IWorkload.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_operator_graph_8h.xhtml">arm_compute/core/experimental/OperatorGraph.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental.xhtml">   39</a></span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">   41</a></span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/** Verbose and explicit way to enumerate all the tensor arguments variants used by</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> *  all kernel implementations. This avoids any ambiguity in what kernel arguments are passed</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">   46</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">ClKernelTensorArgType</a> : int</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7af60357a8d17e45793298323f1b372a74">Scalar</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110">Vector</a>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7abe53a0541a6d36f6ecb879fa2c584b08">Image</a>,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a61de9daebcac10786dff102d741a99db">Image_Reinterpret_As_3D</a>,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7">Image_Export_To_ClImage2D</a>,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a963c0c0999b3c937f36565fae3b0ef54">Image_3D</a>, <span class="comment">// 3D Tensor represented as a 2D Image + stride_z</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0">Image_3D_Export_To_ClImage2D</a>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a30bd3b885ab6a7786a0117197346c49c">Tensor_3D</a>,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a73d5ced9c9cf7e7cdffe9016d463c2b4">Tensor_4D</a>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">Tensor_4D_t_Buffer</a>,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">Tensor_4D_t_Image</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;};</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">/** Describes all the info required to add a kernel argument at run time</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> *  @note This struct can later be expanded into a more concise and formal way to specify how to set up</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *  arguments for a kernel inside a @ref ClUnitWorkload</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">   70</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#aa2818547974951c041a0310adfab4654">   73</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#aa2818547974951c041a0310adfab4654">ClKernelArgDescriptor</a>(<span class="keywordtype">int</span> arg_id, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">ClKernelTensorArgType</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>, <span class="keywordtype">bool</span> slide_along_dimz = <span class="keyword">true</span>)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        : arg_id{ arg_id }, tensor_arg_type{ <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> }, slide_along_dimz{ slide_along_dimz }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ~<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a9fcb86f9d0c41af04bb5bc52d71503fa">   78</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a9fcb86f9d0c41af04bb5bc52d71503fa">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;arg0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;arg1)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> (arg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">tensor_arg_type</a> == arg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">tensor_arg_type</a>) &amp;&amp; (arg0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#afa621263dfe60624b51a91c35bceee2b">slide_along_dimz</a> == arg1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#afa621263dfe60624b51a91c35bceee2b">slide_along_dimz</a>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#adfa80de0bc69cd442b84b8c11a036925">   82</a></span>&#160;    <span class="keywordtype">int</span>                   arg_id{ -1 };                                    <span class="comment">/**&lt; Arg ID in the blueprint, -1 means empty / uninitialized */</span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">   83</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">ClKernelTensorArgType</a> tensor_arg_type{ <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7abe53a0541a6d36f6ecb879fa2c584b08">ClKernelTensorArgType::Image</a> }; <span class="comment">/**&lt; tensor argument type */</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#afa621263dfe60624b51a91c35bceee2b">   84</a></span>&#160;    <span class="keywordtype">bool</span>                  slide_along_dimz{ <span class="keyword">true</span> };                        <span class="comment">/**&lt; @note slide_along_dimz will be moved out of this descriptor in later iterations */</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">   87</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a> = std::map&lt;int, ClKernelArgDescriptor&gt;;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">/** Descriptor containing information required to run a single ClWorkload</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml">   91</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml">ClExecutionDescriptor</a></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml#a0c9c874d69d8d94bcb59c3000af3c42a">   93</a></span>&#160;    cl::NDRange suggested_lws{};              <span class="comment">/**&lt; Suggested local work-group size for optimal performance if not zero */</span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml#a11d00ac08c056f588ef3cbb566497ea2">   94</a></span>&#160;    cl::NDRange gws{};                        <span class="comment">/**&lt; Global work-group to be used */</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml#a57fea6866cd8f61933e7664666fa7e13">   95</a></span>&#160;    <span class="keywordtype">bool</span>        skip_sliding_window{ <span class="keyword">false</span> }; <span class="comment">/**&lt; Skip sliding window slices during execution loop */</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">/** Contains kernel code to be compiled and run in a ClUnitWorkload</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">  100</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a4b6f34915eb2267570a648f1e8d318a6">  102</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a4b6f34915eb2267570a648f1e8d318a6">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;code0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;code1)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>) &amp;&amp; (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a40036ceeca10849cabe2f0d92ffda83d">code</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a40036ceeca10849cabe2f0d92ffda83d">code</a>) &amp;&amp; (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ae78099c4864c498bc6d868643f456c5d">config_id</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ae78099c4864c498bc6d868643f456c5d">config_id</a>) &amp;&amp; (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a333ad027ae8bbe2ac5e908ad0fcd715c">build_options</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a333ad027ae8bbe2ac5e908ad0fcd715c">build_options</a>) &amp;&amp; (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ac5b0b3c19d476a314bb68af9bc4a0ee0">window</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ac5b0b3c19d476a314bb68af9bc4a0ee0">window</a>)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;               &amp;&amp; (code0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a51310a3b9dd7cd7b6d874feee82a67c4">arguments</a> == code1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a51310a3b9dd7cd7b6d874feee82a67c4">arguments</a>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a9b45b3e13bd9167aab02e17e08916231">  107</a></span>&#160;    std::string     <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>{};          <span class="comment">/**&lt; Kernel name */</span></div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a40036ceeca10849cabe2f0d92ffda83d">  108</a></span>&#160;    std::string     code{};          <span class="comment">/**&lt; Kernel source code */</span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ae78099c4864c498bc6d868643f456c5d">  109</a></span>&#160;    std::string     config_id{};     <span class="comment">/**&lt; Generated from blueprint based on complex component */</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a333ad027ae8bbe2ac5e908ad0fcd715c">  110</a></span>&#160;    <a class="code" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>  <a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a>{}; <span class="comment">/**&lt; Kernel build options */</span></div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ac5b0b3c19d476a314bb68af9bc4a0ee0">  111</a></span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a>          window{};        <span class="comment">/**&lt; Execution window */</span></div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a51310a3b9dd7cd7b6d874feee82a67c4">  112</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">ClKernelArgList</a> arguments{};     <span class="comment">/**&lt; Kernel argument descriptors. map key is kernel ArgumentID */</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">/** A descriptor of ClWorkload Tensors.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">  117</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">WorkloadTensor</a></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a05648e82891f523033712f51aae926c5">  120</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a05648e82891f523033712f51aae926c5">ClWorkloadTensor</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;memory_info, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;kernel_arg)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">WorkloadTensor</a>{ id, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, memory_type, memory_info }, kernel_arg{ kernel_arg }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a30fc4a41be21d2a709e47c552d120a14">  124</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> kernel_arg{};</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a1119c67292291daca2b1f4569288326b">  125</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a1119c67292291daca2b1f4569288326b">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a> &amp;t0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a> &amp;t1)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">return</span> t0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a66586871d49e316858191051fc6d298c">info</a> == t1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a66586871d49e316858191051fc6d298c">info</a> &amp;&amp; t0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a> == t1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#abd1839b751c3e3abfec78177d70b8cb4">memory_info</a> &amp;&amp; t0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a94027e3c81d728a99b19a9f91ea0f267">memory_type</a> == t1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a94027e3c81d728a99b19a9f91ea0f267">memory_type</a> &amp;&amp; t0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a30fc4a41be21d2a709e47c552d120a14">kernel_arg</a> == t1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a30fc4a41be21d2a709e47c552d120a14">kernel_arg</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;};</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">/** The basic atomic unit in a @ref ClWorkload. It contains exactly one kernel to run.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">  133</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">UnitWorkload</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a823e494d4d70c04e39100f2e8664da9c">  136</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a823e494d4d70c04e39100f2e8664da9c">ClUnitWorkload</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">Id</a> <span class="keywordtype">id</span>, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> stage, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;code)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        : <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">UnitWorkload</a>{ id, stage }, code{ code }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a2c43c6bb8320092ce08e9a48d14c5566">  140</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a2c43c6bb8320092ce08e9a48d14c5566">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a> &amp;uworkload0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a> &amp;uworkload1)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> uworkload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">stage</a> == uworkload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">stage</a> &amp;&amp; uworkload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a44c64e517d8bea5b2adb45f285f7b8b4">code</a> == uworkload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a44c64e517d8bea5b2adb45f285f7b8b4">code</a>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a44c64e517d8bea5b2adb45f285f7b8b4">  144</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> code{};</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">/** GPU information for @ref ClWorkloadContext</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">  149</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#aeaa92f8143b670d38e7152f6ec74f81f">  151</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#aeaa92f8143b670d38e7152f6ec74f81f">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a> &amp;info0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a> &amp;info1)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">return</span> info0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#ad799b32b7637741107fe017e8a1fe36b">target</a> == info1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#ad799b32b7637741107fe017e8a1fe36b">target</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#ad799b32b7637741107fe017e8a1fe36b">  155</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> target{ <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">GPUTarget::UNKNOWN</a> };</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;};</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">/** Context (device capabilities, platform details) associated with a ClWorkload</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"> * It is required for building the @ref ClKernelCode and could also be used by the runtime (e.g. schedulers)</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">  162</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a5490f664ed4b13f2e9a1785a1e5042bf">  164</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a5490f664ed4b13f2e9a1785a1e5042bf">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> &amp;ctx0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> &amp;ctx1)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">return</span> ctx0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a619811b3fc0952fbacfe1f102475b2dc">gpu_info</a> == ctx1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a619811b3fc0952fbacfe1f102475b2dc">gpu_info</a>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a619811b3fc0952fbacfe1f102475b2dc">  168</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">GpuInfo</a> gpu_info{};</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;};</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">/** Workload for Cl backend</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">  173</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> : <span class="keyword">public</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">IWorkload</a></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a2201c809d539f18b47839af02840b662">  175</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a2201c809d539f18b47839af02840b662">add_workload_tensor</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a> memory_type, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">AuxMemoryInfo</a> &amp;memory_info, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">ClKernelArgDescriptor</a> &amp;kernel_arg, <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> merge_point)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">Tid</a> <span class="keywordtype">id</span> = graph.add_tensor(merge_point);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span>(tensors.find(<span class="keywordtype">id</span>) == tensors.end())</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            tensors[id] = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">ClWorkloadTensor</a>(<span class="keywordtype">id</span>, info, memory_type, memory_info, kernel_arg);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa273e2e7935d4777a7f2e7491b693759">  184</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">UnitWorkId</a> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa273e2e7935d4777a7f2e7491b693759">add_unit_workload</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">UnitWorkloadStage</a> stage, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">ClKernelCode</a> &amp;code, <span class="keyword">const</span> std::vector&lt;Tid&gt; &amp;inputs, <span class="keyword">const</span> std::vector&lt;Tid&gt; &amp;outputs)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keyword">auto</span> op            = graph.add_operator(inputs, outputs);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">auto</span> <span class="keywordtype">id</span>            = op.second;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        unit_workloads[id] = <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">ClUnitWorkload</a>(<span class="keywordtype">id</span>, stage, code);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa5fd21abff6dc0da40b7c7d818cca807">  191</a></span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa5fd21abff6dc0da40b7c7d818cca807">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload0, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;workload1)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">return</span> std::make_tuple(</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                   workload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>, workload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">context</a>, workload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">unit_workloads</a>, workload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a>, workload0.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">op_tensor_id_lut</a>)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;               == std::make_tuple(</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                   workload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">graph</a>, workload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">context</a>, workload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">unit_workloads</a>, workload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">tensors</a>, workload1.<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">op_tensor_id_lut</a>);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">  198</a></span>&#160;    <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> context{};                             <span class="comment">/**&lt; Workload context*/</span></div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">  199</a></span>&#160;    std::map&lt;UnitWorkId, ClUnitWorkload&gt; unit_workloads{};   <span class="comment">/**&lt; Unit workloads to run*/</span></div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">  200</a></span>&#160;    std::map&lt;Tid, ClWorkloadTensor&gt;      tensors{};          <span class="comment">/**&lt; Workload tensors*/</span></div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">  201</a></span>&#160;    std::map&lt;Tid, OpTensor::Id&gt;          op_tensor_id_lut{}; <span class="comment">/**&lt; Map from ClWorkloadTensor to SRC and DST Operator Tensors (no need to store &quot;intermediate&quot; Operator Tensors)*/</span></div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#ae29aa2d4ae440022daaed1107eb306b3">  202</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> status{};                                         <span class="comment">/**&lt; For compatibility with the IOperator validate method. Store if the workload is valid or not. */</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;};</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">/** Build a @ref ClWorkload from an @ref OperatorGraph.</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"> * @param[out] workload</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"> * @param[in] op_graph</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> * @param[in] ctx</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * @return Status</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">build</a>(<a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">ClWorkload</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">workload</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">OperatorGraph</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">op_graph</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">ClWorkloadContext</a> &amp;ctx);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="preprocessor">#endif //ARM_COMPUTE_EXPERIMENTAL_DYNAMICFUSION_CLWORKLOAD_H</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ENABLE_EXPERIMENTAL_DYNAMIC_FUSION */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::experimental::dynamic_fusion::ClKernelCode::name</a></div><div class="ttdeci">std::string name</div><div class="ttdoc">Kernel name. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00107">ClWorkload.h:107</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a963c0c0999b3c937f36565fae3b0ef54"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a963c0c0999b3c937f36565fae3b0ef54">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_3D</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor_xhtml_a1119c67292291daca2b1f4569288326b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a1119c67292291daca2b1f4569288326b">arm_compute::experimental::dynamic_fusion::ClWorkloadTensor::operator==</a></div><div class="ttdeci">friend bool operator==(const ClWorkloadTensor &amp;t0, const ClWorkloadTensor &amp;t1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00125">ClWorkload.h:125</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkload</a></div><div class="ttdoc">Workload for Cl backend. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00173">ClWorkload.h:173</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_a3fb003addd6c323793f8251ef3708d5b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a3fb003addd6c323793f8251ef3708d5b">arm_compute::experimental::dynamic_fusion::IWorkload::UnitWorkId</a></div><div class="ttdeci">UnitWorkload::Id UnitWorkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00121">IWorkload.h:121</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor_xhtml_a05648e82891f523033712f51aae926c5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a05648e82891f523033712f51aae926c5">arm_compute::experimental::dynamic_fusion::ClWorkloadTensor::ClWorkloadTensor</a></div><div class="ttdeci">ClWorkloadTensor(Id id, ITensorInfo *info, MemoryType memory_type, const AuxMemoryInfo &amp;memory_info, const ClKernelArgDescriptor &amp;kernel_arg)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00120">ClWorkload.h:120</a></div></div>
<div class="ttc" id="_operator_graph_8h_xhtml"><div class="ttname"><a href="_operator_graph_8h.xhtml">OperatorGraph.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_adda92e981d244d14d1266f9746bccc6d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#adda92e981d244d14d1266f9746bccc6d">arm_compute::experimental::dynamic_fusion::IWorkload::graph</a></div><div class="ttdeci">DependencyGraph graph</div><div class="ttdoc">Dependency graph of the workload tensors and the unit workloads. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00125">IWorkload.h:125</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a853491c5ec1b4957adf256ed3fbc18e0">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_3D_Export_To_ClImage2D</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::UnitWorkload::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00111">IWorkload.h:111</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml_a94027e3c81d728a99b19a9f91ea0f267"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a94027e3c81d728a99b19a9f91ea0f267">arm_compute::experimental::dynamic_fusion::WorkloadTensor::memory_type</a></div><div class="ttdeci">MemoryType memory_type</div><div class="ttdoc">Memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00103">IWorkload.h:103</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_a2201c809d539f18b47839af02840b662"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a2201c809d539f18b47839af02840b662">arm_compute::experimental::dynamic_fusion::ClWorkload::add_workload_tensor</a></div><div class="ttdeci">Tid add_workload_tensor(ITensorInfo *info, MemoryType memory_type, const AuxMemoryInfo &amp;memory_info, const ClKernelArgDescriptor &amp;kernel_arg, Tid merge_point)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00175">ClWorkload.h:175</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_a4b6f34915eb2267570a648f1e8d318a6"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a4b6f34915eb2267570a648f1e8d318a6">arm_compute::experimental::dynamic_fusion::ClKernelCode::operator==</a></div><div class="ttdeci">friend bool operator==(const ClKernelCode &amp;code0, const ClKernelCode &amp;code1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00102">ClWorkload.h:102</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a89e1a66e65ce2fc93995b94f32d9d928">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D_t_Image</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_a0171e631117d8976f8f0c7d532e7a4c4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a0171e631117d8976f8f0c7d532e7a4c4">arm_compute::experimental::dynamic_fusion::ClWorkload::tensors</a></div><div class="ttdeci">std::map&lt; Tid, ClWorkloadTensor &gt; tensors</div><div class="ttdoc">Workload tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00200">ClWorkload.h:200</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml_a9fcb86f9d0c41af04bb5bc52d71503fa"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a9fcb86f9d0c41af04bb5bc52d71503fa">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor::operator==</a></div><div class="ttdeci">friend bool operator==(const ClKernelArgDescriptor &amp;arg0, const ClKernelArgDescriptor &amp;arg1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00078">ClWorkload.h:78</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml_a619811b3fc0952fbacfe1f102475b2dc"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a619811b3fc0952fbacfe1f102475b2dc">arm_compute::experimental::dynamic_fusion::ClWorkloadContext::gpu_info</a></div><div class="ttdeci">GpuInfo gpu_info</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00168">ClWorkload.h:168</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml">arm_compute::experimental::dynamic_fusion::ClUnitWorkload</a></div><div class="ttdoc">The basic atomic unit in a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00133">ClWorkload.h:133</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadContext</a></div><div class="ttdoc">Context (device capabilities, platform details) associated with a ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00162">ClWorkload.h:162</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_ac5b0b3c19d476a314bb68af9bc4a0ee0"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ac5b0b3c19d476a314bb68af9bc4a0ee0">arm_compute::experimental::dynamic_fusion::ClKernelCode::window</a></div><div class="ttdeci">Window window</div><div class="ttdoc">Execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00111">ClWorkload.h:111</a></div></div>
<div class="ttc" id="_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_operator_graph.xhtml">arm_compute::experimental::dynamic_fusion::OperatorGraph</a></div><div class="ttdoc">Graph of operators to execute within a Workload. </div><div class="ttdef"><b>Definition:</b> <a href="_operator_graph_8h_source.xhtml#l00042">OperatorGraph.h:42</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a836beefb9de19f8c238c707251af46a7">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_Export_To_ClImage2D</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info_xhtml_ad799b32b7637741107fe017e8a1fe36b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#ad799b32b7637741107fe017e8a1fe36b">arm_compute::experimental::dynamic_fusion::GpuInfo::target</a></div><div class="ttdeci">GPUTarget target</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00155">ClWorkload.h:155</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a30bd3b885ab6a7786a0117197346c49c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a30bd3b885ab6a7786a0117197346c49c">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_3D</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">arm_compute::experimental::dynamic_fusion::MemoryType</a></div><div class="ttdeci">MemoryType</div><div class="ttdoc">Type of memory used by a Workload Tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00059">IWorkload.h:59</a></div></div>
<div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00259">gemm_interleaved.hpp:259</a></div></div>
<div class="ttc" id="_cl_im2_col_kernel_8cpp_xhtml_a3e76c95cfc49454dbfff42e02d25ccb8"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a3e76c95cfc49454dbfff42e02d25ccb8">build_options</a></div><div class="ttdeci">std::set&lt; std::string &gt; build_options</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00057">ClIm2ColKernel.cpp:57</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_aa28ea900b6115f17781179e998959e23"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa28ea900b6115f17781179e998959e23">arm_compute::experimental::dynamic_fusion::ClWorkload::context</a></div><div class="ttdeci">ClWorkloadContext context</div><div class="ttdoc">Workload context. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00198">ClWorkload.h:198</a></div></div>
<div class="ttc" id="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h.xhtml">CLCompileContext.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2022 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor_xhtml_a30fc4a41be21d2a709e47c552d120a14"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml#a30fc4a41be21d2a709e47c552d120a14">arm_compute::experimental::dynamic_fusion::ClWorkloadTensor::kernel_arg</a></div><div class="ttdeci">ClKernelArgDescriptor kernel_arg</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00124">ClWorkload.h:124</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_aa9587b64a9fbf98bfe730f42dea9c09e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#aa9587b64a9fbf98bfe730f42dea9c09e">arm_compute::experimental::dynamic_fusion::ClKernelArgList</a></div><div class="ttdeci">std::map&lt; int, ClKernelArgDescriptor &gt; ClKernelArgList</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00087">ClWorkload.h:87</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType</a></div><div class="ttdeci">ClKernelTensorArgType</div><div class="ttdoc">Verbose and explicit way to enumerate all the tensor arguments variants used by all kernel implementa...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00046">ClWorkload.h:46</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor</a></div><div class="ttdoc">Describes all the info required to add a kernel argument at run time. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00070">ClWorkload.h:70</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml">arm_compute::experimental::dynamic_fusion::ClKernelCode</a></div><div class="ttdoc">Contains kernel code to be compiled and run in a ClUnitWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00100">ClWorkload.h:100</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_execution_descriptor.xhtml">arm_compute::experimental::dynamic_fusion::ClExecutionDescriptor</a></div><div class="ttdoc">Descriptor containing information required to run a single ClWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00091">ClWorkload.h:91</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkload</a></div><div class="ttdoc">The basic atomic unit in an IWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00109">IWorkload.h:109</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml_a989f4d1d24ff43f92bf7f63fd5161ee5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#a989f4d1d24ff43f92bf7f63fd5161ee5">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor::tensor_arg_type</a></div><div class="ttdeci">ClKernelTensorArgType tensor_arg_type</div><div class="ttdoc">tensor argument type </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00083">ClWorkload.h:83</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context_xhtml_a5490f664ed4b13f2e9a1785a1e5042bf"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_context.xhtml#a5490f664ed4b13f2e9a1785a1e5042bf">arm_compute::experimental::dynamic_fusion::ClWorkloadContext::operator==</a></div><div class="ttdeci">friend bool operator==(const ClWorkloadContext &amp;ctx0, const ClWorkloadContext &amp;ctx1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00164">ClWorkload.h:164</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_a40036ceeca10849cabe2f0d92ffda83d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a40036ceeca10849cabe2f0d92ffda83d">arm_compute::experimental::dynamic_fusion::ClKernelCode::code</a></div><div class="ttdeci">std::string code</div><div class="ttdoc">Kernel source code. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00108">ClWorkload.h:108</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7af60357a8d17e45793298323f1b372a74"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7af60357a8d17e45793298323f1b372a74">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Scalar</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_build_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_build_options.xhtml">arm_compute::CLBuildOptions</a></div><div class="ttdoc">Build options. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00038">CLCompileContext.h:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_aa5fd21abff6dc0da40b7c7d818cca807"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa5fd21abff6dc0da40b7c7d818cca807">arm_compute::experimental::dynamic_fusion::ClWorkload::operator==</a></div><div class="ttdeci">friend bool operator==(const ClWorkload &amp;workload0, const ClWorkload &amp;workload1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00191">ClWorkload.h:191</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_ae78099c4864c498bc6d868643f456c5d"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#ae78099c4864c498bc6d868643f456c5d">arm_compute::experimental::dynamic_fusion::ClKernelCode::config_id</a></div><div class="ttdeci">std::string config_id</div><div class="ttdoc">Generated from blueprint based on complex component. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00109">ClWorkload.h:109</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_stage.xhtml">arm_compute::experimental::dynamic_fusion::UnitWorkloadStage</a></div><div class="ttdoc">Describes when a Unit Workload is run. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00043">IWorkload.h:43</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_a333ad027ae8bbe2ac5e908ad0fcd715c"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a333ad027ae8bbe2ac5e908ad0fcd715c">arm_compute::experimental::dynamic_fusion::ClKernelCode::build_options</a></div><div class="ttdeci">CLBuildOptions build_options</div><div class="ttdoc">Kernel build options. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00110">ClWorkload.h:110</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml_a66586871d49e316858191051fc6d298c"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#a66586871d49e316858191051fc6d298c">arm_compute::experimental::dynamic_fusion::WorkloadTensor::info</a></div><div class="ttdeci">ITensorInfo * info</div><div class="ttdoc">TensorInfo associated with the workload tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00102">IWorkload.h:102</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a57dea6f5039281b7fee517fc43bf3110">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Vector</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info_xhtml_aeaa92f8143b670d38e7152f6ec74f81f"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml#aeaa92f8143b670d38e7152f6ec74f81f">arm_compute::experimental::dynamic_fusion::GpuInfo::operator==</a></div><div class="ttdeci">friend bool operator==(const GpuInfo &amp;info0, const GpuInfo &amp;info1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00151">ClWorkload.h:151</a></div></div>
<div class="ttc" id="_i_workload_8h_xhtml"><div class="ttname"><a href="_i_workload_8h.xhtml">IWorkload.h</a></div></div>
<div class="ttc" id="_g_p_u_target_8h_xhtml"><div class="ttname"><a href="_g_p_u_target_8h.xhtml">GPUTarget.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::GPUTarget::UNKNOWN</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml_afa5a1a59ec40b6fac78fa4fc6458e281"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#afa5a1a59ec40b6fac78fa4fc6458e281">arm_compute::experimental::dynamic_fusion::WorkloadTensor::Id</a></div><div class="ttdeci">DependencyGraph::Id Id</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00100">IWorkload.h:100</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a0ba70c7ef99250a96e87378c163f2b0e"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a0ba70c7ef99250a96e87378c163f2b0e">arm_compute::experimental::dynamic_fusion::build</a></div><div class="ttdeci">Status build(ClWorkload &amp;workload, const OperatorGraph &amp;op_graph, const ClWorkloadContext &amp;ctx)</div><div class="ttdoc">Build a ClWorkload from an OperatorGraph. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8cpp_source.xhtml#l00036">ClWorkload.cpp:36</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_info.xhtml">arm_compute::experimental::dynamic_fusion::GpuInfo</a></div><div class="ttdoc">GPU information for ClWorkloadContext. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00149">ClWorkload.h:149</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad001edc7e4d1ea972be09f232c6e7729"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad001edc7e4d1ea972be09f232c6e7729">arm_compute::test::validation::workload</a></div><div class="ttdeci">ClWorkload workload</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00266">Integration_OperatorFuseMovenetSubGraph1.cpp:266</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets. </div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_aa273e2e7935d4777a7f2e7491b693759"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#aa273e2e7935d4777a7f2e7491b693759">arm_compute::experimental::dynamic_fusion::ClWorkload::add_unit_workload</a></div><div class="ttdeci">UnitWorkId add_unit_workload(UnitWorkloadStage stage, const ClKernelCode &amp;code, const std::vector&lt; Tid &gt; &amp;inputs, const std::vector&lt; Tid &gt; &amp;outputs)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00184">ClWorkload.h:184</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_aux_memory_info.xhtml">arm_compute::experimental::dynamic_fusion::AuxMemoryInfo</a></div><div class="ttdoc">Memory Info for a WorkloadTensor of Auxiliary memory type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00070">IWorkload.h:70</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7abe53a0541a6d36f6ecb879fa2c584b08"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7abe53a0541a6d36f6ecb879fa2c584b08">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_a7bdd9d30fbc23162fdfc14df8822fee5"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#a7bdd9d30fbc23162fdfc14df8822fee5">arm_compute::experimental::dynamic_fusion::ClWorkload::op_tensor_id_lut</a></div><div class="ttdeci">std::map&lt; Tid, OpTensor::Id &gt; op_tensor_id_lut</div><div class="ttdoc">Map from ClWorkloadTensor to SRC and DST Operator Tensors (no need to store &quot;intermediate&quot; Operator T...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00201">ClWorkload.h:201</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload_xhtml_a823e494d4d70c04e39100f2e8664da9c"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a823e494d4d70c04e39100f2e8664da9c">arm_compute::experimental::dynamic_fusion::ClUnitWorkload::ClUnitWorkload</a></div><div class="ttdeci">ClUnitWorkload(Id id, UnitWorkloadStage stage, const ClKernelCode &amp;code)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00136">ClWorkload.h:136</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code_xhtml_a51310a3b9dd7cd7b6d874feee82a67c4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_code.xhtml#a51310a3b9dd7cd7b6d874feee82a67c4">arm_compute::experimental::dynamic_fusion::ClKernelCode::arguments</a></div><div class="ttdeci">ClKernelArgList arguments</div><div class="ttdoc">Kernel argument descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00112">ClWorkload.h:112</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml_abd1839b751c3e3abfec78177d70b8cb4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml#abd1839b751c3e3abfec78177d70b8cb4">arm_compute::experimental::dynamic_fusion::WorkloadTensor::memory_info</a></div><div class="ttdeci">AuxMemoryInfo memory_info</div><div class="ttdoc">Auxiliary memory information. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00104">IWorkload.h:104</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml_a738a4655df65d4e18d9cd5f63fe320cd"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml#a738a4655df65d4e18d9cd5f63fe320cd">arm_compute::experimental::dynamic_fusion::IWorkload::Tid</a></div><div class="ttdeci">WorkloadTensor::Id Tid</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00122">IWorkload.h:122</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload_xhtml_a36ce53d08bf79109e0ca1d9a05c3cbfb"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_unit_workload.xhtml#a36ce53d08bf79109e0ca1d9a05c3cbfb">arm_compute::experimental::dynamic_fusion::UnitWorkload::stage</a></div><div class="ttdeci">UnitWorkloadStage stage</div><div class="ttdoc">Stage. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00113">IWorkload.h:113</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_workload.xhtml">arm_compute::experimental::dynamic_fusion::IWorkload</a></div><div class="ttdoc">Run-time-agnostic, platform-specific graph that describes everything required to run a workload It ca...</div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00119">IWorkload.h:119</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml_afa621263dfe60624b51a91c35bceee2b"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#afa621263dfe60624b51a91c35bceee2b">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor::slide_along_dimz</a></div><div class="ttdeci">bool slide_along_dimz</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00084">ClWorkload.h:84</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload_xhtml_a44c64e517d8bea5b2adb45f285f7b8b4"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a44c64e517d8bea5b2adb45f285f7b8b4">arm_compute::experimental::dynamic_fusion::ClUnitWorkload::code</a></div><div class="ttdeci">ClKernelCode code</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00144">ClWorkload.h:144</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a73d5ced9c9cf7e7cdffe9016d463c2b4"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a73d5ced9c9cf7e7cdffe9016d463c2b4">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7aa735f986cc40b7d5c4fd2d5a7ba883fd">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Tensor_4D_t_Buffer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad471f4eec82e65ca35e1cf32bda90200"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad471f4eec82e65ca35e1cf32bda90200">arm_compute::test::validation::op_graph</a></div><div class="ttdeci">OperatorGraph op_graph</div><div class="ttdef"><b>Definition:</b> <a href="_integration___operator_fuse_movenet_sub_graph1_8cpp_source.xhtml#l00253">Integration_OperatorFuseMovenetSubGraph1.cpp:253</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_xhtml_afb6cd783cc38a238e203a198229d1454"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload.xhtml#afb6cd783cc38a238e203a198229d1454">arm_compute::experimental::dynamic_fusion::ClWorkload::unit_workloads</a></div><div class="ttdeci">std::map&lt; UnitWorkId, ClUnitWorkload &gt; unit_workloads</div><div class="ttdoc">Unit workloads to run. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00199">ClWorkload.h:199</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a6072e09c65444602fbe6cc6027d369c7a61de9daebcac10786dff102d741a99db"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a6072e09c65444602fbe6cc6027d369c7a61de9daebcac10786dff102d741a99db">arm_compute::experimental::dynamic_fusion::ClKernelTensorArgType::Image_Reinterpret_As_3D</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload_xhtml_a2c43c6bb8320092ce08e9a48d14c5566"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_unit_workload.xhtml#a2c43c6bb8320092ce08e9a48d14c5566">arm_compute::experimental::dynamic_fusion::ClUnitWorkload::operator==</a></div><div class="ttdeci">friend bool operator==(const ClUnitWorkload &amp;uworkload0, const ClUnitWorkload &amp;uworkload1)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00140">ClWorkload.h:140</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor_xhtml_aa2818547974951c041a0310adfab4654"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_arg_descriptor.xhtml#aa2818547974951c041a0310adfab4654">arm_compute::experimental::dynamic_fusion::ClKernelArgDescriptor::ClKernelArgDescriptor</a></div><div class="ttdeci">ClKernelArgDescriptor(int arg_id, ClKernelTensorArgType type, bool slide_along_dimz=true)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00073">ClWorkload.h:73</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_workload_tensor.xhtml">arm_compute::experimental::dynamic_fusion::ClWorkloadTensor</a></div><div class="ttdoc">A descriptor of ClWorkload Tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_8h_source.xhtml#l00117">ClWorkload.h:117</a></div></div>
<div class="ttc" id="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor_xhtml"><div class="ttname"><a href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_workload_tensor.xhtml">arm_compute::experimental::dynamic_fusion::WorkloadTensor</a></div><div class="ttdoc">A descriptor for IWorkload Tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_i_workload_8h_source.xhtml#l00098">IWorkload.h:98</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_a0d10d1f11f896cb40f799a595f5f383.xhtml">experimental</a></li><li class="navelem"><a class="el" href="_cl_workload_8h.xhtml">ClWorkload.h</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
