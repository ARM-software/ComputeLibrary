<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/ConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_c_l_2_convolution_layer_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2experimental_2_post_ops_8h_source.xhtml">arm_compute/core/experimental/PostOps.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_g_e_m_m_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLGEMMConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/TinyConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/ConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2022 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5fd525f7415ba98516cfe008a2c4cb01">CLGEMMConvolutionLayerMixedDataLayoutFixture</a> = ConvolutionValidationFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a5fd525f7415ba98516cfe008a2c4cb01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff30e8cc8007cf191466a6af2b36520"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1ff30e8cc8007cf191466a6af2b36520"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ff30e8cc8007cf191466a6af2b36520">CLConvolutionValidationWithPaddingFixture</a> = ConvolutionValidationWithPaddingFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T &gt;</td></tr>
<tr class="separator:a1ff30e8cc8007cf191466a6af2b36520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6376667f28ac35124e23c3565ae890de"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a6376667f28ac35124e23c3565ae890de"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6376667f28ac35124e23c3565ae890de">CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture</a> = ConvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a6376667f28ac35124e23c3565ae890de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c57d7b691ce9bdaf3585fd21a98b6e2">CLGEMMConvolutionLayerQuantizedPerChannelFixture</a> = ConvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLGEMMConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a9c57d7b691ce9bdaf3585fd21a98b6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a648a276a30f541e70bdbc8406340c71a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a648a276a30f541e70bdbc8406340c71a">DATA_TEST_CASE</a> (ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::QASYMM8_SIGNED), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::QASYMM8_SIGNED), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2), })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), Size2D(2U, 1U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true, true })), framework::dataset::make(&quot;Expected&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)</td></tr>
<tr class="separator:a648a276a30f541e70bdbc8406340c71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4584310779fb779a3ca630be76bc4117"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4584310779fb779a3ca630be76bc4117">DATA_TEST_CASE</a> (ValidatePostOpSupportInConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(2U, 17U, 31U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 48U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 48U), 1, DataType::F32, DataLayout::NCHW), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(2U, 1U, 1U, 19U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(5U, 5U, 48U, 128U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(11U, 11U, 48U, 24), 1, DataType::F32, DataLayout::NCHW), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(19U, 17U, 31U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 128U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(27U, 27U, 24U), 1, DataType::F32, DataLayout::NCHW), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1U, 1U, 0U, 0U), PadStrideInfo(1U, 1U, 2U, 2U), PadStrideInfo(1U, 1U, 2U, 2U), PadStrideInfo(1U, 1U, 5U, 5U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, true, false, false})), framework::dataset::make(&quot;ExpectedMethod&quot;,{ ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::DIRECT, ConvolutionMethod::FFT, })), framework::dataset::make(&quot;PostOpSupported&quot;,{ true, false, false, false })), input_info, weights_info, output_info, conv_info, enable_fast_math, expected_method, post_op_supported)</td></tr>
<tr class="separator:a4584310779fb779a3ca630be76bc4117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel. ">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab053b493888137886d24d6ba9f9a2ccc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab053b493888137886d24d6ba9f9a2ccc">TEST_CASE</a> (UnsupportedPostOpSequence, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:ab053b493888137886d24d6ba9f9a2ccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab49b87523d5d7d844e929f968fab5c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab49b87523d5d7d844e929f968fab5c3">TEST_CASE</a> (OnlyNHWCIsSupported, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:aab49b87523d5d7d844e929f968fab5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab075105bce938eb1d8566868871fa902"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab075105bce938eb1d8566868871fa902">TEST_CASE</a> (OnlyFloatingTypeIsSupported, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:ab075105bce938eb1d8566868871fa902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae340b16811b91056a5a628f32bcb5246"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae340b16811b91056a5a628f32bcb5246">TEST_CASE</a> (OnlyConv1x1Stride1IsSupported_UnsupportedKernelSize, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:ae340b16811b91056a5a628f32bcb5246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa64ece0c6156021baf0e0ddbd76251"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aafa64ece0c6156021baf0e0ddbd76251">TEST_CASE</a> (OnlyConv1x1Stride1IsSupported_UnsupportedStride, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:aafa64ece0c6156021baf0e0ddbd76251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac06519bc830db16c26b529252cc53b45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac06519bc830db16c26b529252cc53b45">ARM_COMPUTE_EXPECT</a> (is_post_op_list_valid_in_gemmconv(input_shape, weights_shape, output_shape, data_type, data_layout, conv_info, post_ops)==true, framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:ac06519bc830db16c26b529252cc53b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fd6c144c1d6658f7bb32860f4f0fe81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1fd6c144c1d6658f7bb32860f4f0fe81">TEST_CASE</a> (SupportedPostOps, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:a1fd6c144c1d6658f7bb32860f4f0fe81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe98fab8a0fba7ba2957874a56fd3d14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afe98fab8a0fba7ba2957874a56fd3d14">combine</a> (combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:afe98fab8a0fba7ba2957874a56fd3d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20743df590ca477d8a45c296a46d0010"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a20743df590ca477d8a45c296a46d0010">combine</a> (combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a20743df590ca477d8a45c296a46d0010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45107bdcdc0de66ae7af84dc6cecf69c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45107bdcdc0de66ae7af84dc6cecf69c">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a45107bdcdc0de66ae7af84dc6cecf69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13a31d6145ee631502b6b41520e818d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a13a31d6145ee631502b6b41520e818d5">FIXTURE_DATA_TEST_CASE</a> (RunSmallWithPadding, CLConvolutionValidationWithPaddingFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerPrePaddingDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })), framework::dataset::make(&quot;PrePadLayer&quot;, { PaddingList({ { 1, 1 }, { 1, 1 } }) })))</td></tr>
<tr class="separator:a13a31d6145ee631502b6b41520e818d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad970e963485e0e8d4078be39dec7f2c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad970e963485e0e8d4078be39dec7f2c7">FIXTURE_DATA_TEST_CASE</a> (RunSmallCases, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(SmallConvolutionLayerDatasetCases(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ad970e963485e0e8d4078be39dec7f2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64ccc10a9915ff744c30732b098acb91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a64ccc10a9915ff744c30732b098acb91">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a64ccc10a9915ff744c30732b098acb91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae236d6a35a70e2b228c21b507d82bdf4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae236d6a35a70e2b228c21b507d82bdf4">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:ae236d6a35a70e2b228c21b507d82bdf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe7b4a083a011187bd978e55e6b1dd7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aafe7b4a083a011187bd978e55e6b1dd7">combine</a> (combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:aafe7b4a083a011187bd978e55e6b1dd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84d46a28da158c895bb0b49210750c84"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a84d46a28da158c895bb0b49210750c84">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLGEMMConvolutionLayerQuantizedMixedDataLayoutFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a84d46a28da158c895bb0b49210750c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cc9796bce3ddba465dd5dd9e68b0ab6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cc9796bce3ddba465dd5dd9e68b0ab6">combine</a> (combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8_SIGNED })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a6cc9796bce3ddba465dd5dd9e68b0ab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa21b70a495823b9b1658c8db46a01980"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa21b70a495823b9b1658c8db46a01980">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsSmallDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:aa21b70a495823b9b1658c8db46a01980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c0ce3c7b7839ab148073e546747dcee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c0ce3c7b7839ab148073e546747dcee">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a9c0ce3c7b7839ab148073e546747dcee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bde5216c166000b4d51e1ccdd72aa15"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9bde5216c166000b4d51e1ccdd72aa15">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9bde5216c166000b4d51e1ccdd72aa15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e72541241145dab4fed298d94de781e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8e72541241145dab4fed298d94de781e">combine</a> (combine(combine(combine(datasets::SmallGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsSmallDataset))</td></tr>
<tr class="separator:a8e72541241145dab4fed298d94de781e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a981e51ea5eef1d7f37cfc8460e777a8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a981e51ea5eef1d7f37cfc8460e777a8b">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeGroupedConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a981e51ea5eef1d7f37cfc8460e777a8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:acf5f12bbab64dd614bd8220c97fe484f"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf5f12bbab64dd614bd8220c97fe484f">data_layout</a> = DataLayout::NHWC</td></tr>
<tr class="separator:acf5f12bbab64dd614bd8220c97fe484f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00525ff582f16038a1d3819aa44a23a3"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a> = PadStrideInfo(1, 1, 0, 0)</td></tr>
<tr class="separator:a00525ff582f16038a1d3819aa44a23a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af78b3c8c9ad65dcb4bfa1d2fee424308"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">input_shape</a> = TensorShape(16U, 14U, 12U, 2U)</td></tr>
<tr class="memdesc:af78b3c8c9ad65dcb4bfa1d2fee424308"><td class="mdescLeft">&#160;</td><td class="mdescRight">Validate test suite is to test ARM_COMPUTE_RETURN_ON_* macros we use to check the validity of given arguments in <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a> Since this is using <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate()</a> of <a class="el" href="classarm__compute_1_1_n_e_scale.xhtml">NEScale</a>, which pre-adjust arguments for the kernel, the following conditions in the kernel are not currently tested.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#af78b3c8c9ad65dcb4bfa1d2fee424308">More...</a><br /></td></tr>
<tr class="separator:af78b3c8c9ad65dcb4bfa1d2fee424308"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f78c2eaf7349bd49dc6b49876a06c38"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f78c2eaf7349bd49dc6b49876a06c38">weights_shape</a> = TensorShape(16U, 1U, 1U, 24U)</td></tr>
<tr class="separator:a1f78c2eaf7349bd49dc6b49876a06c38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaae4098f0f54b97f23d99be335c459ad"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaae4098f0f54b97f23d99be335c459ad">output_shape</a> = misc::shape_calculator::compute_deep_convolution_shape(input_shape, data_layout, weights_shape, conv_info)</td></tr>
<tr class="separator:aaae4098f0f54b97f23d99be335c459ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cd3187b8cbe01fb39012663c3f93aa5"><td class="memItemLeft" align="right" valign="top">experimental::PostOpList&lt; ITensorInfo * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cd3187b8cbe01fb39012663c3f93aa5">post_ops</a> {}</td></tr>
<tr class="separator:a8cd3187b8cbe01fb39012663c3f93aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185e567184bbde00421ce69af14f4447"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a185e567184bbde00421ce69af14f4447">CLGEMMConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a185e567184bbde00421ce69af14f4447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0f3dc00a54fa25a6e8d565b5c8b56ea0">CLGEMMConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a0f3dc00a54fa25a6e8d565b5c8b56ea0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6716299a6877933f664cdc9796f6c924"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6716299a6877933f664cdc9796f6c924">QuantizedActivationFunctionsDataset</a></td></tr>
<tr class="memdesc:a6716299a6877933f664cdc9796f6c924"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input data sets.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6716299a6877933f664cdc9796f6c924">More...</a><br /></td></tr>
<tr class="separator:a6716299a6877933f664cdc9796f6c924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0c4de6fef335f27d37630b6f16ed0f24">QuantizedActivationFunctionsSmallDataset</a></td></tr>
<tr class="separator:a0c4de6fef335f27d37630b6f16ed0f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ac9eed0f8401a833752c2c56c5041c"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a35ac9eed0f8401a833752c2c56c5041c">QuantizationData</a></td></tr>
<tr class="separator:a35ac9eed0f8401a833752c2c56c5041c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf6c2a11e8059a6390d045677b6e88a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf6c2a11e8059a6390d045677b6e88a5">CLGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:acf6c2a11e8059a6390d045677b6e88a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdad561fea3166a6f4e6d6cbfe44dea3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abdad561fea3166a6f4e6d6cbfe44dea3">CLGEMMConvolutionLayerQuantizedPerChannelFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:abdad561fea3166a6f4e6d6cbfe44dea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adda980a6f6ff459cb9b0a1720cd8fbe8">CLGEMMGroupedConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:adda980a6f6ff459cb9b0a1720cd8fbe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_convolution_layer_8cpp.xhtml">ConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Thu Aug 18 2022 12:57:43 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
