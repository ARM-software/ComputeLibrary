<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IImageLoader Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1utils_1_1_i_image_loader.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IImageLoader Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> loader interface.  
 <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a76b531ca14f333b04c1d97042dd73c16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a76b531ca14f333b04c1d97042dd73c16">IImageLoader</a> ()</td></tr>
<tr class="memdesc:a76b531ca14f333b04c1d97042dd73c16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a76b531ca14f333b04c1d97042dd73c16">More...</a><br /></td></tr>
<tr class="separator:a76b531ca14f333b04c1d97042dd73c16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9caf88dbc64be1a6ef22716c0eaf46cf"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a9caf88dbc64be1a6ef22716c0eaf46cf">~IImageLoader</a> ()=default</td></tr>
<tr class="memdesc:a9caf88dbc64be1a6ef22716c0eaf46cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual base destructor.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a9caf88dbc64be1a6ef22716c0eaf46cf">More...</a><br /></td></tr>
<tr class="separator:a9caf88dbc64be1a6ef22716c0eaf46cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f0f3e5dd09a150b2cc221c01804d1a7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a7f0f3e5dd09a150b2cc221c01804d1a7">width</a> () const</td></tr>
<tr class="memdesc:a7f0f3e5dd09a150b2cc221c01804d1a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the width of the currently open image file.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a7f0f3e5dd09a150b2cc221c01804d1a7">More...</a><br /></td></tr>
<tr class="separator:a7f0f3e5dd09a150b2cc221c01804d1a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc7679009b582b99d859c0edfc35aa4a"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#adc7679009b582b99d859c0edfc35aa4a">height</a> () const</td></tr>
<tr class="memdesc:adc7679009b582b99d859c0edfc35aa4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the height of the currently open image file.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#adc7679009b582b99d859c0edfc35aa4a">More...</a><br /></td></tr>
<tr class="separator:adc7679009b582b99d859c0edfc35aa4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25c255918a7306769a9e3886166af935"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">is_open</a> ()=0</td></tr>
<tr class="memdesc:a25c255918a7306769a9e3886166af935"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if the image file is currently open.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">More...</a><br /></td></tr>
<tr class="separator:a25c255918a7306769a9e3886166af935"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab646a9b1297198d7c9e2e809c29b7391"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#ab646a9b1297198d7c9e2e809c29b7391">open</a> (const std::string &amp;filename)=0</td></tr>
<tr class="memdesc:ab646a9b1297198d7c9e2e809c29b7391"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open an image file and reads its metadata (Width, height)  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#ab646a9b1297198d7c9e2e809c29b7391">More...</a><br /></td></tr>
<tr class="separator:ab646a9b1297198d7c9e2e809c29b7391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6ee7eacbde6b379b68d954e44f6e549"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#af6ee7eacbde6b379b68d954e44f6e549">close</a> ()=0</td></tr>
<tr class="memdesc:af6ee7eacbde6b379b68d954e44f6e549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes an image file.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#af6ee7eacbde6b379b68d954e44f6e549">More...</a><br /></td></tr>
<tr class="separator:af6ee7eacbde6b379b68d954e44f6e549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283b961e6ca7b117b106c8710c7cfe81"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a283b961e6ca7b117b106c8710c7cfe81"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a283b961e6ca7b117b106c8710c7cfe81">init_image</a> (T &amp;image, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format)</td></tr>
<tr class="memdesc:a283b961e6ca7b117b106c8710c7cfe81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise an image's metadata with the dimensions of the image file currently open.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a283b961e6ca7b117b106c8710c7cfe81">More...</a><br /></td></tr>
<tr class="separator:a283b961e6ca7b117b106c8710c7cfe81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1672610b872bef30d0dc2333a0ffc402"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1672610b872bef30d0dc2333a0ffc402"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a1672610b872bef30d0dc2333a0ffc402">fill_image</a> (T &amp;image)</td></tr>
<tr class="memdesc:a1672610b872bef30d0dc2333a0ffc402"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill an image with the content of the currently open image file.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a1672610b872bef30d0dc2333a0ffc402">More...</a><br /></td></tr>
<tr class="separator:a1672610b872bef30d0dc2333a0ffc402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3f70e1caee95bb95c62346e130e5ab"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7c3f70e1caee95bb95c62346e130e5ab"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a7c3f70e1caee95bb95c62346e130e5ab">fill_planar_tensor</a> (T &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, bool bgr=false)</td></tr>
<tr class="memdesc:a7c3f70e1caee95bb95c62346e130e5ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill a tensor with 3 planes (one for each channel) with the content of the currently open image file.  <a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a7c3f70e1caee95bb95c62346e130e5ab">More...</a><br /></td></tr>
<tr class="separator:a7c3f70e1caee95bb95c62346e130e5ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> loader interface. </p>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00124">124</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a76b531ca14f333b04c1d97042dd73c16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76b531ca14f333b04c1d97042dd73c16">&#9670;&nbsp;</a></span>IImageLoader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml">IImageLoader</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                   : _feeder(<span class="keyword">nullptr</span>), _width(0), _height(0)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9caf88dbc64be1a6ef22716c0eaf46cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9caf88dbc64be1a6ef22716c0eaf46cf">&#9670;&nbsp;</a></span>~IImageLoader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml">IImageLoader</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual base destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af6ee7eacbde6b379b68d954e44f6e549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6ee7eacbde6b379b68d954e44f6e549">&#9670;&nbsp;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Closes an image file. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1utils_1_1_j_p_e_g_loader.xhtml#a7008bca493d69ea65f12e0940f3a6886">JPEGLoader</a>, and <a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml#a7008bca493d69ea65f12e0940f3a6886">PPMLoader</a>.</p>

</div>
</div>
<a id="a1672610b872bef30d0dc2333a0ffc402"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1672610b872bef30d0dc2333a0ffc402">&#9670;&nbsp;</a></span>fill_image()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void fill_image </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fill an image with the content of the currently open image file. </p>
<dl class="section note"><dt>Note</dt><dd>If the image is a CLImage, the function maps and unmaps the image</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">image</td><td><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> to fill (Must be allocated, and of matching dimensions with the opened image file). </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00174">174</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">is_open</a>());</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.info()-&gt;dimension(0) != _width || <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.info()-&gt;dimension(1) != _height);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a0d34a8aa07600727e4e5034c7cdad47d">ARM_COMPUTE_ERROR_ON_FORMAT_NOT_IN</a>(&amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">Format::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">Format::RGB888</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_feeder.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="comment">// Map buffer if creating a CLTensor</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <a class="code" href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">map</a>(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="comment">// Validate feeding data</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            validate_info(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.info());</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">switch</span> (<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.info()-&gt;format())</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">Format::U8</a>:</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    <span class="comment">// We need to convert the data from RGB to grayscale:</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                    <span class="comment">// Iterate through every pixel of the image</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    Window window;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, _width, 1));</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, _height, 1));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    Iterator out(&amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>, window);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> red   = 0;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> green = 0;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> blue  = 0;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        window,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                            red   = _feeder-&gt;get();</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                            green = _feeder-&gt;get();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                            blue  = _feeder-&gt;get();</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                            *out.ptr() = 0.2126f * red + 0.7152f * green + 0.0722f * blue;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        },</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        out);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">Format::RGB888</a>:</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    <span class="comment">// There is no format conversion needed: we can simply copy the content of the input file to the image one row at the time.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="comment">// Create a vertical window to iterate through the image&#39;s rows:</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    Window window;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, _height, 1));</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    Iterator out(&amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>, window);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    <span class="keywordtype">size_t</span>   row_size = _width * <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.info()-&gt;element_size();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                        window, [&amp;](<span class="keyword">const</span> Coordinates &amp;) { _feeder-&gt;get_row(out.ptr(), row_size); }, out);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Unsupported format&quot;</span>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="comment">// Unmap buffer if creating a CLTensor</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <a class="code" href="namespacearm__compute_1_1utils.xhtml#a4ff2134cb88cb5a27120cddb98b59774">unmap</a>(<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::ifstream::failure &amp;e)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Loading image file: %s&quot;</span>, e.what());</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00786">ARM_COMPUTE_ERROR_ON_FORMAT_NOT_IN</a>, <a class="el" href="_error_8h_source.xhtml#l00348">ARM_COMPUTE_ERROR_VAR</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00043">caffe_mnist_image_extractor::image</a>, <a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">IImageLoader::is_open()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00213">arm_compute::utils::map()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00147">Iterator::ptr()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">arm_compute::RGB888</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, and <a class="el" href="utils_2_utils_8h_source.xhtml#l00224">arm_compute::utils::unmap()</a>.</p>

</div>
</div>
<a id="a7c3f70e1caee95bb95c62346e130e5ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c3f70e1caee95bb95c62346e130e5ab">&#9670;&nbsp;</a></span>fill_planar_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void fill_planar_tensor </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bgr</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fill a tensor with 3 planes (one for each channel) with the content of the currently open image file. </p>
<dl class="section note"><dt>Note</dt><dd>If the image is a CLImage, the function maps and unmaps the image</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> with 3 planes to fill (Must be allocated, and of matching dimensions with the opened image). Data types supported: U8/F16/F32 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgr</td><td>(Optional) Fill the first plane with blue channel (default = false) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00253">253</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">is_open</a>());</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                                      <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>  <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>  = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;data_layout();</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keyword">const</span> TensorShape tensor_shape = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;tensor_shape();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(tensor_shape);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor_shape[<a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">DataLayoutDimension::WIDTH</a>)] !=</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                             _width);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor_shape[<a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">DataLayoutDimension::HEIGHT</a>)] !=</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                             _height);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(tensor_shape[<a class="code" href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">get_data_layout_dimension_index</a>(<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a>, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>)] !=</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                             3);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_feeder.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// Map buffer if creating a CLTensor</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <a class="code" href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">map</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="comment">// Validate feeding data</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            validate_info(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info());</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="comment">// Stride across channels</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordtype">size_t</span> stride_z = 0;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="comment">// Iterate through every pixel of the image</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            Window window;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">data_layout</a> == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, _width, 1));</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, _height, 1));</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, Window::Dimension(0, 1, 1));</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                stride_z = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;strides_in_bytes()[2];</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 1, 1));</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, Window::Dimension(0, _width, 1));</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                window.set(<a class="code" href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">Window::DimZ</a>, Window::Dimension(0, _height, 1));</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                stride_z = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;strides_in_bytes()[0];</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            Iterator out(&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, window);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> red   = 0;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> green = 0;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> blue  = 0;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                window,</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    red   = _feeder-&gt;get();</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    green = _feeder-&gt;get();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                    blue  = _feeder-&gt;get();</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                    <span class="keywordflow">switch</span> (<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;data_type())</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                        case DataType::U8:</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                        case DataType::QASYMM8:</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                        {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                            *(out.ptr() + 0 * stride_z) = bgr ? blue : red;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                            *(out.ptr() + 1 * stride_z) = green;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                            *(out.ptr() + 2 * stride_z) = bgr ? red : blue;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                            break;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                            *reinterpret_cast&lt;float *&gt;(out.ptr() + 0 * stride_z) = static_cast&lt;float&gt;(bgr ? blue : red);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                            *reinterpret_cast&lt;float *&gt;(out.ptr() + 1 * stride_z) = static_cast&lt;float&gt;(green);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                            *reinterpret_cast&lt;float *&gt;(out.ptr() + 2 * stride_z) = static_cast&lt;float&gt;(bgr ? red : blue);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                            break;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                        }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                        {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                            *reinterpret_cast&lt;half *&gt;(out.ptr() + 0 * stride_z) = static_cast&lt;half&gt;(bgr ? blue : red);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                            *reinterpret_cast&lt;half *&gt;(out.ptr() + 1 * stride_z) = static_cast&lt;half&gt;(green);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                            *reinterpret_cast&lt;half *&gt;(out.ptr() + 2 * stride_z) = static_cast&lt;half&gt;(bgr ? red : blue);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                            break;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                        {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                            ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Unsupported data type&quot;</span>);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                        }</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                },</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                out);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="comment">// Unmap buffer if creating a CLTensor</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <a class="code" href="namespacearm__compute_1_1utils.xhtml#a4ff2134cb88cb5a27120cddb98b59774">unmap</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        }</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::ifstream::failure &amp;e)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <a class="code" href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a>(<span class="stringliteral">&quot;Loading image file: %s&quot;</span>, e.what());</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00949">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>, <a class="el" href="_error_8h_source.xhtml#l00151">ARM_COMPUTE_UNUSED</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00036">arm_compute::cpu::data_layout</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_window_8h_source.xhtml#l00047">Window::DimZ</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00201">arm_compute::get_data_layout_dimension_index()</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::HEIGHT</a>, <a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">IImageLoader::is_open()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00213">arm_compute::utils::map()</a>, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::NCHW</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00224">arm_compute::utils::unmap()</a>, and <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::WIDTH</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00358">ValidationInputAccessor::access_tensor()</a>.</p>

</div>
</div>
<a id="adc7679009b582b99d859c0edfc35aa4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc7679009b582b99d859c0edfc35aa4a">&#9670;&nbsp;</a></span>height()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int height </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the height of the currently open image file. </p>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00139">139</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> _height;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00358">ValidationInputAccessor::access_tensor()</a>.</p>

</div>
</div>
<a id="a283b961e6ca7b117b106c8710c7cfe81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283b961e6ca7b117b106c8710c7cfe81">&#9670;&nbsp;</a></span>init_image()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void init_image </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialise an image's metadata with the dimensions of the image file currently open. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">image</td><td><a class="el" href="struct_image.xhtml" title="Structure to hold Image information.">Image</a> to initialise </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">format</td><td>Format to use for the image (Must be RGB888 or U8) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00158">158</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!<a class="code" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">is_open</a>());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> != <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">Format::RGB888</a> &amp;&amp; <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> != <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">Format::U8</a>);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// Use the size of the input image</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        TensorInfo image_info(_width, _height, <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">image</a>.allocator()-&gt;init(image_info);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops::format</a>, <a class="el" href="caffe__mnist__image__extractor_8py_source.xhtml#l00043">caffe_mnist_image_extractor::image</a>, <a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">IImageLoader::is_open()</a>, <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">arm_compute::RGB888</a>, and <a class="el" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>.</p>

</div>
</div>
<a id="a25c255918a7306769a9e3886166af935"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25c255918a7306769a9e3886166af935">&#9670;&nbsp;</a></span>is_open()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool is_open </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return true if the image file is currently open. </p>

<p>Implemented in <a class="el" href="classarm__compute_1_1utils_1_1_j_p_e_g_loader.xhtml#ab1d89f579133c9b6779d43f4a1489874">JPEGLoader</a>, and <a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml#ab1d89f579133c9b6779d43f4a1489874">PPMLoader</a>.</p>

<p class="reference">Referenced by <a class="el" href="_image_loader_8h_source.xhtml#l00174">IImageLoader::fill_image()</a>, <a class="el" href="_image_loader_8h_source.xhtml#l00253">IImageLoader::fill_planar_tensor()</a>, and <a class="el" href="_image_loader_8h_source.xhtml#l00158">IImageLoader::init_image()</a>.</p>

</div>
</div>
<a id="ab646a9b1297198d7c9e2e809c29b7391"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab646a9b1297198d7c9e2e809c29b7391">&#9670;&nbsp;</a></span>open()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Open an image file and reads its metadata (Width, height) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>File to open </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1utils_1_1_j_p_e_g_loader.xhtml#ab23b23a466d459ecbad7d046bb085324">JPEGLoader</a>, and <a class="el" href="classarm__compute_1_1utils_1_1_p_p_m_loader.xhtml#ab23b23a466d459ecbad7d046bb085324">PPMLoader</a>.</p>

</div>
</div>
<a id="a7f0f3e5dd09a150b2cc221c01804d1a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f0f3e5dd09a150b2cc221c01804d1a7">&#9670;&nbsp;</a></span>width()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int width </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the width of the currently open image file. </p>

<p class="definition">Definition at line <a class="el" href="_image_loader_8h_source.xhtml#l00134">134</a> of file <a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> _width;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00358">ValidationInputAccessor::access_tensor()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>utils/<a class="el" href="_image_loader_8h_source.xhtml">ImageLoader.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">arm_compute::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div><div class="ttdoc">Num samples, channels, height, width.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a30ff380a3be74628024063a99fba10f0">arm_compute::Format::RGB888</a></div><div class="ttdeci">@ RGB888</div><div class="ttdoc">3 channels, 1 U8 per channel</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_aadf5c9cff86327b96d88d04649d9715e"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00949">Validate.h:949</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdeci">@ CHANNEL</div><div class="ttdoc">channel</div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_acbb621ff2dd6abf95c0bec74f70acffd"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#acbb621ff2dd6abf95c0bec74f70acffd">caffe_mnist_image_extractor.image</a></div><div class="ttdeci">float image</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00043">caffe_mnist_image_extractor.py:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="a_error_8h_xhtml_abd040a16dc0dbc75733e07aff93048a8"><div class="ttname"><a href="_error_8h.xhtml#abd040a16dc0dbc75733e07aff93048a8">ARM_COMPUTE_ERROR_VAR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_VAR(msg,...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00348">Error.h:348</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_i_image_loader_xhtml_a25c255918a7306769a9e3886166af935"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml#a25c255918a7306769a9e3886166af935">arm_compute::utils::IImageLoader::is_open</a></div><div class="ttdeci">virtual bool is_open()=0</div><div class="ttdoc">Return true if the image file is currently open.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02a49da85b69bc6285eeee286ca49fa7195">arm_compute::DataLayoutDimension::WIDTH</a></div><div class="ttdeci">@ WIDTH</div><div class="ttdoc">width</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a443d09c5e20d13e6f4063d0f60616fb5"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a443d09c5e20d13e6f4063d0f60616fb5">arm_compute::cpu::data_layout</a></div><div class="ttdeci">constexpr auto data_layout</div><div class="ttdef"><b>Definition:</b> <a href="depthwiseconv2d_2generic_2neon_2impl_8h_source.xhtml#l00036">impl.h:36</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02ad770ba3ce18fa409965dfdf5e7c348e6">arm_compute::DataLayoutDimension::HEIGHT</a></div><div class="ttdeci">@ HEIGHT</div><div class="ttdoc">height</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a9c3303817ba653b5d1e78efb88d02bcf"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">arm_compute::utils::map</a></div><div class="ttdeci">void map(T &amp;tensor, bool blocking)</div><div class="ttdoc">Maps a tensor if needed.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00213">Utils.h:213</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a6669348b484e3008dca2bfa8e85e40b5">arm_compute::Format::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">1 channel, 1 U8 per channel</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_adfef6f05588c3d40195488620ab54b97"><div class="ttname"><a href="namespacearm__compute.xhtml#adfef6f05588c3d40195488620ab54b97">arm_compute::get_data_layout_dimension_index</a></div><div class="ttdeci">size_t get_data_layout_dimension_index(const DataLayout &amp;data_layout, const DataLayoutDimension &amp;data_layout_dimension)</div><div class="ttdoc">Get the index of the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00201">Helpers.inl:201</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a4ff2134cb88cb5a27120cddb98b59774"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a4ff2134cb88cb5a27120cddb98b59774">arm_compute::utils::unmap</a></div><div class="ttdeci">void unmap(T &amp;tensor)</div><div class="ttdoc">Unmaps a tensor if needed.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00224">Utils.h:224</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a0d34a8aa07600727e4e5034c7cdad47d"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a0d34a8aa07600727e4e5034c7cdad47d">ARM_COMPUTE_ERROR_ON_FORMAT_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_FORMAT_NOT_IN(t,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00786">Validate.h:786</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a893d17b56b9abc4423ce26e9a24ac5dc"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc">arm_compute::Window::DimZ</a></div><div class="ttdeci">static constexpr size_t DimZ</div><div class="ttdoc">Alias for dimension 2 also known as Z dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00047">Window.h:47</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1utils.xhtml">utils</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1utils_1_1_i_image_loader.xhtml">IImageLoader</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:17 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
