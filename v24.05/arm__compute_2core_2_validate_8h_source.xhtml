<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/Validate.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('arm__compute_2core_2_validate_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Validate.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="arm__compute_2core_2_validate_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_VALIDATE_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_VALIDATE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_kernel_8h.xhtml">arm_compute/core/IKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_8h.xhtml">arm_compute/core/ITensor.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantization_info_8h.xhtml">arm_compute/core/QuantizationInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_data_layout_utils_8h.xhtml">arm_compute/core/utils/DataLayoutUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_data_type_utils_8h.xhtml">arm_compute/core/utils/DataTypeUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_format_utils_8h.xhtml">arm_compute/core/utils/FormatUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_8h.xhtml">arm_compute/core/Window.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1detail.xhtml">   40</a></span>&#160;<span class="keyword">namespace </span>detail</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/* Check whether two dimension objects differ.</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * @param[in] dim1      First object to be compared.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * @param[in] dim2      Second object to be compared.</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * @param[in] upper_dim The dimension from which to check.</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * @return Return true if the two objects are different.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">   51</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">have_different_dimensions</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim1, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim2, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> upper_dim)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = upper_dim; i &lt; arm_compute::Dimensions&lt;T&gt;::num_max_dimensions; ++i)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">if</span> (dim1[i] != dim2[i])</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">/** Function to compare two @ref Dimensions objects and throw an error on mismatch.</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * @param[in] dim      Object to compare against.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @param[in] file     File in which the error occurred.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * @param[in] line     Line in which the error occurred.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml">   72</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml">compare_dimension</a></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /** Construct a comparison function.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     * @param[in] dim      Dimensions to compare.</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @param[in] function Source function. Used for error reporting.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in] file     Source code file. Used for error reporting.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in] line     Source code line. Used for error reporting.</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#afe99c6d8da678f7dce4e4a58ad1e0175">   82</a></span>&#160;    <a class="code" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#afe99c6d8da678f7dce4e4a58ad1e0175">compare_dimension</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim, <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">int</span> line)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        : _dim{dim}, _function{<span class="keyword">function</span>}, _file{file}, _line{line}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /** Compare the given object against the stored one.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * @param[in] dim To be compared object.</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @return a status.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#a90462712db283368a62956b9b38aa6a5">   93</a></span>&#160;    <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#a90462712db283368a62956b9b38aa6a5">operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">have_different_dimensions</a>(_dim, dim, 0), _function, _file, _line,</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                            <span class="stringliteral">&quot;Objects have different dimensions&quot;</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;_dim;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">const</span>    _function;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">const</span>    _file;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>            _line;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">  108</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">for_each_error</a>(F &amp;&amp;)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> F, <span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1detail.xhtml#a2fa22dee7227625fa4516f267235667c">  114</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">for_each_error</a>(F &amp;&amp;func, T &amp;&amp;arg, Ts &amp;&amp;...<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(func(arg));</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">for_each_error</a>(func, <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>...));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">/** Get the info for a tensor, dummy struct */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml">  123</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml">get_tensor_info_t</a>;<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">/** Get the info for a tensor */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">  126</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml">get_tensor_info_t</a>&lt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">    /** Get the info for a tensor.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * @param[in] tensor Tensor.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @return tensor info.</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml#a31da9070971bbf34ad5d84094b48c04f">  134</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml#a31da9070971bbf34ad5d84094b48c04f">operator()</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;info();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;};</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;} <span class="comment">// namespace detail</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">/** Create an error if one of the pointers is a nullptr.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"> * @param[in] pointers Pointers to check against nullptr.</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">  151</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">error_on_nullptr</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, Ts &amp;&amp;...pointers)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keyword">sizeof</span>...(Ts)&gt; pointers_array{{std::forward&lt;Ts&gt;(pointers)...}};</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">bool</span>                                          has_nullptr =</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        std::any_of(pointers_array.begin(), pointers_array.end(), [&amp;](<span class="keyword">const</span> <span class="keywordtype">void</span> *ptr) { return (ptr == nullptr); });</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(has_nullptr, <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Nullptr object!&quot;</span>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">  159</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...) \</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_nullptr(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">  161</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...) \</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_nullptr(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">/** Return an error if the passed window is invalid.</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"> * The subwindow is invalid if:</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"> * - It is not a valid window.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"> * - Its dimensions don&#39;t match the full window&#39;s ones</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"> * - The step for each of its dimension is not identical to the corresponding one of the full window.</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment"> * @param[in] full     Full size window</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"> * @param[in] win      Window to validate.</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ad7f5b38e9d5391afc4a5ce5702e7379b">error_on_mismatching_windows</a>(</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> Window &amp;full, <span class="keyword">const</span> Window &amp;win);</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a57b20c050f8af67775d6da1b6febf038">  181</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_WINDOWS(f, w) \</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_mismatching_windows(__func__, __FILE__, __LINE__, f, w))</span></div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aff5af8a7daadc292442a113a91dddf7d">  183</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_WINDOWS(f, w) \</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_mismatching_windows(__func__, __FILE__, __LINE__, f, w))</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">/** Return an error if the passed subwindow is invalid.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> * The subwindow is invalid if:</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * - It is not a valid window.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * - It is not fully contained inside the full window</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * - The step for each of its dimension is not identical to the corresponding one of the full window.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"> * @param[in] full     Full size window</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"> * @param[in] sub      Sub-window to validate.</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ae93ff1ca47057b95d0c6fd0d287253a8">error_on_invalid_subwindow</a>(</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> Window &amp;full, <span class="keyword">const</span> Window &amp;sub);</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">  203</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s) \</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_invalid_subwindow(__func__, __FILE__, __LINE__, f, s))</span></div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a7c4072bb0b9a663bae54787f7bc7d091">  205</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_INVALID_SUBWINDOW(f, s) \</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_invalid_subwindow(__func__, __FILE__, __LINE__, f, s))</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">/** Return an error if the window can&#39;t be collapsed at the given dimension.</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"> * The window cannot be collapsed if the given dimension not equal to the full window&#39;s dimension or not start from 0.</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"> * @param[in] full     Full size window</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"> * @param[in] window   Window to be collapsed.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"> * @param[in] dim      Dimension need to be checked.</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a4f63a617a4897663b386ba5e1f5cb675">error_on_window_not_collapsable_at_dimension</a>(</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> Window &amp;full, <span class="keyword">const</span> Window &amp;window, <span class="keyword">const</span> <span class="keywordtype">int</span> dim);</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a693decaffb042b3ff76e274f983e8ac1">  223</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_WINDOW_NOT_COLLAPSABLE_AT_DIMENSION(f, w, d) \</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                                           \</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_window_not_collapsable_at_dimension(__func__, __FILE__, __LINE__, f, w, d))</span></div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a56e3d9bf78d3dc9f06d4929a839f7d33">  226</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_WINDOW_NOT_COLLAPSABLE_AT_DIMENSION(f, w, d) \</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                                 \</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_window_not_collapsable_at_dimension(__func__, __FILE__, __LINE__, f, w, d))</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">/** Return an error if the passed coordinates have too many dimensions.</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment"> * The coordinates have too many dimensions if any of the dimensions greater or equal to max_dim is different from 0.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"> * @param[in] pos      Coordinates to validate</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment"> * @param[in] max_dim  Maximum number of dimensions allowed.</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a3c62cc8d5ee934d42c115c9315d66c13">error_on_coordinates_dimensions_gte</a>(</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> Coordinates &amp;pos, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> max_dim);</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aecee2852b71597de947ff5ec4b9765f6">  244</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_COORDINATES_DIMENSIONS_GTE(p, md) \</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_coordinates_dimensions_gte(__func__, __FILE__, __LINE__, p, md))</span></div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a4a1f29c69e13d0c271a025771db7e354">  246</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_COORDINATES_DIMENSIONS_GTE(p, md) \</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_coordinates_dimensions_gte(__func__, __FILE__, __LINE__, p, md))</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">/** Return an error if the passed window has too many dimensions.</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"> * The window has too many dimensions if any of the dimension greater or equal to max_dim is different from 0.</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"> * @param[in] win      Window to validate</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"> * @param[in] max_dim  Maximum number of dimensions allowed.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a7d65985a30fc1229047b7db32caaab43">error_on_window_dimensions_gte</a>(</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> Window &amp;win, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> max_dim);</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#af5084ef537306d09b1ef82aed5d1f63f">  263</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_WINDOW_DIMENSIONS_GTE(w, md) \</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_window_dimensions_gte(__func__, __FILE__, __LINE__, w, md))</span></div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#ac971a57039435ecc6b3321df4d324743">  265</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_WINDOW_DIMENSIONS_GTE(w, md) \</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_window_dimensions_gte(__func__, __FILE__, __LINE__, w, md))</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">/** Return an error if the passed dimension objects differ.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment"> * @param[in] dim1     The first object to be compared.</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment"> * @param[in] dim2     The second object to be compared.</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment"> * @param[in] dims     (Optional) Further allowed objects.</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ab3f385292b90327061e1276f3e3445c7">  280</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ab3f385292b90327061e1276f3e3445c7">error_on_mismatching_dimensions</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>          *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                                                    <span class="keyword">const</span> <span class="keywordtype">char</span>          *file,</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                                    <span class="keywordtype">int</span>                  line,</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim1,</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_dimensions.xhtml">Dimensions&lt;T&gt;</a> &amp;dim2,</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                                    Ts &amp;&amp;...dims)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">detail::for_each_error</a>(<a class="code" href="classarm__compute_1_1detail_1_1compare__dimension.xhtml">detail::compare_dimension&lt;T&gt;</a>(dim1, <span class="keyword">function</span>, file, line), dim2,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                                       std::forward&lt;Ts&gt;(dims)...));</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#ad9fd47433ba6091668c207e21dd6385f">  291</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_DIMENSIONS(...) \</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                          \</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_dimensions(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a1da797d2762c1cdbb73bfc83136c3a38">  294</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DIMENSIONS(...) \</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                \</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_dimensions(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">/** Return true if the given format has horizontal subsampling.</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"> * @param[in] format Format to determine subsampling.</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"> * @return True if the format can be subsampled horizontaly.</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aa2f22cc01532e0236e438324310fdb94">  304</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute.xhtml#aa2f22cc01532e0236e438324310fdb94">has_format_horizontal_subsampling</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">Format::YUYV422</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">Format::UYVY422</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">Format::NV12</a> ||</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">Format::NV21</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">Format::IYUV</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825">Format::UV88</a>)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;               ? true</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;               : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">/** Return true if the given format has vertical subsampling.</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"> * @param[in] format Format to determine subsampling.</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment"> * @return True if the format can be subsampled verticaly.</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a95358b677c5c17f5cc1e369e4a27e2c2">  318</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute.xhtml#a95358b677c5c17f5cc1e369e4a27e2c2">has_format_vertical_subsampling</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> (<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">Format::NV12</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">Format::NV21</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">Format::IYUV</a> || <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825">Format::UV88</a>)</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;               ? true</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;               : <span class="keyword">false</span>;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">/** Adjust tensor shape size if width or height are odd for a given multi-planar format. No modification is done for other formats.</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment"> * @note Adding here a few links discussing the issue of odd size and sharing the same solution:</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment"> *       &lt;a href=&quot;https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/graphics/java/android/graphics/YuvImage.java&quot;&gt;Android Source&lt;/a&gt;</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment"> *       &lt;a href=&quot;https://groups.google.com/a/webmproject.org/forum/#!topic/webm-discuss/LaCKpqiDTXM&quot;&gt;WebM&lt;/a&gt;</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment"> *       &lt;a href=&quot;https://bugs.chromium.org/p/libyuv/issues/detail?id=198&amp;amp;can=1&amp;amp;q=odd%20width&quot;&gt;libYUV&lt;/a&gt;</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment"> *       &lt;a href=&quot;https://sourceforge.net/p/raw-yuvplayer/bugs/1/&quot;&gt;YUVPlayer&lt;/a&gt; *</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment"> * @param[in, out] shape  Tensor shape of 2D size</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment"> * @param[in]      format Format of the tensor</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment"> * @return The adjusted tensor shape.</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#add7f7487c235331a6518dd16ad1e3b38">  338</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute.xhtml#add7f7487c235331a6518dd16ad1e3b38">adjust_odd_shape</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;{</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> output{<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>};</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="comment">// Force width to be even for formats which require subsampling of the U and V channels</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#aa2f22cc01532e0236e438324310fdb94">has_format_horizontal_subsampling</a>(<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>))</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        output.set(0, (output.x() + 1) &amp; ~1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="comment">// Force height to be even for formats which require subsampling of the U and V channels</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a95358b677c5c17f5cc1e369e4a27e2c2">has_format_vertical_subsampling</a>(<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>))</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        output.set(1, (output.y() + 1) &amp; ~1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">/** Return an error if the passed tensor objects are not even.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"> * @param[in] format   Format to check if odd shape is allowed</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment"> * @param[in] tensor1  The first object to be compared for odd shape.</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed objects.</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aa8bcb895249c9b0207df5d6512433aab">  369</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#aa8bcb895249c9b0207df5d6512433aab">error_on_tensors_not_even</a>(</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> &amp;<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor1, Ts... tensors)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;{</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor1 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, std::forward&lt;Ts&gt;(tensors)...));</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *, 1 + <span class="keyword">sizeof</span>...(Ts)&gt; tensors_info_array{{tensor1, std::forward&lt;Ts&gt;(tensors)...}};</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        std::any_of(tensors_info_array.cbegin(), tensors_info_array.cend(),</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                        const TensorShape correct_shape = adjust_odd_shape(tensor-&gt;info()-&gt;tensor_shape(), format);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                        return detail::have_different_dimensions(tensor-&gt;info()-&gt;tensor_shape(), correct_shape, 2);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                    }),</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensor shape has odd dimensions&quot;</span>);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a8a6d6f1d01603b27b7b29e1595323aac">  386</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_TENSORS_NOT_EVEN(...) \</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_tensors_not_even(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#afa03792380678d33e64ad42c0fdff956">  388</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_TENSORS_NOT_EVEN(...) \</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_tensors_not_even(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">/** Calculate subsampled shape for a given format and channel</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment"> * @param[in] shape   Shape of the tensor to calculate the extracted channel.</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment"> * @param[in] format  Format of the tensor.</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment"> * @param[in] channel Channel to create tensor shape to be extracted.</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment"> * @return The subsampled tensor shape.</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keyword">inline</span> TensorShape</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a9d714e1b7d9d7818309138b7d830ebcb">  400</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#a9d714e1b7d9d7818309138b7d830ebcb">calculate_subsampled_shape</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>, <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">Channel</a> channel = <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa696b031073e74bf2cb98e5ef201d4aa3">Channel::UNKNOWN</a>)</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> output{<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>};</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="comment">// Subsample shape only for U or V channel</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">Channel::U</a> == channel || <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce">Channel::V</a> == channel || <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa696b031073e74bf2cb98e5ef201d4aa3">Channel::UNKNOWN</a> == channel)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="comment">// Subsample width for the tensor shape when channel is U or V</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#aa2f22cc01532e0236e438324310fdb94">has_format_horizontal_subsampling</a>(<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>))</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            output.set(0, output.x() / 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160; </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="comment">// Subsample height for the tensor shape when channel is U or V</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute.xhtml#a95358b677c5c17f5cc1e369e4a27e2c2">has_format_vertical_subsampling</a>(<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>))</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        {</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            output.set(1, output.y() / 2<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        }</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;}</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">/** Return an error if the passed tensor objects are not sub-sampled.</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment"> * @param[in] format   Format to check if sub-sampling allowed.</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment"> * @param[in] shape    The tensor shape to calculate sub-sampling from.</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment"> * @param[in] tensor1  The first object to be compared.</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed objects.</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a5865def3a35885dda73dd5f4d555d11c">  436</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a5865def3a35885dda73dd5f4d555d11c">error_on_tensors_not_subsampled</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                                    <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                                    <span class="keywordtype">int</span>                line,</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>      &amp;<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>,</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>,</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a>     *tensor1,</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                                    Ts... tensors)</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;{</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor1 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, std::forward&lt;Ts&gt;(tensors)...));</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>                                    sub2_shape = <a class="code" href="namespacearm__compute.xhtml#a9d714e1b7d9d7818309138b7d830ebcb">calculate_subsampled_shape</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>, <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *, 1 + <span class="keyword">sizeof</span>...(Ts)&gt; tensors_info_array{{tensor1, std::forward&lt;Ts&gt;(tensors)...}};</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        std::any_of(tensors_info_array.cbegin(), tensors_info_array.cend(),</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>)</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                    { return detail::have_different_dimensions(tensor-&gt;info()-&gt;tensor_shape(), sub2_shape, 2); }),</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensor shape has mismatch dimensions for sub-sampling&quot;</span>);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00456"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a327ed03fd5a08f3306ff1688177da53a">  456</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_TENSORS_NOT_SUBSAMPLED(...) \</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                          \</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_tensors_not_subsampled(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a8bcd0180e450efc67cb856bc46e67ba6">  459</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_TENSORS_NOT_SUBSAMPLED(...) \</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                \</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_tensors_not_subsampled(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">/** Return an error if the passed two tensor infos have different shapes from the given dimension</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment"> * @param[in] function      Function in which the error occurred.</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment"> * @param[in] file          Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment"> * @param[in] line          Line on which the error occurred.</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment"> * @param[in] tensor_info_1 The first tensor info to be compared.</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment"> * @param[in] tensor_info_2 The second tensor info to be compared.</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment"> * @param[in] tensor_infos  (Optional) Further allowed tensor infos.</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">  475</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_1,</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_2,</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                                       Ts... tensor_infos)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;{</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">function</span>, file, line, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, tensor_info_1, tensor_info_2,</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                       std::forward&lt;Ts&gt;(tensor_infos)...);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">/** Return an error if the passed two tensors have different shapes from the given dimension</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment"> * @param[in] tensor_1 The first tensor to be compared.</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment"> * @param[in] tensor_2 The second tensor to be compared.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed tensors.</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a196a1a4faf1a8893963fd89d7efaf5d9">  497</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>    *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">char</span>    *file,</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">int</span>      line,</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_1,</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_2,</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                                                       Ts... tensors)</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">function</span>, file, line, 0<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, tensor_1, tensor_2, std::forward&lt;Ts&gt;(tensors)...);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">/** Return an error if the passed two tensors have different shapes from the given dimension</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment"> * @param[in] function      Function in which the error occurred.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"> * @param[in] file          Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment"> * @param[in] line          Line on which the error occurred.</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment"> * @param[in] upper_dim     The dimension from which to check.</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment"> * @param[in] tensor_info_1 The first tensor info to be compared.</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment"> * @param[in] tensor_info_2 The second tensor info to be compared.</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment"> * @param[in] tensor_infos  (Optional) Further allowed tensor infos.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a8f08e05970c101f7a9c852dc036f5ffb">  519</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                                                       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>       upper_dim,</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_1,</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_2,</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                                                       Ts... tensor_infos)</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;{</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_info_1 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_info_2 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, tensor_infos...));</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *, 2 + <span class="keyword">sizeof</span>...(Ts)&gt; tensors_info_array{</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        {tensor_info_1, tensor_info_2, tensor_infos...}};</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(std::any_of(std::next(tensors_info_array.cbegin()), tensors_info_array.cend(),</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                                    {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                                        return detail::have_different_dimensions(</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                                            (*tensors_info_array.cbegin())-&gt;tensor_shape(),</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                                            tensor_info-&gt;tensor_shape(), upper_dim);</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                                                    }),</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensors have different shapes&quot;</span>);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">/** Return an error if the passed two tensors have different shapes from the given dimension</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"> * @param[in] function  Function in which the error occurred.</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment"> * @param[in] file      Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment"> * @param[in] line      Line on which the error occurred.</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment"> * @param[in] upper_dim The dimension from which to check.</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment"> * @param[in] tensor_1  The first tensor to be compared.</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"> * @param[in] tensor_2  The second tensor to be compared.</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment"> * @param[in] tensors   (Optional) Further allowed tensors.</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00556"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a7a314d37a14fb002f52a148122238499">  556</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">error_on_mismatching_shapes</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>    *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">char</span>    *file,</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                                       <span class="keyword">const</span> <span class="keywordtype">int</span>      line,</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                                       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>   upper_dim,</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_1,</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_2,</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                                       Ts... tensors)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;{</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_1 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_2 == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, tensors...));</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        ::<a class="code" href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">arm_compute::error_on_mismatching_shapes</a>(<span class="keyword">function</span>, file, line, upper_dim, tensor_1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), tensor_2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                                   <a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">detail::get_tensor_info_t&lt;ITensorInfo *&gt;</a>()(tensors)...));</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;}</div>
<div class="line"><a name="l00572"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aafce5e9928fac427dcd29d960bcf2ae3">  572</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_SHAPES(...) \</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_mismatching_shapes(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">  574</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...) \</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_mismatching_shapes(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">/** Return an error if the passed tensor infos have different data layouts</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment"> * @param[in] function     Function in which the error occurred.</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment"> * @param[in] file         Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment"> * @param[in] line         Line on which the error occurred.</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment"> * @param[in] tensor_info  The first tensor info to be compared.</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment"> * @param[in] tensor_infos (Optional) Further allowed tensor infos.</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a8355d6db4cebee2724bf4463076526c6">  588</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a8355d6db4cebee2724bf4463076526c6">error_on_mismatching_data_layouts</a>(</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, Ts... tensor_infos)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;{</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, tensor_infos...));</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160; </div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>                                         &amp;&amp;tensor_data_layout = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>();</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *, <span class="keyword">sizeof</span>...(Ts)&gt; tensors_infos_array{{tensor_infos...}};</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(std::any_of(tensors_infos_array.begin(), tensors_infos_array.end(),</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_obj)</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                                                    { return tensor_info_obj-&gt;data_layout() != tensor_data_layout; }),</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                                        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensors have different data layouts&quot;</span>);</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment">/** Return an error if the passed tensors have different data layouts</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment"> * @param[in] tensor   The first tensor to be compared.</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed tensors.</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00613"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad6e5ea4c65e9a0e7853ce314024c955d">  613</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a8355d6db4cebee2724bf4463076526c6">error_on_mismatching_data_layouts</a>(</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, Ts... tensors)</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;{</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, std::forward&lt;Ts&gt;(tensors)...));</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#a8355d6db4cebee2724bf4463076526c6">arm_compute::error_on_mismatching_data_layouts</a>(</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), <a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">detail::get_tensor_info_t&lt;ITensorInfo *&gt;</a>()(tensors)...));</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;}</div>
<div class="line"><a name="l00622"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#af16d3fc9c85590971cf583683a745fff">  622</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_DATA_LAYOUT(...) \</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                           \</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_data_layouts(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00625"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#abdb9168800c70e5e2c4c020a3b905738">  625</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_LAYOUT(...) \</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                 \</span></div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_data_layouts(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">/** Return an error if the passed two tensor infos have different data types</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment"> * @param[in] function     Function in which the error occurred.</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment"> * @param[in] file         Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment"> * @param[in] line         Line on which the error occurred.</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment"> * @param[in] tensor_info  The first tensor info to be compared.</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment"> * @param[in] tensor_infos (Optional) Further allowed tensor infos.</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00640"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a85c38583df1a7998d58c51f7c3d4b354">  640</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a85c38583df1a7998d58c51f7c3d4b354">error_on_mismatching_data_types</a>(</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, Ts... tensor_infos)</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;{</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, tensor_infos...));</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160; </div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>                                           &amp;&amp;tensor_data_type = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>();</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *, <span class="keyword">sizeof</span>...(Ts)&gt; tensors_infos_array{{tensor_infos...}};</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(std::any_of(tensors_infos_array.begin(), tensors_infos_array.end(),</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                                                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_obj)</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                                                    { return tensor_info_obj-&gt;data_type() != tensor_data_type; }),</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                                        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensors have different data types&quot;</span>);</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="comment">/** Return an error if the passed two tensors have different data types</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment"> * @param[in] tensor   The first tensor to be compared.</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed tensors.</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00665"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aa8b68ddd24c352a4cdd4fb1eea263429">  665</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a85c38583df1a7998d58c51f7c3d4b354">error_on_mismatching_data_types</a>(</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, Ts... tensors)</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;{</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a>(<span class="keyword">function</span>, file, line, tensors...));</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#a85c38583df1a7998d58c51f7c3d4b354">arm_compute::error_on_mismatching_data_types</a>(</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), <a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">detail::get_tensor_info_t&lt;ITensorInfo *&gt;</a>()(tensors)...));</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;}</div>
<div class="line"><a name="l00674"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a5befbfaf6bc224eabc58b5e88b1de6d1">  674</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_DATA_TYPES(...) \</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                          \</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_data_types(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00677"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">  677</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...) \</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                \</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_data_types(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment">/** Return an error if the passed tensor infos have different asymmetric quantized data types or different quantization info</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="comment"> * @note: If the first tensor info doesn&#39;t have asymmetric quantized data type, the function returns without throwing an error</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment"> * @param[in] function      Function in which the error occurred.</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment"> * @param[in] file          Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment"> * @param[in] line          Line on which the error occurred.</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment"> * @param[in] tensor_info_1 The first tensor info to be compared.</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment"> * @param[in] tensor_info_2 The second tensor info to be compared.</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment"> * @param[in] tensor_infos  (Optional) Further allowed tensor infos.</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00695"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a49e1fb8719a6e3b4db298796bdeac758">  695</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a49e1fb8719a6e3b4db298796bdeac758">error_on_mismatching_quantization_info</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                                                  <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                                                                  <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_1,</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *tensor_info_2,</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                                                                  Ts... tensor_infos)</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;{</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>             &amp;&amp;first_data_type         = tensor_info_1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> first_quantization_info = tensor_info_1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>();</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160; </div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">is_data_type_quantized</a>(first_data_type))</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    {</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    }</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160; </div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="keyword">const</span> std::array&lt;<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *, 1 + <span class="keyword">sizeof</span>...(Ts)&gt; tensor_infos_array{</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        {tensor_info_2, std::forward&lt;Ts&gt;(tensor_infos)...}};</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(std::any_of(tensor_infos_array.begin(), tensor_infos_array.end(),</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                                                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                                                    { return tensor_info-&gt;data_type() != first_data_type; }),</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                                        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensors have different asymmetric quantized data types&quot;</span>);</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>(</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        std::any_of(tensor_infos_array.begin(), tensor_infos_array.end(),</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                    [&amp;](<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                    { return tensor_info-&gt;quantization_info() != first_quantization_info; }),</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Tensors have different quantization information&quot;</span>);</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160; </div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="comment">/** Return an error if the passed tensor have different asymmetric quantized data types or different quantization info</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment"> * @note: If the first tensor doesn&#39;t have asymmetric quantized data type, the function returns without throwing an error</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;<span class="comment"> * @param[in] tensor_1 The first tensor to be compared.</span></div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment"> * @param[in] tensor_2 The second tensor to be compared.</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment"> * @param[in] tensors  (Optional) Further allowed tensors.</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00738"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a3ba911901c6a47649cba6884e0f43a18">  738</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a49e1fb8719a6e3b4db298796bdeac758">error_on_mismatching_quantization_info</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>    *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                                                                  <span class="keyword">const</span> <span class="keywordtype">char</span>    *file,</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                                                                  <span class="keyword">const</span> <span class="keywordtype">int</span>      line,</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_1,</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                                                                  <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *tensor_2,</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                                                                  Ts... tensors)</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;{</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        ::<a class="code" href="namespacearm__compute.xhtml#a49e1fb8719a6e3b4db298796bdeac758">arm_compute::error_on_mismatching_quantization_info</a>(<span class="keyword">function</span>, file, line, tensor_1-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), tensor_2-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                                                              <a class="code" href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">detail::get_tensor_info_t&lt;ITensorInfo *&gt;</a>()(tensors)...));</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;}</div>
<div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a13722b17f287d58f2a24f039dc2b4fc1">  750</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...) \</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                                 \</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_quantization_info(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00753"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aba910b683652be1f65437ef37a9da2a9">  753</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_QUANTIZATION_INFO(...) \</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                       \</span></div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_mismatching_quantization_info(__func__, __FILE__, __LINE__, __VA_ARGS__))</span></div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="comment">/** Throw an error if the format of the passed tensor/multi-image does not match any of the formats provided.</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="comment"> * @param[in] object   Tensor/multi-image to validate.</span></div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="comment"> * @param[in] format   First format allowed.</span></div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="comment"> * @param[in] formats  (Optional) Further allowed formats.</span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> F, <span class="keyword">typename</span>... Fs&gt;</div>
<div class="line"><a name="l00767"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a0b360558b516e256f0af005a164c674e">  767</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute.xhtml#a0b360558b516e256f0af005a164c674e">error_on_format_not_in</a>(</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> T *<span class="keywordtype">object</span>, F &amp;&amp;<a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>, Fs &amp;&amp;...formats)</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;{</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <a class="code" href="_error_8h.xhtml#ac90c3bce005225cbaa4a43740917bb58">ARM_COMPUTE_ERROR_ON_LOC</a>(<span class="keywordtype">object</span> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160; </div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> &amp;&amp;object_format = <span class="keywordtype">object</span>-&gt;info()-&gt;format();</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(object_format);</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160; </div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <a class="code" href="_error_8h.xhtml#ac90c3bce005225cbaa4a43740917bb58">ARM_COMPUTE_ERROR_ON_LOC</a>(object_format == <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a696b031073e74bf2cb98e5ef201d4aa3">Format::UNKNOWN</a>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160; </div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <span class="keyword">const</span> std::array&lt;F, <span class="keyword">sizeof</span>...(Fs)&gt; formats_array{{std::forward&lt;Fs&gt;(formats)...}};</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(formats_array);</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160; </div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <a class="code" href="_error_8h.xhtml#a1b62e396a1789909dadda61ea4cda96f">ARM_COMPUTE_ERROR_ON_LOC_MSG</a>(</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        object_format != <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a> &amp;&amp;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            std::none_of(formats_array.begin(), formats_array.end(), [&amp;](<span class="keyword">const</span> F &amp;f) { return f == object_format; }),</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;Format %s not supported by this kernel&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#a8b82da7b5e0f6192f415ac347c9e0555">string_from_format</a>(object_format).c_str());</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<span class="keyword">function</span>, <a class="code" href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">format</a>, file, line);</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;}</div>
<div class="line"><a name="l00786"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a0d34a8aa07600727e4e5034c7cdad47d">  786</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_FORMAT_NOT_IN(t, ...) \</span></div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="preprocessor">    ::arm_compute::error_on_format_not_in(__func__, __FILE__, __LINE__, t, __VA_ARGS__)</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="comment">/** Return an error if the data type of the passed tensor info does not match any of the data types provided.</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="comment"> * @param[in] function    Function in which the error occurred.</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="comment"> * @param[in] file        Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="comment"> * @param[in] line        Line on which the error occurred.</span></div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="comment"> * @param[in] tensor_info Tensor info to validate.</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="comment"> * @param[in] dt          First data type allowed.</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment"> * @param[in] dts         (Optional) Further allowed data types.</span></div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">  801</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">error_on_data_type_not_in</a>(</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, T &amp;&amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>, Ts &amp;&amp;...dts)</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;{</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160; </div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> &amp;tensor_dt = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>(); <span class="comment">//NOLINT</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_dt == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160; </div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keyword">const</span> std::array&lt;T, <span class="keyword">sizeof</span>...(Ts)&gt; dts_array{{std::forward&lt;Ts&gt;(dts)...}};</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <a class="code" href="_error_8h.xhtml#a5e3e8db314706c6f3d822bafa3d8d761">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</a>(</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        tensor_dt != <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a> &amp;&amp; std::none_of(dts_array.begin(), dts_array.end(), [&amp;](<span class="keyword">const</span> T &amp;d) { return d == tensor_dt; }),</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;ITensor data type %s not supported by this kernel&quot;</span>,</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(tensor_dt).c_str());</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment">/** Return an error if the data type of the passed tensor does not match any of the data types provided.</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment"> * @param[in] tensor   Tensor to validate.</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment"> * @param[in] dt       First data type allowed.</span></div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;<span class="comment"> * @param[in] dts      (Optional) Further allowed data types.</span></div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00828"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a4ae0ca8176fce8caa48601dc8324ca97">  828</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">error_on_data_type_not_in</a>(</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, T &amp;&amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>, Ts &amp;&amp;...dts)</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;{</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">arm_compute::error_on_data_type_not_in</a>(</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), std::forward&lt;T&gt;(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>), std::forward&lt;Ts&gt;(dts)...));</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;}</div>
<div class="line"><a name="l00836"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a4264d7e3318c4188e48127a75f3f0f8a">  836</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_NOT_IN(t, ...) \</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_data_type_not_in(__func__, __FILE__, __LINE__, t, __VA_ARGS__))</span></div>
<div class="line"><a name="l00838"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aef783de4ec01874dbec6054a5868aea2">  838</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_NOT_IN(t, ...) \</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_data_type_not_in(__func__, __FILE__, __LINE__, t, __VA_ARGS__))</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="comment">/** Return an error if the data layout of the passed tensor info does not match any of the data layouts provided.</span></div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="comment"> * @param[in] function    Function in which the error occurred.</span></div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;<span class="comment"> * @param[in] file        Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;<span class="comment"> * @param[in] line        Line on which the error occurred.</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="comment"> * @param[in] tensor_info Tensor info to validate.</span></div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;<span class="comment"> * @param[in] dl          First data layout allowed.</span></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;<span class="comment"> * @param[in] dls         (Optional) Further allowed data layouts.</span></div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00853"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ac6c243f12870355c0b97ac813b9e7d25">  853</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ac6c243f12870355c0b97ac813b9e7d25">error_on_data_layout_not_in</a>(</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, T &amp;&amp;<a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128">dl</a>, Ts &amp;&amp;...dls)</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;{</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160; </div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> &amp;tensor_dl = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">data_layout</a>(); <span class="comment">//NOLINT</span></div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(tensor_dl == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160; </div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    <span class="keyword">const</span> std::array&lt;T, <span class="keyword">sizeof</span>...(Ts)&gt; dls_array{{std::forward&lt;Ts&gt;(dls)...}};</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <a class="code" href="_error_8h.xhtml#a5e3e8db314706c6f3d822bafa3d8d761">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</a>(</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        tensor_dl != <a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128">dl</a> &amp;&amp; std::none_of(dls_array.begin(), dls_array.end(), [&amp;](<span class="keyword">const</span> T &amp;l) { return l == tensor_dl; }),</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keyword">function</span>, file, line, <span class="stringliteral">&quot;ITensor data layout %s not supported by this kernel&quot;</span>,</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">string_from_data_layout</a>(tensor_dl).c_str());</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="comment">/** Return an error if the data layout of the passed tensor does not match any of the data layout provided.</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="comment"> * @param[in] tensor   Tensor to validate.</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;<span class="comment"> * @param[in] dl       First data layout allowed.</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;<span class="comment"> * @param[in] dls      (Optional) Further allowed data layouts.</span></div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a0b98606f8d98e828064496148231c0fb">  880</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ac6c243f12870355c0b97ac813b9e7d25">error_on_data_layout_not_in</a>(</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, T &amp;&amp;<a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128">dl</a>, Ts &amp;&amp;...dls)</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;{</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#ac6c243f12870355c0b97ac813b9e7d25">arm_compute::error_on_data_layout_not_in</a>(</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        <span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), std::forward&lt;T&gt;(<a class="code" href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128">dl</a>), std::forward&lt;Ts&gt;(dls)...));</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;}</div>
<div class="line"><a name="l00888"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a408add8ba09ab4dd7645eca6dc0e6658">  888</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_DATA_LAYOUT_NOT_IN(t, ...) \</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_data_layout_not_in(__func__, __FILE__, __LINE__, t, __VA_ARGS__))</span></div>
<div class="line"><a name="l00890"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a7e906bfc9e333e3f967d8ee9353ce001">  890</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_LAYOUT_NOT_IN(t, ...) \</span></div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                               \</span></div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_data_layout_not_in(__func__, __FILE__, __LINE__, t, __VA_ARGS__))</span></div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="comment">/** Return an error if the data type or the number of channels of the passed tensor info does not match any of the data types and number of channels provided.</span></div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;<span class="comment"> * @param[in] function     Function in which the error occurred.</span></div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;<span class="comment"> * @param[in] file         Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;<span class="comment"> * @param[in] line         Line on which the error occurred.</span></div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="comment"> * @param[in] tensor_info  Tensor info to validate.</span></div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;<span class="comment"> * @param[in] num_channels Number of channels to check</span></div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment"> * @param[in] dt           First data type allowed.</span></div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="comment"> * @param[in] dts          (Optional) Further allowed data types.</span></div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00907"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a499a45039b9bba66384504843d5823d4">  907</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a499a45039b9bba66384504843d5823d4">error_on_data_type_channel_not_in</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                                                             <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                                                             <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>,</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                                                             <span class="keywordtype">size_t</span>             num_channels,</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                                                             T                &amp;&amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>,</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                                                             Ts &amp;&amp;...dts)</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;{</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(::<a class="code" href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">arm_compute::error_on_data_type_not_in</a>(</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;        <span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, std::forward&lt;T&gt;(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>), std::forward&lt;Ts&gt;(dts)...));</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> tensor_nc = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">num_channels</a>();</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    <a class="code" href="_error_8h.xhtml#a5e3e8db314706c6f3d822bafa3d8d761">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</a>(tensor_nc != num_channels, <span class="keyword">function</span>, file, line,</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                                            <span class="stringliteral">&quot;Number of channels %zu. Required number of channels %zu&quot;</span>, tensor_nc,</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                                            num_channels);</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;}<span class="comment"></span></div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;<span class="comment">/** Return an error if the data type or the number of channels of the passed tensor does not match any of the data types and number of channels provided.</span></div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="comment"> * @param[in] function     Function in which the error occurred.</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment"> * @param[in] file         Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment"> * @param[in] line         Line on which the error occurred.</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment"> * @param[in] tensor       Tensor to validate.</span></div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="comment"> * @param[in] num_channels Number of channels to check</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment"> * @param[in] dt           First data type allowed.</span></div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment"> * @param[in] dts          (Optional) Further allowed data types.</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00936"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ad3137e73dbd78133d25751abd84540d8">  936</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a499a45039b9bba66384504843d5823d4">error_on_data_type_channel_not_in</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>    *<span class="keyword">function</span>,</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                                             <span class="keyword">const</span> <span class="keywordtype">char</span>    *file,</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                                                             <span class="keyword">const</span> <span class="keywordtype">int</span>      line,</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>,</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                                                             <span class="keywordtype">size_t</span>         num_channels,</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                                                             T            &amp;&amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>,</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                                                             Ts &amp;&amp;...dts)</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;{</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a499a45039b9bba66384504843d5823d4">error_on_data_type_channel_not_in</a>(<span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), num_channels,</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;                                                                  std::forward&lt;T&gt;(<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a>), std::forward&lt;Ts&gt;(dts)...));</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;}</div>
<div class="line"><a name="l00949"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#aadf5c9cff86327b96d88d04649d9715e">  949</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c, ...) \</span></div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                                  \</span></div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_data_type_channel_not_in(__func__, __FILE__, __LINE__, t, c, __VA_ARGS__))</span></div>
<div class="line"><a name="l00952"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">  952</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c, ...) \</span></div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                        \</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_data_type_channel_not_in(__func__, __FILE__, __LINE__, t, c, __VA_ARGS__))</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="comment">/** Return an error if the data type of the passed tensor info is FP16 and FP16 extension is not supported by the device.</span></div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="comment"> * @param[in] function          Function in which the error occurred.</span></div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="comment"> * @param[in] file              Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="comment"> * @param[in] line              Line on which the error occurred.</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment"> * @param[in] tensor_info       Tensor info to validate.</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="comment"> * @param[in] is_fp16_supported Is fp16 supported by the device.</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00966"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a76433394f276fbc92390850a15bd2cae">  966</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a76433394f276fbc92390850a15bd2cae">error_on_unsupported_fp16</a>(</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>, <span class="keywordtype">bool</span> is_fp16_supported)</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;{</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    <a class="code" href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a>((<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>-&gt;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a> &amp;&amp; !is_fp16_supported), <span class="keyword">function</span>,</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                                        file, line, <span class="stringliteral">&quot;FP16 not supported by the device&quot;</span>);</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;}</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="comment">/** Return an error if the data type of the passed tensor is FP16 and FP16 extension is not supported by the device.</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;<span class="comment"> * @param[in] function          Function in which the error occurred.</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<span class="comment"> * @param[in] file              Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;<span class="comment"> * @param[in] line              Line on which the error occurred.</span></div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;<span class="comment"> * @param[in] tensor            Tensor to validate.</span></div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;<span class="comment"> * @param[in] is_fp16_supported Is fp16 supported by the device.</span></div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00985"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aea2b331c31943c1f726c9f552348c89c">  985</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a76433394f276fbc92390850a15bd2cae">error_on_unsupported_fp16</a>(</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keywordtype">bool</span> is_fp16_supported)</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;{</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> == <span class="keyword">nullptr</span>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        ::<a class="code" href="namespacearm__compute.xhtml#a76433394f276fbc92390850a15bd2cae">arm_compute::error_on_unsupported_fp16</a>(<span class="keyword">function</span>, file, line, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">info</a>(), is_fp16_supported));</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;}</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="comment">/** Return an error if the tensor is not 2D.</span></div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="comment"> * @param[in] tensor   Tensor to validate.</span></div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;<a class="code" href="namespacearm__compute.xhtml#a398f32595ee55b858853d5bcdcacfef5">error_on_tensor_not_2d</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> ITensor *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="comment">/** Return an error if the tensor info is not 2D.</span></div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;<span class="comment"> * @param[in] tensor   Tensor info to validate.</span></div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<a class="code" href="namespacearm__compute.xhtml#a398f32595ee55b858853d5bcdcacfef5">error_on_tensor_not_2d</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> ITensorInfo *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160; </div>
<div class="line"><a name="l01018"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#abbd63a8040ec1e44308da1d3be3732ae"> 1018</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_TENSOR_NOT_2D(t) \</span></div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_tensor_not_2d(__func__, __FILE__, __LINE__, t))</span></div>
<div class="line"><a name="l01020"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#ac8fa80a763f5e67ded3fe6385972c08a"> 1020</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_TENSOR_NOT_2D(t) \</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_tensor_not_2d(__func__, __FILE__, __LINE__, t))</span></div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;<span class="comment">/** Return an error if the channel is not in channels.</span></div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="comment"> * @param[in] cn       Input channel</span></div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="comment"> * @param[in] channel  First channel allowed.</span></div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="comment"> * @param[in] channels (Optional) Further allowed channels.</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div>
<div class="line"><a name="l01036"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ae7fcde610527b8fa3d9acdf398187962"> 1036</a></span>&#160;<a class="code" href="namespacearm__compute.xhtml#ae7fcde610527b8fa3d9acdf398187962">error_on_channel_not_in</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, T cn, T &amp;&amp;channel, Ts &amp;&amp;...channels)</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;{</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(cn == <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa696b031073e74bf2cb98e5ef201d4aa3">Channel::UNKNOWN</a>, <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160; </div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <span class="keyword">const</span> std::array&lt;T, <span class="keyword">sizeof</span>...(Ts)&gt; channels_array{{std::forward&lt;Ts&gt;(channels)...}};</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    <a class="code" href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a>(channel != cn &amp;&amp; std::none_of(channels_array.begin(), channels_array.end(),</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                                                                  [&amp;](<span class="keyword">const</span> T &amp;f) { return f == cn; }),</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                                    <span class="keyword">function</span>, file, line);</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a>{};</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;}</div>
<div class="line"><a name="l01046"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a350e28d20c8bd44408f14ad634c9c2ff"> 1046</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_CHANNEL_NOT_IN(c, ...) \</span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_channel_not_in(__func__, __FILE__, __LINE__, c, __VA_ARGS__))</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#abbf61ee5a1263b02d60575355ee620fc"> 1048</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_CHANNEL_NOT_IN(c, ...) \</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_channel_not_in(__func__, __FILE__, __LINE__, c, __VA_ARGS__))</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="comment">/** Return an error if the channel is not in format.</span></div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="comment"> * @param[in] fmt      Input channel</span></div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="comment"> * @param[in] cn       First channel allowed.</span></div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;<a class="code" href="namespacearm__compute.xhtml#a66876161b2add31c70efb9d1ba9423cb">error_on_channel_not_in_known_format</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> fmt, <a class="code" href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">Channel</a> cn);</div>
<div class="line"><a name="l01063"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a35784b5583a4b264f0583a83fae77f80"> 1063</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_CHANNEL_NOT_IN_KNOWN_FORMAT(f, c) \</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_channel_not_in_known_format(__func__, __FILE__, __LINE__, f, c))</span></div>
<div class="line"><a name="l01065"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a738aecd7cf4d674eaaec1c91fe7362d8"> 1065</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_CHANNEL_NOT_IN_KNOWN_FORMAT(f, c) \</span></div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_channel_not_in_known_format(__func__, __FILE__, __LINE__, f, c))</span></div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;<span class="comment">/** Return an error if the kernel is not configured.</span></div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="comment"> * @param[in] function Function in which the error occurred.</span></div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;<span class="comment"> * @param[in] file     Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;<span class="comment"> * @param[in] line     Line on which the error occurred.</span></div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment"> * @param[in] kernel   Kernel to validate.</span></div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<a class="code" href="namespacearm__compute.xhtml#acd11fc94aa2828fee0715de0297eb306">error_on_unconfigured_kernel</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keyword">function</span>, <span class="keyword">const</span> <span class="keywordtype">char</span> *file, <span class="keyword">const</span> <span class="keywordtype">int</span> line, <span class="keyword">const</span> IKernel *kernel);</div>
<div class="line"><a name="l01079"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c"> 1079</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k) \</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_unconfigured_kernel(__func__, __FILE__, __LINE__, k))</span></div>
<div class="line"><a name="l01081"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#afe826628d90b663c6efba849910b0795"> 1081</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_UNCONFIGURED_KERNEL(k) \</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_unconfigured_kernel(__func__, __FILE__, __LINE__, k))</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="comment">/** Return an error if if the coordinates and shape of the subtensor are within the parent tensor.</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;<span class="comment"> * @param[in] function     Function in which the error occurred.</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;<span class="comment"> * @param[in] file         Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;<span class="comment"> * @param[in] line         Line on which the error occurred.</span></div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;<span class="comment"> * @param[in] parent_shape Parent tensor shape</span></div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;<span class="comment"> * @param[in] coords       Coordinates inside the parent tensor where the first element of the subtensor is</span></div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;<span class="comment"> * @param[in] shape        Shape of the subtensor</span></div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#a9f83032f49a13db29baa1af1a62e5627">error_on_invalid_subtensor</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                                               <span class="keyword">const</span> TensorShape &amp;parent_shape,</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;                                               <span class="keyword">const</span> Coordinates &amp;coords,</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                                               <span class="keyword">const</span> TensorShape &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">shape</a>);</div>
<div class="line"><a name="l01101"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#af36b307b96ac52bc11ac9ee2ac93df16"> 1101</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR(p, c, s) \</span></div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(::arm_compute::error_on_invalid_subtensor(__func__, __FILE__, __LINE__, p, c, s))</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a59feb802c987f75da29191d2892529b9"> 1103</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_INVALID_SUBTENSOR(p, c, s) \</span></div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(::arm_compute::error_on_invalid_subtensor(__func__, __FILE__, __LINE__, p, c, s))</span></div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;<span class="comment">/** Return an error if the valid region of a subtensor is not inside the valid region of the parent tensor.</span></div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="comment"> * @param[in] function            Function in which the error occurred.</span></div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;<span class="comment"> * @param[in] file                Name of the file where the error occurred.</span></div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;<span class="comment"> * @param[in] line                Line on which the error occurred.</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;<span class="comment"> * @param[in] parent_valid_region Parent valid region.</span></div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;<span class="comment"> * @param[in] valid_region        Valid region of subtensor.</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;<span class="comment"> * @return Status</span></div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a> <a class="code" href="namespacearm__compute.xhtml#ac2ab765daf6f586ceaa12575743361e7">error_on_invalid_subtensor_valid_region</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>        *<span class="keyword">function</span>,</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;                                                            <span class="keyword">const</span> <span class="keywordtype">char</span>        *file,</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;                                                            <span class="keyword">const</span> <span class="keywordtype">int</span>          line,</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;                                                            <span class="keyword">const</span> ValidRegion &amp;parent_valid_region,</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;                                                            <span class="keyword">const</span> ValidRegion &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac17b415bc5b5a1f5072ae28aab0f2013">valid_region</a>);</div>
<div class="line"><a name="l01121"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#abce948c8b82a9d127299e3dcdefdf652"> 1121</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION(pv, sv) \</span></div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;<span class="preprocessor">    ARM_COMPUTE_ERROR_THROW_ON(                                     \</span></div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_invalid_subtensor_valid_region(__func__, __FILE__, __LINE__, pv, sv))</span></div>
<div class="line"><a name="l01124"></a><span class="lineno"><a class="line" href="arm__compute_2core_2_validate_8h.xhtml#a4197915cae5cac7ab730d8032722630d"> 1124</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_RETURN_ERROR_ON_INVALID_SUBTENSOR_VALID_REGION(pv, sv) \</span></div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;<span class="preprocessor">    ARM_COMPUTE_RETURN_ON_ERROR(                                           \</span></div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;<span class="preprocessor">        ::arm_compute::error_on_invalid_subtensor_valid_region(__func__, __FILE__, __LINE__, pv, sv))</span></div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_VALIDATE_H*/</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa5206560a306a2e085a437fd258eb57ce">arm_compute::Channel::V</a></div><div class="ttdeci">@ V</div><div class="ttdoc">Cr/V/Value channel.</div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0b360558b516e256f0af005a164c674e"><div class="ttname"><a href="namespacearm__compute.xhtml#a0b360558b516e256f0af005a164c674e">arm_compute::error_on_format_not_in</a></div><div class="ttdeci">void error_on_format_not_in(const char *function, const char *file, const int line, const T *object, F &amp;&amp;format, Fs &amp;&amp;...formats)</div><div class="ttdoc">Throw an error if the format of the passed tensor/multi-image does not match any of the formats provi...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00767">Validate.h:767</a></div></div>
<div class="ttc" id="a_data_type_utils_8h_xhtml"><div class="ttname"><a href="_data_type_utils_8h.xhtml">DataTypeUtils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8355d6db4cebee2724bf4463076526c6"><div class="ttname"><a href="namespacearm__compute.xhtml#a8355d6db4cebee2724bf4463076526c6">arm_compute::error_on_mismatching_data_layouts</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_data_layouts(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, Ts... tensor_infos)</div><div class="ttdoc">Return an error if the passed tensor infos have different data layouts.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00588">Validate.h:588</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a9d714e1b7d9d7818309138b7d830ebcb"><div class="ttname"><a href="namespacearm__compute.xhtml#a9d714e1b7d9d7818309138b7d830ebcb">arm_compute::calculate_subsampled_shape</a></div><div class="ttdeci">TensorShape calculate_subsampled_shape(const TensorShape &amp;shape, Format format, Channel channel=Channel::UNKNOWN)</div><div class="ttdoc">Calculate subsampled shape for a given format and channel.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00400">Validate.h:400</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::Format::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div><div class="ttdoc">Unknown image format.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a3c62cc8d5ee934d42c115c9315d66c13"><div class="ttname"><a href="namespacearm__compute.xhtml#a3c62cc8d5ee934d42c115c9315d66c13">arm_compute::error_on_coordinates_dimensions_gte</a></div><div class="ttdeci">arm_compute::Status error_on_coordinates_dimensions_gte(const char *function, const char *file, const int line, const Coordinates &amp;pos, unsigned int max_dim)</div><div class="ttdoc">Return an error if the passed coordinates have too many dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00080">Validate.cpp:80</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a7d65985a30fc1229047b7db32caaab43"><div class="ttname"><a href="namespacearm__compute.xhtml#a7d65985a30fc1229047b7db32caaab43">arm_compute::error_on_window_dimensions_gte</a></div><div class="ttdeci">arm_compute::Status error_on_window_dimensions_gte(const char *function, const char *file, const int line, const Window &amp;win, unsigned int max_dim)</div><div class="ttdoc">Return an error if the passed window has too many dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00090">Validate.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00067">QuantizationInfo.h:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a6f13b974eeb528acde66de8d9b3fd95c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6f13b974eeb528acde66de8d9b3fd95c">arm_compute::TensorInfo::num_channels</a></div><div class="ttdeci">size_t num_channels() const override</div><div class="ttdoc">The number of channels for each tensor element.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00241">TensorInfo.h:241</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac6c243f12870355c0b97ac813b9e7d25"><div class="ttname"><a href="namespacearm__compute.xhtml#ac6c243f12870355c0b97ac813b9e7d25">arm_compute::error_on_data_layout_not_in</a></div><div class="ttdeci">arm_compute::Status error_on_data_layout_not_in(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, T &amp;&amp;dl, Ts &amp;&amp;...dls)</div><div class="ttdoc">Return an error if the data layout of the passed tensor info does not match any of the data layouts p...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00853">Validate.h:853</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">arm_compute::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdoc">[DataLayout enum definition]</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00110">CoreTypes.h:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_acd11fc94aa2828fee0715de0297eb306"><div class="ttname"><a href="namespacearm__compute.xhtml#acd11fc94aa2828fee0715de0297eb306">arm_compute::error_on_unconfigured_kernel</a></div><div class="ttdeci">arm_compute::Status error_on_unconfigured_kernel(const char *function, const char *file, const int line, const IKernel *kernel)</div><div class="ttdoc">Return an error if the kernel is not configured.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00163">Validate.cpp:163</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae93ff1ca47057b95d0c6fd0d287253a8"><div class="ttname"><a href="namespacearm__compute.xhtml#ae93ff1ca47057b95d0c6fd0d287253a8">arm_compute::error_on_invalid_subwindow</a></div><div class="ttdeci">arm_compute::Status error_on_invalid_subwindow(const char *function, const char *file, const int line, const Window &amp;full, const Window &amp;sub)</div><div class="ttdoc">Return an error if the passed subwindow is invalid.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00044">Validate.cpp:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a76433394f276fbc92390850a15bd2cae"><div class="ttname"><a href="namespacearm__compute.xhtml#a76433394f276fbc92390850a15bd2cae">arm_compute::error_on_unsupported_fp16</a></div><div class="ttdeci">arm_compute::Status error_on_unsupported_fp16(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, bool is_fp16_supported)</div><div class="ttdoc">Return an error if the data type of the passed tensor info is FP16 and FP16 extension is not supporte...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00966">Validate.h:966</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a66876161b2add31c70efb9d1ba9423cb"><div class="ttname"><a href="namespacearm__compute.xhtml#a66876161b2add31c70efb9d1ba9423cb">arm_compute::error_on_channel_not_in_known_format</a></div><div class="ttdeci">arm_compute::Status error_on_channel_not_in_known_format(const char *function, const char *file, const int line, Format fmt, Channel cn)</div><div class="ttdoc">Return an error if the channel is not in format.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00127">Validate.cpp:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a8b82da7b5e0f6192f415ac347c9e0555"><div class="ttname"><a href="namespacearm__compute.xhtml#a8b82da7b5e0f6192f415ac347c9e0555">arm_compute::string_from_format</a></div><div class="ttdeci">const std::string &amp; string_from_format(Format format)</div><div class="ttdoc">Convert a tensor format into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_format_utils_8cpp_source.xhtml#l00031">FormatUtils.cpp:31</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a1b62e396a1789909dadda61ea4cda96f"><div class="ttname"><a href="_error_8h.xhtml#a1b62e396a1789909dadda61ea4cda96f">ARM_COMPUTE_ERROR_ON_LOC_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_LOC_MSG(cond, func, file, line,...)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00458">Error.h:458</a></div></div>
<div class="ttc" id="a_n_e_fuse_batch_normalization_kernel_8cpp_xhtml_a6f725602583bcad27d0d2cad1e871128"><div class="ttname"><a href="_n_e_fuse_batch_normalization_kernel_8cpp.xhtml#a6f725602583bcad27d0d2cad1e871128">dl</a></div><div class="ttdeci">DataLayout dl</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00050">NEFuseBatchNormalizationKernel.cpp:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1detail_1_1compare__dimension_xhtml_a90462712db283368a62956b9b38aa6a5"><div class="ttname"><a href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#a90462712db283368a62956b9b38aa6a5">arm_compute::detail::compare_dimension::operator()</a></div><div class="ttdeci">arm_compute::Status operator()(const Dimensions&lt; T &gt; &amp;dim)</div><div class="ttdoc">Compare the given object against the stored one.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00093">Validate.h:93</a></div></div>
<div class="ttc" id="a_window_8h_xhtml"><div class="ttname"><a href="_window_8h.xhtml">Window.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a5f63b63606dbbbe54474e6e970a6738c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c">arm_compute::TensorInfo::data_layout</a></div><div class="ttdeci">DataLayout data_layout() const override</div><div class="ttdoc">Get the data layout of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00303">TensorInfo.h:303</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a95358b677c5c17f5cc1e369e4a27e2c2"><div class="ttname"><a href="namespacearm__compute.xhtml#a95358b677c5c17f5cc1e369e4a27e2c2">arm_compute::has_format_vertical_subsampling</a></div><div class="ttdeci">bool has_format_vertical_subsampling(Format format)</div><div class="ttdoc">Return true if the given format has vertical subsampling.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00318">Validate.h:318</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1detail_1_1compare__dimension_xhtml_afe99c6d8da678f7dce4e4a58ad1e0175"><div class="ttname"><a href="classarm__compute_1_1detail_1_1compare__dimension.xhtml#afe99c6d8da678f7dce4e4a58ad1e0175">arm_compute::detail::compare_dimension::compare_dimension</a></div><div class="ttdeci">compare_dimension(const Dimensions&lt; T &gt; &amp;dim, const char *function, const char *file, int line)</div><div class="ttdoc">Construct a comparison function.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00082">Validate.h:82</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a49e1fb8719a6e3b4db298796bdeac758"><div class="ttname"><a href="namespacearm__compute.xhtml#a49e1fb8719a6e3b4db298796bdeac758">arm_compute::error_on_mismatching_quantization_info</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_quantization_info(const char *function, const char *file, const int line, const ITensorInfo *tensor_info_1, const ITensorInfo *tensor_info_2, Ts... tensor_infos)</div><div class="ttdoc">Return an error if the passed tensor infos have different asymmetric quantized data types or differen...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00695">Validate.h:695</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8cpp_source.xhtml#l00031">DataTypeUtils.cpp:31</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1detail_1_1compare__dimension_xhtml"><div class="ttname"><a href="classarm__compute_1_1detail_1_1compare__dimension.xhtml">arm_compute::detail::compare_dimension</a></div><div class="ttdoc">Function to compare two Dimensions objects and throw an error on mismatch.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00072">Validate.h:72</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::TensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type used for each element of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00253">TensorInfo.h:253</a></div></div>
<div class="ttc" id="a_format_utils_8h_xhtml"><div class="ttname"><a href="_format_utils_8h.xhtml">FormatUtils.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a079eb95759d2ad31254f659d63651825">arm_compute::Format::UV88</a></div><div class="ttdeci">@ UV88</div><div class="ttdoc">2 channel, 1 U8 per channel</div></div>
<div class="ttc" id="a_data_layout_utils_8h_xhtml"><div class="ttname"><a href="_data_layout_utils_8h.xhtml">DataLayoutUtils.h</a></div></div>
<div class="ttc" id="a_i_kernel_8h_xhtml"><div class="ttname"><a href="_i_kernel_8h.xhtml">IKernel.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac17b415bc5b5a1f5072ae28aab0f2013"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac17b415bc5b5a1f5072ae28aab0f2013">arm_compute::test::validation::valid_region</a></div><div class="ttdeci">const ValidRegion valid_region</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_scale_8cpp_source.xhtml#l00214">Scale.cpp:214</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00205">Error.h:205</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab3f385292b90327061e1276f3e3445c7"><div class="ttname"><a href="namespacearm__compute.xhtml#ab3f385292b90327061e1276f3e3445c7">arm_compute::error_on_mismatching_dimensions</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_dimensions(const char *function, const char *file, int line, const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, Ts &amp;&amp;...dims)</div><div class="ttdoc">Return an error if the passed dimension objects differ.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00280">Validate.h:280</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a45cde9abb508c62d67c3bb2b9bf566a5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a45cde9abb508c62d67c3bb2b9bf566a5">arm_compute::test::validation::shape</a></div><div class="ttdeci">shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00115">DFT.cpp:115</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad7f5b38e9d5391afc4a5ce5702e7379b"><div class="ttname"><a href="namespacearm__compute.xhtml#ad7f5b38e9d5391afc4a5ce5702e7379b">arm_compute::error_on_mismatching_windows</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_windows(const char *function, const char *file, const int line, const Window &amp;full, const Window &amp;win)</div><div class="ttdoc">Return an error if the passed window is invalid.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00026">Validate.cpp:26</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a900072ec18ac254db40901425e2b35b2"><div class="ttname"><a href="namespacearm__compute.xhtml#a900072ec18ac254db40901425e2b35b2">arm_compute::error_on_mismatching_shapes</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_shapes(const char *function, const char *file, const int line, const ITensorInfo *tensor_info_1, const ITensorInfo *tensor_info_2, Ts... tensor_infos)</div><div class="ttdoc">Return an error if the passed two tensor infos have different shapes from the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00475">Validate.h:475</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a94a5ba47c282279f5279617b961b8599"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a94a5ba47c282279f5279617b961b8599">arm_compute::detail::for_each_error</a></div><div class="ttdeci">arm_compute::Status for_each_error(F &amp;&amp;)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00108">Validate.h:108</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a398f32595ee55b858853d5bcdcacfef5"><div class="ttname"><a href="namespacearm__compute.xhtml#a398f32595ee55b858853d5bcdcacfef5">arm_compute::error_on_tensor_not_2d</a></div><div class="ttdeci">arm_compute::Status error_on_tensor_not_2d(const char *function, const char *file, const int line, const ITensor *tensor)</div><div class="ttdoc">Return an error if the tensor is not 2D.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00102">Validate.cpp:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00051">Validate.h:51</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa8bcb895249c9b0207df5d6512433aab"><div class="ttname"><a href="namespacearm__compute.xhtml#aa8bcb895249c9b0207df5d6512433aab">arm_compute::error_on_tensors_not_even</a></div><div class="ttdeci">arm_compute::Status error_on_tensors_not_even(const char *function, const char *file, int line, const Format &amp;format, const ITensor *tensor1, Ts... tensors)</div><div class="ttdoc">Return an error if the passed tensor objects are not even.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00369">Validate.h:369</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58ab08f0cb36474118c5bbc03b3a172a778">arm_compute::Format::IYUV</a></div><div class="ttdeci">@ IYUV</div><div class="ttdoc">A 3 plane of 8-bit 4:2:0 sampled Y, U, V planes.</div></div>
<div class="ttc" id="a_error_8h_xhtml_ac90c3bce005225cbaa4a43740917bb58"><div class="ttname"><a href="_error_8h.xhtml#ac90c3bce005225cbaa4a43740917bb58">ARM_COMPUTE_ERROR_ON_LOC</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_LOC(cond, func, file, line)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00475">Error.h:475</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a5e3e8db314706c6f3d822bafa3d8d761"><div class="ttname"><a href="_error_8h.xhtml#a5e3e8db314706c6f3d822bafa3d8d761">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG_VAR(cond, func, file, line, msg,...)</div><div class="ttdoc">If the condition is true, an error is thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00265">Error.h:265</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_aa36901a4911e511f25f42e191df3526d"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#aa36901a4911e511f25f42e191df3526d">dt</a></div><div class="ttdeci">DataType dt</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00050">NEBatchNormalizationLayerKernel.cpp:50</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a774ec1fdc7bd1e7973c866d13734bc21"><div class="ttname"><a href="namespacearm__compute.xhtml#a774ec1fdc7bd1e7973c866d13734bc21">arm_compute::error_on_data_type_not_in</a></div><div class="ttdeci">arm_compute::Status error_on_data_type_not_in(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, T &amp;&amp;dt, Ts &amp;&amp;...dts)</div><div class="ttdoc">Return an error if the data type of the passed tensor info does not match any of the data types provi...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00801">Validate.h:801</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">arm_compute::Format</a></div><div class="ttdeci">Format</div><div class="ttdoc">Image colour formats.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00058">CoreTypes.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455a"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455a">arm_compute::Channel</a></div><div class="ttdeci">Channel</div><div class="ttdoc">Available channels.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00041">CoreTypes.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a481e7a6945eb9f23e87f2de780b2e164">arm_compute::Format::YUYV422</a></div><div class="ttdeci">@ YUYV422</div><div class="ttdoc">A single plane of 32-bit macro pixel of Y0, U0, Y1, V0 bytes.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5865def3a35885dda73dd5f4d555d11c"><div class="ttname"><a href="namespacearm__compute.xhtml#a5865def3a35885dda73dd5f4d555d11c">arm_compute::error_on_tensors_not_subsampled</a></div><div class="ttdeci">arm_compute::Status error_on_tensors_not_subsampled(const char *function, const char *file, int line, const Format &amp;format, const TensorShape &amp;shape, const ITensor *tensor1, Ts... tensors)</div><div class="ttdoc">Return an error if the passed tensor objects are not sub-sampled.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00436">Validate.h:436</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a56b9e25c2e8731ca5488e7b3ccd66f58"><div class="ttname"><a href="namespacearm__compute.xhtml#a56b9e25c2e8731ca5488e7b3ccd66f58">arm_compute::string_from_data_layout</a></div><div class="ttdeci">const std::string &amp; string_from_data_layout(DataLayout dl)</div><div class="ttdoc">Convert a data layout identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_utils_8cpp_source.xhtml#l00030">DataLayoutUtils.cpp:30</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58af557448a61ad2927194f63442e131dfa">arm_compute::Format::UYVY422</a></div><div class="ttdeci">@ UYVY422</div><div class="ttdoc">A single plane of 32-bit macro pixel of U0, Y0, V0, Y1 byte.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa696b031073e74bf2cb98e5ef201d4aa3">arm_compute::Channel::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div></div>
<div class="ttc" id="astructarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4_xhtml"><div class="ttname"><a href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml">arm_compute::detail::get_tensor_info_t&lt; ITensorInfo * &gt;</a></div><div class="ttdoc">Get the info for a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00126">Validate.h:126</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa2f22cc01532e0236e438324310fdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#aa2f22cc01532e0236e438324310fdb94">arm_compute::has_format_horizontal_subsampling</a></div><div class="ttdeci">bool has_format_horizontal_subsampling(Format format)</div><div class="ttdoc">Return true if the given format has horizontal subsampling.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00304">Validate.h:304</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a202f5d8c2c70d31048154d8b8b28e755">arm_compute::Format::NV12</a></div><div class="ttdeci">@ NV12</div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved UV data at 4:2:0 sampling.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ac2ab765daf6f586ceaa12575743361e7"><div class="ttname"><a href="namespacearm__compute.xhtml#ac2ab765daf6f586ceaa12575743361e7">arm_compute::error_on_invalid_subtensor_valid_region</a></div><div class="ttdeci">arm_compute::Status error_on_invalid_subtensor_valid_region(const char *function, const char *file, const int line, const ValidRegion &amp;parent_valid_region, const ValidRegion &amp;valid_region)</div><div class="ttdoc">Return an error if the valid region of a subtensor is not inside the valid region of the parent tenso...</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00191">Validate.cpp:191</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_add7f7487c235331a6518dd16ad1e3b38"><div class="ttname"><a href="namespacearm__compute.xhtml#add7f7487c235331a6518dd16ad1e3b38">arm_compute::adjust_odd_shape</a></div><div class="ttdeci">TensorShape adjust_odd_shape(const TensorShape &amp;shape, Format format)</div><div class="ttdoc">Adjust tensor shape size if width or height are odd for a given multi-planar format.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00338">Validate.h:338</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a85c38583df1a7998d58c51f7c3d4b354"><div class="ttname"><a href="namespacearm__compute.xhtml#a85c38583df1a7998d58c51f7c3d4b354">arm_compute::error_on_mismatching_data_types</a></div><div class="ttdeci">arm_compute::Status error_on_mismatching_data_types(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, Ts... tensor_infos)</div><div class="ttdoc">Return an error if the passed two tensor infos have different data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00640">Validate.h:640</a></div></div>
<div class="ttc" id="astructarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4_xhtml_a31da9070971bbf34ad5d84094b48c04f"><div class="ttname"><a href="structarm__compute_1_1detail_1_1get__tensor__info__t_3_01_i_tensor_info_01_5_01_4.xhtml#a31da9070971bbf34ad5d84094b48c04f">arm_compute::detail::get_tensor_info_t&lt; ITensorInfo * &gt;::operator()</a></div><div class="ttdeci">ITensorInfo * operator()(const ITensor *tensor)</div><div class="ttdoc">Get the info for a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00134">Validate.h:134</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb"><div class="ttname"><a href="namespacearm__compute.xhtml#a1ce9b523fd4f3b5bbcadcd796183455aa4c614360da93c0a041b22e537de151eb">arm_compute::Channel::U</a></div><div class="ttdeci">@ U</div><div class="ttdoc">Cb/U channel.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a9f83032f49a13db29baa1af1a62e5627"><div class="ttname"><a href="namespacearm__compute.xhtml#a9f83032f49a13db29baa1af1a62e5627">arm_compute::error_on_invalid_subtensor</a></div><div class="ttdeci">arm_compute::Status error_on_invalid_subtensor(const char *function, const char *file, const int line, const TensorShape &amp;parent_shape, const Coordinates &amp;coords, const TensorShape &amp;shape)</div><div class="ttdoc">Return an error if if the coordinates and shape of the subtensor are within the parent tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00174">Validate.cpp:174</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a4f63a617a4897663b386ba5e1f5cb675"><div class="ttname"><a href="namespacearm__compute.xhtml#a4f63a617a4897663b386ba5e1f5cb675">arm_compute::error_on_window_not_collapsable_at_dimension</a></div><div class="ttdeci">arm_compute::Status error_on_window_not_collapsable_at_dimension(const char *function, const char *file, const int line, const Window &amp;full, const Window &amp;window, const int dim)</div><div class="ttdoc">Return an error if the window can't be collapsed at the given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_validate_8cpp_source.xhtml#l00063">Validate.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_ad45f0c01a0713dfb6bd7232c7f396fc4"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">arm_compute::CLTensor::info</a></div><div class="ttdeci">TensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00041">CLTensor.cpp:41</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0bee325b210f81bb89fe1f9e15badf9c"><div class="ttname"><a href="namespacearm__compute.xhtml#a0bee325b210f81bb89fe1f9e15badf9c">arm_compute::is_data_type_quantized</a></div><div class="ttdeci">bool is_data_type_quantized(DataType dt)</div><div class="ttdoc">Check if a given data type is of quantized type.</div><div class="ttdef"><b>Definition:</b> <a href="_data_type_utils_8h_source.xhtml#l00324">DataTypeUtils.h:324</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::DataLayout::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div><div class="ttdoc">Unknown data layout.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="a_i_tensor_8h_xhtml"><div class="ttname"><a href="_i_tensor_8h.xhtml">ITensor.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a696b031073e74bf2cb98e5ef201d4aa3">arm_compute::DataType::UNKNOWN</a></div><div class="ttdeci">@ UNKNOWN</div><div class="ttdoc">Unknown data type.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_dimensions_xhtml"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml">arm_compute::Dimensions</a></div><div class="ttdoc">Dimensions with dimensionality.</div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00042">Dimensions.h:42</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00068">ClWorkloadRuntime.cpp:68</a></div></div>
<div class="ttc" id="astructarm__compute_1_1detail_1_1get__tensor__info__t_xhtml"><div class="ttname"><a href="structarm__compute_1_1detail_1_1get__tensor__info__t.xhtml">arm_compute::detail::get_tensor_info_t</a></div><div class="ttdoc">Get the info for a tensor, dummy struct.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00123">Validate.h:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00083">CoreTypes.h:83</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a8e9f6aa1af7e0abbc7e64521e6ffe1b4">arm_compute::Format::NV21</a></div><div class="ttdeci">@ NV21</div><div class="ttdoc">A 2 plane YUV format of Luma (Y) and interleaved VU data at 4:2:0 sampling.</div></div>
<div class="ttc" id="anamespaceupdate__supported__ops_xhtml_a387137c43ed9616d39ba90e890d181eb"><div class="ttname"><a href="namespaceupdate__supported__ops.xhtml#a387137c43ed9616d39ba90e890d181eb">update_supported_ops.format</a></div><div class="ttdeci">format</div><div class="ttdef"><b>Definition:</b> <a href="update__supported__ops_8py_source.xhtml#l00405">update_supported_ops.py:405</a></div></div>
<div class="ttc" id="a_quantization_info_8h_xhtml"><div class="ttname"><a href="_quantization_info_8h.xhtml">QuantizationInfo.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a3cbe27c31092df3dc1fa26c75f47e047"><div class="ttname"><a href="_error_8h.xhtml#a3cbe27c31092df3dc1fa26c75f47e047">ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC_MSG(cond, func, file, line, msg)</div><div class="ttdoc">If the condition is true, an error is thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00285">Error.h:285</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af4587cd36ddbf2e4dde217d1a1007940"><div class="ttname"><a href="namespacearm__compute.xhtml#af4587cd36ddbf2e4dde217d1a1007940">arm_compute::error_on_nullptr</a></div><div class="ttdeci">arm_compute::Status error_on_nullptr(const char *function, const char *file, const int line, Ts &amp;&amp;...pointers)</div><div class="ttdoc">Create an error if one of the pointers is a nullptr.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00151">Validate.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae7fcde610527b8fa3d9acdf398187962"><div class="ttname"><a href="namespacearm__compute.xhtml#ae7fcde610527b8fa3d9acdf398187962">arm_compute::error_on_channel_not_in</a></div><div class="ttdeci">arm_compute::Status error_on_channel_not_in(const char *function, const char *file, const int line, T cn, T &amp;&amp;channel, Ts &amp;&amp;...channels)</div><div class="ttdoc">Return an error if the channel is not in channels.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l01036">Validate.h:1036</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a499a45039b9bba66384504843d5823d4"><div class="ttname"><a href="namespacearm__compute.xhtml#a499a45039b9bba66384504843d5823d4">arm_compute::error_on_data_type_channel_not_in</a></div><div class="ttdeci">arm_compute::Status error_on_data_type_channel_not_in(const char *function, const char *file, const int line, const ITensorInfo *tensor_info, size_t num_channels, T &amp;&amp;dt, Ts &amp;&amp;...dts)</div><div class="ttdoc">Return an error if the data type or the number of channels of the passed tensor info does not match a...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00907">Validate.h:907</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_aab9171b209dda7cc9bb560486674c9f6"><div class="ttname"><a href="_error_8h.xhtml#aab9171b209dda7cc9bb560486674c9f6">ARM_COMPUTE_RETURN_ERROR_ON_LOC</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_LOC(cond, func, file, line)</div><div class="ttdoc">If the condition is true, an error is returned.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00307">Error.h:307</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:00:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
