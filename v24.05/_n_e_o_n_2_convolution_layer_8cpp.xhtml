<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/ConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_convolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_convolution_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_g_e_m_m_conv2d_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEGEMMConv2d.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_g_e_m_m_convolution_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEGEMMConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_winograd_convolution_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEWinogradConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="runtime_2_tensor_8h_source.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_allocator_8h_source.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml">src/core/CPP/Validate.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_memory_helpers_8h_source.xhtml">src/core/helpers/MemoryHelpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cpu_gemm_conv2d_8h_source.xhtml">src/cpu/operators/CpuGemmConv2d.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cpu_gemm_direct_conv2d_8h_source.xhtml">src/cpu/operators/CpuGemmDirectConv2d.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cpu_winograd_conv2d_8h_source.xhtml">src/cpu/operators/CpuWinogradConv2d.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/ConvolutionLayerFixture.h&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/WinogradConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation_1_1detail"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1detail.xhtml">arm_compute::test::validation::detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ace5d03215bd5aebb5949c464c36c8b36"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ace5d03215bd5aebb5949c464c36c8b36"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace5d03215bd5aebb5949c464c36c8b36">NEWinogradConvolutionLayerMixedDataLayoutFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; Tensor, Accessor, NEWinogradConvolutionLayer, T, T, true, true &gt;</td></tr>
<tr class="separator:ace5d03215bd5aebb5949c464c36c8b36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a95256b08846db22e0c4d2b13656272"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a1a95256b08846db22e0c4d2b13656272"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1a95256b08846db22e0c4d2b13656272">NEWinogradConvolutionLayerNoBiasFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; Tensor, Accessor, NEWinogradConvolutionLayer, T, T, false &gt;</td></tr>
<tr class="separator:a1a95256b08846db22e0c4d2b13656272"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab76648b9c92a9bc6da629b9a5e81f55f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab76648b9c92a9bc6da629b9a5e81f55f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab76648b9c92a9bc6da629b9a5e81f55f">NEGEMMConvolutionLayerPaddedWeightsFixture</a> = ConvolutionValidationPaddedWeightsFixture&lt; Tensor, Accessor, NEConvolutionLayer, T &gt;</td></tr>
<tr class="separator:ab76648b9c92a9bc6da629b9a5e81f55f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a33729d064213f9546a2d9a18bd367d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3a33729d064213f9546a2d9a18bd367d"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3a33729d064213f9546a2d9a18bd367d">NEGEMMConvolutionLayerMixedDataLayoutFixture</a> = ConvolutionValidationFixture&lt; Tensor, Accessor, NEConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a3a33729d064213f9546a2d9a18bd367d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a034dbe126d8a9590f4e1bf1cd14fe401"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a034dbe126d8a9590f4e1bf1cd14fe401"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a034dbe126d8a9590f4e1bf1cd14fe401">NEGEMMConvolutionLayerQuantizedMixedDataLayoutFixture</a> = ConvolutionValidationQuantizedFixture&lt; Tensor, Accessor, NEConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:a034dbe126d8a9590f4e1bf1cd14fe401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08de2f41d387385f42bf50e465a15bdf"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a08de2f41d387385f42bf50e465a15bdf"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08de2f41d387385f42bf50e465a15bdf">NEGEMMConvolutionLayerQuantizedPerChannelFixture</a> = ConvolutionValidationQuantizedPerChannelFixture&lt; Tensor, Accessor, NEConvolutionLayer, T, int8_t &gt;</td></tr>
<tr class="separator:a08de2f41d387385f42bf50e465a15bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6511e18f681eae695bda683308944e5d"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a6511e18f681eae695bda683308944e5d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1detail.xhtml#a6511e18f681eae695bda683308944e5d">configure_conv_function&lt; NEGEMMConv2d, Tensor &gt;</a> (NEGEMMConv2d &amp;func, Tensor *src, const Tensor *weights, const Tensor *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, Tensor *dst, const PadStrideInfo &amp;info, const WeightsInfo &amp;weights_info, const Size2D &amp;dilation, const ActivationLayerInfo &amp;act_info, unsigned int num_groups)</td></tr>
<tr class="separator:a6511e18f681eae695bda683308944e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4353581fb2e052faa647f40158dce83c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4353581fb2e052faa647f40158dce83c">DATA_TEST_CASE</a> (ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(18U, 18U, 32U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 21U), 1, DataType::F32), TensorInfo(TensorShape(19U, 23U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), make(&quot;FastMath&quot;, { true, true, false, false })), make(&quot;Expected&quot;, { ConvolutionMethod::WINOGRAD, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, fast_math, expected)</td></tr>
<tr class="separator:a4353581fb2e052faa647f40158dce83c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7139a633c8e7f6f1d0580931fadb0674"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7139a633c8e7f6f1d0580931fadb0674">TEST_CASE</a> (MemoryInjection, framework::DatasetMode::ALL)</td></tr>
<tr class="memdesc:a7139a633c8e7f6f1d0580931fadb0674"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test case for memory injection in <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_winograd_conv2d.xhtml">cpu::CpuWinogradConv2d</a>.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7139a633c8e7f6f1d0580931fadb0674">More...</a><br /></td></tr>
<tr class="separator:a7139a633c8e7f6f1d0580931fadb0674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd854c13e81aec26443edc864432e61f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afd854c13e81aec26443edc864432e61f">TEST_CASE</a> (MultipleExecutionWithConfigure, framework::DatasetMode::ALL)</td></tr>
<tr class="memdesc:afd854c13e81aec26443edc864432e61f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test case for memory injection in <a class="el" href="classarm__compute_1_1_n_e_winograd_convolution_layer.xhtml">NEWinogradConvolutionLayer</a>.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#afd854c13e81aec26443edc864432e61f">More...</a><br /></td></tr>
<tr class="separator:afd854c13e81aec26443edc864432e61f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a183cc0298108e07df94cdabfaf7fc68a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a183cc0298108e07df94cdabfaf7fc68a">DATA_TEST_CASE</a> (SupportedKernels, framework::DatasetMode::ALL, zip(make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(1U, 3U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 1U, 2U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(5U, 5U, 2U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(1U, 5U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(5U, 1U, 2U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(7U, 7U, 2U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(1U, 7U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(7U, 1U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 2U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(5U, 2U, 2U, 8U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 6U, 2U, 8U), 1, DataType::F32, DataLayout::NCHW), TensorInfo(TensorShape(3U, 3U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(1U, 3U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(3U, 1U, 2U, 8U), 1, DataType::F16, DataLayout::NCHW), TensorInfo(TensorShape(5U, 5U, 2U, 8U), 1, DataType::F16, DataLayout::NCHW), TensorInfo(TensorShape(1U, 5U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(5U, 1U, 2U, 8U), 1, DataType::F16, DataLayout::NCHW), TensorInfo(TensorShape(7U, 7U, 2U, 8U), 1, DataType::F16, DataLayout::NCHW), TensorInfo(TensorShape(1U, 7U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(7U, 1U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 2U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(5U, 2U, 2U, 8U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(3U, 6U, 2U, 8U), 1, DataType::F16, DataLayout::NCHW), }), make(&quot;Expected&quot;, { true, true, true, true, true, true, false, true, true, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, })), weights_info_const, expected_const)</td></tr>
<tr class="separator:a183cc0298108e07df94cdabfaf7fc68a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1302373b184f90adfa8be9534c70e3c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1302373b184f90adfa8be9534c70e3c3">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a1302373b184f90adfa8be9534c70e3c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a032dece1d31aaa0cf09646b6b88ee527"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a032dece1d31aaa0cf09646b6b88ee527">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, NEWinogradConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(make(&quot;Input&quot;, TensorShape(8U, 8U, 32U)), make(&quot;Weight&quot;, TensorShape(1U, 3U, 32U, 1U)), make(&quot;Bias&quot;, TensorShape(1U)), make(&quot;Output&quot;, TensorShape(8U, 6U, 1U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(1, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1U, 1U)), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a032dece1d31aaa0cf09646b6b88ee527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a544f1b58820796b3fead96388b350f13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a544f1b58820796b3fead96388b350f13">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a544f1b58820796b3fead96388b350f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8dddb39fd5254a9ca9322de2058934c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa8dddb39fd5254a9ca9322de2058934c">combine</a> (datasets::SmallWinogradConvolutionLayer3x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa8dddb39fd5254a9ca9322de2058934c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b2132f530eca284201fc90e284ebc17"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b2132f530eca284201fc90e284ebc17">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a0b2132f530eca284201fc90e284ebc17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02151e1663b53136bdcee2d76a4d9a8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac02151e1663b53136bdcee2d76a4d9a8">combine</a> (datasets::SmallWinogradConvolutionLayer1x5Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ac02151e1663b53136bdcee2d76a4d9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25083405fdb0a2bb9d6631cc46fe4f6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25083405fdb0a2bb9d6631cc46fe4f6a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a25083405fdb0a2bb9d6631cc46fe4f6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e526b1ff90df49f008c334ae6de3798"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e526b1ff90df49f008c334ae6de3798">combine</a> (datasets::SmallWinogradConvolutionLayer5x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a1e526b1ff90df49f008c334ae6de3798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bb6fe26c54fb24ef272b201de309dc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9bb6fe26c54fb24ef272b201de309dc9">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a9bb6fe26c54fb24ef272b201de309dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12018e85d77c789e07f113bd5761ac4f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a12018e85d77c789e07f113bd5761ac4f">combine</a> (datasets::SmallWinogradConvolutionLayer7x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a12018e85d77c789e07f113bd5761ac4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ddf394136882d274b1ea1d1794e21a5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0ddf394136882d274b1ea1d1794e21a5">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer7x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 })), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() })), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a0ddf394136882d274b1ea1d1794e21a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbc10fd6340a56deb4ef935cfc2ced07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afbc10fd6340a56deb4ef935cfc2ced07">combine</a> (datasets::SmallWinogradConvolutionLayer1x7Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:afbc10fd6340a56deb4ef935cfc2ced07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3117d50957f0e15eb0213643b56beaf5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3117d50957f0e15eb0213643b56beaf5">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer7x1Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a3117d50957f0e15eb0213643b56beaf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa15e724d6da4ece9face0e20b2ce9611"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa15e724d6da4ece9face0e20b2ce9611">combine</a> (datasets::SmallWinogradConvolutionLayer3x3Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa15e724d6da4ece9face0e20b2ce9611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33513353d554c88153fbfaecedfa446b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a33513353d554c88153fbfaecedfa446b">FIXTURE_DATA_TEST_CASE</a> (RunActivations, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::DISABLED, combine(make(&quot;Input&quot;, TensorShape(3U, 3U, 32U)), make(&quot;Weight&quot;, TensorShape(3U, 3U, 32U, 4U)), make(&quot;Bias&quot;, TensorShape(4U)), make(&quot;Output&quot;, TensorShape(1U, 1U, 4U)), make(&quot;PadStrideInfo&quot;, PadStrideInfo(1, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1U, 1U)), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDatasetNightly, make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="memdesc:a33513353d554c88153fbfaecedfa446b"><td class="mdescLeft">&#160;</td><td class="mdescRight">It's enough to run the activations for a single weight/input combination and data type because activation function is called on top of the winograd output as a separate operator TODO: Enable after COMPMID-6573 is resolved.  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a33513353d554c88153fbfaecedfa446b">More...</a><br /></td></tr>
<tr class="separator:a33513353d554c88153fbfaecedfa446b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a912ef23c859229d65113a98ac8a23929"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a912ef23c859229d65113a98ac8a23929">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a912ef23c859229d65113a98ac8a23929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3a938420a371a426f4e9509b188ada9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab3a938420a371a426f4e9509b188ada9">combine</a> (datasets::SmallWinogradConvolutionLayer5x5Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ab3a938420a371a426f4e9509b188ada9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfa139c30520de6e9029d80800ec3c9b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acfa139c30520de6e9029d80800ec3c9b">FIXTURE_DATA_TEST_CASE</a> (RunLarge, NEWinogradConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), make(&quot;DataType&quot;, { DataType::F32 }), make(&quot;ActivationInfo&quot;, { ActivationLayerInfo() }), make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:acfa139c30520de6e9029d80800ec3c9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca83b0ce2150a0364b3973f857875fa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3ca83b0ce2150a0364b3973f857875fa">combine</a> (framework::dataset::concat(datasets::SmallWinogradConvolutionLayer3x3Dataset(), datasets::SmallWinogradConvolutionLayer5x5Dataset()), make(&quot;DataType&quot;, { DataType::F32 }), ActivationFunctionsDataset, make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a3ca83b0ce2150a0364b3973f857875fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff35beef0ff266f6b6f2e6505190e86"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaff35beef0ff266f6b6f2e6505190e86">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEGEMMConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aaff35beef0ff266f6b6f2e6505190e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b09c919adbedd66eb9c4f130aad2544"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6b09c919adbedd66eb9c4f130aad2544">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, NEGEMMConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a6b09c919adbedd66eb9c4f130aad2544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22936c083fe06e5890579993723db884"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a22936c083fe06e5890579993723db884">FIXTURE_DATA_TEST_CASE</a> (RunPaddedWeights, NEGEMMConvolutionLayerPaddedWeightsFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true }), framework::dataset::make(&quot;DataType&quot;, DataType::F32), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="memdesc:a22936c083fe06e5890579993723db884"><td class="mdescLeft">&#160;</td><td class="mdescRight">Padded weights CpuGemmConv2d uses two different paths for reshaping the weights based on if the weight tensor has holes (a common way to have "holes" in tensor is via extended paddings)  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a22936c083fe06e5890579993723db884">More...</a><br /></td></tr>
<tr class="separator:a22936c083fe06e5890579993723db884"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a46b73f3f61d3e6b5561666f507dccf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0a46b73f3f61d3e6b5561666f507dccf">FIXTURE_DATA_TEST_CASE</a> (RunVeryLarge, NEGEMMConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(datasets::VeryLargeConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true }), framework::dataset::make(&quot;DataType&quot;, DataType::F32), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC }), NoActivation))</td></tr>
<tr class="separator:a0a46b73f3f61d3e6b5561666f507dccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3b445c31bbf2004527b00d5ed43d1e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae3b445c31bbf2004527b00d5ed43d1e4">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;QuantizationInfoIfActivationEnabled&quot;, { QuantizationInfo(2.f/255.f, 10) })), QuantizedActivationFunctionsDataset))</td></tr>
<tr class="separator:ae3b445c31bbf2004527b00d5ed43d1e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87165daa6fd9e2f01ba6d6c569850c4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a87165daa6fd9e2f01ba6d6c569850c4a">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, NEGEMMConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;QuantizationInfoIfActivationEnabled&quot;, { QuantizationInfo(2.f/255.f, 10) })), QuantizedActivationFunctionsDataset))</td></tr>
<tr class="separator:a87165daa6fd9e2f01ba6d6c569850c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eb7a47abfd82bbaa61d6b3c0fb827ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0eb7a47abfd82bbaa61d6b3c0fb827ad">combine</a> (combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;QuantizationInfoIfActivationEnabled&quot;, { QuantizationInfo(0.01f, -10) })), QuantizedActivationFunctionsDataset))</td></tr>
<tr class="separator:a0eb7a47abfd82bbaa61d6b3c0fb827ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79a62e133a3795930089192bffd586b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a79a62e133a3795930089192bffd586b1">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, NEGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(23U, 27U, 5U)), framework::dataset::make(&quot;Weights&quot;, TensorShape(3U, 3U, 5U, 2U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(2U))), framework::dataset::make(&quot;Output&quot;, TensorShape(11U, 25U, 2U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(2, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1, 1))), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;QuantizationInfoIfActivationEnabled&quot;, { QuantizationInfo(2.f/255.f, 10) })), QuantizedActivationFunctionsDataset))</td></tr>
<tr class="separator:a79a62e133a3795930089192bffd586b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf90c23b4569e5994cf16898a254078"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf90c23b4569e5994cf16898a254078">combine</a> (combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:acbf90c23b4569e5994cf16898a254078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d422f3da5e96b2e88e09df4b17a3252"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1d422f3da5e96b2e88e09df4b17a3252">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, NEGEMMConvolutionLayerQuantizedPerChannelFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, { DataType::QASYMM8_SIGNED })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), QuantizationData), QuantizedActivationFunctionsDataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a1d422f3da5e96b2e88e09df4b17a3252"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1b42a3625a8041043b5c55dbc48a01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4d1b42a3625a8041043b5c55dbc48a01">FIXTURE_DATA_TEST_CASE</a> (MemoryStressLargeChannels, NEGEMMConvolutionLayerQuantizedPerChannelFixture&lt; int8_t &gt;, framework::DatasetMode::ALL, combine(make(&quot;In&quot;, TensorShape(1U)), make(&quot;Weights&quot;, TensorShape(1U, 1U, 1U, 17000U)), make(&quot;Biases&quot;, TensorShape(17000U)), make(&quot;Out&quot;, TensorShape(1U, 1U, 17000U)), make(&quot;Info&quot;, PadStrideInfo(1, 1, 0, 0)), make(&quot;Dilation&quot;, Size2D(1, 1)), make(&quot;ReshapeWeights&quot;, { true }), make(&quot;DataType&quot;, { DataType::QASYMM8_SIGNED }), make(&quot;DataLayout&quot;, { DataLayout::NHWC }), make(&quot;QuantizationInfo&quot;, QuantizationInfo(0.5f, 10)), make(&quot;ActivationInfo&quot;, ActivationLayerInfo()), make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a4d1b42a3625a8041043b5c55dbc48a01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9529b392e38bc38ef939df4b25ca6b6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9529b392e38bc38ef939df4b25ca6b6a">FIXTURE_DATA_TEST_CASE</a> (RunSmall, NEDirectGEMMConv2dLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallConvolutionLayerDataset(), framework::dataset::make(&quot;ReshapeWeights&quot;, { true })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9529b392e38bc38ef939df4b25ca6b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a123fca581853db28cc4d78255ab19c31"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a123fca581853db28cc4d78255ab19c31">NEWinogradConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a123fca581853db28cc4d78255ab19c31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e6b894fd8b8b2ea7349ceee796d4c03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3e6b894fd8b8b2ea7349ceee796d4c03">NEWinogradConvolutionLayerNoBiasFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a3e6b894fd8b8b2ea7349ceee796d4c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67a2e821b313c0a743d92a0c17a3d638"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a67a2e821b313c0a743d92a0c17a3d638">NEGEMMConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a67a2e821b313c0a743d92a0c17a3d638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8887555606a3463f583e8efa9a6baa03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8887555606a3463f583e8efa9a6baa03">NEGEMMConvolutionLayerQuantizedPerChannelFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a8887555606a3463f583e8efa9a6baa03"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_convolution_layer_8cpp.xhtml">ConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
