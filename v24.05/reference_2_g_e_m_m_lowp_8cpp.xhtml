<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/reference/GEMMLowp.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('reference_2_g_e_m_m_lowp_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">GEMMLowp.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_g_e_m_m_lowp_8h_source.xhtml">GEMMLowp.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_arithmetic_operations_8h_source.xhtml">tests/validation/reference/ArithmeticOperations.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_utils_quantized_asymm_8h_source.xhtml">tests/validation/reference/UtilsQuantizedAsymm.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_toolchain_support_8h_source.xhtml">support/ToolchainSupport.h</a>&quot;</code><br />
<code>#include &lt;limits&gt;</code><br />
</div>
<p><a href="reference_2_g_e_m_m_lowp_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation_1_1reference"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml">arm_compute::test::validation::reference</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a855559383c5926d018e2f780a63050a8"><td class="memTemplParams" colspan="2">template&lt;typename T_out , typename T_in , typename T_in_1 &gt; </td></tr>
<tr class="memitem:a855559383c5926d018e2f780a63050a8"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; T_out &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a855559383c5926d018e2f780a63050a8">gemmlowp_matrix_multiply_core</a> (const SimpleTensor&lt; T_in &gt; &amp;a, const SimpleTensor&lt; T_in_1 &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset)</td></tr>
<tr class="separator:a855559383c5926d018e2f780a63050a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684f40c2bbdeb78ed8923632c85d8ef3"><td class="memTemplParams" colspan="2">template&lt;typename T_out , typename T_in , typename T_in_1 &gt; </td></tr>
<tr class="memitem:a684f40c2bbdeb78ed8923632c85d8ef3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a684f40c2bbdeb78ed8923632c85d8ef3">gemmlowp_matrix_multiply_core_accumulate</a> (const SimpleTensor&lt; T_in &gt; &amp;a, const SimpleTensor&lt; T_in_1 &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset, SimpleTensor&lt; T_out &gt; &amp;dst)</td></tr>
<tr class="separator:a684f40c2bbdeb78ed8923632c85d8ef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f53995c189821e40cefceb87513ffa4"><td class="memTemplParams" colspan="2">template&lt;typename T1 , typename T2 , typename T3 &gt; </td></tr>
<tr class="memitem:a6f53995c189821e40cefceb87513ffa4"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; T1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6f53995c189821e40cefceb87513ffa4">gemmlowp</a> (const SimpleTensor&lt; T2 &gt; &amp;a, const SimpleTensor&lt; T3 &gt; &amp;b, TensorShape shape_c)</td></tr>
<tr class="separator:a6f53995c189821e40cefceb87513ffa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d87b59de10d14019d82682936fcb72"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a46d87b59de10d14019d82682936fcb72"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a46d87b59de10d14019d82682936fcb72">gemmlowp_quantize_down_scale</a> (const SimpleTensor&lt; TIn &gt; &amp;in, int32_t result_offset, std::vector&lt; int32_t &gt; result_mult_int, std::vector&lt; int32_t &gt; result_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:a46d87b59de10d14019d82682936fcb72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3cb182ade2ddd106f688d1892876a0b"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:aa3cb182ade2ddd106f688d1892876a0b"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa3cb182ade2ddd106f688d1892876a0b">gemmlowp_quantize_down_scale</a> (const SimpleTensor&lt; TIn &gt; &amp;in, const SimpleTensor&lt; TIn &gt; &amp;<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, int32_t result_offset, std::vector&lt; int32_t &gt; result_mult_int, std::vector&lt; int32_t &gt; result_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:aa3cb182ade2ddd106f688d1892876a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc20df3bafb985ea3722b47b48dbb135"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:afc20df3bafb985ea3722b47b48dbb135"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afc20df3bafb985ea3722b47b48dbb135">gemmlowp_quantize_down_scale_by_fixedpoint</a> (const SimpleTensor&lt; TIn &gt; &amp;in, std::vector&lt; int32_t &gt; result_fixedpoint_multiplier, std::vector&lt; int32_t &gt; result_shift, int32_t result_offset_after_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:afc20df3bafb985ea3722b47b48dbb135"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66413f62c4b74b6e10833778ace09001"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a66413f62c4b74b6e10833778ace09001"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a66413f62c4b74b6e10833778ace09001">gemmlowp_quantize_down_scale_by_fixedpoint</a> (const SimpleTensor&lt; TIn &gt; &amp;in, const SimpleTensor&lt; TIn &gt; &amp;<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, std::vector&lt; int32_t &gt; result_fixedpoint_multiplier, std::vector&lt; int32_t &gt; result_shift, int32_t result_offset_after_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:a66413f62c4b74b6e10833778ace09001"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad101a129b7d578b3abe6f79d1151526e"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:ad101a129b7d578b3abe6f79d1151526e"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad101a129b7d578b3abe6f79d1151526e">gemmlowp_quantize_down_scale_by_float</a> (const SimpleTensor&lt; TIn &gt; &amp;in, const SimpleTensor&lt; TIn &gt; &amp;<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, std::vector&lt; float_t &gt; result_real_multiplier, int32_t result_offset, int32_t min, int32_t max)</td></tr>
<tr class="separator:ad101a129b7d578b3abe6f79d1151526e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b20cb8ea2fd8d04e21d0221ff24e677"><td class="memTemplParams" colspan="2">template&lt;typename TIn , typename TOut &gt; </td></tr>
<tr class="memitem:a4b20cb8ea2fd8d04e21d0221ff24e677"><td class="memTemplItemLeft" align="right" valign="top">SimpleTensor&lt; TOut &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a4b20cb8ea2fd8d04e21d0221ff24e677">gemmlowp_quantize_down_scale_by_float</a> (const SimpleTensor&lt; TIn &gt; &amp;in, std::vector&lt; float_t &gt; result_real_multiplier, int32_t result_offset, int32_t min, int32_t max)</td></tr>
<tr class="separator:a4b20cb8ea2fd8d04e21d0221ff24e677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fdff6e83dd9ea51f802a2a6e536219f"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a3fdff6e83dd9ea51f802a2a6e536219f">gemmlowp_quantize_down_scale_by_float</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, const SimpleTensor&lt; int32_t &gt; &amp;b, std::vector&lt; float_t &gt; result_real_multiplier, int32_t result_offset, int32_t min, int32_t max)</td></tr>
<tr class="separator:a3fdff6e83dd9ea51f802a2a6e536219f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8297443e78502c06408f1659087e9968"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8297443e78502c06408f1659087e9968">gemmlowp_quantize_down_scale_by_float</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, std::vector&lt; float_t &gt; result_real_multiplier, int32_t result_offset, int32_t min, int32_t max)</td></tr>
<tr class="separator:a8297443e78502c06408f1659087e9968"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8f85268ea49b4503a53fff73112bf0c"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac8f85268ea49b4503a53fff73112bf0c">gemmlowp_quantize_down_scale_by_fixedpoint</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, std::vector&lt; int32_t &gt; result_fixedpoint_multiplier, std::vector&lt; int32_t &gt; result_shift, int32_t result_offset_after_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:ac8f85268ea49b4503a53fff73112bf0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad25cb52474384d16388c146be356d859"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad25cb52474384d16388c146be356d859">gemmlowp_quantize_down_scale_by_fixedpoint</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, const SimpleTensor&lt; int32_t &gt; &amp;b, std::vector&lt; int32_t &gt; result_fixedpoint_multiplier, std::vector&lt; int32_t &gt; result_shift, int32_t result_offset_after_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:ad25cb52474384d16388c146be356d859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ea3cac7b1305a7cb54aa501e9036f37"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2ea3cac7b1305a7cb54aa501e9036f37">gemmlowp_quantize_down_scale</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, int32_t result_offset, std::vector&lt; int32_t &gt; result_mult_int, std::vector&lt; int32_t &gt; result_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:a2ea3cac7b1305a7cb54aa501e9036f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb1de640f9267f9d6f4f49438df2446b"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#adb1de640f9267f9d6f4f49438df2446b">gemmlowp_quantize_down_scale</a> (const SimpleTensor&lt; int32_t &gt; &amp;a, const SimpleTensor&lt; int32_t &gt; &amp;b, int32_t result_offset, std::vector&lt; int32_t &gt; result_mult_int, std::vector&lt; int32_t &gt; result_shift, int32_t min, int32_t max)</td></tr>
<tr class="separator:adb1de640f9267f9d6f4f49438df2446b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb05c56daf457ea9389411a5308ec15c"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#afb05c56daf457ea9389411a5308ec15c">gemmlowp_matrix_multiply_core</a> (const SimpleTensor&lt; int8_t &gt; &amp;a, const SimpleTensor&lt; int8_t &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset)</td></tr>
<tr class="separator:afb05c56daf457ea9389411a5308ec15c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad373c5f86e5eb3d150f78fe030814b2c"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad373c5f86e5eb3d150f78fe030814b2c">gemmlowp_matrix_multiply_core</a> (const SimpleTensor&lt; uint8_t &gt; &amp;a, const SimpleTensor&lt; uint8_t &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset)</td></tr>
<tr class="separator:ad373c5f86e5eb3d150f78fe030814b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ce3e4e122411b7b5aaad17cbad90b9d"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a1ce3e4e122411b7b5aaad17cbad90b9d">gemmlowp_matrix_multiply_core_accumulate</a> (const SimpleTensor&lt; int8_t &gt; &amp;a, const SimpleTensor&lt; int8_t &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset, SimpleTensor&lt; int32_t &gt; &amp;dst)</td></tr>
<tr class="separator:a1ce3e4e122411b7b5aaad17cbad90b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b8c4df17aca33c08b6a2ffc07bc05bf"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8b8c4df17aca33c08b6a2ffc07bc05bf">gemmlowp_matrix_multiply_core_accumulate</a> (const SimpleTensor&lt; uint8_t &gt; &amp;a, const SimpleTensor&lt; uint8_t &gt; &amp;b, TensorShape shape_c, int32_t a_offset, int32_t b_offset, SimpleTensor&lt; int32_t &gt; &amp;dst)</td></tr>
<tr class="separator:a8b8c4df17aca33c08b6a2ffc07bc05bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a487791e3341381ea63f13b6fa49cab31"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a487791e3341381ea63f13b6fa49cab31">gemmlowp&lt; int32_t, int8_t, int8_t &gt;</a> (const SimpleTensor&lt; int8_t &gt; &amp;a, const SimpleTensor&lt; int8_t &gt; &amp;b, TensorShape shape_c)</td></tr>
<tr class="separator:a487791e3341381ea63f13b6fa49cab31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdab47b801c5215fae4062f415c69095"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#abdab47b801c5215fae4062f415c69095">gemmlowp&lt; int32_t, uint8_t, uint8_t &gt;</a> (const SimpleTensor&lt; uint8_t &gt; &amp;a, const SimpleTensor&lt; uint8_t &gt; &amp;b, TensorShape shape_c)</td></tr>
<tr class="separator:abdab47b801c5215fae4062f415c69095"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1314a167983a67f7d439771b183434ee"><td class="memItemLeft" align="right" valign="top">template SimpleTensor&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a1314a167983a67f7d439771b183434ee">gemmlowp&lt; int32_t, uint8_t, int8_t &gt;</a> (const SimpleTensor&lt; uint8_t &gt; &amp;a, const SimpleTensor&lt; int8_t &gt; &amp;b, TensorShape shape_c)</td></tr>
<tr class="separator:a1314a167983a67f7d439771b183434ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_46fdb196cebdbffe77dac340cde62f29.xhtml">reference</a></li><li class="navelem"><a class="el" href="reference_2_g_e_m_m_lowp_8cpp.xhtml">GEMMLowp.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
