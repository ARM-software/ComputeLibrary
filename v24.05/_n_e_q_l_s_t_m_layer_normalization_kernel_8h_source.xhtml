<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/NEQLSTMLayerNormalizationKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_q_l_s_t_m_layer_normalization_kernel_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEQLSTMLayerNormalizationKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_NEQLSTMLAYERNORMALIZATIONKERNEL_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_NEQLSTMLAYERNORMALIZATIONKERNEL_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_kernel_8h.xhtml">src/core/NEON/INEKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">class </span>ITensor;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/** Kernel to perform layer normalization for QLSTM. */</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">   36</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">   39</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;NEQLSTMLayerNormalizationKernel&quot;</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /** Default constructor */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#aed76de5b148f94072b9ac7d9e107ffce">NEQLSTMLayerNormalizationKernel</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#aed76de5b148f94072b9ac7d9e107ffce">NEQLSTMLayerNormalizationKernel</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ac993b8a1dbb5ab49f5de40f042de94ca">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">    /** Default Move Constructor. */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#aed76de5b148f94072b9ac7d9e107ffce">NEQLSTMLayerNormalizationKernel</a>(<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /** Default move assignment operator */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ac993b8a1dbb5ab49f5de40f042de94ca">operator=</a>(<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">NEQLSTMLayerNormalizationKernel</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /** Default destructor */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a182cea3042fe1888cf4daeec5ae2e87f">~NEQLSTMLayerNormalizationKernel</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /** Set the input and output tensors.</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     * @param[in]  input  Source tensor. Data types supported: QSYMM16.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * @param[out] output Destination tensor. Data types supported: Same as @p input.</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * @param[in]  weight Weight tensor. Data types supported: Same as @p input.</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * @param[in]  bias   Bias tensor. Data types supported: S32</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a82d63e80d2f9b5581fdf93b5360d035f">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *weight, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>);<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref NEQLSTMLayerNormalizationKernel</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     * @param[in] input  Source tensor info. Data types supported: QSYMM16.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * @param[in] output Destination tensor info. Data types supported: Same as @p input.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * @param[in] weight Weight tensor info. Data types supported: Same as @p input.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * @param[in] bias   Bias tensor info. Data types supported: S32</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @return a status</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#abd9de6fe0c3fc5b1b9bb6dc6ae62fbde">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *weight, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// constants</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">static</span> constexpr uint32_t max_input_dimension{2};  <span class="comment">/**&lt; The maximum input dimension supported */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">static</span> constexpr uint32_t max_weight_dimension{1}; <span class="comment">/**&lt; The maximum weight dimension supported */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">static</span> constexpr uint32_t max_bias_dimension{1};   <span class="comment">/**&lt; The maximum bias dimension supported */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">static</span> constexpr uint32_t vector_size_byte{16};    <span class="comment">/**&lt; Computation vector size in byte */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">using</span> ComputeFuncType = std::function&lt;void(<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#aed76de5b148f94072b9ac7d9e107ffce">NEQLSTMLayerNormalizationKernel</a> &amp;)&gt;;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    ComputeFuncType _fn{}; <span class="comment">/**&lt; Function pointer to computation function */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">const</span> ITensor *_input{<span class="keyword">nullptr</span>};  <span class="comment">/**&lt; Input tensor */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> ITensor *_weight{<span class="keyword">nullptr</span>}; <span class="comment">/**&lt; Weight tensor */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">const</span> ITensor *_bias{<span class="keyword">nullptr</span>};   <span class="comment">/**&lt; Bias tensor */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    ITensor       *_output{<span class="keyword">nullptr</span>}; <span class="comment">/**&lt; Output tensor */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    int32_t _output_multiplier{}; <span class="comment">/**&lt; Multiplier for output values */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    int32_t _output_shift{};      <span class="comment">/**&lt; Shift value for output values */</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    int32_t _window_start_x{}; <span class="comment">/**&lt; The beginning of x-axis iteration */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    int32_t _window_end_x{};   <span class="comment">/**&lt; The end of x-axis iteration */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    int32_t _window_step_x{};  <span class="comment">/**&lt; The size of x-axis iteration&#39;s step */</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    Window _inout_window{};  <span class="comment">/**&lt; Window for input and output tensor */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    Window _weight_window{}; <span class="comment">/**&lt; Window for weight and bias tensor */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /** Function to configure initial windows for destination of computation</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @param[in] Target destination tensor to use for output window</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return configured window</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    Window configure_window(ITensor *target);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Function to compute for data type QSYMM16</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> compute_qsymm16();<span class="comment"></span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    /** Function to compute summation and summation of squared input of the given input pointer</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * @param[in] Input_ptr pointer to input array</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    std::pair&lt;int64_t, int64_t&gt; sum_qsymm16(<span class="keyword">const</span> int16_t *input_ptr);<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">    /** Function to normalize values using computed mean and standard deviation</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     * @param[in] input_ptr     Pointer to input array</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @param[in] output_ptr    Pointer to output array</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @param[in] weight_ptr    Pointer to weight array</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @param[in] bias_ptr      Pointer to bias array</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     * @param[in] mean          Mean value</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     * @param[in] inv_std_mul   Quantized multiplier for standard deviation</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     * @param[in] inv_std_shift Shift for standard deviation</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">void</span> normalize_qasymm16(<span class="keyword">const</span> int16_t *input_ptr,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                            int16_t       *output_ptr,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                            <span class="keyword">const</span> int16_t *weight_ptr,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                            <span class="keyword">const</span> int32_t *bias_ptr,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                            int32_t        mean,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                            int32_t        inv_std_mul,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                            int32_t        inv_std_shift);<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /** Function to compute output quantization information */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    QuantizationInfo compute_output_qinfo();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;};</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_NEQLSTMLAYERNORMALIZATIONKERNEL_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_a182cea3042fe1888cf4daeec5ae2e87f"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a182cea3042fe1888cf4daeec5ae2e87f">arm_compute::NEQLSTMLayerNormalizationKernel::~NEQLSTMLayerNormalizationKernel</a></div><div class="ttdeci">~NEQLSTMLayerNormalizationKernel()=default</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_ac993b8a1dbb5ab49f5de40f042de94ca"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ac993b8a1dbb5ab49f5de40f042de94ca">arm_compute::NEQLSTMLayerNormalizationKernel::operator=</a></div><div class="ttdeci">NEQLSTMLayerNormalizationKernel &amp; operator=(const NEQLSTMLayerNormalizationKernel &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_abd9de6fe0c3fc5b1b9bb6dc6ae62fbde"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#abd9de6fe0c3fc5b1b9bb6dc6ae62fbde">arm_compute::NEQLSTMLayerNormalizationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ITensorInfo *weight, const ITensorInfo *bias)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEQLSTMLayerNormalizatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00139">NEQLSTMLayerNormalizationKernel.cpp:139</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml">arm_compute::NEQLSTMLayerNormalizationKernel</a></div><div class="ttdoc">Kernel to perform layer normalization for QLSTM.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h_source.xhtml#l00036">NEQLSTMLayerNormalizationKernel.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00038">ICPPKernel.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_aed76de5b148f94072b9ac7d9e107ffce"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#aed76de5b148f94072b9ac7d9e107ffce">arm_compute::NEQLSTMLayerNormalizationKernel::NEQLSTMLayerNormalizationKernel</a></div><div class="ttdeci">NEQLSTMLayerNormalizationKernel()=default</div><div class="ttdoc">Default constructor.</div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::NEQLSTMLayerNormalizationKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h_source.xhtml#l00039">NEQLSTMLayerNormalizationKernel.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_a82d63e80d2f9b5581fdf93b5360d035f"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a82d63e80d2f9b5581fdf93b5360d035f">arm_compute::NEQLSTMLayerNormalizationKernel::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output, const ITensor *weight, const ITensor *bias)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00084">NEQLSTMLayerNormalizationKernel.cpp:84</a></div></div>
<div class="ttc" id="a_i_n_e_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_kernel_8h.xhtml">INEKernel.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00191">CPPTypes.h:191</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::NEQLSTMLayerNormalizationKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00168">NEQLSTMLayerNormalizationKernel.cpp:168</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h.xhtml">NEQLSTMLayerNormalizationKernel.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
