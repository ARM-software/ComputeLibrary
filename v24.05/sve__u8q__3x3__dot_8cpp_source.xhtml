<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_conv/depthwise/interleaves/sve_u8q_3x3_dot.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('sve__u8q__3x3__dot_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">sve_u8q_3x3_dot.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sve__u8q__3x3__dot_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_ENABLE_SVE)</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_8hpp.xhtml">utils.hpp</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;depthwise.hpp&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv.xhtml">arm_conv</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">depthwise</a> {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">struct </span>interleave_sve_u8q_3x3_dot</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">size_t</span> get_packed_size(<span class="keyword">const</span> DepthwiseArgs &amp;);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#aaf545a8af159f092c65d88af297ba84b">pack_parameters</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_channels, <span class="keywordtype">void</span> *outptr, <span class="keyword">const</span> int32_t *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keyword">const</span> uint8_t *weights, <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">size_t</span> interleave_sve_u8q_3x3_dot::get_packed_size(<span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">// We store 7 vectors for every &lt;vector_of_ints&gt; of channels.</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = <a class="code" href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a>(</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>((<span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                       get_vector_length&lt;int32_t&gt;(<a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a>)), 4lu</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  );</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> n * 7 * get_vector_length&lt;uint8_t&gt;(<a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#aaf545a8af159f092c65d88af297ba84b">interleave_sve_u8q_3x3_dot::pack_parameters</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_channels, <span class="keywordtype">void</span> *outptr, <span class="keyword">const</span> int32_t *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, <span class="keyword">const</span> uint8_t *weights, <span class="keyword">const</span> <a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a> &amp;qp, <span class="keywordtype">size_t</span> ld_weight_col, <span class="keywordtype">size_t</span> ld_weight_row)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  __asm__ __volatile__(</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="stringliteral">&quot;cmp %x[ld_weight_col], XZR\n&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="stringliteral">&quot;csel %x[ld_weight_col], %x[ld_weight_col], %x[n_channels], NE\n&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="stringliteral">&quot;mov z16.s, #0x9\n&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="stringliteral">&quot;mov z28.b, #0x0\n&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="stringliteral">&quot;mov x20, #0x3\n&quot;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="stringliteral">&quot;ptrue p2.b\n&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="stringliteral">&quot;mul x20, %x[ld_weight_col], x20\n&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="stringliteral">&quot;ld1rw { z27.s }, p2/Z, [%x[qp], %[offsetof_input_offset]]\n&quot;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="stringliteral">&quot;ld1rw { z26.s }, p2/Z, [%x[qp], %[offsetof_weights_offset]]\n&quot;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="stringliteral">&quot;cmp %x[ld_weight_row], XZR\n&quot;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="stringliteral">&quot;csel %x[ld_weight_row], %x[ld_weight_row], x20, NE\n&quot;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="stringliteral">&quot;mov z25.b, #0x1\n&quot;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="stringliteral">&quot;mul z26.s, p2/M, z26.s, z27.s\n&quot;</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="stringliteral">&quot;add x24, %x[weights], %x[ld_weight_row]\n&quot;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="stringliteral">&quot;ld1rw { z24.s }, p2/Z, [%x[qp], %[offsetof_per_layer_mul]]\n&quot;</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="stringliteral">&quot;ld1rw { z23.s }, p2/Z, [%x[qp], %[offsetof_per_layer_right_shift]]\n&quot;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="stringliteral">&quot;add x23, x24, %x[ld_weight_row]\n&quot;</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="stringliteral">&quot;add x22, %x[ld_weight_col], %x[ld_weight_col]\n&quot;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="stringliteral">&quot;whilelt p1.s, XZR, %x[n_channels]\n&quot;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="stringliteral">&quot;mov x21, #0x0\n&quot;</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="stringliteral">&quot;mul z26.s, p2/M, z26.s, z16.s\n&quot;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="stringliteral">&quot;pfalse p8.b\n&quot;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="stringliteral">&quot;cbz %x[bias], 1f\n&quot;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="stringliteral">&quot;ptrue p8.s\n&quot;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// No bias</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Loop</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="stringliteral">&quot;cntp x20, p2, p1.s\n&quot;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="stringliteral">&quot;whilelt p0.b, XZR, x20\n&quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="stringliteral">&quot;ld1b { z18.b }, p0/Z, [%x[weights]]\n&quot;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;ld1b { z17.b }, p0/Z, [%x[weights], %x[ld_weight_col]]\n&quot;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="stringliteral">&quot;ld1b { z16.b }, p0/Z, [%x[weights], x22]\n&quot;</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;zip1 z20.b, z18.b, z16.b\n&quot;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="stringliteral">&quot;zip1 z19.b, z17.b, z28.b\n&quot;</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;ld1b { z18.b }, p0/Z, [x24]\n&quot;</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="stringliteral">&quot;ld1b { z17.b }, p0/Z, [x24, %x[ld_weight_col]]\n&quot;</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;ld1b { z16.b }, p0/Z, [x24, x22]\n&quot;</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;zip1 z22.b, z20.b, z19.b\n&quot;</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;zip1 z21.b, z18.b, z16.b\n&quot;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;zip1 z19.b, z17.b, z28.b\n&quot;</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;mov z20.s, #0x0\n&quot;</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;ld1b { z18.b }, p0/Z, [x23]\n&quot;</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;ld1b { z17.b }, p0/Z, [x23, %x[ld_weight_col]]\n&quot;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;ld1b { z16.b }, p0/Z, [x23, x22]\n&quot;</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;udot z20.s, z25.b, z22.b\n&quot;</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;zip1 z19.b, z21.b, z19.b\n&quot;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;udot z20.s, z25.b, z19.b\n&quot;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;zip1 z18.b, z18.b, z16.b\n&quot;</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;zip1 z16.b, z17.b, z28.b\n&quot;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;and p0.b, p2/Z, p8.b, p1.b\n&quot;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;ld1w { z17.s }, p0/Z, [%x[bias], x21, LSL #2]\n&quot;</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;zip1 z16.b, z18.b, z16.b\n&quot;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;udot z20.s, z25.b, z16.b\n&quot;</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;mls z17.s, p2/M, z20.s, z27.s\n&quot;</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;add %x[weights], %x[weights], x20\n&quot;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="stringliteral">&quot;add x24, x24, x20\n&quot;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="stringliteral">&quot;add x23, x23, x20\n&quot;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;add z17.s, z17.s, z26.s\n&quot;</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="stringliteral">&quot;st1w { z17.s }, p2, [%x[outptr]]\n&quot;</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;st1b { z22.b }, p2, [%x[outptr], #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="stringliteral">&quot;st1b { z19.b }, p2, [%x[outptr], #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="stringliteral">&quot;st1b { z16.b }, p2, [%x[outptr], #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;addvl %x[outptr], %x[outptr], #4\n&quot;</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="stringliteral">&quot;cbz %x[rq_mul_perchannel], 3f\n&quot;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="stringliteral">&quot;ld1w { z24.s }, p1/Z, [%x[rq_mul_perchannel], x21, LSL #2]\n&quot;</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="stringliteral">&quot;ld1w { z23.s }, p1/Z, [%x[rq_shift_perchannel], x21, LSL #2]\n&quot;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Loop: Quantisation parameters: Store</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;incw x21\n&quot;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;whilelt p1.s, x21, %x[n_channels]\n&quot;</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="stringliteral">&quot;st1w { z24.s }, p2, [%x[outptr]]\n&quot;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="stringliteral">&quot;st1w { z23.s }, p2, [%x[outptr], #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="stringliteral">&quot;addvl %x[outptr], %x[outptr], #2\n&quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;b.any 2b\n&quot;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    : [ld_weight_col] <span class="stringliteral">&quot;+&amp;r&quot;</span> (ld_weight_col), [ld_weight_row] <span class="stringliteral">&quot;+&amp;r&quot;</span> (ld_weight_row), [outptr] <span class="stringliteral">&quot;+&amp;r&quot;</span> (outptr), [weights] <span class="stringliteral">&quot;+&amp;r&quot;</span> (weights)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    : [<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>] <span class="stringliteral">&quot;r&quot;</span> (<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>), [n_channels] <span class="stringliteral">&quot;r&quot;</span> (n_channels), [offsetof_input_offset] <span class="stringliteral">&quot;I&quot;</span> (offsetof(<a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a>, a_offset)), [offsetof_per_layer_mul] <span class="stringliteral">&quot;I&quot;</span> (offsetof(<a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a>, per_layer_mul)), [offsetof_per_layer_right_shift] <span class="stringliteral">&quot;I&quot;</span> (offsetof(<a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a>, per_layer_right_shift)), [offsetof_weights_offset] <span class="stringliteral">&quot;I&quot;</span> (offsetof(<a class="code" href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a>, b_offset)), [qp] <span class="stringliteral">&quot;r&quot;</span> (&amp;qp), [rq_mul_perchannel] <span class="stringliteral">&quot;r&quot;</span> (qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">per_channel_muls</a>), [rq_shift_perchannel] <span class="stringliteral">&quot;r&quot;</span> (qp.<a class="code" href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">per_channel_right_shifts</a>)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;p0&quot;</span>, <span class="stringliteral">&quot;p1&quot;</span>, <span class="stringliteral">&quot;p2&quot;</span>, <span class="stringliteral">&quot;p8&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;z16&quot;</span>, <span class="stringliteral">&quot;z17&quot;</span>, <span class="stringliteral">&quot;z18&quot;</span>, <span class="stringliteral">&quot;z19&quot;</span>, <span class="stringliteral">&quot;z20&quot;</span>, <span class="stringliteral">&quot;z21&quot;</span>, <span class="stringliteral">&quot;z22&quot;</span>, <span class="stringliteral">&quot;z23&quot;</span>, <span class="stringliteral">&quot;z24&quot;</span>, <span class="stringliteral">&quot;z25&quot;</span>, <span class="stringliteral">&quot;z26&quot;</span>, <span class="stringliteral">&quot;z27&quot;</span>, <span class="stringliteral">&quot;z28&quot;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  );</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}  <span class="comment">// namespace depthwise</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}  <span class="comment">// namespace arm_conv</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#endif  // defined(ARM_COMPUTE_ENABLE_SVE)</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="anamespacearm__conv_1_1depthwise_xhtml_a301c401a1e9a5ac74367c4719a185aa4"><div class="ttname"><a href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">arm_conv::depthwise::depthwise</a></div><div class="ttdeci">template UniqueDepthwiseCommon&lt; float &gt; depthwise(const DepthwiseArgs &amp;, const Nothing &amp;)</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a2cfd518808ae94de30b3d1a3ba7c7890"><div class="ttname"><a href="namespacearm__gemm.xhtml#a2cfd518808ae94de30b3d1a3ba7c7890">arm_gemm::roundup</a></div><div class="ttdeci">T roundup(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00070">utils.hpp:70</a></div></div>
<div class="ttc" id="aarm__gemm_8hpp_xhtml"><div class="ttname"><a href="arm__gemm_8hpp.xhtml">arm_gemm.hpp</a></div></div>
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_aef9f2c9dc4dbdef956505940d6b2895e"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aef9f2c9dc4dbdef956505940d6b2895e">arm_gemm::Requantize32::per_channel_right_shifts</a></div><div class="ttdeci">const int32_t * per_channel_right_shifts</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00206">arm_gemm.hpp:206</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29da8a880ec3350518f78cffab1bd18e97ba">arm_gemm::VLType::SVE</a></div><div class="ttdeci">@ SVE</div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00065">utils.hpp:65</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml_aa081b66a13642ceee7dfe18b03643557"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml#aa081b66a13642ceee7dfe18b03643557">arm_gemm::Requantize32::per_channel_muls</a></div><div class="ttdeci">const int32_t * per_channel_muls</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00207">arm_gemm.hpp:207</a></div></div>
<div class="ttc" id="autils_8hpp_xhtml"><div class="ttname"><a href="utils_8hpp.xhtml">utils.hpp</a></div></div>
<div class="ttc" id="anamespacearm__conv_xhtml"><div class="ttname"><a href="namespacearm__conv.xhtml">arm_conv</a></div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00030">addressing.cpp:30</a></div></div>
<div class="ttc" id="anamespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized_xhtml_aaf545a8af159f092c65d88af297ba84b"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves_1_1quantized.xhtml#aaf545a8af159f092c65d88af297ba84b">arm_conv::depthwise::interleaves::quantized::pack_parameters</a></div><div class="ttdeci">void pack_parameters(void *_buffer, const int32_t *biases, const T *weights, size_t ld_weight_col, size_t ld_weight_row, const DepthwiseArgs &amp;args, const arm_gemm::Requantize32 &amp;qp, const arm_gemm::VLType vl_type, const unsigned int accumulator_depth_vl)</div><div class="ttdef"><b>Definition:</b> <a href="generic__quantized__dot__product_8cpp_source.xhtml#l00056">generic_quantized_dot_product.cpp:56</a></div></div>
<div class="ttc" id="astructarm__gemm_1_1_requantize32_xhtml"><div class="ttname"><a href="structarm__gemm_1_1_requantize32.xhtml">arm_gemm::Requantize32</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm_8hpp_source.xhtml#l00193">arm_gemm.hpp:193</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_ea98ae4f30fbc97db6231c6535bdb2d9.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="dir_abb214ad2a926c78a0f27cabc6cb4a00.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="dir_b7f97eccce2eea27364902fe679cf4c6.xhtml">interleaves</a></li><li class="navelem"><a class="el" href="sve__u8q__3x3__dot_8cpp.xhtml">sve_u8q_3x3_dot.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:00:59 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
