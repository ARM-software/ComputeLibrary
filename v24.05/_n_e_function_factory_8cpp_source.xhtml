<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/backends/NEON/NEFunctionFactory.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_function_factory_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEFunctionFactory.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_function_factory_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021,2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_function_factory_8h.xhtml">arm_compute/graph/backends/NEON/NEFunctionFactory.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_function_helpers_8h.xhtml">arm_compute/graph/backends/FunctionHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2backends_2_utils_8h.xhtml">arm_compute/graph/backends/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_context_8h.xhtml">arm_compute/graph/GraphContext.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_logger_8h.xhtml">arm_compute/graph/Logger.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_nodes_8h.xhtml">arm_compute/graph/nodes/Nodes.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2graph_2_type_printer_8h.xhtml">arm_compute/graph/TypePrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_p_p_functions_8h.xhtml">arm_compute/runtime/CPP/CPPFunctions.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_functions_8h.xhtml">arm_compute/runtime/NEON/NEFunctions.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>graph</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>backends</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/** Target specific information structure used to pass information to the layer templates */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">struct </span>NETargetInfo</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828">TensorType</a>         = <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">using</span> SrcTensorType      = <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">using</span> TensorConcreteType = <a class="code" href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> TargetType;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<a class="code" href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> NETargetInfo::TargetType = Target::NEON;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">/** Collection of CPU convolution functions */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">struct </span>NEConvolutionLayerFunctions</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">using</span> GenericConvolutionLayer  = NEConvolutionLayer;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">using</span> GEMMConvolutionLayer     = NEGEMMConvolutionLayer;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">using</span> DirectConvolutionLayer   = NEDirectConvolutionLayer;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">using</span> WinogradConvolutionLayer = NEWinogradConvolutionLayer;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;};</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">/** Collection of CPU element-wise functions */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">struct </span>NEEltwiseFunctions</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">using</span> Addition       = NEArithmeticAddition;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">using</span> Subtraction    = NEArithmeticSubtraction;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">using</span> Multiplication = NEPixelWiseMultiplication;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">using</span> Maximum        = NEElementwiseMax;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">using</span> Division       = NEElementwiseDivision;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">/** Collection of CPU unary element-wise functions */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">struct </span>NEUnaryEltwiseFunctions</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">Exp</a> = <a class="code" href="namespacearm__compute.xhtml#a4f7d99d5165740d6e36200eadfc9263c">NEExpLayer</a>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;};</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">/** Function and tensor types to be used inside a fused convolution/batch normalization layer */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">struct </span>NEFusedLayerTypes</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">ConvolutionLayer</a>          = NEConvolutionLayer;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">DepthwiseConvolutionLayer</a> = NEDepthwiseConvolutionLayer;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">using</span> FuseBatchNormalization    = NEFuseBatchNormalization;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">namespace </span>detail</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#ab68902cd2bb95bf47f5967718015343c">   91</a></span>&#160;std::unique_ptr&lt;IFunction&gt; <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#ab68902cd2bb95bf47f5967718015343c">create_normalization_layer&lt;NENormalizationLayer, NETargetInfo&gt;</a>(<a class="code" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a> &amp;node,</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                                                          <a class="code" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a>           &amp;ctx)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    validate_node&lt;NETargetInfo&gt;(node, 1 <span class="comment">/* expected inputs */</span>, 1 <span class="comment">/* expected outputs */</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Extract IO and info</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">NETargetInfo::TensorType</a>    *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>     = get_backing_tensor&lt;NETargetInfo&gt;(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#ad7c09b0faaf3c808b0489012204852a9">input</a>(0));</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">NETargetInfo::TensorType</a>    *output    = get_backing_tensor&lt;NETargetInfo&gt;(node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">output</a>(0));</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> norm_info = node.<a class="code" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a3bfea94983e45ff8d1a3061206593349">normalization_info</a>();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a> == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(output == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Create and configure function</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> func = std::make_unique&lt;NENormalizationLayer&gt;(<a class="code" href="namespacearm__compute_1_1graph_1_1backends.xhtml#a8919c520c1cb9086dd1116de509bd481">get_memory_manager</a>(ctx, NETargetInfo::TargetType));</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    func-&gt;configure(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output, norm_info);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Log info</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a>(<span class="stringliteral">&quot;Instantiated &quot;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                               &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>() &lt;&lt; <span class="stringliteral">&quot; Type: &quot;</span> &lt;&lt; node.<a class="code" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">type</a>() &lt;&lt; <span class="stringliteral">&quot; Target: &quot;</span> &lt;&lt; NETargetInfo::TargetType</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                               &lt;&lt; <span class="stringliteral">&quot; Data Type: &quot;</span> &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;data_type() &lt;&lt; <span class="stringliteral">&quot; Input shape: &quot;</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                               &lt;&lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>-&gt;info()-&gt;tensor_shape() &lt;&lt; <span class="stringliteral">&quot; Output shape: &quot;</span> &lt;&lt; output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>()</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                               &lt;&lt; <span class="stringliteral">&quot; Normalization info: &quot;</span> &lt;&lt; norm_info.<a class="code" href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">type</a>() &lt;&lt; std::endl);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> func;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;} <span class="comment">// namespace detail</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1backends_1_1_n_e_function_factory.xhtml#aa7ac6bf065e64181f3c92fee4b3b5c79">  118</a></span>&#160;std::unique_ptr&lt;IFunction&gt; NEFunctionFactory::create(<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node, <a class="code" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (node == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a> = node-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">type</a>();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">switch</span> (<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">case</span> NodeType::ActivationLayer:</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">return</span> detail::create_activation_layer&lt;NEActivationLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                *polymorphic_downcast&lt;ActivationLayerNode *&gt;(node));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">case</span> NodeType::ArgMinMaxLayer:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">return</span> detail::create_arg_min_max_layer&lt;NEArgMinMaxLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                *polymorphic_downcast&lt;ArgMinMaxLayerNode *&gt;(node));</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">case</span> NodeType::BatchNormalizationLayer:</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> detail::create_batch_normalization_layer&lt;NEBatchNormalizationLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                *polymorphic_downcast&lt;BatchNormalizationLayerNode *&gt;(node));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">case</span> NodeType::ChannelShuffleLayer:</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> detail::create_channel_shuffle_layer&lt;NEChannelShuffleLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                *polymorphic_downcast&lt;ChannelShuffleLayerNode *&gt;(node));</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">case</span> NodeType::ConvolutionLayer:</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">return</span> detail::create_convolution_layer&lt;NEConvolutionLayerFunctions, NETargetInfo&gt;(</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                *polymorphic_downcast&lt;ConvolutionLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">case</span> NodeType::DepthToSpaceLayer:</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">return</span> detail::create_depth_to_space_layer&lt;NEDepthToSpaceLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                *polymorphic_downcast&lt;DepthToSpaceLayerNode *&gt;(node));</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">case</span> NodeType::DeconvolutionLayer:</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">return</span> detail::create_deconvolution_layer&lt;NEDeconvolutionLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                *polymorphic_downcast&lt;DeconvolutionLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">case</span> NodeType::ConcatenateLayer:</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">return</span> detail::create_concatenate_layer&lt;NEConcatenateLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                *polymorphic_downcast&lt;ConcatenateLayerNode *&gt;(node));</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">case</span> NodeType::DepthwiseConvolutionLayer:</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">return</span> detail::create_depthwise_convolution_layer&lt;NEDepthwiseConvolutionLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                *polymorphic_downcast&lt;DepthwiseConvolutionLayerNode *&gt;(node));</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">case</span> NodeType::DequantizationLayer:</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">return</span> detail::create_dequantization_layer&lt;NEDequantizationLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                *polymorphic_downcast&lt;DequantizationLayerNode *&gt;(node));</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">case</span> NodeType::DetectionOutputLayer:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> detail::create_detection_output_layer&lt;CPPDetectionOutputLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                *polymorphic_downcast&lt;DetectionOutputLayerNode *&gt;(node));</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">case</span> NodeType::DetectionPostProcessLayer:</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">return</span> detail::create_detection_post_process_layer&lt;NEDetectionPostProcessLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                *polymorphic_downcast&lt;DetectionPostProcessLayerNode *&gt;(node));</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">case</span> NodeType::EltwiseLayer:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">return</span> detail::create_eltwise_layer&lt;NEEltwiseFunctions, NETargetInfo&gt;(</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                *polymorphic_downcast&lt;EltwiseLayerNode *&gt;(node));</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">case</span> NodeType::UnaryEltwiseLayer:</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">return</span> detail::create_unary_eltwise_layer&lt;NEUnaryEltwiseFunctions, NETargetInfo&gt;(</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                *polymorphic_downcast&lt;UnaryEltwiseLayerNode *&gt;(node));</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">case</span> NodeType::FlattenLayer:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">return</span> detail::create_flatten_layer&lt;NEFlattenLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                *polymorphic_downcast&lt;FlattenLayerNode *&gt;(node));</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">case</span> NodeType::FullyConnectedLayer:</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">return</span> detail::create_fully_connected_layer&lt;NEFullyConnectedLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                *polymorphic_downcast&lt;FullyConnectedLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">case</span> NodeType::FusedConvolutionBatchNormalizationLayer:</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">return</span> detail::create_fused_convolution_batch_normalization_layer&lt;NEFusedLayerTypes, NETargetInfo&gt;(</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                *polymorphic_downcast&lt;FusedConvolutionBatchNormalizationNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">case</span> NodeType::FusedDepthwiseConvolutionBatchNormalizationLayer:</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a7ec865e1ee296647ec995b501e5ceb8b">detail::create_fused_depthwise_convolution_batch_normalization_layer</a>&lt;NEFusedLayerTypes,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                                                                        NETargetInfo&gt;(</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                *polymorphic_downcast&lt;FusedDepthwiseConvolutionBatchNormalizationNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">case</span> NodeType::L2NormalizeLayer:</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">return</span> detail::create_l2_normalize_layer&lt;NEL2NormalizeLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                *polymorphic_downcast&lt;L2NormalizeLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">case</span> NodeType::NormalizationLayer:</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#ab68902cd2bb95bf47f5967718015343c">detail::create_normalization_layer&lt;NENormalizationLayer, NETargetInfo&gt;</a>(</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                *polymorphic_downcast&lt;NormalizationLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">case</span> NodeType::PadLayer:</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">return</span> detail::create_pad_layer&lt;NEPadLayer, NETargetInfo&gt;(*polymorphic_downcast&lt;PadLayerNode *&gt;(node));</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">case</span> NodeType::PermuteLayer:</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">return</span> detail::create_permute_layer&lt;NEPermute, NETargetInfo&gt;(</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                *polymorphic_downcast&lt;PermuteLayerNode *&gt;(node));</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">case</span> NodeType::PoolingLayer:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">return</span> detail::create_pooling_layer&lt;NEPoolingLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                *polymorphic_downcast&lt;PoolingLayerNode *&gt;(node));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">case</span> NodeType::PReluLayer:</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">return</span> detail::create_prelu_layer&lt;NEPReluLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                *polymorphic_downcast&lt;PReluLayerNode *&gt;(node));</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">case</span> NodeType::PrintLayer:</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">return</span> detail::create_print_layer&lt;NETargetInfo&gt;(*polymorphic_downcast&lt;PrintLayerNode *&gt;(node));</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">case</span> NodeType::PriorBoxLayer:</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">return</span> detail::create_priorbox_layer&lt;NEPriorBoxLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                *polymorphic_downcast&lt;PriorBoxLayerNode *&gt;(node));</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">case</span> NodeType::QuantizationLayer:</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">return</span> detail::create_quantization_layer&lt;NEQuantizationLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                *polymorphic_downcast&lt;QuantizationLayerNode *&gt;(node));</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">case</span> NodeType::ReductionOperationLayer:</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span> detail::create_reduction_operation_layer&lt;NEReductionOperation, NETargetInfo&gt;(</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                *polymorphic_downcast&lt;ReductionLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">case</span> NodeType::ReorgLayer:</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">return</span> detail::create_reorg_layer&lt;NEReorgLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                *polymorphic_downcast&lt;ReorgLayerNode *&gt;(node));</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">case</span> NodeType::ReshapeLayer:</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">return</span> detail::create_reshape_layer&lt;NEReshapeLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                *polymorphic_downcast&lt;ReshapeLayerNode *&gt;(node));</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">case</span> NodeType::ResizeLayer:</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keywordflow">return</span> detail::create_resize_layer&lt;NEScale, NETargetInfo&gt;(*polymorphic_downcast&lt;ResizeLayerNode *&gt;(node));</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">case</span> NodeType::SliceLayer:</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">return</span> detail::create_slice_layer&lt;NESlice, NETargetInfo&gt;(*polymorphic_downcast&lt;SliceLayerNode *&gt;(node));</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">case</span> NodeType::SoftmaxLayer:</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordflow">return</span> detail::create_softmax_layer&lt;NESoftmaxLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                *polymorphic_downcast&lt;SoftmaxLayerNode *&gt;(node), ctx);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">case</span> NodeType::StackLayer:</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">return</span> detail::create_stack_layer&lt;NEStackLayer, NETargetInfo&gt;(</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                *polymorphic_downcast&lt;StackLayerNode *&gt;(node));</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">case</span> NodeType::StridedSliceLayer:</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">return</span> detail::create_strided_slice_layer&lt;NEStridedSlice, NETargetInfo&gt;(</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                *polymorphic_downcast&lt;StridedSliceLayerNode *&gt;(node));</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;} <span class="comment">// namespace backends</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;} <span class="comment">// namespace graph</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="agraph_2_logger_8h_xhtml_ab2d8baa35618bdad1d2814942355311e"><div class="ttname"><a href="graph_2_logger_8h.xhtml#ab2d8baa35618bdad1d2814942355311e">ARM_COMPUTE_LOG_GRAPH_INFO</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_GRAPH_INFO(x)</div><div class="ttdef"><b>Definition:</b> <a href="graph_2_logger_8h_source.xhtml#l00054">Logger.h:54</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2backends_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2backends_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="agemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00347">gemm_interleaved.hpp:347</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_a27369471d9b2ba47746e1e923f585b9f"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a27369471d9b2ba47746e1e923f585b9f">arm_compute::graph::INode::output</a></div><div class="ttdeci">Tensor * output(size_t idx) const</div><div class="ttdoc">Returns the tensor of a given output of the node.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00158">INode.cpp:158</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_normalization_layer_node_xhtml_a65d13dc93e2df5e8ab725263cf9f4ac5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a65d13dc93e2df5e8ab725263cf9f4ac5">arm_compute::graph::NormalizationLayerNode::type</a></div><div class="ttdeci">NodeType type() const override</div><div class="ttdoc">Returns node's type.</div><div class="ttdef"><b>Definition:</b> <a href="_normalization_layer_node_8cpp_source.xhtml#l00068">NormalizationLayerNode.cpp:68</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828">arm_compute::TensorType</a></div><div class="ttdeci">TensorType</div><div class="ttdoc">Memory type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00038">Types.h:38</a></div></div>
<div class="ttc" id="a_graph_context_8h_xhtml"><div class="ttname"><a href="_graph_context_8h.xhtml">GraphContext.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="a_c_p_p_functions_8h_xhtml"><div class="ttname"><a href="_c_p_p_functions_8h.xhtml">CPPFunctions.h</a></div></div>
<div class="ttc" id="a_function_helpers_8h_xhtml"><div class="ttname"><a href="_function_helpers_8h.xhtml">FunctionHelpers.h</a></div></div>
<div class="ttc" id="a_n_e_functions_8h_xhtml"><div class="ttname"><a href="_n_e_functions_8h.xhtml">NEFunctions.h</a></div><div class="ttdoc">Includes all the Arm® Neon™ functions at once.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a3805b9005b1d842bad30e09846e1f4e7acad39a154bffb61175f674d6eefaf6d0">arm_compute::graph::UnaryEltwiseOperation::Exp</a></div><div class="ttdeci">@ Exp</div><div class="ttdoc">Exp.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor's metadata.</div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aarm__compute_2graph_2_type_printer_8h_xhtml"><div class="ttname"><a href="arm__compute_2graph_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a4f7d99d5165740d6e36200eadfc9263c"><div class="ttname"><a href="namespacearm__compute.xhtml#a4f7d99d5165740d6e36200eadfc9263c">arm_compute::NEExpLayer</a></div><div class="ttdeci">NEElementwiseUnaryLayer&lt; ElementWiseUnary::EXP &gt; NEExpLayer</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_elementwise_unary_layer_8h_source.xhtml#l00088">NEElementwiseUnaryLayer.h:88</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1backends_xhtml_a8919c520c1cb9086dd1116de509bd481"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends.xhtml#a8919c520c1cb9086dd1116de509bd481">arm_compute::graph::backends::get_memory_manager</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; get_memory_manager(GraphContext &amp;ctx, Target target)</div><div class="ttdoc">Returns the memory manager for a given target.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2backends_2_utils_8h_source.xhtml#l00089">Utils.h:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00046">INode.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">arm_compute::graph::NodeType</a></div><div class="ttdeci">NodeType</div><div class="ttdoc">Supported nodes.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00154">Types.h:154</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a></div><div class="ttdef"><b>Definition:</b> <a href="_cast_8h_source.xhtml#l00033">Cast.h:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_a7ec865e1ee296647ec995b501e5ceb8b"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#a7ec865e1ee296647ec995b501e5ceb8b">arm_compute::graph::backends::detail::create_fused_depthwise_convolution_batch_normalization_layer</a></div><div class="ttdeci">std::unique_ptr&lt; IFunction &gt; create_fused_depthwise_convolution_batch_normalization_layer(FusedDepthwiseConvolutionBatchNormalizationNode &amp;node, GraphContext &amp;ctx)</div><div class="ttdoc">Create a backend fused depthwise convolution batch normalization layer function.</div><div class="ttdef"><b>Definition:</b> <a href="_function_helpers_8h_source.xhtml#l00259">FunctionHelpers.h:259</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::graph::INode::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns node's name.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00107">INode.cpp:107</a></div></div>
<div class="ttc" id="a_nodes_8h_xhtml"><div class="ttname"><a href="_nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_a6b2d83e561886647467f86c20ce39bec"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">arm_compute::graph::INode::type</a></div><div class="ttdeci">virtual NodeType type() const =0</div><div class="ttdoc">Returns node's type.</div></div>
<div class="ttc" id="agraph_2_logger_8h_xhtml"><div class="ttname"><a href="graph_2_logger_8h.xhtml">Logger.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">arm_compute::graph::NodeType::ConvolutionLayer</a></div><div class="ttdeci">@ ConvolutionLayer</div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml">arm_compute::NormalizationLayerInfo</a></div><div class="ttdoc">Normalization Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01529">Types.h:1529</a></div></div>
<div class="ttc" id="a_n_e_function_factory_8h_xhtml"><div class="ttname"><a href="_n_e_function_factory_8h.xhtml">NEFunctionFactory.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_1_1backends_1_1detail_xhtml_ab68902cd2bb95bf47f5967718015343c"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1backends_1_1detail.xhtml#ab68902cd2bb95bf47f5967718015343c">arm_compute::graph::backends::detail::create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;</a></div><div class="ttdeci">std::unique_ptr&lt; IFunction &gt; create_normalization_layer&lt; NENormalizationLayer, NETargetInfo &gt;(NormalizationLayerNode &amp;node, GraphContext &amp;ctx)</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_function_factory_8cpp_source.xhtml#l00091">NEFunctionFactory.cpp:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_i_node_xhtml_ad7c09b0faaf3c808b0489012204852a9"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#ad7c09b0faaf3c808b0489012204852a9">arm_compute::graph::INode::input</a></div><div class="ttdeci">Tensor * input(size_t idx) const</div><div class="ttdoc">Returns the tensor of a given input of the node.</div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8cpp_source.xhtml#l00150">INode.cpp:150</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_graph_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_context.xhtml">arm_compute::graph::GraphContext</a></div><div class="ttdoc">Graph context.</div><div class="ttdef"><b>Definition:</b> <a href="_graph_context_8h_source.xhtml#l00056">GraphContext.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:37</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespacearm__compute.xhtml#a31488d29805a596498c0234ae392d35d">arm_compute::Target</a></div><div class="ttdeci">Target</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="agraph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">arm_compute::graph::NodeType::DepthwiseConvolutionLayer</a></div><div class="ttdeci">@ DepthwiseConvolutionLayer</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_normalization_layer_info_xhtml_abf43f970446f0b82889df52463b9c2b8"><div class="ttname"><a href="classarm__compute_1_1_normalization_layer_info.xhtml#abf43f970446f0b82889df52463b9c2b8">arm_compute::NormalizationLayerInfo::type</a></div><div class="ttdeci">NormType type() const</div><div class="ttdoc">Get the normalization type.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01552">Types.h:1552</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_normalization_layer_node_xhtml_a3bfea94983e45ff8d1a3061206593349"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#a3bfea94983e45ff8d1a3061206593349">arm_compute::graph::NormalizationLayerNode::normalization_info</a></div><div class="ttdeci">NormalizationLayerInfo normalization_info() const</div><div class="ttdoc">Normalization info accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_normalization_layer_node_8cpp_source.xhtml#l00040">NormalizationLayerNode.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1graph_1_1_normalization_layer_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">arm_compute::graph::NormalizationLayerNode</a></div><div class="ttdoc">Normalization Layer node.</div><div class="ttdef"><b>Definition:</b> <a href="_normalization_layer_node_8h_source.xhtml#l00034">NormalizationLayerNode.h:34</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_39e772dac1f6529f21fb52deefa146ea.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_a0f71818ea2c5c08950cb56389fab822.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_function_factory_8cpp.xhtml">NEFunctionFactory.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
