<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/kernels/assembly/CpuGemmAssemblyWrapperKernel.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuGemmAssemblyWrapperKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_gemm_assembly_wrapper_kernel_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2022 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_ASSEMBLY_GEMM_KERNEL_WRAPPER_KERNEL_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ASSEMBLY_GEMM_KERNEL_WRAPPER_KERNEL_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_n_e_kernel_8h.xhtml">src/core/NEON/INEKernel.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__gemm__compute__iface_8hpp.xhtml">src/cpu/kernels/assembly/arm_gemm_compute_iface.hpp</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="gemm__common_8hpp.xhtml">gemm_common.hpp</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span>ITensor;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu_1_1kernel.xhtml">   41</a></span>&#160;<span class="keyword">namespace </span>kernel</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/** This class is a wrapper for the assembly kernels.</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">  * Some kernels were written in assembly and highly optimised for specific CPUs like A53 or A55.</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">  * This class works as a wrapper for these assembly kernels. The arm compute library creates an instance</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">  * of CpuGemmAssemblyWrapperKernel and other auxiliary data structures to execute a single assembly kernel</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">  * in the context of an NEFunctions.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  * The type T is the type of the actual kernel implemented in assembly which is of type</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">  *         template&lt;typename To, typename Tr&gt; class GemmCommon</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">  */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TypeInput, <span class="keyword">typename</span> TypeOutput&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">   56</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> final : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">INEKernel</a></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a1dff83b7a0077c9499d71e86ff630c35">   61</a></span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a1dff83b7a0077c9499d71e86ff630c35">CpuGemmAssemblyWrapperKernel</a>() : _kernel(nullptr), _name(<span class="stringliteral">&quot;CpuGemmAssemblyWrapperKernel&quot;</span>)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a1dff83b7a0077c9499d71e86ff630c35">CpuGemmAssemblyWrapperKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> &amp;)            = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a1dff83b7a0077c9499d71e86ff630c35">CpuGemmAssemblyWrapperKernel</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> &amp;&amp;)           = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> &amp;<a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#aefdb54cefd49dfa1bb7726dd38d18598">operator=</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">CpuGemmAssemblyWrapperKernel</a> &amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">   69</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">name</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> _name.c_str();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">   74</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">run</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)<span class="keyword"> override</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>((<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">void</span> *<span class="keyword">&gt;</span>(_kernel)));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">auto</span> win = <a class="code" href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">arm_gemm::to_ndcoord</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="classarm__gemm_1_1_n_d_coordinate.xhtml">arm_gemm::ndcoord_t</a> thread_locator{};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        _kernel-&gt;<a class="code" href="classarm__gemm_1_1_i_gemm_common.xhtml#a7686815e0e1a7ed5d703a2f85ecd3b65">execute</a>(win, thread_locator, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.thread_id);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a34da2929357bb6ca5d8ca7171cfbe49f">   87</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a34da2929357bb6ca5d8ca7171cfbe49f">run_nd</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;thread_locator)<span class="keyword"> override</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>((<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">void</span> *<span class="keyword">&gt;</span>(_kernel)));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">//convert between arm_compute and arm_gemm types</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keyword">auto</span> ndc_win = <a class="code" href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">arm_gemm::to_ndcoord</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">auto</span> ndc_tlc = <a class="code" href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">arm_gemm::to_ndcoord</a>(thread_locator);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        _kernel-&gt;<a class="code" href="classarm__gemm_1_1_i_gemm_common.xhtml#a7686815e0e1a7ed5d703a2f85ecd3b65">execute</a>(ndc_win, ndc_tlc, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.thread_id);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">    /** Initialise the kernel&#39;s input and output.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @param[in] kernel          Pointer to an assembly kernel implementation.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @param[in] kernel_name_tag Tag to be attacehd to the kernel&#39;s name.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab580f1ffcbb1d40332860e31b931452b">  104</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab580f1ffcbb1d40332860e31b931452b">configure</a>(<a class="code" href="classarm__gemm_1_1_gemm_common.xhtml">arm_gemm::GemmCommon&lt;TypeInput, TypeOutput&gt;</a> *kernel, std::string kernel_name_tag)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>((<span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">void</span> *<span class="keyword">&gt;</span>(kernel)));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        _kernel = kernel;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> win = <a class="code" href="namespacearm__gemm.xhtml#a708697e3b578acd30b729bada5c264e8">to_window</a>(kernel-&gt;<a class="code" href="classarm__gemm_1_1_i_gemm_common.xhtml#a06ec4bc84b2197e53f665ac9a31df52e">get_window_size</a>());</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        INEKernel::configure(win);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> (!kernel_name_tag.empty())</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            _name += <span class="stringliteral">&quot;/&quot;</span> + kernel_name_tag;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /** Return minimum workload size of the relevant kernel</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @param[in] platform     The CPU platform used to create the context.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     * @param[in] thread_count Number of threads in the execution.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return[out] small_network_mws         Minimum workload size for requested configuration.</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">  125</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">get_mws</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;platform, <span class="keywordtype">size_t</span> thread_count)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(thread_count);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(platform);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">ICPPKernel::default_mws</a>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classarm__gemm_1_1_gemm_common.xhtml">arm_gemm::GemmCommon&lt;TypeInput, TypeOutput&gt;</a> *_kernel;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::string                                  _name;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;};</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;} <span class="comment">// namespace kernel</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_ASSEMBLY_GEMM_KERNEL_WRAPPER_KERNEL_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__gemm_1_1_i_gemm_common_xhtml_a7686815e0e1a7ed5d703a2f85ecd3b65"><div class="ttname"><a href="classarm__gemm_1_1_i_gemm_common.xhtml#a7686815e0e1a7ed5d703a2f85ecd3b65">arm_gemm::IGemmCommon::execute</a></div><div class="ttdeci">virtual void execute(const ndcoord_t &amp;work_range, const ndcoord_t &amp;thread_locator, int threadid)=0</div><div class="ttdoc">Main execute member fucntion.</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_a1dff83b7a0077c9499d71e86ff630c35"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a1dff83b7a0077c9499d71e86ff630c35">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::CpuGemmAssemblyWrapperKernel</a></div><div class="ttdeci">CpuGemmAssemblyWrapperKernel()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00061">CpuGemmAssemblyWrapperKernel.h:61</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_ae84c81edc1474e79618df29c6a621797"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ae84c81edc1474e79618df29c6a621797">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::get_mws</a></div><div class="ttdeci">size_t get_mws(const CPUInfo &amp;platform, size_t thread_count) const override</div><div class="ttdoc">Return minimum workload size of the relevant kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00125">CpuGemmAssemblyWrapperKernel.h:125</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_ac7ce4ec274a14ad75f0aa61ae71b3c9a"><div class="ttname"><a href="namespacearm__gemm.xhtml#ac7ce4ec274a14ad75f0aa61ae71b3c9a">arm_gemm::to_ndcoord</a></div><div class="ttdeci">ndcoord_t to_ndcoord(const arm_compute::Window &amp;win)</div><div class="ttdoc">Convert an arm_compute::Window to an arm_gemm::NDCoord of the same max dimensions.</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm__compute__iface_8hpp_source.xhtml#l00112">arm_gemm_compute_iface.hpp:112</a></div></div>
<div class="ttc" id="aclassarm__gemm_1_1_n_d_coordinate_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_n_d_coordinate.xhtml">arm_gemm::NDCoordinate</a></div><div class="ttdoc">NDCoordinate builds upon a range, but specifies a starting position in addition to a size which it in...</div><div class="ttdef"><b>Definition:</b> <a href="ndrange_8hpp_source.xhtml#l00148">ndrange.hpp:148</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l01079">Validate.h:1079</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_a112b35dd205c62ea6ed1447ef226da82"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a112b35dd205c62ea6ed1447ef226da82">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::run</a></div><div class="ttdeci">void run(const Window &amp;window, const ThreadInfo &amp;info) override</div><div class="ttdoc">Execute the kernel on the passed window.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00074">CpuGemmAssemblyWrapperKernel.h:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a708697e3b578acd30b729bada5c264e8"><div class="ttname"><a href="namespacearm__gemm.xhtml#a708697e3b578acd30b729bada5c264e8">arm_gemm::to_window</a></div><div class="ttdeci">arm_compute::Window to_window(const ndrange_t &amp;ndr)</div><div class="ttdef"><b>Definition:</b> <a href="arm__gemm__compute__iface_8hpp_source.xhtml#l00053">arm_gemm_compute_iface.hpp:53</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_a34da2929357bb6ca5d8ca7171cfbe49f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#a34da2929357bb6ca5d8ca7171cfbe49f">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::run_nd</a></div><div class="ttdeci">void run_nd(const Window &amp;window, const ThreadInfo &amp;info, const Window &amp;thread_locator) override</div><div class="ttdoc">legacy compatibility layer for implemantions which do not support thread_locator In these cases we si...</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00087">CpuGemmAssemblyWrapperKernel.h:87</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_aefdb54cefd49dfa1bb7726dd38d18598"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#aefdb54cefd49dfa1bb7726dd38d18598">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::operator=</a></div><div class="ttdeci">CpuGemmAssemblyWrapperKernel &amp; operator=(CpuGemmAssemblyWrapperKernel &amp;)=delete</div></div>
<div class="ttc" id="aarm__gemm__compute__iface_8hpp_xhtml"><div class="ttname"><a href="arm__gemm__compute__iface_8hpp.xhtml">arm_gemm_compute_iface.hpp</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_ab5656bb5b6334bdbe6e606c715872828"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab5656bb5b6334bdbe6e606c715872828">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::name</a></div><div class="ttdeci">const char * name() const override</div><div class="ttdoc">Name of the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00069">CpuGemmAssemblyWrapperKernel.h:69</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_p_p_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">arm_compute::ICPPKernel</a></div><div class="ttdoc">Common interface for all kernels implemented in C++.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00038">ICPPKernel.h:38</a></div></div>
<div class="ttc" id="agemm__common_8hpp_xhtml"><div class="ttname"><a href="gemm__common_8hpp.xhtml">gemm_common.hpp</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="a_i_n_e_kernel_8h_xhtml"><div class="ttname"><a href="_i_n_e_kernel_8h.xhtml">INEKernel.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00191">CPPTypes.h:191</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel</a></div><div class="ttdoc">This class is a wrapper for the assembly kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00056">CpuGemmAssemblyWrapperKernel.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel_xhtml_ab580f1ffcbb1d40332860e31b931452b"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernel_1_1_cpu_gemm_assembly_wrapper_kernel.xhtml#ab580f1ffcbb1d40332860e31b931452b">arm_compute::cpu::kernel::CpuGemmAssemblyWrapperKernel::configure</a></div><div class="ttdeci">void configure(arm_gemm::GemmCommon&lt; TypeInput, TypeOutput &gt; *kernel, std::string kernel_name_tag)</div><div class="ttdoc">Initialise the kernel's input and output.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_wrapper_kernel_8h_source.xhtml#l00104">CpuGemmAssemblyWrapperKernel.h:104</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__gemm_1_1_gemm_common_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_gemm_common.xhtml">arm_gemm::GemmCommon&lt; TypeInput, TypeOutput &gt;</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="aclassarm__gemm_1_1_i_gemm_common_xhtml_a06ec4bc84b2197e53f665ac9a31df52e"><div class="ttname"><a href="classarm__gemm_1_1_i_gemm_common.xhtml#a06ec4bc84b2197e53f665ac9a31df52e">arm_gemm::IGemmCommon::get_window_size</a></div><div class="ttdeci">virtual ndrange_t get_window_size() const =0</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_p_p_kernel_xhtml_ad6dda2ca87714e265e1521607c2fa7d0"><div class="ttname"><a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">arm_compute::ICPPKernel::default_mws</a></div><div class="ttdeci">static constexpr size_t default_mws</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_p_p_kernel_8h_source.xhtml#l00041">ICPPKernel.h:41</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_1de7bcbbdec2bf3559cb3c688662d4f5.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_7e0a188e879f4bc507eb0cc5f45552f2.xhtml">assembly</a></li><li class="navelem"><a class="el" href="_cpu_gemm_assembly_wrapper_kernel_8h.xhtml">CpuGemmAssemblyWrapperKernel.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:01 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
