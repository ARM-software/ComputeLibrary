<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/utils/logging/Logger.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('core_2utils_2logging_2_logger_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Logger.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="core_2utils_2logging_2_logger_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2019 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_LOGGING_LOGGER_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_LOGGING_LOGGER_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2logging_2_helpers_8h.xhtml">arm_compute/core/utils/logging/Helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_printer_8h.xhtml">arm_compute/core/utils/logging/IPrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_log_msg_decorators_8h.xhtml">arm_compute/core/utils/logging/LogMsgDecorators.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2utils_2logging_2_types_8h.xhtml">arm_compute/core/utils/logging/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>logging</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/** Logger class */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1logging_1_1_logger.xhtml">   42</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /** Default Constructor</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * @param[in] name      Name of the logger</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * @param[in] log_level Logger log level</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * @param[in] printer   Printer to push the messages</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, std::shared_ptr&lt;Printer&gt; printer);<span class="comment"></span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /** Default Constructor</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     * @param[in] name      Name of the logger</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param[in] log_level Logger log level</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * @param[in] printers  Printers to push the messages</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt; printers = {});<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /** Default Constructor</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * @param[in] name       Name of the logger</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * @param[in] log_level  Logger log level</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @param[in] printers   Printers to push the messages</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param[in] decorators Message decorators, which append information in the logged message</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(std::string                              <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;           <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>                                 <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;           std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt;    printers,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;           std::vector&lt;std::unique_ptr&lt;IDecorator&gt;&gt; decorators);<span class="comment"></span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">Logger</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied (As this class contains pointers) */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">operator=</a>(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml">Logger</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /** Logs a message</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * @param[in] log_level Log level of the message</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * @param[in] msg       Message to log</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, <span class="keyword">const</span> std::string &amp;msg);<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">    /** Logs a formatted message</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * @param[in] log_level Log level of the message</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * @param[in] fmt       Message format</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @param[in] args      Message arguments</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>, <span class="keyword">const</span> std::string &amp;fmt, Ts &amp;&amp;...<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>);<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /** Sets log level of the logger</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     * @warning Not thread-safe</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * @param[in] log_level Log level to set</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">set_log_level</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>);<span class="comment"></span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">    /** Returns logger&#39;s log level</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @return Logger&#39;s log level</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /** Returns logger&#39;s name</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @return Logger&#39;s name</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::string <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    /** Adds a printer to the logger</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     * @warning Not thread-safe</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @param[in] printer</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">add_printer</a>(std::shared_ptr&lt;Printer&gt; printer);<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** Adds a log message decorator to the logger</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @warning Not thread-safe</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @param[in] decorator</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">add_decorator</a>(std::unique_ptr&lt;IDecorator&gt; decorator);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /** Set default message decorators */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> set_default_decorators();<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    /** Checks if a message should be logged depending</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     *  on the message log level and the loggers one</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * @param[in] log_level Log level</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @return True if message should be logged else false</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">bool</span> is_loggable(<a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>);<span class="comment"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">    /** Decorate log message</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     * @param[in] Log message to decorate</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">void</span> decorate_log_msg(<a class="code" href="structarm__compute_1_1logging_1_1_log_msg.xhtml">LogMsg</a> &amp;msg);<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">    /** Creates final log message by creating the prefix</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param[in] str       Log message</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @param[in] log_level Message&#39;s log level</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @return Final log message to print</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    std::string create_log_msg(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>, <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>);<span class="comment"></span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">    /** Prints the message to all the printers</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @param[in] msg Message to print</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">void</span> print_all(<span class="keyword">const</span> std::string &amp;msg);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    std::string                              _name;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a>                                 _log_level;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    std::vector&lt;std::shared_ptr&lt;Printer&gt;&gt;    _printers;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    std::vector&lt;std::unique_ptr&lt;IDecorator&gt;&gt; _decorators;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Ts&gt;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classarm__compute_1_1logging_1_1_logger.xhtml#a2359a792f2d9a5c74d58017912a9fe24">  162</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">Logger::log</a>(<a class="code" href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> log_level, <span class="keyword">const</span> std::string &amp;fmt, Ts &amp;&amp;...<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Return if message shouldn&#39;t be logged</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// i.e. if log level does not match the logger&#39;s</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> (!is_loggable(<a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>))</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Print message to all printers</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    print_all(create_log_msg(<a class="code" href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">string_with_format</a>(fmt, <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>...), <a class="code" href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">log_level</a>));</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;} <span class="comment">// namespace logging</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_LOGGING_LOGGER_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__compute_1_1logging_1_1_log_msg_xhtml"><div class="ttname"><a href="structarm__compute_1_1logging_1_1_log_msg.xhtml">arm_compute::logging::LogMsg</a></div><div class="ttdoc">Log message.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="a_i_printer_8h_xhtml"><div class="ttname"><a href="_i_printer_8h.xhtml">IPrinter.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1logging_xhtml_aca1fd1d8935433e6ba2e3918214e07f9"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">arm_compute::logging::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Logging level enumeration.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_types_8h_source.xhtml#l00034">Types.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_aca0de1bc76119d77831c0b1d58a20f4d"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#aca0de1bc76119d77831c0b1d58a20f4d">arm_compute::logging::Logger::add_decorator</a></div><div class="ttdeci">void add_decorator(std::unique_ptr&lt; IDecorator &gt; decorator)</div><div class="ttdoc">Adds a log message decorator to the logger.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00109">Logger.cpp:109</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_ab18882a3175cd53305509643329a400a"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#ab18882a3175cd53305509643329a400a">arm_compute::logging::Logger::operator=</a></div><div class="ttdeci">Logger &amp; operator=(const Logger &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied (As this class contains pointers)</div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a50292ee16d3334856912eb89cffbcf83"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a50292ee16d3334856912eb89cffbcf83">arm_compute::logging::Logger::log</a></div><div class="ttdeci">void log(LogLevel log_level, const std::string &amp;msg)</div><div class="ttdoc">Logs a message.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00075">Logger.cpp:75</a></div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml">arm_compute::logging::Logger</a></div><div class="ttdoc">Logger class.</div><div class="ttdef"><b>Definition:</b> <a href="core_2utils_2logging_2_logger_8h_source.xhtml#l00042">Logger.h:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a41691397975dfad51e3a2f6b55aef749"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a41691397975dfad51e3a2f6b55aef749">arm_compute::logging::Logger::set_log_level</a></div><div class="ttdeci">void set_log_level(LogLevel log_level)</div><div class="ttdoc">Sets log level of the logger.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00088">Logger.cpp:88</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a1a5b7c4d38c6f9fd1550c62441b69648"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1a5b7c4d38c6f9fd1550c62441b69648">arm_compute::logging::Logger::add_printer</a></div><div class="ttdeci">void add_printer(std::shared_ptr&lt; Printer &gt; printer)</div><div class="ttdoc">Adds a printer to the logger.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00103">Logger.cpp:103</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2logging_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2logging_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a421744d0932b362cbff55c07488c1356"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a421744d0932b362cbff55c07488c1356">arm_compute::logging::Logger::Logger</a></div><div class="ttdeci">Logger(std::string name, LogLevel log_level, std::shared_ptr&lt; Printer &gt; printer)</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00032">Logger.cpp:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1logging_xhtml_a9dd6c32b3cab7dfb3e20c0800969e795"><div class="ttname"><a href="namespacearm__compute_1_1logging.xhtml#a9dd6c32b3cab7dfb3e20c0800969e795">arm_compute::logging::string_with_format</a></div><div class="ttdeci">std::string string_with_format(const std::string &amp;fmt, Ts &amp;&amp;...args)</div><div class="ttdoc">Create a string given a format.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2utils_2logging_2_helpers_8h_source.xhtml#l00049">Helpers.h:49</a></div></div>
<div class="ttc" id="aarm__compute_2core_2utils_2logging_2_helpers_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2utils_2logging_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a621f62a02364fc584cf86a8f221e715d"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a621f62a02364fc584cf86a8f221e715d">arm_compute::logging::Logger::log_level</a></div><div class="ttdeci">LogLevel log_level() const</div><div class="ttdoc">Returns logger's log level.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00093">Logger.cpp:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1logging_1_1_logger_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1logging_1_1_logger.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::logging::Logger::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Returns logger's name.</div><div class="ttdef"><b>Definition:</b> <a href="_logger_8cpp_source.xhtml#l00098">Logger.cpp:98</a></div></div>
<div class="ttc" id="a_log_msg_decorators_8h_xhtml"><div class="ttname"><a href="_log_msg_decorators_8h.xhtml">LogMsgDecorators.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_7b0825b7536eda12b63e5d87347b1c7d.xhtml">utils</a></li><li class="navelem"><a class="el" href="dir_e575b855d3e83e3374bc2a6f9bf89d98.xhtml">logging</a></li><li class="navelem"><a class="el" href="core_2utils_2logging_2_logger_8h.xhtml">Logger.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:00:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
