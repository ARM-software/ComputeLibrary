<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ISimpleLifetimeManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_simple_lifetime_manager.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ISimpleLifetimeManager Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Abstract class of the simple lifetime manager interface.  
 <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_simple_lifetime_manager_8h_source.xhtml">ISimpleLifetimeManager.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ISimpleLifetimeManager:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_i_simple_lifetime_manager__coll__graph.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a011196c118f00760877e8113b6256148"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a011196c118f00760877e8113b6256148">ISimpleLifetimeManager</a> ()</td></tr>
<tr class="memdesc:a011196c118f00760877e8113b6256148"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a011196c118f00760877e8113b6256148">More...</a><br /></td></tr>
<tr class="separator:a011196c118f00760877e8113b6256148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac259070602e52d4448ce0468ecb87c05"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#ac259070602e52d4448ce0468ecb87c05">ISimpleLifetimeManager</a> (const <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;)=delete</td></tr>
<tr class="memdesc:ac259070602e52d4448ce0468ecb87c05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be copy constructed.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#ac259070602e52d4448ce0468ecb87c05">More...</a><br /></td></tr>
<tr class="separator:ac259070602e52d4448ce0468ecb87c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f0200cb55880b234ad6b5957bcf4f1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a0f0200cb55880b234ad6b5957bcf4f1a">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;)=delete</td></tr>
<tr class="memdesc:a0f0200cb55880b234ad6b5957bcf4f1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class to be copied.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a0f0200cb55880b234ad6b5957bcf4f1a">More...</a><br /></td></tr>
<tr class="separator:a0f0200cb55880b234ad6b5957bcf4f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed5acf29c2c4f3815c0d7ea94d3e9795"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aed5acf29c2c4f3815c0d7ea94d3e9795">ISimpleLifetimeManager</a> (<a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:aed5acf29c2c4f3815c0d7ea94d3e9795"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aed5acf29c2c4f3815c0d7ea94d3e9795">More...</a><br /></td></tr>
<tr class="separator:aed5acf29c2c4f3815c0d7ea94d3e9795"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b290d729e4102cd5598bf68970d465"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a55b290d729e4102cd5598bf68970d465">operator=</a> (<a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a55b290d729e4102cd5598bf68970d465"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a55b290d729e4102cd5598bf68970d465">More...</a><br /></td></tr>
<tr class="separator:a55b290d729e4102cd5598bf68970d465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93fc2c6a7ebb5d8f44c67d492347d054"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">register_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group) override</td></tr>
<tr class="memdesc:a93fc2c6a7ebb5d8f44c67d492347d054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a group to the lifetime manager and assigns a group id.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">More...</a><br /></td></tr>
<tr class="separator:a93fc2c6a7ebb5d8f44c67d492347d054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f3b9c36674e2c4097552d9ffb30fbf2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">release_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group) override</td></tr>
<tr class="memdesc:a2f3b9c36674e2c4097552d9ffb30fbf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unbound and release elements associated with a group.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">More...</a><br /></td></tr>
<tr class="separator:a2f3b9c36674e2c4097552d9ffb30fbf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9e6669812c674ab36a3cb3e592d5efe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">start_lifetime</a> (void *obj) override</td></tr>
<tr class="memdesc:af9e6669812c674ab36a3cb3e592d5efe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers and starts lifetime of an object.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">More...</a><br /></td></tr>
<tr class="separator:af9e6669812c674ab36a3cb3e592d5efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb1cd0eb1bd44c695f7e3a8b65ba000"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">end_lifetime</a> (void *obj, <a class="el" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> &amp;obj_memory, size_t size, size_t alignment) override</td></tr>
<tr class="memdesc:a5eb1cd0eb1bd44c695f7e3a8b65ba000"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends lifetime of an object.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">More...</a><br /></td></tr>
<tr class="separator:a5eb1cd0eb1bd44c695f7e3a8b65ba000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa849cbaa03d63911dbbedc830f22943d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">are_all_finalized</a> () const override</td></tr>
<tr class="memdesc:aa849cbaa03d63911dbbedc830f22943d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the lifetime of the registered object is complete.  <a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">More...</a><br /></td></tr>
<tr class="separator:aa849cbaa03d63911dbbedc830f22943d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_lifetime_manager"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_lifetime_manager')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a></td></tr>
<tr class="memitem:ac6e5bab9415fdb1e8c4ad0d4d70227e9 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ac6e5bab9415fdb1e8c4ad0d4d70227e9">~ILifetimeManager</a> ()=default</td></tr>
<tr class="memdesc:ac6e5bab9415fdb1e8c4ad0d4d70227e9 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1_i_lifetime_manager.xhtml#ac6e5bab9415fdb1e8c4ad0d4d70227e9">More...</a><br /></td></tr>
<tr class="separator:ac6e5bab9415fdb1e8c4ad0d4d70227e9 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14145b312cf5bf366bc9d7c143f85a1 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ab14145b312cf5bf366bc9d7c143f85a1">create_pool</a> (<a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *allocator)=0</td></tr>
<tr class="memdesc:ab14145b312cf5bf366bc9d7c143f85a1 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a memory pool depending on the memory requirements.  <a href="classarm__compute_1_1_i_lifetime_manager.xhtml#ab14145b312cf5bf366bc9d7c143f85a1">More...</a><br /></td></tr>
<tr class="separator:ab14145b312cf5bf366bc9d7c143f85a1 inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4d2a4f6dd83e9ad1578450c31357db inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#af0a4d6be70322c742c12da1edccbb74d">MappingType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a2f4d2a4f6dd83e9ad1578450c31357db">mapping_type</a> () const =0</td></tr>
<tr class="memdesc:a2f4d2a4f6dd83e9ad1578450c31357db inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of mappings that the lifetime manager returns.  <a href="classarm__compute_1_1_i_lifetime_manager.xhtml#a2f4d2a4f6dd83e9ad1578450c31357db">More...</a><br /></td></tr>
<tr class="separator:a2f4d2a4f6dd83e9ad1578450c31357db inherit pub_methods_classarm__compute_1_1_i_lifetime_manager"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Abstract class of the simple lifetime manager interface. </p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_i_simple_lifetime_manager_8h_source.xhtml">ISimpleLifetimeManager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a011196c118f00760877e8113b6256148"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a011196c118f00760877e8113b6256148">&#9670;&nbsp;</a></span>ISimpleLifetimeManager() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    : _active_group(<span class="keyword">nullptr</span>), _active_elements(), _free_blobs(), _occupied_blobs(), _finalized_groups()</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac259070602e52d4448ce0468ecb87c05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac259070602e52d4448ce0468ecb87c05">&#9670;&nbsp;</a></span>ISimpleLifetimeManager() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be copy constructed. </p>

</div>
</div>
<a id="aed5acf29c2c4f3815c0d7ea94d3e9795"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed5acf29c2c4f3815c0d7ea94d3e9795">&#9670;&nbsp;</a></span>ISimpleLifetimeManager() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa849cbaa03d63911dbbedc830f22943d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa849cbaa03d63911dbbedc830f22943d">&#9670;&nbsp;</a></span>are_all_finalized()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool are_all_finalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the lifetime of the registered object is complete. </p>
<dl class="section return"><dt>Returns</dt><dd>True if all object lifetimes are finalized else false. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a1bb5a543056e56ff45f413040d316312">ILifetimeManager</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> !std::any_of(std::begin(_active_elements), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements),</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                        [](<span class="keyword">const</span> std::pair&lt;void *, Element&gt; &amp;e) { <span class="keywordflow">return</span> !e.second.status; });</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00088">ISimpleLifetimeManager::end_lifetime()</a>.</p>

</div>
</div>
<a id="a5eb1cd0eb1bd44c695f7e3a8b65ba000"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eb1cd0eb1bd44c695f7e3a8b65ba000">&#9670;&nbsp;</a></span>end_lifetime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void end_lifetime </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> &amp;&#160;</td>
          <td class="paramname"><em>obj_memory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>alignment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Ends lifetime of an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>Object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj_memory</td><td>Object memory </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the given object at given time </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alignment</td><td>Alignment requirements for the object </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a729cd4a1c76734ae24ca9175cae28b5e">ILifetimeManager</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(obj == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Find object</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> active_object_it = _active_elements.find(obj);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(active_object_it == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Update object fields and mark object as complete</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    Element &amp;el  = active_object_it-&gt;second;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    el.handle    = &amp;obj_memory;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    el.size      = size;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    el.alignment = alignment;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    el.status    = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Find object in the occupied lists</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> occupied_blob_it = std::find_if(std::begin(_occupied_blobs), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_blobs),</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                         [&amp;obj](<span class="keyword">const</span> Blob &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>) { <span class="keywordflow">return</span> obj == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.id; });</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(occupied_blob_it == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_blobs));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// Update occupied blob and return as free</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    occupied_blob_it-&gt;bound_elements.insert(obj);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    occupied_blob_it-&gt;max_size      = std::max(occupied_blob_it-&gt;max_size, size);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    occupied_blob_it-&gt;max_alignment = std::max(occupied_blob_it-&gt;max_alignment, alignment);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    occupied_blob_it-&gt;id            = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    _free_blobs.splice(std::begin(_free_blobs), _occupied_blobs, occupied_blob_it);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Check if all objects are finalized and reset active group</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">are_all_finalized</a>())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_occupied_blobs.empty());</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">// Update blobs and group mappings</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        update_blobs_and_mappings();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">// Update finalized groups</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        _finalized_groups[_active_group].insert(std::begin(_active_elements), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements));</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">// Reset state</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        _active_elements.clear();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        _active_group = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        _free_blobs.clear();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00133">ISimpleLifetimeManager::are_all_finalized()</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, and <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>.</p>

</div>
</div>
<a id="a0f0200cb55880b234ad6b5957bcf4f1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f0200cb55880b234ad6b5957bcf4f1a">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class to be copied. </p>

</div>
</div>
<a id="a55b290d729e4102cd5598bf68970d465"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55b290d729e4102cd5598bf68970d465">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a93fc2c6a7ebb5d8f44c67d492347d054"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93fc2c6a7ebb5d8f44c67d492347d054">&#9670;&nbsp;</a></span>register_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void register_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers a group to the lifetime manager and assigns a group id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">group</td><td>The group id of the group </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#af9aed2d52d9469aa2a49f8c7ece1f082">ILifetimeManager</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (_active_group == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(group == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        _active_group = group;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a2f3b9c36674e2c4097552d9ffb30fbf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f3b9c36674e2c4097552d9ffb30fbf2">&#9670;&nbsp;</a></span>release_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool release_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unbound and release elements associated with a group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">group</td><td>Group to unbound its elements</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if group was registered and released else false. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a3f4261f28eada7ef0bc83053b55bee8c">ILifetimeManager</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">if</span> (group == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> status = bool(_finalized_groups.erase(group));</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        group-&gt;mappings().clear();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classarm__compute_1_1_i_memory_group.xhtml#aa4f0ba2c065527f486249f37350a235c">IMemoryGroup::mappings()</a>.</p>

</div>
</div>
<a id="af9e6669812c674ab36a3cb3e592d5efe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9e6669812c674ab36a3cb3e592d5efe">&#9670;&nbsp;</a></span>start_lifetime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void start_lifetime </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers and starts lifetime of an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>Object to register </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ad8645b2be72197ce554268c1dc704849">ILifetimeManager</a>.</p>

<p class="definition">Definition at line <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(obj == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_active_elements.find(obj) != <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_active_elements),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                             <span class="stringliteral">&quot;Memory object is already registered!&quot;</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Check if there is a free blob</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (_free_blobs.empty())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        _occupied_blobs.emplace_front(Blob{obj, 0, 0, {obj}});</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        _occupied_blobs.splice(std::begin(_occupied_blobs), _free_blobs, std::begin(_free_blobs));</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        _occupied_blobs.front().id = obj;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// Insert object in groups and mark its finalized state to false</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _active_elements.insert(std::make_pair(obj, obj));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_error_8h_source.xhtml#l00456">ARM_COMPUTE_ERROR_ON_MSG</a>, and <a class="el" href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">arm_compute::mlgo::parser::end()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/<a class="el" href="_i_simple_lifetime_manager_8h_source.xhtml">ISimpleLifetimeManager.h</a></li>
<li>src/runtime/<a class="el" href="_i_simple_lifetime_manager_8cpp_source.xhtml">ISimpleLifetimeManager.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00283">MLGOParser.cpp:283</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_simple_lifetime_manager_xhtml_aa849cbaa03d63911dbbedc830f22943d"><div class="ttname"><a href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">arm_compute::ISimpleLifetimeManager::are_all_finalized</a></div><div class="ttdeci">bool are_all_finalized() const override</div><div class="ttdoc">Checks if the lifetime of the registered object is complete.</div><div class="ttdef"><b>Definition:</b> <a href="_i_simple_lifetime_manager_8cpp_source.xhtml#l00133">ISimpleLifetimeManager.cpp:133</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml">ISimpleLifetimeManager</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:11 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
