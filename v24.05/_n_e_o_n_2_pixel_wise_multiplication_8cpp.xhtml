<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/PixelWiseMultiplication.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">PixelWiseMultiplication.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_rounding_8h_source.xhtml">arm_compute/core/Rounding.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_pixel_wise_multiplication_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEPixelWiseMultiplication.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ConvertPolicyDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/PixelWiseMultiplicationFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#aafb2ac305c1cfb580f29d538687f1fb5">DEFAULT_VALIDATE</a>&#160;&#160;&#160;validate(Accessor(_target), _reference);</td></tr>
<tr class="separator:aafb2ac305c1cfb580f29d538687f1fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d69c709ef45fd63b622f283b0723eaf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>(<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a8d69c709ef45fd63b622f283b0723eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a6c21e1e9072e5251356f8a97ffb7b98d">WRAP_VALIDATE</a>(<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>,  TOLERANCE)&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td></tr>
<tr class="separator:a6c21e1e9072e5251356f8a97ffb7b98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ab20dd587b94b23a3c206149820eafd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a3ab20dd587b94b23a3c206149820eafd">PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</a>(TEST_NAME,  FIXTURE,  MODE,  SHAPES,  DT1,  DT2,  DT3,  SCALE,  RP,  INPLACE_DATASET,  <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>)</td></tr>
<tr class="separator:a3ab20dd587b94b23a3c206149820eafd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4a184dc16ffe872f9109749caa16f424"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4a184dc16ffe872f9109749caa16f424">NEPixelWiseMultiplicationQASYMM8Fixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, uint8_t, uint8_t &gt;</td></tr>
<tr class="separator:a4a184dc16ffe872f9109749caa16f424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af065c0b9827d4a1e94406ccd2d363375"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af065c0b9827d4a1e94406ccd2d363375">NEPixelWiseMultiplicationQASYMM8SignedFixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int8_t, int8_t &gt;</td></tr>
<tr class="separator:af065c0b9827d4a1e94406ccd2d363375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f96f1a79e47957c2154dc9b26a3b613"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2f96f1a79e47957c2154dc9b26a3b613">NEPixelWiseMultiplicationQSYMM16Fixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int16_t, int16_t &gt;</td></tr>
<tr class="separator:a2f96f1a79e47957c2154dc9b26a3b613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ec3c9e8bed6ee367893584ce5effc0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a69ec3c9e8bed6ee367893584ce5effc0">NEPixelWiseMultiplicationQSYMM16ToS32Fixture</a> = PixelWiseMultiplicationValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int16_t, int16_t, int32_t &gt;</td></tr>
<tr class="separator:a69ec3c9e8bed6ee367893584ce5effc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:afee06a3dc4c4d76774fd21379082899b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afee06a3dc4c4d76774fd21379082899b">NEPixelWiseMultiplicationToU8Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, uint8_t &gt;</td></tr>
<tr class="separator:afee06a3dc4c4d76774fd21379082899b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa89d74432688d58ba7731203876c55cb"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa89d74432688d58ba7731203876c55cb">NEPixelWiseMultiplicationToS16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, int16_t &gt;</td></tr>
<tr class="separator:aa89d74432688d58ba7731203876c55cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28e9dcfbfd55d5d07f2ae60af8cd0e87"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a28e9dcfbfd55d5d07f2ae60af8cd0e87"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a28e9dcfbfd55d5d07f2ae60af8cd0e87">NEPixelWiseMultiplicationToS32Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, int32_t &gt;</td></tr>
<tr class="separator:a28e9dcfbfd55d5d07f2ae60af8cd0e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00633c0a03f1a6a5d04e25b365ca5750">NEPixelWiseMultiplicationToF16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, half_float::half &gt;</td></tr>
<tr class="separator:a00633c0a03f1a6a5d04e25b365ca5750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2de8d560e3aa77dcd9f7f6d9094d1174">NEPixelWiseMultiplicationToF32Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, float &gt;</td></tr>
<tr class="separator:a2de8d560e3aa77dcd9f7f6d9094d1174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7aff20688aed5406b68418e8a01eaa"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aea7aff20688aed5406b68418e8a01eaa">NEPixelWiseMultiplicationU8U8ToS16Fixture</a> = PixelWiseMultiplicationValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, uint8_t, uint8_t, int16_t &gt;</td></tr>
<tr class="separator:aea7aff20688aed5406b68418e8a01eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3334f54ec43e4026dddbc2244410af5"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:af3334f54ec43e4026dddbc2244410af5"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af3334f54ec43e4026dddbc2244410af5">NEPixelWiseMultiplicationBroadcastFixture</a> = PixelWiseMultiplicationBroadcastValidationFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, T, T &gt;</td></tr>
<tr class="separator:af3334f54ec43e4026dddbc2244410af5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3cc6a43241d122107f6a8735900d1ec"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab3cc6a43241d122107f6a8735900d1ec">NEPixelWiseMultiplicationBroadcastQASYMM8Fixture</a> = PixelWiseMultiplicationBroadcastValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, uint8_t, uint8_t &gt;</td></tr>
<tr class="separator:ab3cc6a43241d122107f6a8735900d1ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae959c7983a417f0f021d53b3c662b2da"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae959c7983a417f0f021d53b3c662b2da">NEPixelWiseMultiplicationBroadcastQASYMM8SignedFixture</a> = PixelWiseMultiplicationBroadcastValidationQuantizedFixture&lt; Tensor, Accessor, NEPixelWiseMultiplication, int8_t, int8_t &gt;</td></tr>
<tr class="separator:ae959c7983a417f0f021d53b3c662b2da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab6644b8f7d262c28de87ead4f4d6f264"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab6644b8f7d262c28de87ead4f4d6f264">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8_SIGNED), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_unity, scale_255})), framework::dataset::make(&quot;OverflowPolicy&quot;,{ ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, ConvertPolicy::WRAP, ConvertPolicy::SATURATE, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, false, false, false, false, false, true, false, false, true, false, false})), input1_info, input2_info, output_info, scale, policy, expected)</td></tr>
<tr class="separator:ab6644b8f7d262c28de87ead4f4d6f264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3f24910340c319e6ff1ce23a9213150"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa3f24910340c319e6ff1ce23a9213150">TEST_CASE</a> (SingleTensor, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:aa3f24910340c319e6ff1ce23a9213150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6592411a903b8e3b533281e34c9d4f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac6592411a903b8e3b533281e34c9d4f">TEST_CASE</a> (ValidBroadCast, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:aac6592411a903b8e3b533281e34c9d4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b9808682fe75d5c0cf8e8538fe9f919"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b9808682fe75d5c0cf8e8538fe9f919">TEST_CASE</a> (InvalidBroadcastOutput, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:a7b9808682fe75d5c0cf8e8538fe9f919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7bb763a0b5768bc11201378eb9709ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7bb763a0b5768bc11201378eb9709ef">TEST_CASE</a> (InvalidBroadcastBoth, framework::DatasetMode::ALL)</td></tr>
<tr class="separator:af7bb763a0b5768bc11201378eb9709ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4409a4a5bf128a26249baf0a5ffd273e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4409a4a5bf128a26249baf0a5ffd273e">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:a4409a4a5bf128a26249baf0a5ffd273e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2003a3ac3e24f7a5670f6e34f3d78a3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae2003a3ac3e24f7a5670f6e34f3d78a3">FIXTURE_DATA_TEST_CASE</a> (RunSmallInPlace, NEPixelWiseMultiplicationQASYMM8SignedFixture, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantInPlaceDataset), InPlaceDataSet))</td></tr>
<tr class="separator:ae2003a3ac3e24f7a5670f6e34f3d78a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfd6a4be925fb7c808c34d697050e294"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acfd6a4be925fb7c808c34d697050e294">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQASYMM8QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:acfd6a4be925fb7c808c34d697050e294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35d92c90460195fb45f7378f4670e496"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a35d92c90460195fb45f7378f4670e496">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:a35d92c90460195fb45f7378f4670e496"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2c14569956a95ccdf577c88a376e49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8f2c14569956a95ccdf577c88a376e49">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:a8f2c14569956a95ccdf577c88a376e49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf742b0a3c0543cdd4a41d6c2412b2e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf742b0a3c0543cdd4a41d6c2412b2e6">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:acf742b0a3c0543cdd4a41d6c2412b2e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc713ea92ad2d36d61ea51956cd8028"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9fc713ea92ad2d36d61ea51956cd8028">FIXTURE_DATA_TEST_CASE</a> (RunTinyInPlace, NEPixelWiseMultiplicationBroadcastQASYMM8Fixture, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(combine(combine(datasets::TinyShapesBroadcastInplace(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQASYMM8QuantInPlaceDataset), InPlaceDataSet))</td></tr>
<tr class="separator:a9fc713ea92ad2d36d61ea51956cd8028"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd972becd65b0d7858ea0010080d0b35"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abd972becd65b0d7858ea0010080d0b35">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), PixelWiseMultiplicationPolicySTNUDataset), PixelWiseMultiplicationQSYMM16QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:abd972becd65b0d7858ea0010080d0b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae04b62520fb3d5eea7c76cd2bab20483"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae04b62520fb3d5eea7c76cd2bab20483">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:ae04b62520fb3d5eea7c76cd2bab20483"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b040235f0ac3bcd29bdb1480f8a5c1d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1b040235f0ac3bcd29bdb1480f8a5c1d">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:a1b040235f0ac3bcd29bdb1480f8a5c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede7017a237775cd9445feea86008d8f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aede7017a237775cd9445feea86008d8f">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::QSYMM16)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, { scale_unity })), PixelWiseMultiplicationPolicySTZDataset), PixelWiseMultiplicationQSYMM16QuantDataset), OutOfPlaceDataSet))</td></tr>
<tr class="separator:aede7017a237775cd9445feea86008d8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33270ee124fe4c49caf2a8f39257ea42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a33270ee124fe4c49caf2a8f39257ea42">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::U8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::U8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, { scale_255 })), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), OutOfPlaceDataSet))</td></tr>
<tr class="separator:a33270ee124fe4c49caf2a8f39257ea42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fff1ba07c5d091cb3b302aa47133558"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fff1ba07c5d091cb3b302aa47133558">FIXTURE_DATA_TEST_CASE</a> (RunSmall1, NEPixelWiseMultiplicationU8U8ToS16Fixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataTypeIn1&quot;, DataType::U8)), framework::dataset::make(&quot;DataTypeIn2&quot;, DataType::U8)), framework::dataset::make(&quot;DataTypeOut&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, { scale_other })), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)), framework::dataset::make(&quot;InPlace&quot;, { false })))</td></tr>
<tr class="separator:a8fff1ba07c5d091cb3b302aa47133558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac006fa8832889d08ba4fc73fab7cf6d8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac006fa8832889d08ba4fc73fab7cf6d8">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;DataType3&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(InPlaceDataSet)))</td></tr>
<tr class="separator:ac006fa8832889d08ba4fc73fab7cf6d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77154ea84ff76f1658e6e5dc5031568d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a77154ea84ff76f1658e6e5dc5031568d">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;DataType3&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a77154ea84ff76f1658e6e5dc5031568d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5792a0677337eb2b8461ab9ca57783"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8b5792a0677337eb2b8461ab9ca57783">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;DataType3&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a8b5792a0677337eb2b8461ab9ca57783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac81206699eb04899cc3f4380e0c0a43c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac81206699eb04899cc3f4380e0c0a43c">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(OutOfPlaceDataSet)))</td></tr>
<tr class="separator:ac81206699eb04899cc3f4380e0c0a43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34fd951ce98b6dd18be03d920b16dc50"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a34fd951ce98b6dd18be03d920b16dc50">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(OutOfPlaceDataSet)))</td></tr>
<tr class="separator:a34fd951ce98b6dd18be03d920b16dc50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49ac8dae93508fb87c3ad92fbe584bdd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a49ac8dae93508fb87c3ad92fbe584bdd">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(OutOfPlaceDataSet)))</td></tr>
<tr class="separator:a49ac8dae93508fb87c3ad92fbe584bdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a001ec1179ddf74232756b1b7833e8fa3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a001ec1179ddf74232756b1b7833e8fa3">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a001ec1179ddf74232756b1b7833e8fa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c85b05691e133bf8fbacd0417e1a4b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae3c85b05691e133bf8fbacd0417e1a4b">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:ae3c85b05691e133bf8fbacd0417e1a4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96df61fa31b1005aa1dff20b705982bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96df61fa31b1005aa1dff20b705982bc">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S16)), framework::dataset::make(&quot;DataType2&quot;, DataType::S16)), framework::dataset::make(&quot;DataType3&quot;, DataType::S16)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a96df61fa31b1005aa1dff20b705982bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a006859221233e5fae3e0fd4e843b65ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a006859221233e5fae3e0fd4e843b65ff">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S32)), framework::dataset::make(&quot;DataType2&quot;, DataType::S32)), framework::dataset::make(&quot;DataType3&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a006859221233e5fae3e0fd4e843b65ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad26000cf284a88c848320f2a0cb1088c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad26000cf284a88c848320f2a0cb1088c">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::S32)), framework::dataset::make(&quot;DataType2&quot;, DataType::S32)), framework::dataset::make(&quot;DataType3&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:ad26000cf284a88c848320f2a0cb1088c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf63cd91437b81b2ab2147c7c56d74de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf63cd91437b81b2ab2147c7c56d74de">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::S32)), framework::dataset::make(&quot;DataType2&quot;, DataType::S32)), framework::dataset::make(&quot;DataType3&quot;, DataType::S32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(framework::dataset::make(&quot;InPlace&quot;, { false }))))</td></tr>
<tr class="separator:adf63cd91437b81b2ab2147c7c56d74de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac271f819a0526485b317824046b2cccc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac271f819a0526485b317824046b2cccc">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(InPlaceDataSet)))</td></tr>
<tr class="separator:ac271f819a0526485b317824046b2cccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a873dec78e025dc91f064648b5dea1c58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a873dec78e025dc91f064648b5dea1c58">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_unity))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:a873dec78e025dc91f064648b5dea1c58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6a5ec792a2b5a2bb942ab814e5757f4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad6a5ec792a2b5a2bb942ab814e5757f4">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_other))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_ZERO)),(InPlaceDataSet)))</td></tr>
<tr class="separator:ad6a5ec792a2b5a2bb942ab814e5757f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abad38c31990fbed3c37c99826d7e3ada"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(framework::dataset::make(&quot;InPlace&quot;, { false }))))</td></tr>
<tr class="separator:abad38c31990fbed3c37c99826d7e3ada"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a1788854d394723375964b3d1bfec5e78"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1788854d394723375964b3d1bfec5e78">NEPixelWiseMultiplicationToU8Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a1788854d394723375964b3d1bfec5e78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65ef304a4c5053cdfbbd7157d9ec8d3a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a65ef304a4c5053cdfbbd7157d9ec8d3a">NEPixelWiseMultiplicationToS16Fixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a65ef304a4c5053cdfbbd7157d9ec8d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad43f82d96f7bf508e1107a5399577c51"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad43f82d96f7bf508e1107a5399577c51">NEPixelWiseMultiplicationToS16Fixture&lt; int16_t &gt;</a></td></tr>
<tr class="separator:ad43f82d96f7bf508e1107a5399577c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc20a2bd7617c78ce1456bbf2e8b443"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8cc20a2bd7617c78ce1456bbf2e8b443">NEPixelWiseMultiplicationToS32Fixture&lt; int32_t &gt;</a></td></tr>
<tr class="separator:a8cc20a2bd7617c78ce1456bbf2e8b443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fac9a7c907ea9a447abf557eee6ab40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4fac9a7c907ea9a447abf557eee6ab40">NEPixelWiseMultiplicationBroadcastFixture&lt; int32_t &gt;</a></td></tr>
<tr class="separator:a4fac9a7c907ea9a447abf557eee6ab40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eee9b6bb0c18aa2e23177d1b84bc6c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1eee9b6bb0c18aa2e23177d1b84bc6c4">NEPixelWiseMultiplicationToF32Fixture&lt; float &gt;</a></td></tr>
<tr class="separator:a1eee9b6bb0c18aa2e23177d1b84bc6c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e7e44aefaae0abe0312a137133917c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2e7e44aefaae0abe0312a137133917c4">NEPixelWiseMultiplicationBroadcastFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a2e7e44aefaae0abe0312a137133917c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="aafb2ac305c1cfb580f29d538687f1fb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafb2ac305c1cfb580f29d538687f1fb5">&#9670;&nbsp;</a></span>DEFAULT_VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_VALIDATE&#160;&#160;&#160;validate(Accessor(_target), _reference);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a3ab20dd587b94b23a3c206149820eafd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ab20dd587b94b23a3c206149820eafd">&#9670;&nbsp;</a></span>PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PIXEL_WISE_MULTIPLICATION_FIXTURE_DATA_TEST_CASE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TEST_NAME, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">FIXTURE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">MODE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SHAPES, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">DT3, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">SCALE, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">RP, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">INPLACE_DATASET, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#a8d69c709ef45fd63b622f283b0723eaf">VALIDATE</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">    <a class="code" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(TEST_NAME, NEPixelWiseMultiplication##FIXTURE, framework::DatasetMode::MODE,                        \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">combine</a>(                                            \</div>
<div class="line">                           datasets::SHAPES,                                                                              \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType1&quot;</span>, DataType::DT1)),                                         \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType2&quot;</span>, DataType::DT2)),                                         \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DataType3&quot;</span>, DataType::DT3)),                                         \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Scale&quot;</span>, std::move(SCALE))),                                          \</div>
<div class="line">                           datasets::ConvertPolicies()),                                                                  \</div>
<div class="line">                           <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;RoundingPolicy&quot;</span>, RoundingPolicy::RP)),                               \</div>
<div class="line">                           (INPLACE_DATASET)))                                                                            \</div>
<div class="line">    {                                                                                                                     \</div>
<div class="line">        VALIDATE                                                                                                          \</div>
<div class="line">    }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a8d69c709ef45fd63b622f283b0723eaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d69c709ef45fd63b622f283b0723eaf">&#9670;&nbsp;</a></span>VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
<a id="a6c21e1e9072e5251356f8a97ffb7b98d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c21e1e9072e5251356f8a97ffb7b98d">&#9670;&nbsp;</a></span>WRAP_VALIDATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WRAP_VALIDATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">TOLERANCE&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;validate_wrap(Accessor(_target), _reference, AbsoluteTolerance&lt;<a class="el" href="activation__quant__helpers_8h.xhtml#a5a392548f2df67370cb15d2a5d75cd7b">TYPE</a>&gt;(TOLERANCE), 0.f);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml">PixelWiseMultiplication.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_abad38c31990fbed3c37c99826d7e3ada"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#abad38c31990fbed3c37c99826d7e3ada">arm_compute::test::validation::combine</a></div><div class="ttdeci">combine(combine(combine(combine(combine(combine(combine(datasets::SmallShapesBroadcast(), framework::dataset::make(&quot;DataType1&quot;, DataType::F32)), framework::dataset::make(&quot;DataType2&quot;, DataType::F32)), framework::dataset::make(&quot;DataType3&quot;, DataType::F32)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)),(framework::dataset::make(&quot;InPlace&quot;, { false }))))</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_pixel_wise_multiplication_8cpp_source.xhtml#l00562">PixelWiseMultiplication.cpp:562</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml_a42699a26fbdddf91da4aa58a610bb8a8"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a></div><div class="ttdeci">#define FIXTURE_DATA_TEST_CASE(TEST_NAME, FIXTURE, MODE, DATASET)</div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_macros_8h_source.xhtml#l00254">Macros.h:254</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml">PixelWiseMultiplication.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
