<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: RedOpX&lt; T, S &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarm__compute_1_1_red_op_x.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">RedOpX&lt; T, S &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_x.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a> = typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt; T, S &gt;::tag_type</td></tr>
<tr class="memdesc:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">SIMD vector tag type.  <a href="structarm__compute_1_1_red_op_x.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">More...</a><br /></td></tr>
<tr class="separator:a2eb8ae9edbcaa2ffa10e954e92d298d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae33dc064f8900832247c777aacdfb471"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_red_op_x.xhtml#ae33dc064f8900832247c777aacdfb471">operator()</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;in_window, <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;out_window, const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *in, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *out, const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a> op)</td></tr>
<tr class="separator:ae33dc064f8900832247c777aacdfb471"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, int S&gt;<br />
struct arm_compute::RedOpX&lt; T, S &gt;</h3>


<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00382">382</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a2eb8ae9edbcaa2ffa10e954e92d298d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2eb8ae9edbcaa2ffa10e954e92d298d1">&#9670;&nbsp;</a></span>ExactTagType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structarm__compute_1_1_red_op_x.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a> =  typename <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1neon__vector.xhtml">wrapper::traits::neon_vector</a>&lt;T, S&gt;::tag_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SIMD vector tag type. </p>

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00385">385</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae33dc064f8900832247c777aacdfb471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae33dc064f8900832247c777aacdfb471">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>in_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>out_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45b">ReductionOperation</a>&#160;</td>
          <td class="paramname"><em>op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00387">387</a> of file <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">size_t</span> input_dim_0    = in-&gt;info()-&gt;dimension(0);</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span>    window_step_x  = 16 / <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().start());</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span>   window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(in_window.x().end());</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        Window in_win_no_pad = in_window;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        in_win_no_pad.set(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 1, 1));</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(in, in_win_no_pad);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        Iterator output(out, out_window);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">execute_window_loop</a>(</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            in_win_no_pad,</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keyword">const</span> <span class="keyword">auto</span> input_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>.ptr());</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keyword">auto</span> init_res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0.f);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                    {</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                        init_res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(*input_ptr);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                    }</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                        init_res_value = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1.f);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="keyword">auto</span>         vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">wrapper::vdup_n</a>(init_res_value, <a class="code" href="structarm__compute_1_1_red_op_x.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">ExactTagType</a>{});</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                uint32x4x4_t vec_res_idx{{0}};</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="comment">// Compute window_step_x elements per iteration</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <span class="keywordflow">for</span> (; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> vec_elements = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">wrapper::vloadq</a>(input_ptr + x);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                    {</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_elements), vec_res_value);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">wrapper::vadd</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                        {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                            <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                            vec_res_idx = calculate_index&lt;decltype(vec_res_value)&gt;(x, temp_vec_res_value, vec_res_value,</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                                                                   vec_res_idx, op, 0);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                            vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                        }</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                            <span class="keyword">auto</span> temp_vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                            vec_res_idx = calculate_index&lt;decltype(vec_res_value)&gt;(x, temp_vec_res_value, vec_res_value,</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                                                                   vec_res_idx, op, 0);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                            vec_res_value = temp_vec_res_value;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        }</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                        {</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">wrapper::vmin</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                        }</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        {</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                            vec_res_value = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">wrapper::vmax</a>(vec_elements, vec_res_value);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                }</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="keywordflow">switch</span> (op)</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">ReductionOperation::SUM</a>:</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>:</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>:</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                    {</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_DEBUG_ENABLED</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(0.f);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; S; ++i)</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                        {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                            res += <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(vec_res_value, i);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                        }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="preprocessor">#else  // ARM_COMPUTE_DEBUG_ENABLED</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                        <span class="keyword">auto</span> carry_res =</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_res_value), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_res_value));</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; S / 4; ++i)</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                        {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                            carry_res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">wrapper::vpadd</a>(carry_res, carry_res);</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                        <span class="keyword">auto</span> res = <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, 0);</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_DEBUG_ENABLED</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                        <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">ReductionOperation::SUM_SQUARE</a>)</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                        {</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                            <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                            {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                res += (*(input_ptr + x)) * (*(input_ptr + x));</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                            }</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                        }</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                        {</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                            <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                            {</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                res += *(input_ptr + x);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                            }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                        }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160; </div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                        <span class="keywordflow">if</span> (op == <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">ReductionOperation::MEAN_SUM</a>)</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                        {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                            res /= input_dim_0;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                        }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                    }</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">ReductionOperation::PROD</a>:</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                    {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                        <span class="keyword">auto</span> carry_res =</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                            <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">wrapper::vmul</a>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">wrapper::vgethigh</a>(vec_res_value), <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">wrapper::vgetlow</a>(vec_res_value));</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                        T res = 1;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; S / 2; ++i)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                        {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                            res *= <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(carry_res, i);</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                        }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160; </div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                        {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                            res *= *(input_ptr + x);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                        }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                    }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">ReductionOperation::ARG_IDX_MIN</a>:</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                    {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                        <span class="keyword">auto</span> idx = calculate_vector_index&lt;decltype(vec_res_value)&gt;(vec_res_idx, vec_res_value, op);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">calculate_min</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160; </div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                        {</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                            <span class="keywordflow">if</span> (*(input_ptr + x) &lt; res)</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                            {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                idx = x;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                                res = *(input_ptr + x);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                            }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                        }</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr())) = idx;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                    }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">ReductionOperation::ARG_IDX_MAX</a>:</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    {</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                        <span class="keyword">auto</span> idx = calculate_vector_index&lt;decltype(vec_res_value)&gt;(vec_res_idx, vec_res_value, op);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">calculate_max</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                        {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                            <span class="keywordflow">if</span> (*(input_ptr + x) &gt; res)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                            {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                idx = x;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                                res = *(input_ptr + x);</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                            }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                        }</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(output.ptr())) = idx;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                    }</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">ReductionOperation::MIN</a>:</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                    {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">calculate_min</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; </div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                        {</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                            res = *(input_ptr + x) &lt; res ? *(input_ptr + x) : res;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                        }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                    }</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">ReductionOperation::MAX</a>:</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    {</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                        <span class="keyword">auto</span> res = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">wrapper::vgetlane</a>(<a class="code" href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">calculate_max</a>(vec_res_value), 0));</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160; </div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                        <span class="keywordflow">for</span> (; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                        {</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                            res = *(input_ptr + x) &gt; res ? *(input_ptr + x) : res;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        }</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                        *(<span class="keyword">reinterpret_cast&lt;</span>T *<span class="keyword">&gt;</span>(output.ptr())) = res;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                    }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                        <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            },</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>, output);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ARG_IDX_MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ARG_IDX_MIN</a>, <a class="el" href="_error_8h_source.xhtml#l00354">ARM_COMPUTE_ERROR</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00151">arm_compute::calculate_max()</a>, <a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00127">arm_compute::calculate_min()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_window_8h_source.xhtml#l00101">Window::Dimension::end()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00074">arm_compute::execute_window_loop()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation::input</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::MAX</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::MEAN_SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::MIN</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::PROD</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00147">Iterator::ptr()</a>, <a class="el" href="_window_8inl_source.xhtml#l00053">Window::set()</a>, <a class="el" href="_window_8h_source.xhtml#l00096">Window::Dimension::start()</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::SUM</a>, <a class="el" href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::SUM_SQUARE</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00039">arm_compute::wrapper::vadd()</a>, <a class="el" href="dup__n_8h_source.xhtml#l00041">arm_compute::wrapper::vdup_n()</a>, <a class="el" href="gethigh_8h_source.xhtml#l00039">arm_compute::wrapper::vgethigh()</a>, <a class="el" href="getlane_8h_source.xhtml#l00091">arm_compute::wrapper::vgetlane()</a>, <a class="el" href="getlow_8h_source.xhtml#l00039">arm_compute::wrapper::vgetlow()</a>, <a class="el" href="load_8h_source.xhtml#l00058">arm_compute::wrapper::vloadq()</a>, <a class="el" href="max_8h_source.xhtml#l00039">arm_compute::wrapper::vmax()</a>, <a class="el" href="min_8h_source.xhtml#l00039">arm_compute::wrapper::vmin()</a>, <a class="el" href="mul_8h_source.xhtml#l00039">arm_compute::wrapper::vmul()</a>, <a class="el" href="intrinsics_2add_8h_source.xhtml#l00187">arm_compute::wrapper::vpadd()</a>, and <a class="el" href="_window_8h_source.xhtml#l00158">Window::x()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/cpu/kernels/reduction_layer/generic/neon/<a class="el" href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml">impl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a1894e825a225f3b2013f594cbffdae73"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">arm_compute::wrapper::vadd</a></div><div class="ttdeci">uint8x8_t vadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00039">add.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bac8074bb318fb85693233e64acc64c1ed">arm_compute::ReductionOperation::PROD</a></div><div class="ttdeci">@ PROD</div><div class="ttdoc">Product.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bace31e2a082d17e038fcc6e3006166653">arm_compute::ReductionOperation::MIN</a></div><div class="ttdeci">@ MIN</div><div class="ttdoc">Min.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_aa16ace001ab8287faa46d6962f369219"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#aa16ace001ab8287faa46d6962f369219">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">uint8_t vgetlane(const uint8x8_t vector, const unsigned int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00091">getlane.h:91</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba26a4b44a837bf97b972628509912b4a5">arm_compute::ReductionOperation::MAX</a></div><div class="ttdeci">@ MAX</div><div class="ttdoc">Max.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a77f54eded7fef436d3a4f21ad5a00da6"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">arm_compute::wrapper::vloadq</a></div><div class="ttdeci">uint8x16_t vloadq(const uint8_t *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="load_8h_source.xhtml#l00058">load.h:58</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45bafc54513dae613e117ffc4169e48bfce5">arm_compute::ReductionOperation::MEAN_SUM</a></div><div class="ttdeci">@ MEAN_SUM</div><div class="ttdoc">Mean of sum.</div></div>
<div class="ttc" id="astructarm__compute_1_1_red_op_x_xhtml_a2eb8ae9edbcaa2ffa10e954e92d298d1"><div class="ttname"><a href="structarm__compute_1_1_red_op_x.xhtml#a2eb8ae9edbcaa2ffa10e954e92d298d1">arm_compute::RedOpX::ExactTagType</a></div><div class="ttdeci">typename wrapper::traits::neon_vector&lt; T, S &gt;::tag_type ExactTagType</div><div class="ttdoc">SIMD vector tag type.</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00385">impl.h:385</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a475ee3c8ef70a2e4f18effd1d527a63a"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">arm_compute::wrapper::vpadd</a></div><div class="ttdeci">uint8x8_t vpadd(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="intrinsics_2add_8h_source.xhtml#l00187">add.h:187</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_ab026a1aeec48074092f548c130c323f4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">arm_compute::wrapper::vmin</a></div><div class="ttdeci">uint8x8_t vmin(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="min_8h_source.xhtml#l00039">min.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a66c8dd218a4863a14fec363e3dd13dc4"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">arm_compute::wrapper::vmul</a></div><div class="ttdeci">uint8x8_t vmul(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="mul_8h_source.xhtml#l00039">mul.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba2ce6e134b828b72fad160fa17c8d1b64">arm_compute::ReductionOperation::SUM_SQUARE</a></div><div class="ttdeci">@ SUM_SQUARE</div><div class="ttdoc">Sum of squares.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6c0dcc38187027dcb89cd9724bc5a823"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c0dcc38187027dcb89cd9724bc5a823">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;...iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00074">Helpers.inl:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba654fed6e9b6c154d04bcaa439e32d0d5">arm_compute::ReductionOperation::ARG_IDX_MAX</a></div><div class="ttdeci">@ ARG_IDX_MAX</div><div class="ttdoc">Index of the max value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a8d1d14000c959f1146a8a64e1dafae5f"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">arm_compute::wrapper::vmax</a></div><div class="ttdeci">uint8x8_t vmax(const uint8x8_t &amp;a, const uint8x8_t &amp;b)</div><div class="ttdef"><b>Definition:</b> <a href="max_8h_source.xhtml#l00039">max.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba39102811589b9a0d7a6aa8721663b4d1">arm_compute::ReductionOperation::ARG_IDX_MIN</a></div><div class="ttdeci">@ ARG_IDX_MIN</div><div class="ttdoc">Index of the min value.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a2902775707bc7bf7d6da1bda1cc15783"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">arm_compute::wrapper::vgetlow</a></div><div class="ttdeci">uint8x8_t vgetlow(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="getlow_8h_source.xhtml#l00039">getlow.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a97efbac9fc55174e5c03c7a8559da2d2"><div class="ttname"><a href="namespacearm__compute.xhtml#a97efbac9fc55174e5c03c7a8559da2d2">arm_compute::calculate_min</a></div><div class="ttdeci">std::enable_if&lt; std::is_same&lt; T, float32x4_t &gt;::value||std::is_same&lt; T, int32x4_t &gt;::value, typename std::conditional&lt; std::is_same&lt; T, float32x4_t &gt;::value, float32x2_t, int32x2_t &gt;::type &gt;::type calculate_min(T in)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00127">impl.h:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a95ee388aa7c5bccab918235dc538a6b3"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">arm_compute::wrapper::vgethigh</a></div><div class="ttdeci">uint8x8_t vgethigh(const uint8x16_t val)</div><div class="ttdef"><b>Definition:</b> <a href="gethigh_8h_source.xhtml#l00039">gethigh.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a92f4d66137f138d1fdbf2cf06c4ae8de"><div class="ttname"><a href="namespacearm__compute.xhtml#a92f4d66137f138d1fdbf2cf06c4ae8de">arm_compute::calculate_max</a></div><div class="ttdeci">std::enable_if&lt; std::is_same&lt; T, float32x4_t &gt;::value||std::is_same&lt; T, int32x4_t &gt;::value, typename std::conditional&lt; std::is_same&lt; T, float32x4_t &gt;::value, float32x2_t, int32x2_t &gt;::type &gt;::type calculate_max(T in)</div><div class="ttdef"><b>Definition:</b> <a href="reduction__layer_2generic_2neon_2impl_8h_source.xhtml#l00151">impl.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a"><div class="ttname"><a href="namespacearm__compute.xhtml#a5827eb9cb394e74af87f74bd354fb45ba6970bdc2201030b9c03fbdcf3973858a">arm_compute::ReductionOperation::SUM</a></div><div class="ttdeci">@ SUM</div><div class="ttdoc">Sum.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1wrapper_xhtml_a39e87435be178fba49b76f49426ef873"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">arm_compute::wrapper::vdup_n</a></div><div class="ttdeci">uint8x8_t vdup_n(uint8_t value, traits::vector_64_tag)</div><div class="ttdef"><b>Definition:</b> <a href="dup__n_8h_source.xhtml#l00041">dup_n.h:41</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1_red_op_x.xhtml">RedOpX</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:12 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
