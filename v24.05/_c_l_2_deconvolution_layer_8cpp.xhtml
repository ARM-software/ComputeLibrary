<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/DeconvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_2_deconvolution_layer_8cpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DeconvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_deconvolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLDeconvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DeconvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_deconvolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2024 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a8972b2aa4f0dcbc6d198324e56ed7238"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8972b2aa4f0dcbc6d198324e56ed7238"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8972b2aa4f0dcbc6d198324e56ed7238">CLDeconvolutionLayerFixture4x4</a> = DeconvolutionValidationFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 4, 4 &gt;</td></tr>
<tr class="separator:a8972b2aa4f0dcbc6d198324e56ed7238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc69b037b3a1718f102d0b3dd15c5b11"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:acc69b037b3a1718f102d0b3dd15c5b11"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acc69b037b3a1718f102d0b3dd15c5b11">CLDeconvolutionLayerFixture3x3</a> = DeconvolutionValidationFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 3, 3 &gt;</td></tr>
<tr class="separator:acc69b037b3a1718f102d0b3dd15c5b11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbdf0aa9d21b4385165d5ff6720228ac"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:afbdf0aa9d21b4385165d5ff6720228ac"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afbdf0aa9d21b4385165d5ff6720228ac">CLDeconvolutionLayerAsymmFixture3x3</a> = DeconvolutionValidationAsymmFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 3, 3 &gt;</td></tr>
<tr class="separator:afbdf0aa9d21b4385165d5ff6720228ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b4ce7cf8379d46fb023cf93d890835"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a30b4ce7cf8379d46fb023cf93d890835"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a30b4ce7cf8379d46fb023cf93d890835">CLDeconvolutionLayerFixture2x2</a> = DeconvolutionValidationFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 2, 2 &gt;</td></tr>
<tr class="separator:a30b4ce7cf8379d46fb023cf93d890835"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af71c147198af793e2d7729684928a439"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:af71c147198af793e2d7729684928a439"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af71c147198af793e2d7729684928a439">CLDeconvolutionLayerFixture1x1</a> = DeconvolutionValidationFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 1, 1 &gt;</td></tr>
<tr class="separator:af71c147198af793e2d7729684928a439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd9fe1ed6e9f264ee1dd436214cf9bdf"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:acd9fe1ed6e9f264ee1dd436214cf9bdf"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acd9fe1ed6e9f264ee1dd436214cf9bdf">CLDeconvolutionLayerAsymmFixture9x9</a> = DeconvolutionValidationAsymmFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 9, 9 &gt;</td></tr>
<tr class="separator:acd9fe1ed6e9f264ee1dd436214cf9bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebbb3e0cb8e47dcafc2fbea569e5557f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aebbb3e0cb8e47dcafc2fbea569e5557f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aebbb3e0cb8e47dcafc2fbea569e5557f">CLDeconvolutionLayerFixture5x1</a> = DeconvolutionValidationFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 5, 1 &gt;</td></tr>
<tr class="separator:aebbb3e0cb8e47dcafc2fbea569e5557f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb10129763fb266c517f53bca55dc6ee"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:abb10129763fb266c517f53bca55dc6ee"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb10129763fb266c517f53bca55dc6ee">CLDeconvolutionLayerQuantizedFixture3x3</a> = DeconvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 3, 3 &gt;</td></tr>
<tr class="separator:abb10129763fb266c517f53bca55dc6ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1b2ec2ed0c74e5cac07a970ffc03525"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac1b2ec2ed0c74e5cac07a970ffc03525"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac1b2ec2ed0c74e5cac07a970ffc03525">CLDeconvolutionLayerQuantizedFixture2x2</a> = DeconvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 2, 2 &gt;</td></tr>
<tr class="separator:ac1b2ec2ed0c74e5cac07a970ffc03525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a639a87a5df1d542b9b9b4d87f8ed423a"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a639a87a5df1d542b9b9b4d87f8ed423a"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a639a87a5df1d542b9b9b4d87f8ed423a">CLDeconvolutionLayerQuantizedFixture1x1</a> = DeconvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 1, 1 &gt;</td></tr>
<tr class="separator:a639a87a5df1d542b9b9b4d87f8ed423a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac496507e3ea8162fa4c64178880bffb2"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac496507e3ea8162fa4c64178880bffb2"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac496507e3ea8162fa4c64178880bffb2">CLDeconvolutionLayerQuantizedFixture5x1</a> = DeconvolutionValidationQuantizedFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, 5, 1 &gt;</td></tr>
<tr class="separator:ac496507e3ea8162fa4c64178880bffb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30d7c14462b061852a58b4d66d03a9fe"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a30d7c14462b061852a58b4d66d03a9fe"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a30d7c14462b061852a58b4d66d03a9fe">CLDeconvolutionLayerQuantizedPerChannelFixture4x4</a> = DeconvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, int8_t, 4, 4 &gt;</td></tr>
<tr class="separator:a30d7c14462b061852a58b4d66d03a9fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70098e2f91b3d46bed5ba16c15652fbc"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a70098e2f91b3d46bed5ba16c15652fbc"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70098e2f91b3d46bed5ba16c15652fbc">CLDeconvolutionLayerQuantizedPerChannelFixture3x3</a> = DeconvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, int8_t, 3, 3 &gt;</td></tr>
<tr class="separator:a70098e2f91b3d46bed5ba16c15652fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a9dc70d7d58d0a319c0ea91941d9e25"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9a9dc70d7d58d0a319c0ea91941d9e25"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9a9dc70d7d58d0a319c0ea91941d9e25">CLDeconvolutionLayerQuantizedPerChannelFixture2x2</a> = DeconvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, int8_t, 2, 2 &gt;</td></tr>
<tr class="separator:a9a9dc70d7d58d0a319c0ea91941d9e25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5dd3bd6e9340e45ea93ba61157492e4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae5dd3bd6e9340e45ea93ba61157492e4"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae5dd3bd6e9340e45ea93ba61157492e4">CLDeconvolutionLayerQuantizedPerChannelFixture1x1</a> = DeconvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, int8_t, 1, 1 &gt;</td></tr>
<tr class="separator:ae5dd3bd6e9340e45ea93ba61157492e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8768c3779ded3ac650f8625f251d7f06"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8768c3779ded3ac650f8625f251d7f06"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8768c3779ded3ac650f8625f251d7f06">CLDeconvolutionLayerQuantizedPerChannelFixture5x1</a> = DeconvolutionValidationQuantizedPerChannelFixture&lt; CLTensor, CLAccessor, CLDeconvolutionLayer, T, int8_t, 5, 1 &gt;</td></tr>
<tr class="separator:a8768c3779ded3ac650f8625f251d7f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aed2a29efbed067ae78fe1f69b5ba10eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed2a29efbed067ae78fe1f69b5ba10eb">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U, 13U, 27U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 13U, 27U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 13U, 27U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(4U, 11U, 13U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 16U, 32U), 1, DataType::F32, DataLayout::NHWC), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 3U, 3U, 2U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 3U, 3U, 4U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 2U, 3U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(4U, 3U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 2U, 2U, 4U), 1, DataType::F32, DataLayout::NHWC), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(1U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(1U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(1U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(4U), 1, DataType::F32, DataLayout::NHWC), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 11U, 25U), 1, DataType::F16, DataLayout::NHWC), TensorInfo(TensorShape(2U, 10U, 25U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(2U, 13U, 13U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(1U, 9U, 11U, 3U), 1, DataType::F32, DataLayout::NHWC), TensorInfo(TensorShape(4U, 43U, 91U), 1, DataType::F32, DataLayout::NHWC), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(3, 3, 2, 2), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, expected)</td></tr>
<tr class="separator:aed2a29efbed067ae78fe1f69b5ba10eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eadb22402c4bb47b6c97accdfb18a5f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8eadb22402c4bb47b6c97accdfb18a5f">FIXTURE_DATA_TEST_CASE</a> (Run, CLDeconvolutionLayerFixture4x4&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:a8eadb22402c4bb47b6c97accdfb18a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel.">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76493da776bd727cc9e9283ba5e0b5f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a76493da776bd727cc9e9283ba5e0b5f5">combine</a> (combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:a76493da776bd727cc9e9283ba5e0b5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3275f72610d019bc98b8d2520ced211"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af3275f72610d019bc98b8d2520ced211">FIXTURE_DATA_TEST_CASE</a> (RunSmallWithLargeChannels, CLDeconvolutionLayerFixture3x3&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(data3x3_precommit_large_channels, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:af3275f72610d019bc98b8d2520ced211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb696da7ea97cf3eda29271ab6f4a15f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adb696da7ea97cf3eda29271ab6f4a15f">FIXTURE_DATA_TEST_CASE</a> (RunAsymm, CLDeconvolutionLayerAsymmFixture3x3&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(data3x3_asymm, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:adb696da7ea97cf3eda29271ab6f4a15f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab84b7a21a5f85883ec65792bac0891ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab84b7a21a5f85883ec65792bac0891ba">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDeconvolutionLayerFixture3x3&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:ab84b7a21a5f85883ec65792bac0891ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4ff35374a9706bd8a25e584f9d24355"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af4ff35374a9706bd8a25e584f9d24355">combine</a> (combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:af4ff35374a9706bd8a25e584f9d24355"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a522c7426175c325c3ccbc67a479d72aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a522c7426175c325c3ccbc67a479d72aa">combine</a> (combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a522c7426175c325c3ccbc67a479d72aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec77c62e7d35a0992609647c791379f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5ec77c62e7d35a0992609647c791379f">combine</a> (combine(combine(data9x9_small_asymm, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;AddBias&quot;, { false })))</td></tr>
<tr class="separator:a5ec77c62e7d35a0992609647c791379f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad11b0239f9bad1fd7f2c0575b660db60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad11b0239f9bad1fd7f2c0575b660db60">combine</a> (combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:ad11b0239f9bad1fd7f2c0575b660db60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f7acf8d8d4a33eec5bdc3acfce181e7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f7acf8d8d4a33eec5bdc3acfce181e7">combine</a> (combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a1f7acf8d8d4a33eec5bdc3acfce181e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf55bf7bb9e8a08544dbc3d61585248d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abf55bf7bb9e8a08544dbc3d61585248d">combine</a> (combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:abf55bf7bb9e8a08544dbc3d61585248d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a7133be1ba32713473f8b428fed64ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8a7133be1ba32713473f8b428fed64ee">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDeconvolutionLayerFixture3x3&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a8a7133be1ba32713473f8b428fed64ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7de6e7ab5eb5c2400b7b8c68290df368"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7de6e7ab5eb5c2400b7b8c68290df368">combine</a> (combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), data_layouts_dataset), add_bias_dataset))</td></tr>
<tr class="separator:a7de6e7ab5eb5c2400b7b8c68290df368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0244d1e88e637036cdf0896008e6637d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0244d1e88e637036cdf0896008e6637d">combine</a> (combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a0244d1e88e637036cdf0896008e6637d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ef6e63348c4c2463f98edea64b1db56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1ef6e63348c4c2463f98edea64b1db56">combine</a> (combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::F16)), data_layouts_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a1ef6e63348c4c2463f98edea64b1db56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46235cfb8851ecac02bfed3dd8e3eab8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46235cfb8851ecac02bfed3dd8e3eab8">FIXTURE_DATA_TEST_CASE</a> (Run, CLDeconvolutionLayerQuantizedFixture4x4&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 5) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 5), QuantizationInfo(4.f/255.f, 10) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a46235cfb8851ecac02bfed3dd8e3eab8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fdf381a19677c27b5a8856ea239f774"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9fdf381a19677c27b5a8856ea239f774">combine</a> (combine(combine(combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 4) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 10), QuantizationInfo(4.f/255.f, 5) })), add_bias_dataset))</td></tr>
<tr class="separator:a9fdf381a19677c27b5a8856ea239f774"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fcd734574c3a3680d6b7479b40f19f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7fcd734574c3a3680d6b7479b40f19f7">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDeconvolutionLayerQuantizedFixture3x3&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 128) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 128), QuantizationInfo(4.f/255.f, 128) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a7fcd734574c3a3680d6b7479b40f19f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e02ad8758469a709484f1c9184f2c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad5e02ad8758469a709484f1c9184f2c9">combine</a> (combine(combine(combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 128), QuantizationInfo(2.f/255.f, 128) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 64), QuantizationInfo(4.f/255.f, 128) })), add_bias_dataset))</td></tr>
<tr class="separator:ad5e02ad8758469a709484f1c9184f2c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b5566a425c6a4c4e1a98a23b3fc583"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab9b5566a425c6a4c4e1a98a23b3fc583">combine</a> (combine(combine(combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 0), QuantizationInfo(2.f/255.f, 0) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 0), QuantizationInfo(4.f/255.f, 0) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:ab9b5566a425c6a4c4e1a98a23b3fc583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b1af7cf23b81e3e9e5a1f642ddcac67"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1af7cf23b81e3e9e5a1f642ddcac67">combine</a> (combine(combine(combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 5) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 5), QuantizationInfo(4.f/255.f, 10) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a7b1af7cf23b81e3e9e5a1f642ddcac67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3a912d17859c7d8114281885f8f56d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af3a912d17859c7d8114281885f8f56d1">combine</a> (combine(combine(combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 5) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 5), QuantizationInfo(4.f/255.f, 10) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:af3a912d17859c7d8114281885f8f56d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8887b97b94551d0bd7c4a53545b88a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae8887b97b94551d0bd7c4a53545b88a0">combine</a> (combine(combine(combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 4) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 10), QuantizationInfo(4.f/255.f, 5) })), add_bias_dataset))</td></tr>
<tr class="separator:ae8887b97b94551d0bd7c4a53545b88a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856bc04207ec435e667b095f4080459f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a856bc04207ec435e667b095f4080459f">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDeconvolutionLayerQuantizedFixture3x3&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, -10), QuantizationInfo(2.f/255.f, 127) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 64), QuantizationInfo(4.f/255.f, -128) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:a856bc04207ec435e667b095f4080459f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0c3500dc816bcc3b820c0423780f43e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae0c3500dc816bcc3b820c0423780f43e">combine</a> (combine(combine(combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 127), QuantizationInfo(2.f/255.f, -128) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, -10), QuantizationInfo(4.f/255.f, 64) })), add_bias_dataset))</td></tr>
<tr class="separator:ae0c3500dc816bcc3b820c0423780f43e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7fc7d177ab0ec6bde8bc57f9b279087"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7fc7d177ab0ec6bde8bc57f9b279087">combine</a> (combine(combine(combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 0), QuantizationInfo(2.f/255.f, 0) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 0), QuantizationInfo(4.f/255.f, 0) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:af7fc7d177ab0ec6bde8bc57f9b279087"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac14e4c900f182254e5e473df1b821d85"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac14e4c900f182254e5e473df1b821d85">combine</a> (combine(combine(combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f/255.f, 10), QuantizationInfo(2.f/255.f, 5) })), framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f/255.f, 5), QuantizationInfo(4.f/255.f, 10) })), framework::dataset::make(&quot;AddBias&quot;, { true })))</td></tr>
<tr class="separator:ac14e4c900f182254e5e473df1b821d85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a355ab65cc13a61633c816b970af9a39d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a355ab65cc13a61633c816b970af9a39d">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDeconvolutionLayerQuantizedPerChannelFixture4x4&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a355ab65cc13a61633c816b970af9a39d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a18597c0a44e9123d091d78d987bf9f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8a18597c0a44e9123d091d78d987bf9f">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLDeconvolutionLayerQuantizedPerChannelFixture4x4&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(data4x4, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a8a18597c0a44e9123d091d78d987bf9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6264b64c20c0cb195ba9697aa69a87c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae6264b64c20c0cb195ba9697aa69a87c">combine</a> (combine(combine(combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:ae6264b64c20c0cb195ba9697aa69a87c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c27bf51bdefcc5037ef4709d2258b60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c27bf51bdefcc5037ef4709d2258b60">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLDeconvolutionLayerQuantizedPerChannelFixture3x3&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(data3x3, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a3c27bf51bdefcc5037ef4709d2258b60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36ebcc43da30a55fd98525308ee9fcd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af36ebcc43da30a55fd98525308ee9fcd">FIXTURE_DATA_TEST_CASE</a> (RunSmallSignedPrecommit, CLDeconvolutionLayerQuantizedPerChannelFixture2x2&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), add_bias_dataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:af36ebcc43da30a55fd98525308ee9fcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a614bef480c0a242011700f97309f1bde"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a614bef480c0a242011700f97309f1bde">combine</a> (combine(combine(combine(combine(combine(data3x3_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), add_bias_dataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a614bef480c0a242011700f97309f1bde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112b8bb7c2b9f5a24102565bbb54eb08"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a112b8bb7c2b9f5a24102565bbb54eb08">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDeconvolutionLayerQuantizedPerChannelFixture2x2&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), add_bias_dataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a112b8bb7c2b9f5a24102565bbb54eb08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add415d5fa7d5f68ec4e192514ba39073"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#add415d5fa7d5f68ec4e192514ba39073">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLDeconvolutionLayerQuantizedPerChannelFixture2x2&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(data2x2_precommit, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), add_bias_dataset), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:add415d5fa7d5f68ec4e192514ba39073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09fcab41ace914ea3f37ebe47687af22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a09fcab41ace914ea3f37ebe47687af22">combine</a> (combine(combine(combine(combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { false })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a09fcab41ace914ea3f37ebe47687af22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b2609011285455e9ee19f738fd43fdc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b2609011285455e9ee19f738fd43fdc">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLDeconvolutionLayerQuantizedPerChannelFixture1x1&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(data1x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a0b2609011285455e9ee19f738fd43fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133091a84a9167f72c7d4a83424fcbcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a133091a84a9167f72c7d4a83424fcbcf">combine</a> (combine(combine(combine(combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), data_layouts_dataset), input_qinfo_dataset), output_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { true })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a133091a84a9167f72c7d4a83424fcbcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa7115e14fc5789a684449d9124c411"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0fa7115e14fc5789a684449d9124c411">FIXTURE_DATA_TEST_CASE</a> (RunSmallSigned, CLDeconvolutionLayerQuantizedPerChannelFixture5x1&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(data5x1, framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), data_layouts_dataset), input_signed_qinfo_dataset), output_signed_qinfo_dataset), framework::dataset::make(&quot;AddBias&quot;, { false })), framework::dataset::make(&quot;WeightsDataType&quot;, { DataType::QSYMM8_PER_CHANNEL })))</td></tr>
<tr class="separator:a0fa7115e14fc5789a684449d9124c411"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ac674933f37800e8d7724ac638be64085"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac674933f37800e8d7724ac638be64085">CLDeconvolutionLayerFixture3x3&lt; float &gt;</a></td></tr>
<tr class="separator:ac674933f37800e8d7724ac638be64085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74fef0372b85ac0556d59f576c9c2578"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a74fef0372b85ac0556d59f576c9c2578">CLDeconvolutionLayerFixture2x2&lt; float &gt;</a></td></tr>
<tr class="separator:a74fef0372b85ac0556d59f576c9c2578"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a2f7e393cc29dbba49d0633ff127c82"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2a2f7e393cc29dbba49d0633ff127c82">CLDeconvolutionLayerFixture1x1&lt; float &gt;</a></td></tr>
<tr class="separator:a2a2f7e393cc29dbba49d0633ff127c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf4656a57d34b23d8a4a6214458faf60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acf4656a57d34b23d8a4a6214458faf60">CLDeconvolutionLayerAsymmFixture9x9&lt; float &gt;</a></td></tr>
<tr class="separator:acf4656a57d34b23d8a4a6214458faf60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a096cbdb695d7cd48c4064864b9373cb9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a096cbdb695d7cd48c4064864b9373cb9">CLDeconvolutionLayerFixture5x1&lt; float &gt;</a></td></tr>
<tr class="separator:a096cbdb695d7cd48c4064864b9373cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97e09a42d69a1de9384630f99393354"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa97e09a42d69a1de9384630f99393354">CLDeconvolutionLayerFixture4x4&lt; half &gt;</a></td></tr>
<tr class="separator:aa97e09a42d69a1de9384630f99393354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5abebe828d0aff06fa0920e29d65262"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac5abebe828d0aff06fa0920e29d65262">CLDeconvolutionLayerFixture3x3&lt; half &gt;</a></td></tr>
<tr class="separator:ac5abebe828d0aff06fa0920e29d65262"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a551172970e5469af9cacdacd60783137"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a551172970e5469af9cacdacd60783137">CLDeconvolutionLayerFixture2x2&lt; half &gt;</a></td></tr>
<tr class="separator:a551172970e5469af9cacdacd60783137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01aabd69a9c0900af5bdd9d020c74124"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a01aabd69a9c0900af5bdd9d020c74124">CLDeconvolutionLayerFixture1x1&lt; half &gt;</a></td></tr>
<tr class="separator:a01aabd69a9c0900af5bdd9d020c74124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4d824cdde9320d23369aaa985c25bb2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad4d824cdde9320d23369aaa985c25bb2">CLDeconvolutionLayerFixture5x1&lt; half &gt;</a></td></tr>
<tr class="separator:ad4d824cdde9320d23369aaa985c25bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f9efc52919f05d30263bf8a0f72642"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a08f9efc52919f05d30263bf8a0f72642">CLDeconvolutionLayerQuantizedFixture3x3&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a08f9efc52919f05d30263bf8a0f72642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e781f7e45f0d687a575d103ed69739"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af8e781f7e45f0d687a575d103ed69739">CLDeconvolutionLayerQuantizedFixture2x2&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:af8e781f7e45f0d687a575d103ed69739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24a1048f0303246c74278e6387dfeadc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a24a1048f0303246c74278e6387dfeadc">CLDeconvolutionLayerQuantizedFixture1x1&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a24a1048f0303246c74278e6387dfeadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa66a700e3a4a9b1890d27da6728e33dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa66a700e3a4a9b1890d27da6728e33dd">CLDeconvolutionLayerQuantizedFixture5x1&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:aa66a700e3a4a9b1890d27da6728e33dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac91d195928cfdeb02fdaa02da012d842"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac91d195928cfdeb02fdaa02da012d842">CLDeconvolutionLayerQuantizedFixture4x4&lt; int8_t &gt;</a></td></tr>
<tr class="separator:ac91d195928cfdeb02fdaa02da012d842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33f2ead0a62a5ec464eb419d9bdf6c42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a33f2ead0a62a5ec464eb419d9bdf6c42">CLDeconvolutionLayerQuantizedFixture3x3&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a33f2ead0a62a5ec464eb419d9bdf6c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adba3bfd163be497d28dbd082945c25fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adba3bfd163be497d28dbd082945c25fe">CLDeconvolutionLayerQuantizedFixture2x2&lt; int8_t &gt;</a></td></tr>
<tr class="separator:adba3bfd163be497d28dbd082945c25fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb31a9fc07210c312db1b7dc48d78892"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afb31a9fc07210c312db1b7dc48d78892">CLDeconvolutionLayerQuantizedFixture1x1&lt; int8_t &gt;</a></td></tr>
<tr class="separator:afb31a9fc07210c312db1b7dc48d78892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecb94d95a540d13b91c6275cf78fb888"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aecb94d95a540d13b91c6275cf78fb888">CLDeconvolutionLayerQuantizedFixture5x1&lt; int8_t &gt;</a></td></tr>
<tr class="separator:aecb94d95a540d13b91c6275cf78fb888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693fe2417bdde7abf8a27cca77bfecc5"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a693fe2417bdde7abf8a27cca77bfecc5">output_qinfo_dataset</a> = framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f / 255.f, 0) })</td></tr>
<tr class="separator:a693fe2417bdde7abf8a27cca77bfecc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1710866ff47f5fbec52502070b62453e"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1710866ff47f5fbec52502070b62453e">input_signed_qinfo_dataset</a> = framework::dataset::make(&quot;InputQuantizationInfo&quot;, { QuantizationInfo(1.f / 255.f, -10) })</td></tr>
<tr class="separator:a1710866ff47f5fbec52502070b62453e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac768c8c2dc0e4e36384934165f63249f"><td class="memItemLeft" align="right" valign="top">const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac768c8c2dc0e4e36384934165f63249f">output_signed_qinfo_dataset</a> = framework::dataset::make(&quot;OutputQuantizationInfo&quot;, { QuantizationInfo(3.f / 255.f, 10) })</td></tr>
<tr class="separator:ac768c8c2dc0e4e36384934165f63249f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5991c9916c689540680b91fdbe8800"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afa5991c9916c689540680b91fdbe8800">CLDeconvolutionLayerQuantizedPerChannelFixture3x3&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:afa5991c9916c689540680b91fdbe8800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58789f7840ad26a8aa9b3c7af1155b8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a58789f7840ad26a8aa9b3c7af1155b8d">CLDeconvolutionLayerQuantizedPerChannelFixture2x2&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a58789f7840ad26a8aa9b3c7af1155b8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14caa20848981cc04d8a279307bc86ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a14caa20848981cc04d8a279307bc86ba">CLDeconvolutionLayerQuantizedPerChannelFixture1x1&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a14caa20848981cc04d8a279307bc86ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d0e736e89e2f77e62b73609247e2427"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3d0e736e89e2f77e62b73609247e2427">CLDeconvolutionLayerQuantizedPerChannelFixture5x1&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a3d0e736e89e2f77e62b73609247e2427"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_deconvolution_layer_8cpp.xhtml">DeconvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:08 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
