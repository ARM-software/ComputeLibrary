<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/transforms/sme_transpose_interleave_2VL.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('sme__transpose__interleave__2_v_l_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">sme_transpose_interleave_2VL.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sme__transpose__interleave__2_v_l_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_ENABLE_SME)</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span>{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keywordtype">void</span> sme_transpose_interleave_2VL(uint16_t *out, <span class="keyword">const</span> uint16_t *in, <span class="keywordtype">size_t</span> width, <span class="keywordtype">size_t</span> in_stride, <span class="keywordtype">size_t</span> height)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">size_t</span> out_stride = 2 * height * sme::get_vector_length&lt;uint8_t&gt;();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    __asm__ __volatile__(</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="stringliteral">&quot;.inst 0xd503477f  // SMSTART ZA\n&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="stringliteral">&quot;cmp %x[height], #0x4\n&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      <span class="stringliteral">&quot;ptrue p2.b\n&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <span class="stringliteral">&quot;blt 6f\n&quot;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="stringliteral">&quot;1:&quot;</span>  <span class="comment">// Main row loop: Head</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="stringliteral">&quot;mov x26, %x[in]\n&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="stringliteral">&quot;add x25, x26, %x[in_stride]\n&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="stringliteral">&quot;add x24, x25, %x[in_stride]\n&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="stringliteral">&quot;mov x23, %x[width]\n&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="stringliteral">&quot;cnth x20, ALL, MUL #4\n&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="stringliteral">&quot;add x21, x24, %x[in_stride]\n&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      <span class="stringliteral">&quot;cmp x23, x20\n&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="stringliteral">&quot;add %x[in], x21, %x[in_stride]\n&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="stringliteral">&quot;mov x22, %x[out]\n&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <span class="stringliteral">&quot;sub %x[height], %x[height], #0x4\n&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="stringliteral">&quot;blt 3f\n&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="stringliteral">&quot;2:&quot;</span>  <span class="comment">// Main row loop: Unroll column loop</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="stringliteral">&quot;sub x23, x23, x20\n&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="stringliteral">&quot;ld1h { z31.h }, p2/Z, [x26]\n&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="stringliteral">&quot;cmp x23, x20\n&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="stringliteral">&quot;ld1h { z30.h }, p2/Z, [x26, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="stringliteral">&quot;ld1h { z29.h }, p2/Z, [x26, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="stringliteral">&quot;ld1h { z28.h }, p2/Z, [x26, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="stringliteral">&quot;addvl x26, x26, #4\n&quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="stringliteral">&quot;ld1h { z27.h }, p2/Z, [x25]\n&quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="stringliteral">&quot;ld1h { z26.h }, p2/Z, [x25, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="stringliteral">&quot;ld1h { z25.h }, p2/Z, [x25, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      <span class="stringliteral">&quot;ld1h { z24.h }, p2/Z, [x25, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="stringliteral">&quot;addvl x25, x25, #4\n&quot;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="stringliteral">&quot;ld1h { z23.h }, p2/Z, [x24]\n&quot;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="stringliteral">&quot;ld1h { z22.h }, p2/Z, [x24, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="stringliteral">&quot;ld1h { z21.h }, p2/Z, [x24, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="stringliteral">&quot;ld1h { z20.h }, p2/Z, [x24, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="stringliteral">&quot;addvl x24, x24, #4\n&quot;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      <span class="stringliteral">&quot;ld1h { z19.h }, p2/Z, [x21]\n&quot;</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="stringliteral">&quot;ld1h { z18.h }, p2/Z, [x21, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="stringliteral">&quot;ld1h { z17.h }, p2/Z, [x21, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="stringliteral">&quot;ld1h { z16.h }, p2/Z, [x21, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      <span class="stringliteral">&quot;st1h { z31.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="stringliteral">&quot;addvl x21, x21, #4\n&quot;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="stringliteral">&quot;st1h { z30.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="stringliteral">&quot;st1h { z27.h }, p2, [x22, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="stringliteral">&quot;st1h { z26.h }, p2, [x22, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="stringliteral">&quot;st1h { z23.h }, p2, [x22, #4, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="stringliteral">&quot;st1h { z22.h }, p2, [x22, #5, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="stringliteral">&quot;st1h { z19.h }, p2, [x22, #6, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="stringliteral">&quot;st1h { z18.h }, p2, [x22, #7, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="stringliteral">&quot;st1h { z29.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <span class="stringliteral">&quot;st1h { z28.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="stringliteral">&quot;st1h { z25.h }, p2, [x22, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="stringliteral">&quot;st1h { z24.h }, p2, [x22, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="stringliteral">&quot;st1h { z21.h }, p2, [x22, #4, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <span class="stringliteral">&quot;st1h { z20.h }, p2, [x22, #5, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="stringliteral">&quot;st1h { z17.h }, p2, [x22, #6, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="stringliteral">&quot;st1h { z16.h }, p2, [x22, #7, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      <span class="stringliteral">&quot;bge 2b\n&quot;</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="stringliteral">&quot;3:&quot;</span>  <span class="comment">// Main row loop: Unroll column loop skip</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="stringliteral">&quot;cbz x23, 5f\n&quot;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="stringliteral">&quot;4:&quot;</span>  <span class="comment">// Main row loop: Column loop</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="stringliteral">&quot;mov x20, x23\n&quot;</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="stringliteral">&quot;whilelt p1.h, XZR, x20\n&quot;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="stringliteral">&quot;ld1h { z23.h }, p1/Z, [x26]\n&quot;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="stringliteral">&quot;dech x20\n&quot;</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="stringliteral">&quot;dech x23, ALL, MUL #2\n&quot;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="stringliteral">&quot;ld1h { z22.h }, p1/Z, [x25]\n&quot;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="stringliteral">&quot;whilelt p0.h, XZR, x20\n&quot;</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="stringliteral">&quot;cmp x23, #0x0\n&quot;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      <span class="stringliteral">&quot;ld1h { z21.h }, p0/Z, [x26, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="stringliteral">&quot;addvl x26, x26, #2\n&quot;</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="stringliteral">&quot;ld1h { z20.h }, p0/Z, [x25, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="stringliteral">&quot;addvl x25, x25, #2\n&quot;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <span class="stringliteral">&quot;ld1h { z19.h }, p1/Z, [x24]\n&quot;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="stringliteral">&quot;ld1h { z18.h }, p0/Z, [x24, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="stringliteral">&quot;addvl x24, x24, #2\n&quot;</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="stringliteral">&quot;ld1h { z17.h }, p1/Z, [x21]\n&quot;</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="stringliteral">&quot;ld1h { z16.h }, p0/Z, [x21, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      <span class="stringliteral">&quot;addvl x21, x21, #2\n&quot;</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="stringliteral">&quot;st1h { z23.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="stringliteral">&quot;st1h { z21.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <span class="stringliteral">&quot;st1h { z22.h }, p2, [x22, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <span class="stringliteral">&quot;st1h { z20.h }, p2, [x22, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="stringliteral">&quot;st1h { z19.h }, p2, [x22, #4, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="stringliteral">&quot;st1h { z18.h }, p2, [x22, #5, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="stringliteral">&quot;st1h { z17.h }, p2, [x22, #6, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="stringliteral">&quot;st1h { z16.h }, p2, [x22, #7, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="stringliteral">&quot;bgt 4b\n&quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="stringliteral">&quot;5:&quot;</span>  <span class="comment">// Main row loop: Column loop skip</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="stringliteral">&quot;cmp %x[height], #0x4\n&quot;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      <span class="stringliteral">&quot;addvl %x[out], %x[out], #8\n&quot;</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="stringliteral">&quot;bge 1b\n&quot;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="stringliteral">&quot;cbz %x[height], 12f\n&quot;</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      <span class="stringliteral">&quot;6:&quot;</span>  <span class="comment">// Main loop skip</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="stringliteral">&quot;7:&quot;</span>  <span class="comment">// Tail row loop: Head</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="stringliteral">&quot;mov x21, %x[width]\n&quot;</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      <span class="stringliteral">&quot;cnth x20, ALL, MUL #4\n&quot;</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="stringliteral">&quot;mov x26, %x[in]\n&quot;</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="stringliteral">&quot;cmp x21, x20\n&quot;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="stringliteral">&quot;add %x[in], x26, %x[in_stride]\n&quot;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      <span class="stringliteral">&quot;mov x22, %x[out]\n&quot;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="stringliteral">&quot;sub %x[height], %x[height], #0x1\n&quot;</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <span class="stringliteral">&quot;blt 9f\n&quot;</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="stringliteral">&quot;8:&quot;</span>  <span class="comment">// Tail row loop: Unroll column loop</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      <span class="stringliteral">&quot;sub x21, x21, x20\n&quot;</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="stringliteral">&quot;ld1h { z19.h }, p2/Z, [x26]\n&quot;</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="stringliteral">&quot;cmp x21, x20\n&quot;</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="stringliteral">&quot;ld1h { z18.h }, p2/Z, [x26, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      <span class="stringliteral">&quot;ld1h { z17.h }, p2/Z, [x26, #2, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      <span class="stringliteral">&quot;ld1h { z16.h }, p2/Z, [x26, #3, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="stringliteral">&quot;st1h { z19.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="stringliteral">&quot;addvl x26, x26, #4\n&quot;</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="stringliteral">&quot;st1h { z18.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      <span class="stringliteral">&quot;st1h { z17.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="stringliteral">&quot;st1h { z16.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="stringliteral">&quot;bge 8b\n&quot;</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="stringliteral">&quot;9:&quot;</span>  <span class="comment">// Tail row loop: Unroll column loop skip</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="stringliteral">&quot;cbz x21, 11f\n&quot;</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      <span class="stringliteral">&quot;10:&quot;</span>  <span class="comment">// Tail row loop: Column loop</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="stringliteral">&quot;mov x20, x21\n&quot;</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="stringliteral">&quot;whilelt p0.h, XZR, x20\n&quot;</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="stringliteral">&quot;ld1h { z17.h }, p0/Z, [x26]\n&quot;</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      <span class="stringliteral">&quot;dech x20\n&quot;</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="stringliteral">&quot;dech x21, ALL, MUL #2\n&quot;</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="stringliteral">&quot;whilelt p0.h, XZR, x20\n&quot;</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="stringliteral">&quot;cmp x21, #0x0\n&quot;</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="stringliteral">&quot;ld1h { z16.h }, p0/Z, [x26, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      <span class="stringliteral">&quot;st1h { z17.h }, p2, [x22]\n&quot;</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      <span class="stringliteral">&quot;addvl x26, x26, #2\n&quot;</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="stringliteral">&quot;st1h { z16.h }, p2, [x22, #1, MUL VL]\n&quot;</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="stringliteral">&quot;add x22, x22, %x[out_stride]\n&quot;</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      <span class="stringliteral">&quot;bgt 10b\n&quot;</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      <span class="stringliteral">&quot;11:&quot;</span>  <span class="comment">// Tail row loop: Column loop skip</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="stringliteral">&quot;cmp %x[height], #0x1\n&quot;</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="stringliteral">&quot;addvl %x[out], %x[out], #2\n&quot;</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      <span class="stringliteral">&quot;bge 7b\n&quot;</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      <span class="stringliteral">&quot;12:&quot;</span>  <span class="comment">// Done</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="stringliteral">&quot;.inst 0xd503467f  // SMSTOP\n&quot;</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      : [height] <span class="stringliteral">&quot;+&amp;r&quot;</span> (height), [in] <span class="stringliteral">&quot;+&amp;r&quot;</span> (in), [out] <span class="stringliteral">&quot;+&amp;r&quot;</span> (out)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      : [in_stride] <span class="stringliteral">&quot;r&quot;</span> (in_stride), [out_stride] <span class="stringliteral">&quot;r&quot;</span> (out_stride), [width] <span class="stringliteral">&quot;r&quot;</span> (width)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      : <span class="stringliteral">&quot;cc&quot;</span>, <span class="stringliteral">&quot;memory&quot;</span>, <span class="stringliteral">&quot;p0&quot;</span>, <span class="stringliteral">&quot;p1&quot;</span>, <span class="stringliteral">&quot;p2&quot;</span>, <span class="stringliteral">&quot;p3&quot;</span>, <span class="stringliteral">&quot;p4&quot;</span>, <span class="stringliteral">&quot;p5&quot;</span>, <span class="stringliteral">&quot;p6&quot;</span>, <span class="stringliteral">&quot;p7&quot;</span>, <span class="stringliteral">&quot;p8&quot;</span>, <span class="stringliteral">&quot;p9&quot;</span>, <span class="stringliteral">&quot;p10&quot;</span>, <span class="stringliteral">&quot;p11&quot;</span>, <span class="stringliteral">&quot;p12&quot;</span>, <span class="stringliteral">&quot;p13&quot;</span>, <span class="stringliteral">&quot;p14&quot;</span>, <span class="stringliteral">&quot;p15&quot;</span>, <span class="stringliteral">&quot;x20&quot;</span>, <span class="stringliteral">&quot;x21&quot;</span>, <span class="stringliteral">&quot;x22&quot;</span>, <span class="stringliteral">&quot;x23&quot;</span>, <span class="stringliteral">&quot;x24&quot;</span>, <span class="stringliteral">&quot;x25&quot;</span>, <span class="stringliteral">&quot;x26&quot;</span>, <span class="stringliteral">&quot;z0&quot;</span>, <span class="stringliteral">&quot;z1&quot;</span>, <span class="stringliteral">&quot;z2&quot;</span>, <span class="stringliteral">&quot;z3&quot;</span>, <span class="stringliteral">&quot;z4&quot;</span>, <span class="stringliteral">&quot;z5&quot;</span>, <span class="stringliteral">&quot;z6&quot;</span>, <span class="stringliteral">&quot;z7&quot;</span>, <span class="stringliteral">&quot;z8&quot;</span>, <span class="stringliteral">&quot;z9&quot;</span>, <span class="stringliteral">&quot;z10&quot;</span>, <span class="stringliteral">&quot;z11&quot;</span>, <span class="stringliteral">&quot;z12&quot;</span>, <span class="stringliteral">&quot;z13&quot;</span>, <span class="stringliteral">&quot;z14&quot;</span>, <span class="stringliteral">&quot;z15&quot;</span>, <span class="stringliteral">&quot;z16&quot;</span>, <span class="stringliteral">&quot;z17&quot;</span>, <span class="stringliteral">&quot;z18&quot;</span>, <span class="stringliteral">&quot;z19&quot;</span>, <span class="stringliteral">&quot;z20&quot;</span>, <span class="stringliteral">&quot;z21&quot;</span>, <span class="stringliteral">&quot;z22&quot;</span>, <span class="stringliteral">&quot;z23&quot;</span>, <span class="stringliteral">&quot;z24&quot;</span>, <span class="stringliteral">&quot;z25&quot;</span>, <span class="stringliteral">&quot;z26&quot;</span>, <span class="stringliteral">&quot;z27&quot;</span>, <span class="stringliteral">&quot;z28&quot;</span>, <span class="stringliteral">&quot;z29&quot;</span>, <span class="stringliteral">&quot;z30&quot;</span>, <span class="stringliteral">&quot;z31&quot;</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    );</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;} <span class="comment">// anonymous namespace</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keywordtype">void</span> Transform&lt;2, 1, true, VLType::SME&gt;(</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">float</span> *out, <span class="keyword">const</span> <span class="keywordtype">float</span> *in, <span class="keywordtype">int</span> stride, <span class="keywordtype">int</span> x0, <span class="keywordtype">int</span> xmax, <span class="keywordtype">int</span> k0, <span class="keywordtype">int</span> kmax)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;{</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    sme_transpose_interleave_2VL(</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span>uint16_t *<span class="keyword">&gt;</span>(out),</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(in + k0 * stride + x0),</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        (xmax-x0) * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>) / 2,</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        stride * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>),</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        (kmax-k0)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    );</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">void</span> Transform&lt;2, 1, true, VLType::SME&gt;(</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> *out, <span class="keyword">const</span> <a class="code" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a> *in, <span class="keywordtype">int</span> stride, <span class="keywordtype">int</span> x0, <span class="keywordtype">int</span> xmax, <span class="keywordtype">int</span> k0, <span class="keywordtype">int</span> kmax)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;{</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    sme_transpose_interleave_2VL(</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span>uint16_t *<span class="keyword">&gt;</span>(out),</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(in + k0 * stride + x0),</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        (xmax-x0) * <span class="keyword">sizeof</span>(<a class="code" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>) / 2,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        stride * <span class="keyword">sizeof</span>(<a class="code" href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">bfloat16</a>),</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        (kmax-k0)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    );</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">template</span>&lt;&gt;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keywordtype">void</span> Transform&lt;2, 1, true, VLType::SME&gt;(</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    __fp16 *out, <span class="keyword">const</span> __fp16 *in, <span class="keywordtype">int</span> stride, <span class="keywordtype">int</span> x0, <span class="keywordtype">int</span> xmax, <span class="keywordtype">int</span> k0, <span class="keywordtype">int</span> kmax)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    sme_transpose_interleave_2VL(</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span>uint16_t *<span class="keyword">&gt;</span>(out),</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(in + k0 * stride + x0),</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        (xmax-x0) * <span class="keyword">sizeof</span>(__fp16) / 2,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        stride * <span class="keyword">sizeof</span>(__fp16),</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        (kmax-k0)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    );</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#endif  // defined(ARM_COMPUTE_ENABLE_SME)</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__gemm_xhtml_ac882ca3f500a8e83c76a8acc59831255"><div class="ttname"><a href="namespacearm__gemm.xhtml#ac882ca3f500a8e83c76a8acc59831255">arm_gemm::bfloat16</a></div><div class="ttdeci">arm_compute::bfloat16 bfloat16</div><div class="ttdef"><b>Definition:</b> <a href="bfloat_8hpp_source.xhtml#l00030">bfloat.hpp:30</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="dir_f11c7bbf76b3b5417003d346f29c89d2.xhtml">transforms</a></li><li class="navelem"><a class="el" href="sme__transpose__interleave__2_v_l_8hpp.xhtml">sme_transpose_interleave_2VL.hpp</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:00 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
