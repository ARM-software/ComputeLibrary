<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/mlgo/MLGOParser.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_m_l_g_o_parser_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MLGOParser.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_m_l_g_o_parser_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_RUNTIME_CL_MLGO_MLGO_PARSER_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_RUNTIME_CL_MLGO_MLGO_PARSER_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_m_l_g_o_heuristics_8h.xhtml">src/runtime/CL/mlgo/MLGOHeuristics.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;deque&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;istream&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/** A DotMLGO file parser (LL(k) parser)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * The grammar of DotMLGO is defined as the following ENBF:</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * delim = &quot;,&quot; | &quot;\n&quot;; // Note that delimiters are omitted from the definition below</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> * mlgo = header, heuristics-table, {heuristic-tree};</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * header = &quot;&lt;header&gt;&quot;, gemm-version, ip-type, &quot;&lt;/header&gt;&quot;;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> * gemm-version = &quot;gemm-version&quot;,  &quot;[&quot;, int,  int,  int, &quot;]&quot;;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * ip-type = &quot;ip-type&quot;,  (&quot;gpu&quot; | &quot;cpu&quot;);</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * heiristics-table = &quot;&lt;heuristics-table&gt;&quot;, {heuristics-table-entry}, &quot;&lt;/heuristics-table&gt;&quot;;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> * heuristics-table-entry = entry-id,  ip-name,  num-cores, data-type,  gpu-priority,  gpu-behavior,  heuristic-type,  free-vars;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * entry-id = int;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * ip-name = char-sequence;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> * num-cores = int;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> * data-type = &quot;f32&quot; | &quot;f16&quot; | &quot;qasymm8&quot;;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> * gpu-priority = &quot;best-performance&quot; | &quot;best-memory-usage&quot;;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * gpu-behavior = &quot;static&quot; | &quot;dynamic&quot;;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> * heuristic-type = &quot;gemm-type&quot; | &quot;gemm-config-native&quot; | &quot;gemm-config-reshaped-only-rhs&quot; | &quot;gemm-config-reshaped&quot;;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> * free-vars = &quot;[&quot;, {char-sequence}, &quot;]&quot;;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * heuristic-tree = &quot;&lt;heuristic&quot;,  entry-id, &quot;&gt;&quot;, {tree-node}, &quot;&lt;/heuristic&gt;&quot;;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * tree-node = branch-node | leaf-node;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * branch-node = &quot;b&quot;,  entry-id,  lhs-type,  lhs-value,  conditional-op,  rhs-type,  rhs-value,  true-node,  false-node;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> * lhs-type = comparator-type;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> * lhs-value = comparator-value;</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> * rhs-type = comparator-type;</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> * rhs-value = comparator-value;</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * comparator-type = &quot;var&quot; | &quot;num&quot; | &quot;enum&quot;;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * comparator-value = char-sequence | float;</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * conditional-op = &quot;&lt;&quot; | &quot;&lt;=&quot; | &quot;==&quot; | &quot;&gt;=&quot; | &quot;&gt;&quot;;</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * true-node = entry-id;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * false-node = entry-id;</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> * leaf-node = &quot;l&quot;,  entry-id,  heuristic-type,  leaf-value;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> * leaf-value = gemm-type | gemm-config-native | gemm-config-reshaped-only-rhs | gemm-config-reshaped</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * gemm-type = &quot;native&quot; | &quot;reshaped-only-rhs&quot; | &quot;reshaped&quot;;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> * gemm-config-native = &quot;[&quot;, int, int, int, &quot;]&quot;;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * gemm-config-reshaped-only-rhs = &quot;[&quot;, int, int, int, int, bool, bool, bool, &quot;]&quot;;</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * gemm-config-reshaped = &quot;[&quot;, int, int, int, int, int, bool, bool, bool, bool, &quot;]&quot;;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">mlgo</a></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">/** Type of Token */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921">   84</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921">TokenType</a></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f">L_List</a> = <span class="charliteral">&#39;[&#39;</span>, <span class="comment">/**&lt; List open */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5">R_List</a> = <span class="charliteral">&#39;]&#39;</span>, <span class="comment">/**&lt; List close */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">Int</a>,          <span class="comment">/**&lt; Integral */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b">Float</a>,        <span class="comment">/**&lt; Floating */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">Text</a>,         <span class="comment">/**&lt; Text/String */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">End</a>,          <span class="comment">/**&lt; End of stream */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;};</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">   94</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab7f81fad5dfafc5fd2407e1146f3785e">   96</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab7f81fad5dfafc5fd2407e1146f3785e">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> &amp;other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">ln</a> == other.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">ln</a> &amp;&amp; <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a> == other.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">  101</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">ln</a>{0};</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">  102</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">col</a>{0};</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;};</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">/** Token */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">  106</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a547a68949df944002f4a6dc160720ad9">  108</a></span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a547a68949df944002f4a6dc160720ad9">Token</a>(<a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921">TokenType</a> <a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>, std::string v, <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a>) : <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">type</a>{<a class="code" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">t</a>}, <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a>{v}, <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a>{<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a>}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a93a20dd88624e64d88d4f0ed57dbcaab">  112</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a93a20dd88624e64d88d4f0ed57dbcaab">operator==</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> &amp;other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">type</a> == other.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">type</a> &amp;&amp; <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a> == other.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a> &amp;&amp; <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a> == other.<a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">  117</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921">TokenType</a>    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">type</a>;  <span class="comment">/**&lt; Token type */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">  118</a></span>&#160;    std::string  <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">value</a>; <span class="comment">/**&lt; Token value */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">  119</a></span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">pos</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">/** A stream of token */</span></div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">  123</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">TokenStream</a></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// NOTE: _tokens is never empty. The end of token stream is signalled by the End Token</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a92c0183aad2b8fc67816d869350d9a50">  127</a></span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a92c0183aad2b8fc67816d869350d9a50">max_look_ahead</a> = 10;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">    /** Constructor</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * @param[in] s      Input stream</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @param[in] delims Delimiter characters packed in a string. Each char from the string can be used as a delim on its own</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#ad152352292c241d237691bcb6ae3d012">TokenStream</a>(std::istream &amp;s, <span class="keyword">const</span> std::string &amp;delims = <span class="stringliteral">&quot;,\n&quot;</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /** Check if there&#39;re more (non-End) Tokens</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * @return true  If there are more tokens</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     * @return false If reached end of stream (only End token)</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">explicit</span> <span class="keyword">operator</span> bool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">    /** Get and pop off the current token</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @return Token</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">take</a>();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">    /** Peek the next ith token</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @param[in] i The next ith token. i &lt; @ref max_look_ahead.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     * @return Token</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">peek</a>(<span class="keywordtype">size_t</span> i = 0);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">    /** Get the position of the current token</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @return CharPosition</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a5890a90a0b5e8d3d6561a03860c6ce1a">  161</a></span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a> <a class="code" href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a5890a90a0b5e8d3d6561a03860c6ce1a">current_pos</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">return</span> _tokens.front().pos;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">void</span> read();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> recognize_tok(<span class="keywordtype">char</span> ch);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> num_st(std::string value = <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> float_after_dp_st(std::string value = <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">Token</a> text_st(std::string value = <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">bool</span> reached_end() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">bool</span> is_delim(<span class="keywordtype">char</span> ch) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    std::string       _delims;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    std::istream     &amp;_istream;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    std::deque&lt;Token&gt; _tokens;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">CharPosition</a>      _lookahead_pos;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;};</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">/** Parse and construct a @ref MLGOHeuristics from input stream</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"> * @param[in] in Input stream</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> * @return MLGOHeuristics</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;std::pair&lt;bool, MLGOHeuristics&gt; <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ae1e86a77bd18304e29a85dd0cab747eb">parse_mlgo</a>(std::istream &amp;in);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;} <span class="comment">// namespace parser</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;} <span class="comment">// namespace mlgo</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif //SRC_RUNTIME_CL_MLGO_MLGO_PARSER_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml">arm_compute::mlgo::parser::TokenStream</a></div><div class="ttdoc">A stream of token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00123">MLGOParser.h:123</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml_ab1b960957902aac101b97fac72af957d"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab1b960957902aac101b97fac72af957d">arm_compute::mlgo::parser::CharPosition::ln</a></div><div class="ttdeci">size_t ln</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00101">MLGOParser.h:101</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921ae548515899d6319e76dfd23ce87623e5">arm_compute::mlgo::parser::TokenType::R_List</a></div><div class="ttdeci">@ R_List</div><div class="ttdoc">List close.</div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml_a5c33da5929c9f2f9ef8d006d2350e6ec"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a5c33da5929c9f2f9ef8d006d2350e6ec">arm_compute::mlgo::parser::Token::value</a></div><div class="ttdeci">std::string value</div><div class="ttdoc">Token value.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00118">MLGOParser.h:118</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml_a93a20dd88624e64d88d4f0ed57dbcaab"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a93a20dd88624e64d88d4f0ed57dbcaab">arm_compute::mlgo::parser::Token::operator==</a></div><div class="ttdeci">bool operator==(const Token &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00112">MLGOParser.h:112</a></div></div>
<div class="ttc" id="a_m_l_g_o_heuristics_8h_xhtml"><div class="ttname"><a href="_m_l_g_o_heuristics_8h.xhtml">MLGOHeuristics.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_acebc183ba3065ac4356071e2eb69a44c"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#acebc183ba3065ac4356071e2eb69a44c">arm_compute::mlgo::parser::TokenStream::peek</a></div><div class="ttdeci">Token peek(size_t i=0)</div><div class="ttdoc">Peek the next ith token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00128">MLGOParser.cpp:128</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml_a547a68949df944002f4a6dc160720ad9"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a547a68949df944002f4a6dc160720ad9">arm_compute::mlgo::parser::Token::Token</a></div><div class="ttdeci">Token(TokenType t, std::string v, CharPosition pos)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00108">MLGOParser.h:108</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">GemmTuner.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00640">GemmTuner.py:640</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml_aac168ff7605ae1370c8882d8fe7c778b"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#aac168ff7605ae1370c8882d8fe7c778b">arm_compute::mlgo::parser::Token::pos</a></div><div class="ttdeci">CharPosition pos</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00119">MLGOParser.h:119</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml">arm_compute::mlgo::parser::Token</a></div><div class="ttdoc">Token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00106">MLGOParser.h:106</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml_ab7f81fad5dfafc5fd2407e1146f3785e"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#ab7f81fad5dfafc5fd2407e1146f3785e">arm_compute::mlgo::parser::CharPosition::operator==</a></div><div class="ttdeci">bool operator==(const CharPosition &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00096">MLGOParser.h:96</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_a92c0183aad2b8fc67816d869350d9a50"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a92c0183aad2b8fc67816d869350d9a50">arm_compute::mlgo::parser::TokenStream::max_look_ahead</a></div><div class="ttdeci">static constexpr size_t max_look_ahead</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00127">MLGOParser.h:127</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a87557f11575c0ad78e4e28abedc13b6e">arm_compute::mlgo::parser::TokenType::End</a></div><div class="ttdeci">@ End</div><div class="ttdoc">End of stream.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ae1e86a77bd18304e29a85dd0cab747eb"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ae1e86a77bd18304e29a85dd0cab747eb">arm_compute::mlgo::parser::parse_mlgo</a></div><div class="ttdeci">std::pair&lt; bool, MLGOHeuristics &gt; parse_mlgo(std::istream &amp;in)</div><div class="ttdoc">Parse and construct a MLGOHeuristics from input stream.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00792">MLGOParser.cpp:792</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml">arm_compute::mlgo::parser::CharPosition</a></div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00094">MLGOParser.h:94</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_a5890a90a0b5e8d3d6561a03860c6ce1a"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a5890a90a0b5e8d3d6561a03860c6ce1a">arm_compute::mlgo::parser::TokenStream::current_pos</a></div><div class="ttdeci">CharPosition current_pos() const</div><div class="ttdoc">Get the position of the current token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00161">MLGOParser.h:161</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_a4e7a89861e3005a1c22d09f73cb628ef"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#a4e7a89861e3005a1c22d09f73cb628ef">arm_compute::mlgo::parser::TokenStream::take</a></div><div class="ttdeci">Token take()</div><div class="ttdoc">Get and pop off the current token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00117">MLGOParser.cpp:117</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9dffbf69ffba8bc38bc4e01abf4b1675">arm_compute::mlgo::parser::TokenType::Text</a></div><div class="ttdeci">@ Text</div><div class="ttdoc">Text/String.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_ad9caec94da8d468edbb0a0680fa20cff"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#ad9caec94da8d468edbb0a0680fa20cff">arm_compute::mlgo::parser::mlgo</a></div><div class="ttdeci">MLGOHeuristics mlgo(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00778">MLGOParser.cpp:778</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921">arm_compute::mlgo::parser::TokenType</a></div><div class="ttdeci">TokenType</div><div class="ttdoc">Type of Token.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00084">MLGOParser.h:84</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_char_position_xhtml_a72f49011b5605e0c59eabd1ab811cdfd"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_char_position.xhtml#a72f49011b5605e0c59eabd1ab811cdfd">arm_compute::mlgo::parser::CharPosition::col</a></div><div class="ttdeci">size_t col</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00102">MLGOParser.h:102</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a1686a6c336b71b36d77354cea19a8b52">arm_compute::mlgo::parser::TokenType::Int</a></div><div class="ttdeci">@ Int</div><div class="ttdoc">Integral.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a9a2d646177735f45484d1fe15570045f">arm_compute::mlgo::parser::TokenType::L_List</a></div><div class="ttdeci">@ L_List</div><div class="ttdoc">List open.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#aa520fbf142ba1e7e659590c07da31921a22ae0e2b89e5e3d477f988cc36d3272b">arm_compute::mlgo::parser::TokenType::Float</a></div><div class="ttdeci">@ Float</div><div class="ttdoc">Floating.</div></div>
<div class="ttc" id="anamespacetf__frozen__model__extractor_xhtml_aaccc9105df5383111407fd5b41255e23"><div class="ttname"><a href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">tf_frozen_model_extractor.t</a></div><div class="ttdeci">t</div><div class="ttdef"><b>Definition:</b> <a href="tf__frozen__model__extractor_8py_source.xhtml#l00049">tf_frozen_model_extractor.py:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1mlgo_1_1parser_1_1_token_xhtml_a6e2d2148929ac137f2e2ef4091a4dc69"><div class="ttname"><a href="structarm__compute_1_1mlgo_1_1parser_1_1_token.xhtml#a6e2d2148929ac137f2e2ef4091a4dc69">arm_compute::mlgo::parser::Token::type</a></div><div class="ttdeci">TokenType type</div><div class="ttdoc">Token type.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8h_source.xhtml#l00117">MLGOParser.h:117</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1mlgo_1_1parser_1_1_token_stream_xhtml_ad152352292c241d237691bcb6ae3d012"><div class="ttname"><a href="classarm__compute_1_1mlgo_1_1parser_1_1_token_stream.xhtml#ad152352292c241d237691bcb6ae3d012">arm_compute::mlgo::parser::TokenStream::TokenStream</a></div><div class="ttdeci">TokenStream(std::istream &amp;s, const std::string &amp;delims=&quot;,\n&quot;)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00105">MLGOParser.cpp:105</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_82e3926d996ac5aae32ffa787ec227cb.xhtml">mlgo</a></li><li class="navelem"><a class="el" href="_m_l_g_o_parser_8h.xhtml">MLGOParser.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:01:04 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
