<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/CPP/CPPTypes.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_p_p_types_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CPPTypes.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_p_p_types_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2022, 2024 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ACL_ARM_COMPUTE_CORE_CPP_CPPTYPES_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ACL_ARM_COMPUTE_CORE_CPP_CPPTYPES_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpuinfo.xhtml">   33</a></span>&#160;<span class="keyword">namespace </span>cpuinfo</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">CpuIsaInfo</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;} <span class="comment">// namespace cpuinfo</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="_c_p_p_types_8h.xhtml#aede6b5b56c3a6e01efde85e1545a4eb8">   38</a></span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CPU_MODEL_LIST \</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">    X(GENERIC)                     \</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">    X(GENERIC_FP16)                \</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">    X(GENERIC_FP16_DOT)            \</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">    X(A53)                         \</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">    X(A55r0)                       \</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">    X(A55r1)                       \</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">    X(A35)                         \</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">    X(A73)                         \</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">    X(A76)                         \</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">    X(A510)                        \</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">    X(X1)                          \</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">    X(V1)                          \</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">    X(A64FX)                       \</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">    X(N1)</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">/** CPU models types</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * @note We only need to detect CPUs we have microarchitecture-specific code for.</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * @note Architecture features are detected via HWCAPs.</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">   59</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="_c_p_p_types_8h.xhtml#ab14a24c6f41917fbb2d2b71fa0c90c5a">   61</a></span>&#160;<span class="preprocessor">#define X(model) model,</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="_c_p_p_types_8h.xhtml#aede6b5b56c3a6e01efde85e1545a4eb8">ARM_COMPUTE_CPU_MODEL_LIST</a></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#undef X</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_p_u_info.xhtml">   66</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> final</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    ~<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /** Access the KernelLibrary singleton.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * This method has been deprecated and will be removed in future releases</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @return The KernelLibrary instance.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">get</a>();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">/* Delete move and copy constructors and assignment operator</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    s */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>(<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> <span class="keyword">const</span> &amp;)            = <span class="keyword">delete</span>; <span class="comment">// Copy construct</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>(<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;)                 = <span class="keyword">delete</span>; <span class="comment">// Move construct</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ab70d897225cc1fed8fd979192e2d0a60">operator=</a>(<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> <span class="keyword">const</span> &amp;) = <span class="keyword">delete</span>; <span class="comment">// Copy assign</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ab70d897225cc1fed8fd979192e2d0a60">operator=</a>(<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;)      = <span class="keyword">delete</span>; <span class="comment">// Move assign</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /** Checks if the cpu model supports fp16.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @return true if the cpu supports fp16, false otherwise</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">has_fp16</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /** Checks if the cpu model supports bf16.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * @return true if the cpu supports bf16, false otherwise</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">has_bf16</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">    /** Checks if the cpu model supports bf16.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     * @return true if the cpu supports bf16, false otherwise</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">has_svebf16</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">    /** Checks if the cpu model supports dot product.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * @return true if the cpu supports dot product, false otherwise</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">has_dotprod</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /** Checks if the cpu model supports floating-point matrix multiplication.</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @return true if the cpu supports floating-point matrix multiplication, false otherwise</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">has_svef32mm</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /** Checks if the cpu model supports integer matrix multiplication.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @return true if the cpu supports integer matrix multiplication, false otherwise</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">has_i8mm</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** Checks if the cpu model supports integer matrix multiplication.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @return true if the cpu supports integer matrix multiplication, false otherwise</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">has_svei8mm</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /** Checks if the cpu model supports sve.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return true if the cpu supports sve, false otherwise</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">has_sve</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    /** Checks if the cpu model supports sve2.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     * @return true if the cpu supports sve2, false otherwise</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">has_sve2</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    /** Checks if the cpu model supports sme.</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @return true if the cpu supports sme, false otherwise</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">has_sme</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">    /** Checks if the cpu model supports sme2.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * @return true if the cpu supports sme2, false otherwise</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">has_sme2</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">    /** Gets the cpu model for a given cpuid.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @param[in] cpuid the id of the cpu core to be retrieved,</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @return the @ref CPUModel of the cpuid queiried.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> cpuid) <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">    /** Gets the current thread&#39;s cpu model</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     * @return Current thread&#39;s @ref CPUModel</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /** Gets the current cpu&#39;s ISA information</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     * @return Current cpu&#39;s ISA information</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">cpuinfo::CpuIsaInfo</a> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">    /** Gets the L1 cache size</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @return the size of the L1 cache</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a61970c81ba14081e613c12d0e85af761">get_L1_cache_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /** Gets the L2 cache size</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * @return the size of the L1 cache</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a3152ff6ceec3d31c02feb4e91812f040">get_L2_cache_size</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">    /** Return the maximum number of CPUs present</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">     * @return Number of CPUs</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">get_cpu_num</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">    /** Return the maximum number of CPUs present excluding the little cores</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     * in case of an Android device</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     * @return Number of CPUs excluding little</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a79e33fae8ad38b4b6439db8b2bf8456e">get_cpu_num_excluding_little</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">    /** Return the vector length in bytes for sme2</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     * @return Vector length if sme2 is enabled, otherwise returns 0.</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a05e32ddf1e71faf323d7cfa8ea54de44">get_sme2_vector_length</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">struct </span>Impl;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    std::unique_ptr&lt;Impl&gt; _impl;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;};</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">/** Information about executing thread and CPU. */</span></div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_thread_info.xhtml">  191</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_thread_info.xhtml#ab488bfc5d1f76143651f915915046354">  193</a></span>&#160;    <span class="keywordtype">int</span>            <a class="code" href="structarm__compute_1_1_thread_info.xhtml#ab488bfc5d1f76143651f915915046354">thread_id</a>{0};</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_thread_info.xhtml#a08963f7335eef295237ab460863bc3d5">  194</a></span>&#160;    <span class="keywordtype">int</span>            <a class="code" href="structarm__compute_1_1_thread_info.xhtml#a08963f7335eef295237ab460863bc3d5">num_threads</a>{1};</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="structarm__compute_1_1_thread_info.xhtml#a92a85dfb6988cb6da124c05d9eeef869">  195</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> *<a class="code" href="structarm__compute_1_1_thread_info.xhtml#a92a85dfb6988cb6da124c05d9eeef869">cpu_info</a>{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;};</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif // ACL_ARM_COMPUTE_CORE_CPP_CPPTYPES_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a81409e78339a5ed0dfb97d152111b568"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">arm_compute::CPUInfo::has_sve2</a></div><div class="ttdeci">bool has_sve2() const</div><div class="ttdoc">Checks if the cpu model supports sve2.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00100">CPPTypes.cpp:100</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpuinfo_1_1_cpu_isa_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">arm_compute::cpuinfo::CpuIsaInfo</a></div><div class="ttdoc">CPU ISA (Instruction Set Architecture) information.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_isa_info_8h_source.xhtml#l00037">CpuIsaInfo.h:37</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">arm_compute::CPUModel</a></div><div class="ttdeci">CPUModel</div><div class="ttdoc">CPU models types.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00059">CPPTypes.h:59</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml_a92a85dfb6988cb6da124c05d9eeef869"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml#a92a85dfb6988cb6da124c05d9eeef869">arm_compute::ThreadInfo::cpu_info</a></div><div class="ttdeci">const CPUInfo * cpu_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00195">CPPTypes.h:195</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2a42a2a0b91dce5401678766c088dfa7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">arm_compute::CPUInfo::get</a></div><div class="ttdeci">static CPUInfo &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00042">CPPTypes.cpp:42</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a8d31247d25bfe0a0b669d367aa801c2d"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">arm_compute::CPUInfo::has_dotprod</a></div><div class="ttdeci">bool has_dotprod() const</div><div class="ttdoc">Checks if the cpu model supports dot product.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00075">CPPTypes.cpp:75</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a934b3b3a24b2f25bde992b6883caf3f0"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">arm_compute::CPUInfo::has_sme</a></div><div class="ttdeci">bool has_sme() const</div><div class="ttdoc">Checks if the cpu model supports sme.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00105">CPPTypes.cpp:105</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a3828c0e892d45f2b4af6dc5d34c377b7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">arm_compute::CPUInfo::get_cpu_num</a></div><div class="ttdeci">unsigned int get_cpu_num() const</div><div class="ttdoc">Return the maximum number of CPUs present.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00055">CPPTypes.cpp:55</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a79e33fae8ad38b4b6439db8b2bf8456e"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a79e33fae8ad38b4b6439db8b2bf8456e">arm_compute::CPUInfo::get_cpu_num_excluding_little</a></div><div class="ttdeci">unsigned int get_cpu_num_excluding_little() const</div><div class="ttdoc">Return the maximum number of CPUs present excluding the little cores in case of an Android device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00148">CPPTypes.cpp:148</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a61970c81ba14081e613c12d0e85af761"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a61970c81ba14081e613c12d0e85af761">arm_compute::CPUInfo::get_L1_cache_size</a></div><div class="ttdeci">unsigned int get_L1_cache_size() const</div><div class="ttdoc">Gets the L1 cache size.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00130">CPPTypes.cpp:130</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml_ab488bfc5d1f76143651f915915046354"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml#ab488bfc5d1f76143651f915915046354">arm_compute::ThreadInfo::thread_id</a></div><div class="ttdeci">int thread_id</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00193">CPPTypes.h:193</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_ae3a44e5d711e5707a9d974d085bcccdd"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">arm_compute::CPUInfo::has_bf16</a></div><div class="ttdeci">bool has_bf16() const</div><div class="ttdoc">Checks if the cpu model supports bf16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00065">CPPTypes.cpp:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a0647761f309e3b3edb5a5501b3ff38d2"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">arm_compute::CPUInfo::has_fp16</a></div><div class="ttdeci">bool has_fp16() const</div><div class="ttdoc">Checks if the cpu model supports fp16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00060">CPPTypes.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_aa382062453f40443af73d726fe75340b"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">arm_compute::CPUInfo::get_cpu_model</a></div><div class="ttdeci">CPUModel get_cpu_model() const</div><div class="ttdoc">Gets the current thread's cpu model.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00115">CPPTypes.cpp:115</a></div></div>
<div class="ttc" id="a_c_p_p_types_8h_xhtml_aede6b5b56c3a6e01efde85e1545a4eb8"><div class="ttname"><a href="_c_p_p_types_8h.xhtml#aede6b5b56c3a6e01efde85e1545a4eb8">ARM_COMPUTE_CPU_MODEL_LIST</a></div><div class="ttdeci">#define ARM_COMPUTE_CPU_MODEL_LIST</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00038">CPPTypes.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_ab70d897225cc1fed8fd979192e2d0a60"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ab70d897225cc1fed8fd979192e2d0a60">arm_compute::CPUInfo::operator=</a></div><div class="ttdeci">CPUInfo &amp; operator=(CPUInfo const &amp;)=delete</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a77c6d2e5ffdac1eb191c637584b63e9f"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">arm_compute::CPUInfo::has_svebf16</a></div><div class="ttdeci">bool has_svebf16() const</div><div class="ttdoc">Checks if the cpu model supports bf16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00070">CPPTypes.cpp:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a7b945f4077c1c4e623fd8d13b0cac29c"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">arm_compute::CPUInfo::has_i8mm</a></div><div class="ttdeci">bool has_i8mm() const</div><div class="ttdoc">Checks if the cpu model supports integer matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00085">CPPTypes.cpp:85</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_ad7d3ca5154cbb01b5c5a24df54efd348"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">arm_compute::CPUInfo::get_isa</a></div><div class="ttdeci">cpuinfo::CpuIsaInfo get_isa() const</div><div class="ttdoc">Gets the current cpu's ISA information.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00125">CPPTypes.cpp:125</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a05e32ddf1e71faf323d7cfa8ea54de44"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a05e32ddf1e71faf323d7cfa8ea54de44">arm_compute::CPUInfo::get_sme2_vector_length</a></div><div class="ttdeci">unsigned long get_sme2_vector_length() const</div><div class="ttdoc">Return the vector length in bytes for sme2.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00140">CPPTypes.cpp:140</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a629b7f8097121022b5fae83ed4b1581f"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">arm_compute::CPUInfo::has_sme2</a></div><div class="ttdeci">bool has_sme2() const</div><div class="ttdoc">Checks if the cpu model supports sme2.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00110">CPPTypes.cpp:110</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml">arm_compute::ThreadInfo</a></div><div class="ttdoc">Information about executing thread and CPU.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00191">CPPTypes.h:191</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2f7dae768d45b1c3781748808f1c16a4"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">arm_compute::CPUInfo::has_sve</a></div><div class="ttdeci">bool has_sve() const</div><div class="ttdoc">Checks if the cpu model supports sve.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00095">CPPTypes.cpp:95</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2ce2bff23b934048c003ac612e9abd83"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">arm_compute::CPUInfo::has_svei8mm</a></div><div class="ttdeci">bool has_svei8mm() const</div><div class="ttdoc">Checks if the cpu model supports integer matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00090">CPPTypes.cpp:90</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_thread_info_xhtml_a08963f7335eef295237ab460863bc3d5"><div class="ttname"><a href="structarm__compute_1_1_thread_info.xhtml#a08963f7335eef295237ab460863bc3d5">arm_compute::ThreadInfo::num_threads</a></div><div class="ttdeci">int num_threads</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00194">CPPTypes.h:194</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_aaa12d6e2d28e061e8dec5a29b0a0817d"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">arm_compute::CPUInfo::has_svef32mm</a></div><div class="ttdeci">bool has_svef32mm() const</div><div class="ttdoc">Checks if the cpu model supports floating-point matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00080">CPPTypes.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a3152ff6ceec3d31c02feb4e91812f040"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a3152ff6ceec3d31c02feb4e91812f040">arm_compute::CPUInfo::get_L2_cache_size</a></div><div class="ttdeci">unsigned int get_L2_cache_size() const</div><div class="ttdoc">Gets the L2 cache size.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00135">CPPTypes.cpp:135</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_7484b841a86f2d7fdd057c9b24fbf230.xhtml">CPP</a></li><li class="navelem"><a class="el" href="_c_p_p_types_8h.xhtml">CPPTypes.h</a></li>
    <li class="footer">Generated on Tue May 28 2024 09:00:56 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
