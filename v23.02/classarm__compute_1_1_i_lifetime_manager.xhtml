<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ILifetimeManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_lifetime_manager.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ILifetimeManager Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for managing the lifetime of objects.  
 <a href="classarm__compute_1_1_i_lifetime_manager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_lifetime_manager_8h_source.xhtml">ILifetimeManager.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac6e5bab9415fdb1e8c4ad0d4d70227e9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ac6e5bab9415fdb1e8c4ad0d4d70227e9">~ILifetimeManager</a> ()=default</td></tr>
<tr class="memdesc:ac6e5bab9415fdb1e8c4ad0d4d70227e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="#ac6e5bab9415fdb1e8c4ad0d4d70227e9">More...</a><br /></td></tr>
<tr class="separator:ac6e5bab9415fdb1e8c4ad0d4d70227e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9aed2d52d9469aa2a49f8c7ece1f082"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#af9aed2d52d9469aa2a49f8c7ece1f082">register_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group)=0</td></tr>
<tr class="memdesc:af9aed2d52d9469aa2a49f8c7ece1f082"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a group to the lifetime manager and assigns a group id.  <a href="#af9aed2d52d9469aa2a49f8c7ece1f082">More...</a><br /></td></tr>
<tr class="separator:af9aed2d52d9469aa2a49f8c7ece1f082"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4261f28eada7ef0bc83053b55bee8c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a3f4261f28eada7ef0bc83053b55bee8c">release_group</a> (<a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *group)=0</td></tr>
<tr class="memdesc:a3f4261f28eada7ef0bc83053b55bee8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unbound and release elements associated with a group.  <a href="#a3f4261f28eada7ef0bc83053b55bee8c">More...</a><br /></td></tr>
<tr class="separator:a3f4261f28eada7ef0bc83053b55bee8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8645b2be72197ce554268c1dc704849"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ad8645b2be72197ce554268c1dc704849">start_lifetime</a> (void *obj)=0</td></tr>
<tr class="memdesc:ad8645b2be72197ce554268c1dc704849"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers and starts lifetime of an object.  <a href="#ad8645b2be72197ce554268c1dc704849">More...</a><br /></td></tr>
<tr class="separator:ad8645b2be72197ce554268c1dc704849"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a729cd4a1c76734ae24ca9175cae28b5e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a729cd4a1c76734ae24ca9175cae28b5e">end_lifetime</a> (void *obj, <a class="el" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> &amp;obj_memory, size_t size, size_t alignment)=0</td></tr>
<tr class="memdesc:a729cd4a1c76734ae24ca9175cae28b5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends lifetime of an object.  <a href="#a729cd4a1c76734ae24ca9175cae28b5e">More...</a><br /></td></tr>
<tr class="separator:a729cd4a1c76734ae24ca9175cae28b5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bb5a543056e56ff45f413040d316312"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a1bb5a543056e56ff45f413040d316312">are_all_finalized</a> () const =0</td></tr>
<tr class="memdesc:a1bb5a543056e56ff45f413040d316312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the lifetime of the registered object is complete.  <a href="#a1bb5a543056e56ff45f413040d316312">More...</a><br /></td></tr>
<tr class="separator:a1bb5a543056e56ff45f413040d316312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14145b312cf5bf366bc9d7c143f85a1"><td class="memItemLeft" align="right" valign="top">virtual std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#ab14145b312cf5bf366bc9d7c143f85a1">create_pool</a> (<a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *allocator)=0</td></tr>
<tr class="memdesc:ab14145b312cf5bf366bc9d7c143f85a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a memory pool depending on the memory requirements.  <a href="#ab14145b312cf5bf366bc9d7c143f85a1">More...</a><br /></td></tr>
<tr class="separator:ab14145b312cf5bf366bc9d7c143f85a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4d2a4f6dd83e9ad1578450c31357db"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearm__compute.xhtml#af0a4d6be70322c742c12da1edccbb74d">MappingType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml#a2f4d2a4f6dd83e9ad1578450c31357db">mapping_type</a> () const =0</td></tr>
<tr class="memdesc:a2f4d2a4f6dd83e9ad1578450c31357db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of mappings that the lifetime manager returns.  <a href="#a2f4d2a4f6dd83e9ad1578450c31357db">More...</a><br /></td></tr>
<tr class="separator:a2f4d2a4f6dd83e9ad1578450c31357db"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for managing the lifetime of objects. </p>

<p class="definition">Definition at line <a class="el" href="_i_lifetime_manager_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_i_lifetime_manager_8h_source.xhtml">ILifetimeManager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac6e5bab9415fdb1e8c4ad0d4d70227e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6e5bab9415fdb1e8c4ad0d4d70227e9">&#9670;&nbsp;</a></span>~ILifetimeManager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1bb5a543056e56ff45f413040d316312"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bb5a543056e56ff45f413040d316312">&#9670;&nbsp;</a></span>are_all_finalized()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool are_all_finalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the lifetime of the registered object is complete. </p>
<dl class="section return"><dt>Returns</dt><dd>True if all object lifetimes are finalized else false. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#aa849cbaa03d63911dbbedc830f22943d">ISimpleLifetimeManager</a>.</p>

</div>
</div>
<a id="ab14145b312cf5bf366bc9d7c143f85a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab14145b312cf5bf366bc9d7c143f85a1">&#9670;&nbsp;</a></span>create_pool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a>&gt; create_pool </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_allocator.xhtml">IAllocator</a> *&#160;</td>
          <td class="paramname"><em>allocator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a memory pool depending on the memory requirements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">allocator</td><td><a class="el" href="classarm__compute_1_1_allocator.xhtml" title="Default malloc allocator implementation. ">Allocator</a> to use</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A memory pool </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml#ab414c062d699e4a5a729a9221cb02e2b">BlobLifetimeManager</a>, and <a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml#ab414c062d699e4a5a729a9221cb02e2b">OffsetLifetimeManager</a>.</p>

</div>
</div>
<a id="a729cd4a1c76734ae24ca9175cae28b5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a729cd4a1c76734ae24ca9175cae28b5e">&#9670;&nbsp;</a></span>end_lifetime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void end_lifetime </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory.xhtml">IMemory</a> &amp;&#160;</td>
          <td class="paramname"><em>obj_memory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>alignment</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Ends lifetime of an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>Object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">obj_memory</td><td>Object memory </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Size of the given object at given time </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">alignment</td><td>Alignment requirements for the object </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a5eb1cd0eb1bd44c695f7e3a8b65ba000">ISimpleLifetimeManager</a>.</p>

</div>
</div>
<a id="a2f4d2a4f6dd83e9ad1578450c31357db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f4d2a4f6dd83e9ad1578450c31357db">&#9670;&nbsp;</a></span>mapping_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespacearm__compute.xhtml#af0a4d6be70322c742c12da1edccbb74d">MappingType</a> mapping_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of mappings that the lifetime manager returns. </p>
<dl class="section return"><dt>Returns</dt><dd>Mapping type of the lifetime manager </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_blob_lifetime_manager.xhtml#aafd3aa9650b1e764b085c76c4faa4cd5">BlobLifetimeManager</a>, and <a class="el" href="classarm__compute_1_1_offset_lifetime_manager.xhtml#aafd3aa9650b1e764b085c76c4faa4cd5">OffsetLifetimeManager</a>.</p>

</div>
</div>
<a id="af9aed2d52d9469aa2a49f8c7ece1f082"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9aed2d52d9469aa2a49f8c7ece1f082">&#9670;&nbsp;</a></span>register_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void register_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers a group to the lifetime manager and assigns a group id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">group</td><td>The group id of the group </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a93fc2c6a7ebb5d8f44c67d492347d054">ISimpleLifetimeManager</a>.</p>

</div>
</div>
<a id="a3f4261f28eada7ef0bc83053b55bee8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f4261f28eada7ef0bc83053b55bee8c">&#9670;&nbsp;</a></span>release_group()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool release_group </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_memory_group.xhtml">IMemoryGroup</a> *&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unbound and release elements associated with a group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">group</td><td>Group to unbound its elements</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if group was registered and released else false. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#a2f3b9c36674e2c4097552d9ffb30fbf2">ISimpleLifetimeManager</a>.</p>

</div>
</div>
<a id="ad8645b2be72197ce554268c1dc704849"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8645b2be72197ce554268c1dc704849">&#9670;&nbsp;</a></span>start_lifetime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void start_lifetime </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers and starts lifetime of an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">obj</td><td>Object to register </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_simple_lifetime_manager.xhtml#af9e6669812c674ab36a3cb3e592d5efe">ISimpleLifetimeManager</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/runtime/<a class="el" href="_i_lifetime_manager_8h_source.xhtml">ILifetimeManager.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_lifetime_manager.xhtml">ILifetimeManager</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
