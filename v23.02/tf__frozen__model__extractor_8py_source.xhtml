<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: scripts/tf_frozen_model_extractor.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('tf__frozen__model__extractor_8py_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tf_frozen_model_extractor.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tf__frozen__model__extractor_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml">    1</a></span>&#160;<span class="comment">#!/usr/bin/env python</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">&quot;&quot;&quot; Extract trainable parameters from a frozen model and stores them in numpy arrays.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">Usage:</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">    python tf_frozen_model_extractor -m path_to_frozem_model -d path_to_store_the_parameters</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="stringliteral">Saves each variable to a {variable_name}.npy binary file.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="stringliteral">Note that the script permutes the trainable parameters to NCHW format. This is a pretty manual step thus it&#39;s not thoroughly tested.</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">import</span> argparse</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">from</span> tensorflow.python.platform <span class="keyword">import</span> gfile</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a119aea43234dcf5ad495a8e16db7cb89">   16</a></span>&#160;strings_to_remove=[<span class="stringliteral">&quot;read&quot;</span>, <span class="stringliteral">&quot;/:0&quot;</span>]</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a4cc34765ed333872247bab6fbb34d50d">   17</a></span>&#160;permutations = { 1 : [0], 2 : [1, 0], 3 : [2, 1, 0], 4 : [3, 2, 0, 1]}</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment"># Parse arguments</span></div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a90eee7a4677ca8b1ed116364a24367f9">   21</a></span>&#160;    parser = argparse.ArgumentParser(<span class="stringliteral">&#39;Extract TensorFlow net parameters&#39;</span>)</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">   22</a></span>&#160;    parser.add_argument(<span class="stringliteral">&#39;-m&#39;</span>, dest=<span class="stringliteral">&#39;modelFile&#39;</span>, type=str, required=<span class="keyword">True</span>, help=<span class="stringliteral">&#39;Path to TensorFlow frozen graph file (.pb)&#39;</span>)</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a36cde68b055f3f2ee671020af4ccf4e2">   23</a></span>&#160;    parser.add_argument(<span class="stringliteral">&#39;-d&#39;</span>, dest=<span class="stringliteral">&#39;dumpPath&#39;</span>, type=str, required=<span class="keyword">False</span>, default=<span class="stringliteral">&#39;./&#39;</span>, help=<span class="stringliteral">&#39;Path to store the resulting files.&#39;</span>)</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a2f4ab7bf743142dae2e459aa18f9f1d4">   24</a></span>&#160;    parser.add_argument(<span class="stringliteral">&#39;--nostore&#39;</span>, dest=<span class="stringliteral">&#39;storeRes&#39;</span>, action=<span class="stringliteral">&#39;store_false&#39;</span>, help=<span class="stringliteral">&#39;Specify if files should not be stored. Used for debugging.&#39;</span>)</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a11561e54fe784ba45ad35008a756c9ad">   25</a></span>&#160;    parser.set_defaults(storeRes=<span class="keyword">True</span>)</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a8187411843a6284ffb964ef3fb9fcab3">   26</a></span>&#160;    args = parser.parse_args()</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="comment"># Create directory if not present</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> os.path.exists(args.dumpPath):</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        os.makedirs(args.dumpPath)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment"># Extract parameters</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    with tf.Graph().as_default() <span class="keyword">as</span> graph:</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        with tf.Session() <span class="keyword">as</span> sess:</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            print(<span class="stringliteral">&quot;Loading model.&quot;</span>)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            with gfile.FastGFile(args.modelFile, <span class="stringliteral">&#39;rb&#39;</span>) <span class="keyword">as</span> f:</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a33046379607784b45c2794cbaeedc1ff">   37</a></span>&#160;                graph_def = tf.GraphDef()</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                graph_def.ParseFromString(f.read())</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                sess.graph.as_default()</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a78ef37749976cb8bb622cf116d122f9f">   41</a></span>&#160;                tf.import_graph_def(graph_def, input_map=<span class="keywordtype">None</span>, return_elements=<span class="keywordtype">None</span>, name=<span class="stringliteral">&quot;&quot;</span>, op_dict=<span class="keywordtype">None</span>, producer_op_list=<span class="keywordtype">None</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordflow">for</span> op <span class="keywordflow">in</span> graph.get_operations():</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="keywordflow">for</span> op_val <span class="keywordflow">in</span> op.values():</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#a49e21719b906edce54a892874d995cac">   45</a></span>&#160;                        varname = op_val.name</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                        <span class="comment"># Skip non-const values</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                        <span class="keywordflow">if</span> <span class="stringliteral">&quot;read&quot;</span> <span class="keywordflow">in</span> varname:</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#aaccc9105df5383111407fd5b41255e23">   49</a></span>&#160;                            t  = op_val.eval()</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespacetf__frozen__model__extractor.xhtml#abe2a5ddd58ffc2549e2ae084515fe974">   50</a></span>&#160;                            tT = t.transpose(permutations[len(t.shape)])</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                            t  = np.ascontiguousarray(tT)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                            <span class="keywordflow">for</span> s <span class="keywordflow">in</span> strings_to_remove:</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                varname = varname.replace(s, <span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                            <span class="keywordflow">if</span> os.path.sep <span class="keywordflow">in</span> varname:</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                varname = varname.replace(os.path.sep, <span class="stringliteral">&#39;_&#39;</span>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                print(<span class="stringliteral">&quot;Renaming variable {0} to {1}&quot;</span>.format(op_val.name, varname))</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                            <span class="comment"># Store files</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                            <span class="keywordflow">if</span> args.storeRes:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                print(<span class="stringliteral">&quot;Saving variable {0} with shape {1} ...&quot;</span>.format(varname, t.shape))</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                np.save(os.path.join(args.dumpPath, varname), t)</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_53e6fa9553ac22a5646d2a2b2d7b97a1.xhtml">scripts</a></li><li class="navelem"><a class="el" href="tf__frozen__model__extractor_8py.xhtml">tf_frozen_model_extractor.py</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:38 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
