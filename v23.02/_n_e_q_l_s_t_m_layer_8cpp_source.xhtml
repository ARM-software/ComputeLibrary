<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/NEON/functions/NEQLSTMLayer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_q_l_s_t_m_layer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NEQLSTMLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_q_l_s_t_m_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2020-2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_q_l_s_t_m_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEQLSTMLayer.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_tensor_pack_8h.xhtml">arm_compute/core/ITensorPack.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_kernel_descriptors_8h.xhtml">arm_compute/core/KernelDescriptors.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantization_info_8h.xhtml">arm_compute/core/QuantizationInfo.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_validate_8h.xhtml">arm_compute/core/Validate.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_info_helpers_8h.xhtml">arm_compute/core/utils/misc/InfoHelpers.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asymm_helpers_8h.xhtml">arm_compute/core/utils/quantization/AsymmHelpers.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_scheduler_8h.xhtml">arm_compute/runtime/NEON/NEScheduler.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h.xhtml">src/core/NEON/kernels/NEQLSTMLayerNormalizationKernel.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_window_helpers_8h.xhtml">src/core/helpers/WindowHelpers.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_gemm_lowp_matrix_reduction_kernel_8h.xhtml">src/cpu/kernels/CpuGemmLowpMatrixReductionKernel.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils_1_1info__helpers.xhtml">arm_compute::utils::info_helpers</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;Status validate_mm(GEMMLowpOutputStageInfo &amp;gemmlowp_info, <span class="keyword">const</span> ITensorInfo *mm_input, <span class="keyword">const</span> ITensorInfo *mm_weights, <span class="keyword">const</span> ITensorInfo *<a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                   <span class="keywordtype">float</span> gemmlowp_scale, <span class="keyword">const</span> TensorInfo *mm_res_info, <span class="keyword">const</span> TensorInfo *outstage_tensor_info)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">NEGEMMLowpMatrixMultiplyCore::validate</a>(mm_input, mm_weights, <span class="keyword">nullptr</span>, mm_res_info));</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(gemmlowp_scale, &amp;gemmlowp_info.gemmlowp_multiplier, &amp;gemmlowp_info.gemmlowp_shift));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">NEGEMMLowpOutputStage::validate</a>(mm_res_info, bias, outstage_tensor_info, gemmlowp_info));</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;Status NEQLSTMLayer::validate_layer_norm(<span class="keyword">const</span> ITensorInfo &amp;in, <span class="keyword">const</span> ITensorInfo &amp;weight, <span class="keyword">const</span> ITensorInfo &amp;bias)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// Output quantization scale will be different, but ignored here</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// since it will be configured at configure() stage.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> TensorInfo out</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        in</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    };</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#abd9de6fe0c3fc5b1b9bb6dc6ae62fbde">NEQLSTMLayerNormalizationKernel::validate</a>(&amp;in, &amp;out, &amp;weight, &amp;bias);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keywordtype">void</span> NEQLSTMLayer::configure_layer_norm(NEQLSTMLayer::LayerNormGate g, <span class="keyword">const</span> ITensor *in)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(!_has_layer_norm);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> &amp;out = get_layer_norm_output(g);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    _memory_group.manage(&amp;out);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    out.allocator()-&gt;init(*(in-&gt;info()));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    get_layer_norm(g) = std::make_unique&lt;NEQLSTMLayerNormalizationKernel&gt;();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    get_layer_norm(g)-&gt;configure(in, &amp;out, get_layer_norm_weight(g), get_layer_norm_bias(g));</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;NEQLSTMLayer::TensorCopyKernel::~TensorCopyKernel() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;Status <a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">NEQLSTMLayer::TensorCopyKernel::validate</a>(<span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> ITensorInfo &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(src.tensor_shape().num_dimensions() &gt; max_dimension_supported);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(dst.tensor_shape().num_dimensions() &gt; max_dimension_supported);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a5befbfaf6bc224eabc58b5e88b1de6d1">ARM_COMPUTE_ERROR_ON_MISMATCHING_DATA_TYPES</a>(&amp;src, &amp;dst);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(dst.tensor_shape().y() != src.tensor_shape().y());</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5357bacf3b395353bef0acf15487b92b">NEQLSTMLayer::TensorCopyKernel::configure</a>(ITensor &amp;src, ITensor &amp;dst)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">NEQLSTMLayer::TensorCopyKernel::validate</a>(*src.info(), *dst.info()));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(src, dst);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _src      = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    _dst      = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _row_size = std::min(_src-&gt;info()-&gt;tensor_shape().x(), _dst-&gt;info()-&gt;tensor_shape().x());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    _window   = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*_src-&gt;info(), Steps());</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">NEQLSTMLayer::TensorCopyKernel::run</a>()</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    Iterator input_iter{ _src, _window };</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    Iterator output_iter{ _dst, _window };</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(_window, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        memcpy(output_iter.ptr(), input_iter.ptr(), _row_size);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    },</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    input_iter, output_iter);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a3ba062c6249f47497c8f16525bcf36ca">NEQLSTMLayer::~NEQLSTMLayer</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a424e51a62c2ae679356f94f175ba0642">  113</a></span>&#160;<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a424e51a62c2ae679356f94f175ba0642">NEQLSTMLayer::NEQLSTMLayer</a>(std::shared_ptr&lt;IMemoryManager&gt; memory_manager)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    : _memory_group(),</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      _dequantize_input_to_forget_weights(),</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      _quantize_input_to_forget_weights(),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      _transpose_input_to_forget_weights(),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      _transpose_input_to_cell_weights(),</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      _transpose_input_to_output_weights(),</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      _transpose_input_to_input_weights(),</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      _transpose_recurrent_to_forget_weights(),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      _transpose_recurrent_to_cell_weights(),</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      _transpose_recurrent_to_output_weights(),</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      _transpose_recurrent_to_input_weights(),</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      _transpose_projection_weights(),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      _input_to_input_reduction(),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      _recurrent_to_input_reduction(),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      _input_to_forget_reduction(),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      _recurrent_to_forget_reduction(),</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      _input_to_cell_reduction(),</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      _recurrent_to_cell_reduction(),</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      _input_to_output_reduction(),</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      _recurrent_to_output_reduction(),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      _projection_reduction(),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      _projection_bias_add(),</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      _mm_input_to_forget(),</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      _mm_recurrent_to_forget(),</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      _pixelwise_mul_cell_to_forget(),</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      _input_to_forget_outstage(),</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      _recurrent_to_forget_outstage(),</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      _cell_to_forget_outstage(),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      _accumulate_input_recurrent_forget(),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      _accumulate_cell_forget(),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      _forget_gate_sigmoid(),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      _mm_input_to_cell(),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;      _input_to_cell_outstage(),</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      _mm_recurrent_to_cell(),</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      _recurrent_to_cell_outstage(),</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      _accumulate_input_recurrent_modulation(),</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      _cell_gate_tanh(),</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      _input_gate_sub(),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      _mm_input_to_input(),</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      _input_to_input_outstage(),</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      _mm_recurrent_to_input(),</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      _recurrent_to_input_outstage(),</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      _accumulate_input_recurrent_input(),</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      _pixelwise_mul_cell_to_input(),</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      _cell_to_input_outstage(),</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      _accumulate_cell_input(),</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      _input_gate_sigmoid(),</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      _pixelwise_mul_forget_cell(),</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      _pixelwise_mul_input_cell(),</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      _add_forget_cell(),</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      _cell_clip(),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      _mm_input_to_output(),</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;      _input_to_output_outstage(),</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      _mm_recurrent_to_output(),</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      _recurrent_to_output_outstage(),</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      _accumulate_input_recurrent_output(),</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      _pixelwise_mul_cell_to_output(),</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      _cell_to_output_outstage(),</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      _accumulate_cell_to_output(),</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      _output_gate_sigmoid(),</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;      _hidden_tanh(),</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      _pixelwise_mul_hidden(),</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      _hidden_outstage(),</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      _mm_projection(),</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      _projection_outstage(),</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      _accumulate_projection(),</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      _projection_clip(),</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      _projection_bias_copy(),</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      _projection_output_to_accumulate_copy(),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      _projection_accumulate_to_output_copy(),</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      _hidden_to_output_copy(),</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      _layer_norms(),</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      _copy_output(),</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      _layer_norm_weights(),</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      _layer_norm_bias(),</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      _layer_norm_output()</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    _memory_group = <a class="code" href="classarm__compute_1_1_memory_group.xhtml">MemoryGroup</a>(std::move(memory_manager));</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">void</span> NEQLSTMLayer::configure_mm(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml">NEGEMMLowpMatrixMultiplyCore</a> &amp;mm, <a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml">NEGEMMLowpOutputStage</a> &amp;outstage, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> &amp;gemmlowp_info,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *mm_input, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *mm_weights, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *bias,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *mm_res, <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *outstage_res, <span class="keywordtype">float</span> gemmlowp_scale,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;mm_res_info, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;outstage_tensor_info)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(mm_res);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(outstage_res);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    mm_res-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(mm_res_info);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    outstage_res-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(outstage_tensor_info);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">// Configure matrix-multiplication</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    mm.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ae939cbc6a8a6747f193bfe8b54a7881c">configure</a>(mm_input, mm_weights, <span class="keyword">nullptr</span>, mm_res);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">// Configure output stage</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(gemmlowp_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">configure</a>(mm_res, bias, outstage_res, gemmlowp_info);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    mm_res-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a221043df99c565143acbf54a1e68d904">  214</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a221043df99c565143acbf54a1e68d904">NEQLSTMLayer::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_state_in, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output_state_in,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                             <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *cell_state_out, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output_state_out, <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *output,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams&lt;ITensor&gt;</a> &amp;lstm_params)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(input, input_to_forget_weights, input_to_cell_weights, input_to_output_weights,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                 recurrent_to_forget_weights, recurrent_to_cell_weights, recurrent_to_output_weights,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                 forget_gate_bias, cell_bias, output_gate_bias, cell_state_in, output_state_in, cell_state_out, output_state_out);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a>(input, input_to_forget_weights, input_to_cell_weights, input_to_output_weights,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                           recurrent_to_forget_weights, recurrent_to_cell_weights, recurrent_to_output_weights,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                           forget_gate_bias, cell_bias, output_gate_bias, cell_state_in, output_state_in, cell_state_out, output_state_out);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="comment">// Set lstm parameters</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams&lt;ITensorInfo&gt;</a> lstm_params_info{};</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="namespacearm__compute_1_1utils_1_1info__helpers.xhtml#ace12965ef6278f7717bcd30fb5f18e9e">build_lstm_params_tensor_info</a>(lstm_params, &amp;lstm_params_info);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    _input_to_forget_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    _input_to_cell_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    _input_to_output_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    _recurrent_to_forget_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    _recurrent_to_cell_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    _recurrent_to_output_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">set_quantization_info</a>(recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        _convert_input_to_forget_weights_to_qsymm8 = <span class="keyword">true</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">// Setup dequantize output tensor to go from QASYMM8_SIGNED -&gt; F32</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        _input_to_forget_weights_f32.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                                       .<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">set_data_layout</a>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>()));</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment">// Setup the quantize output tensor to go from F32 -&gt; QSYMM8</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        _input_to_forget_weights_symm8.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>((<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                                          .<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">set_data_layout</a>(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>())</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                                          .set_quantization_info(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>())));</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        _dequantize_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(input_to_forget_weights, &amp;_input_to_forget_weights_f32);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        _quantize_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_quantization_layer.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(&amp;_input_to_forget_weights_f32, &amp;_input_to_forget_weights_symm8);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a8c31fb434071a8c3f6fb667794135431">NEQLSTMLayer::validate</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _input_to_forget_weights_symm8.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                                          recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                                          forget_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), cell_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                                          cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), cell_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                                          lstm_params_info));</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a8c31fb434071a8c3f6fb667794135431">NEQLSTMLayer::validate</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                                          recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                                          forget_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), cell_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                                          cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), cell_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), output-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(),</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                                                          lstm_params_info));</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> batch_size  = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> num_units   = input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> = output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(_out_state_output_size_dimension_idx);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qinput           = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qcell_state_in   = cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qoutput_state_in = output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    _projection_bias             = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ad676992a90d193409fa6a28a001af6c8">projection_bias</a>();</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    _input_to_forget_weights     = (input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>) ? &amp;_input_to_forget_weights_symm8 : input_to_forget_weights;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    _input_to_cell_weights       = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    _input_to_output_weights     = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    _recurrent_to_forget_weights = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    _recurrent_to_cell_weights   = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    _recurrent_to_output_weights = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    _projection_weights          = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// Layer normalization</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    _has_layer_norm = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2d615f651270885a1b996046e9902a3c">use_layer_norm</a>();</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        set_layer_norm_weight(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a7a4d5e8e4fdaff447b8c60f5ed6f4712">forget_layer_norm_weights</a>(), LayerNormGate::Forget);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        set_layer_norm_weight(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a76f19cb614443980dcdf9b2054e4eb09">cell_layer_norm_weights</a>(), LayerNormGate::Cell);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        set_layer_norm_weight(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aa261869a77af2c18d4b514bd0969d2d4">input_layer_norm_weights</a>(), LayerNormGate::Input);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        set_layer_norm_weight(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a282e7eac2def0a1b1c5bb4a74c0f99a1">output_layer_norm_weights</a>(), LayerNormGate::Output);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        set_layer_norm_bias(forget_gate_bias, LayerNormGate::Forget);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        set_layer_norm_bias(cell_bias, LayerNormGate::Cell);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        set_layer_norm_bias(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>(), LayerNormGate::Input);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        set_layer_norm_bias(output_gate_bias, LayerNormGate::Output);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    _has_cifg       = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">has_cifg_opt</a>();</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    _has_projection = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a127009377712009a84cd0c48aa7e1edd">has_projection</a>();</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    _has_peephole   = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">has_peephole_opt</a>();</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">// Calculate and decompose effective scales for optimizing matmul calculation</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">const</span> int32_t cell_shift = log2(qcell_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="comment">// Calculate quantized parameters for clipping.</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    int16_t quantized_cell_clip = 0;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aebbcdda23d18f77e84ee06e9f754c341">cell_clip</a>() &gt; 0.0f)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        quantized_cell_clip = <a class="code" href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">quantize_qsymm16</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aebbcdda23d18f77e84ee06e9f754c341">cell_clip</a>(), qcell_state_in);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    _has_cell_clipping = quantized_cell_clip &gt; 0;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="comment">// Precompute effective bias for optimizing the matmul computations.</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordflow">if</span>(!_has_cifg)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    {</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        _input_to_input_weights     = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>();</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        _recurrent_to_input_weights = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>();</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        _input_to_input_reduction     = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        _recurrent_to_input_reduction = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        _input_to_input_reduction-&gt;configure(_input_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _input_to_input_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        _recurrent_to_input_reduction-&gt;configure(_recurrent_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _recurrent_to_input_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    _input_to_forget_reduction     = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    _recurrent_to_forget_reduction = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    _input_to_cell_reduction       = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    _recurrent_to_cell_reduction   = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    _input_to_output_reduction     = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    _recurrent_to_output_reduction = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    _input_to_forget_reduction-&gt;configure(input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _input_to_forget_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    _recurrent_to_forget_reduction-&gt;configure(recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _recurrent_to_forget_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    _input_to_cell_reduction-&gt;configure(input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _input_to_cell_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    _recurrent_to_cell_reduction-&gt;configure(recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _recurrent_to_cell_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    _input_to_output_reduction-&gt;configure(input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _input_to_output_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    _recurrent_to_output_reduction-&gt;configure(recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _recurrent_to_output_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>));</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">if</span>(_has_projection)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        _projection_reduction = std::make_unique&lt;cpu::kernels::CpuGemmLowpMatrixAReductionKernel&gt;();</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        _projection_reduction-&gt;configure(_projection_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>(), _projection_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>(), <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(output_size, <span class="keyword">false</span>, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acce0a047e80de4da37b9add7acef765c">hidden_state_zero</a>(), <span class="keyword">true</span>));</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <span class="keywordflow">if</span>(_projection_bias != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        {</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            _projection_bias_add.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(_projection_bias, &amp;_projection_eff_bias, &amp;_projection_eff_bias, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">// Pre-transpose weights to be used in GEMM.</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    _transpose_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(input_to_forget_weights, &amp;_input_to_forget_weights_transposed);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    _transpose_input_to_cell_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(input_to_cell_weights, &amp;_input_to_cell_weights_transposed);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    _transpose_input_to_output_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(input_to_output_weights, &amp;_input_to_output_weights_transposed);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    _transpose_recurrent_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(recurrent_to_forget_weights, &amp;_recurrent_to_forget_weights_transposed);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    _transpose_recurrent_to_cell_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(recurrent_to_cell_weights, &amp;_recurrent_to_cell_weights_transposed);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    _transpose_recurrent_to_output_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(recurrent_to_output_weights, &amp;_recurrent_to_output_weights_transposed);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">if</span>(!_has_cifg)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        _transpose_input_to_input_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), &amp;_input_to_input_weights_transposed);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        _transpose_recurrent_to_input_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>(), &amp;_recurrent_to_input_weights_transposed);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">if</span>(_has_projection)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        _transpose_projection_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">configure</a>(_projection_weights, &amp;_projection_weights_transposed);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    }</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> gemmlowp_info;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">type</a>               = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">gemmlowp_min_bound</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">std::numeric_limits&lt;int16_t&gt;::lowest</a>();</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">gemmlowp_max_bound</a> = std::numeric_limits&lt;int16_t&gt;::max();</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>   = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> mm_out_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">// Forget gate.</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> forget_gate_outstage_info(mm_out_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_forget_scale = input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    configure_mm(_mm_input_to_forget, _input_to_forget_outstage, gemmlowp_info,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                 input, &amp;_input_to_forget_weights_transposed, &amp;_input_to_forget_eff_bias,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                 &amp;_mm_input_to_forget_res, &amp;_input_to_forget_outstage_res, input_to_forget_scale,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                 mm_out_info, forget_gate_outstage_info);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_forget_scale = recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    configure_mm(_mm_recurrent_to_forget, _recurrent_to_forget_outstage, gemmlowp_info,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                 output_state_in, &amp;_recurrent_to_forget_weights_transposed, &amp;_recurrent_to_forget_eff_bias,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                 &amp;_mm_recurrent_to_forget_res, &amp;_recurrent_to_forget_outstage_res, recurrent_to_forget_scale,</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                 mm_out_info, forget_gate_outstage_info);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    _accumulate_input_recurrent_forget.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_input_to_forget_outstage_res, &amp;_recurrent_to_forget_outstage_res, &amp;_recurrent_to_forget_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    _input_to_forget_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        _mul_cell_to_forget_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_mul_cell_to_forget_res);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        _pixelwise_mul_cell_to_forget.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(cell_state_in, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), &amp;_mul_cell_to_forget_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        _cell_to_forget_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(_mul_cell_to_forget_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>(), 0)));</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_to_forget_outstage_res);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> cell_to_forget_scale = std::pow(2, cell_shift) * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>()-&gt;info()-&gt;quantization_info().uniform().scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(cell_to_forget_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        _cell_to_forget_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">configure</a>(&amp;_mul_cell_to_forget_res, <span class="keyword">nullptr</span>, &amp;_cell_to_forget_outstage_res, gemmlowp_info);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        _mul_cell_to_forget_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        _accumulate_cell_forget.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_recurrent_to_forget_outstage_res, &amp;_cell_to_forget_outstage_res, &amp;_recurrent_to_forget_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        _cell_to_forget_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *forget_activation_input = &amp;_recurrent_to_forget_outstage_res;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    {</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        configure_layer_norm(LayerNormGate::Forget, forget_activation_input);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        forget_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        forget_activation_input = &amp;get_layer_norm_output(LayerNormGate::Forget);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    }</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">// Output quantization info of Sigmoid and Tanh activations</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> sigmoid_tanh_outqinfo(1.f / 32768.f, 0);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>       forget_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_forget_gate);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    _forget_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(forget_gate_info);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    _forget_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(forget_activation_input, &amp;_forget_gate, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>));</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    forget_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="comment">// Modulation gate.</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> cell_outstage_info(mm_out_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_cell_scale = input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>();</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    configure_mm(_mm_input_to_cell, _input_to_cell_outstage, gemmlowp_info,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                 input, &amp;_input_to_cell_weights_transposed, &amp;_input_to_cell_eff_bias,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                 &amp;_mm_input_to_cell_res, &amp;_input_to_cell_outstage_res, input_to_cell_scale,</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                 mm_out_info, cell_outstage_info);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_cell_scale = recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>();</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    configure_mm(_mm_recurrent_to_cell, _recurrent_to_cell_outstage, gemmlowp_info,</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                 output_state_in, &amp;_recurrent_to_cell_weights_transposed, &amp;_recurrent_to_cell_eff_bias,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                 &amp;_mm_recurrent_to_cell_res, &amp;_recurrent_to_cell_outstage_res, recurrent_to_cell_scale,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                 mm_out_info, cell_outstage_info);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    _accumulate_input_recurrent_modulation.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_input_to_cell_outstage_res, &amp;_recurrent_to_cell_outstage_res, &amp;_recurrent_to_cell_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    _input_to_cell_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *cell_activation_input = &amp;_recurrent_to_cell_outstage_res;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        configure_layer_norm(LayerNormGate::Cell, cell_activation_input);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        cell_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        cell_activation_input = &amp;get_layer_norm_output(LayerNormGate::Cell);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> cell_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_gate);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    _cell_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(cell_gate_info);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    _cell_gate_tanh.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(cell_activation_input, &amp;_cell_gate, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>, 1.f, 1.f));</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    cell_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="comment">// Input gate.</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    _input_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(input_gate_info);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_input_gate);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordflow">if</span>(_has_cifg)</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        _ones.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(*_forget_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>());</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        _input_gate_sub.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_ones, &amp;_forget_gate, &amp;_input_gate, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        _ones.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_input_scale = _input_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        configure_mm(_mm_input_to_input, _input_to_input_outstage, gemmlowp_info,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                     input, &amp;_input_to_input_weights_transposed, &amp;_input_to_input_eff_bias,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                     &amp;_mm_input_to_input_res, &amp;_input_to_input_outstage_res, input_to_input_scale,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                     mm_out_info, input_outstage_info);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_input_scale = _recurrent_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        configure_mm(_mm_recurrent_to_input, _recurrent_to_input_outstage, gemmlowp_info,</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                     output_state_in, &amp;_recurrent_to_input_weights_transposed, &amp;_recurrent_to_input_eff_bias,</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                     &amp;_mm_recurrent_to_input_res, &amp;_recurrent_to_input_outstage_res, recurrent_to_input_scale,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                     mm_out_info, input_outstage_info);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        _accumulate_input_recurrent_input.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_input_to_input_outstage_res, &amp;_recurrent_to_input_outstage_res, &amp;_recurrent_to_input_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        _input_to_input_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        {</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            _mul_cell_to_input_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_mul_cell_to_input_res);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            _pixelwise_mul_cell_to_input.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(cell_state_in, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>(), &amp;_mul_cell_to_input_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> cell_to_input_scale = std::pow(2, cell_shift) * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>()-&gt;info()-&gt;quantization_info().uniform().scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(cell_to_input_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            _cell_to_input_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(_mul_cell_to_input_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>(), 0)));</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_to_input_outstage_res);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            _cell_to_input_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">configure</a>(&amp;_mul_cell_to_input_res, <span class="keyword">nullptr</span>, &amp;_cell_to_input_outstage_res, gemmlowp_info);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            _mul_cell_to_input_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            _accumulate_cell_input.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_recurrent_to_input_outstage_res, &amp;_cell_to_input_outstage_res, &amp;_recurrent_to_input_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            _cell_to_input_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        }</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *input_activation_input = &amp;_recurrent_to_input_outstage_res;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        {</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            configure_layer_norm(LayerNormGate::Input, input_activation_input);</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            input_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            input_activation_input = &amp;get_layer_norm_output(LayerNormGate::Input);</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        _input_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(input_activation_input, &amp;_input_gate, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>));</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        input_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    }</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="comment">// Cell.</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="comment">// TODO(COMPMID-3395): Perform multiplication in the quantized domain in NEPixelWiseMultiplication</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    _pixelwise_mul_forget_cell.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(&amp;_forget_gate, cell_state_in, &amp;_forget_gate, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      cell_gate_scale      = _cell_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      mul_input_cell_scale = cell_gate_scale * std::pow(2, 15 + cell_shift);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> mul_input_cell_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(mul_input_cell_scale, 0));</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_mul_input_cell_res);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    _mul_input_cell_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(mul_input_cell_info);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    _pixelwise_mul_input_cell.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(&amp;_input_gate, &amp;_cell_gate, &amp;_mul_input_cell_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    _cell_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    _add_forget_cell.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_forget_gate, &amp;_mul_input_cell_res, cell_state_out, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    _mul_input_cell_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    _forget_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">if</span>(_has_cell_clipping)</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        _cell_clip.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(cell_state_out, <span class="keyword">nullptr</span>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, -quantized_cell_clip, quantized_cell_clip));</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    }</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <span class="comment">// Output gate.</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> output_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_output_scale = input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>();</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    configure_mm(_mm_input_to_output, _input_to_output_outstage, gemmlowp_info,</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                 input, &amp;_input_to_output_weights_transposed, &amp;_input_to_output_eff_bias,</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                 &amp;_mm_input_to_output_res, &amp;_input_to_output_outstage_res, input_to_output_scale,</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                 mm_out_info, output_outstage_info);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_output_scale = recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>();</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    configure_mm(_mm_recurrent_to_output, _recurrent_to_output_outstage, gemmlowp_info,</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                 output_state_in, &amp;_recurrent_to_output_weights_transposed, &amp;_recurrent_to_output_eff_bias,</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                 &amp;_mm_recurrent_to_output_res, &amp;_recurrent_to_output_outstage_res, recurrent_to_output_scale,</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                 mm_out_info, output_outstage_info);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    _accumulate_input_recurrent_output.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_recurrent_to_output_outstage_res, &amp;_input_to_output_outstage_res, &amp;_recurrent_to_output_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    _input_to_output_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    {</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="comment">// TODO(COMPMID-3395): Perform multiplication in the quantized domain in NEPixelWiseMultiplication</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="comment">// Here we are not using the output stage because all operations are done in float</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        _mul_cell_to_output_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(cell_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>));</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_mul_cell_to_output_res);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        _pixelwise_mul_cell_to_output.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(cell_state_out, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>(), &amp;_mul_cell_to_output_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> cell_to_output_scale = std::pow(2, cell_shift) * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>()-&gt;info()-&gt;quantization_info().uniform().scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>();</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(cell_to_output_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>);</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        _cell_to_output_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(_mul_cell_to_output_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>(), 0)));</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_cell_to_output_outstage_res);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        _cell_to_output_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">configure</a>(&amp;_mul_cell_to_output_res, <span class="keyword">nullptr</span>, &amp;_cell_to_output_outstage_res, gemmlowp_info);</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        _mul_cell_to_output_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        _accumulate_cell_to_output.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_recurrent_to_output_outstage_res, &amp;_cell_to_output_outstage_res, &amp;_recurrent_to_output_outstage_res, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        _cell_to_output_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor.xhtml">Tensor</a> *output_activation_input = &amp;_recurrent_to_output_outstage_res;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        configure_layer_norm(LayerNormGate::Output, output_activation_input);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        output_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        output_activation_input = &amp;get_layer_norm_output(LayerNormGate::Output);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    }</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> output_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_output_gate);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    _output_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(output_gate_info);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    _output_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(output_activation_input, &amp;_output_gate, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>));</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    output_activation_input-&gt;<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="comment">// Hidden.</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    _hidden_tanh.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(cell_state_out, &amp;_input_gate, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>, 1.f, 1.f));</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="comment">// TODO(COMPMID-3395): Perform multiplication in the quantized domain in NEPixelWiseMultiplication</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_hidden_mul_res);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> hidden_mul_res(_input_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    _hidden_mul_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(hidden_mul_res);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    _pixelwise_mul_hidden.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">configure</a>(&amp;_output_gate, &amp;_input_gate, &amp;_hidden_mul_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    _output_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    _input_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> hidden_state_scale = std::pow(2, -15) / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">hidden_state_scale</a>() * std::pow(2, -15);</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(hidden_state_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>, <span class="comment">/* ignore_epsilon */</span> <span class="keyword">true</span>);</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">gemmlowp_offset</a>  = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acce0a047e80de4da37b9add7acef765c">hidden_state_zero</a>();</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a> = output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>();</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    _projection_tensor_copy_required = (num_units != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>);</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *hidden_gate_result      = output_state_out;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    _memory_group.<a class="code" href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">manage</a>(&amp;_hidden_gate);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        _hidden_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(*output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        _hidden_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">set_tensor_shape</a>(_hidden_mul_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>());</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        hidden_gate_result = &amp;_hidden_gate;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    }</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    _hidden_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">configure</a>(&amp;_hidden_mul_res, <span class="keyword">nullptr</span>, hidden_gate_result, gemmlowp_info);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    _hidden_mul_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="comment">// Projection.</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <span class="keywordflow">if</span>(_has_projection)</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>              projection_outstage_info(*output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qprojection      = _projection_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span>                   projection_scale = qprojection.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">hidden_state_scale</a>() / qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">gemmlowp_offset</a>                  = qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">gemmlowp_min_bound</a>               = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">std::numeric_limits&lt;int8_t&gt;::lowest</a>();</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">gemmlowp_max_bound</a>               = std::numeric_limits&lt;int8_t&gt;::max();</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>                 = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_mm_out_info{ mm_out_info };</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        projection_mm_out_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">set_tensor_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(output_size, batch_size));</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        configure_mm(_mm_projection, _projection_outstage, gemmlowp_info,</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                     hidden_gate_result, &amp;_projection_weights_transposed, &amp;_projection_eff_bias,</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                     &amp;_mm_projection_res, &amp;_projection_outstage_res, projection_scale,</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                     projection_mm_out_info, projection_outstage_info);</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *accumulate_destination = output_state_out;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            _hidden_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            _projection_accumulate_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">init</a>(*output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>());</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            _projection_accumulate_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">set_tensor_shape</a>(_projection_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>());</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            _projection_output_to_accumulate_copy.configure(*output_state_in, _projection_accumulate_res);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            accumulate_destination = &amp;_projection_accumulate_res;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;        _accumulate_projection.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">configure</a>(&amp;_projection_outstage_res, accumulate_destination, accumulate_destination, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        _projection_outstage_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            _projection_accumulate_to_output_copy.configure(_projection_accumulate_res, *output_state_out);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            _projection_accumulate_res.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        }</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        int8_t quantized_projection_clip{ 0 };</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a353a68a1102867145e4246af261a3a8f">projection_clip</a>() &gt; 0.0f)</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        {</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            quantized_projection_clip = utility::clamp&lt;int8_t&gt;(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a353a68a1102867145e4246af261a3a8f">projection_clip</a>() / qprojection.scale, -128, 127);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        }</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <span class="keywordflow">if</span>(quantized_projection_clip &gt; 0)</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        {</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            _projection_clip.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">configure</a>(output_state_out, <span class="keyword">nullptr</span>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, -quantized_projection_clip, quantized_projection_clip));</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            _has_projection_clipping = <span class="keyword">true</span>;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        }</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    }</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    {</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        {</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            _hidden_to_output_copy.configure(_hidden_gate, *output_state_out);</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            _hidden_gate.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        }</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    }</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <span class="comment">// Copy output_state_out to output</span></div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    _copy_output.<a class="code" href="classarm__compute_1_1_n_e_copy.xhtml#a9daf8026e68559806afe7d0aa12693d6">configure</a>(output_state_out, output);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;}</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div><div class="line"><a name="l00675"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a8c31fb434071a8c3f6fb667794135431">  675</a></span>&#160;<a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a8c31fb434071a8c3f6fb667794135431">NEQLSTMLayer::validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>,</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">input_to_forget_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">input_to_cell_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">input_to_output_weights</a>,</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">recurrent_to_forget_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">recurrent_to_cell_weights</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">recurrent_to_output_weights</a>,</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_bias, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>,</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_in, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_in,</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *cell_state_out, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output_state_out, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *output,</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml">LSTMParams&lt;ITensorInfo&gt;</a> &amp;lstm_params)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;{</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(input, input_to_forget_weights, input_to_cell_weights, input_to_output_weights, recurrent_to_forget_weights, recurrent_to_cell_weights,</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                                        recurrent_to_output_weights, forget_gate_bias, cell_bias, output_gate_bias, cell_state_in, output_state_in,</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                                        cell_state_out, output_state_out, output);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(input, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 2, <span class="stringliteral">&quot;Input must have exactly 2 dimensions&quot;</span>);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>  = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_size  = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_units   = input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a> = output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(_out_state_output_size_dimension_idx);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 2);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">input_size</a>);</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(input_to_output_weights, input_to_forget_weights, input_to_cell_weights);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 2);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) != num_units);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(recurrent_to_output_weights, recurrent_to_forget_weights, recurrent_to_cell_weights);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(input_to_forget_weights, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="comment">// If the input_to_forget_weights data type is DataType::QSYMM8 then it can never match the other weights as they are all DataType::QASYMM8_SIGNED</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keywordflow">if</span> (input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>)</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    {</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input_to_cell_weights, input_to_output_weights,</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                                                           recurrent_to_forget_weights, recurrent_to_cell_weights, recurrent_to_output_weights);</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    }</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input_to_forget_weights, input_to_cell_weights, input_to_output_weights,</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                                                           recurrent_to_forget_weights, recurrent_to_cell_weights, recurrent_to_output_weights);</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    }</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(forget_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 1);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(forget_gate_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != num_units);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(forget_gate_bias, cell_bias, output_gate_bias);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(forget_gate_bias, 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(forget_gate_bias, cell_bias, output_gate_bias);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 2);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != num_units);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) != batch_size);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(cell_state_in, 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">num_dimensions</a>() != 2);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(0) != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>);</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">dimension</a>(1) != batch_size);</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input, output_state_in);</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="comment">// Check whether peephole weights are all there or none</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">has_peephole_opt</a>())</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    {</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>());</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>);</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>()-&gt;num_dimensions() != 1);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>()-&gt;dimension(0) != num_units);</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>());</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>());</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        <span class="keywordflow">if</span>(!lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">has_cifg_opt</a>())</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        {</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>());</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>());</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>());</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        }</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    }</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qinput           = input-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qcell_state_in   = cell_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qoutput_state_in = output_state_in-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>();</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="comment">// Calculate and decompose effective scales for optimizing matmul calculation</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keyword">const</span> int32_t cell_shift = log2(qcell_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>);</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(cell_shift &gt; -9);</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="comment">// Calculate quantized parameters for clipping.</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    int16_t quantized_cell_clip = 0;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aebbcdda23d18f77e84ee06e9f754c341">cell_clip</a>() &gt; 0.0f)</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    {</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        quantized_cell_clip = <a class="code" href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">quantize_qsymm16</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aebbcdda23d18f77e84ee06e9f754c341">cell_clip</a>(), qcell_state_in);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    }</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    <span class="comment">// Precompute effective bias for optimizing the matmul computations.</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> eff_bias_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_eff_bias_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(output_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="keywordflow">if</span>(!lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">has_cifg_opt</a>())</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>,</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                                                                                              -qinput.offset, <span class="keyword">true</span>)));</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>(), &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>,</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                                                                                              -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>,</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                                                                                              <span class="keyword">true</span>)));</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    }</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(input_to_forget_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.offset, <span class="keyword">true</span>)));</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(recurrent_to_forget_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>,</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                                                                                          -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>)));</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(input_to_cell_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.offset, <span class="keyword">true</span>)));</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(recurrent_to_cell_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>,</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                                                                                          <span class="keyword">true</span>)));</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(input_to_output_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>, -qinput.offset, <span class="keyword">true</span>)));</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(recurrent_to_output_weights, &amp;eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(num_units, <span class="keyword">false</span>,</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                                                                                          -qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>, <span class="keyword">true</span>)));</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a127009377712009a84cd0c48aa7e1edd">has_projection</a>())</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>(), &amp;projection_eff_bias_info, <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">GEMMLowpReductionKernelInfo</a>(output_size, <span class="keyword">false</span>,</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                                                                                              lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acce0a047e80de4da37b9add7acef765c">hidden_state_zero</a>(),</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                                                                                              <span class="keyword">true</span>)));</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ad676992a90d193409fa6a28a001af6c8">projection_bias</a>() != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        {</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ad676992a90d193409fa6a28a001af6c8">projection_bias</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ad676992a90d193409fa6a28a001af6c8">projection_bias</a>(), &amp;projection_eff_bias_info, &amp;projection_eff_bias_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        }</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    }</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, input_size), 1, input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_to_output_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, input_size), 1, input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> recurrent_to_forget_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, output_size), 1, recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> recurrent_to_cell_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, output_size), 1, recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> recurrent_to_output_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, output_size), 1, recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> recurrent_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, output_size), 1, recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>());</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(input_to_cell_weights, &amp;input_weights_transposed));</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(input_to_output_weights, &amp;input_to_output_weights_transposed));</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(recurrent_to_forget_weights, &amp;recurrent_to_forget_weights_transposed));</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(recurrent_to_cell_weights, &amp;recurrent_to_cell_weights_transposed));</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(recurrent_to_output_weights, &amp;recurrent_to_output_weights_transposed));</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <span class="keywordflow">if</span>(!lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">has_cifg_opt</a>())</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    {</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> recurrent_to_input_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, output_size), 1,</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                                                               recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>()-&gt;quantization_info());</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_to_input_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, input_size), 1,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                                                           lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>()-&gt;data_type(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>()-&gt;quantization_info());</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), &amp;input_to_input_weights_transposed));</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>(), &amp;recurrent_to_input_weights_transposed));</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    }</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a127009377712009a84cd0c48aa7e1edd">has_projection</a>())</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    {</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(output_size, num_units), 1, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>()-&gt;data_type(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>()-&gt;quantization_info());</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NETranspose::validate</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>(), &amp;projection_weights_transposed));</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    }</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> gemmlowp_info;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">type</a>               = <a class="code" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a>;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">gemmlowp_min_bound</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">std::numeric_limits&lt;int16_t&gt;::lowest</a>();</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">gemmlowp_max_bound</a> = std::numeric_limits&lt;int16_t&gt;::max();</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>   = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> has_layer_norm = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2d615f651270885a1b996046e9902a3c">use_layer_norm</a>();</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="comment">// Forget gate.</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>() == 0);</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> forget_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> mm_out_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_forget_scale = input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, input, &amp;input_weights_transposed, &amp;eff_bias_info, input_to_forget_scale, &amp;mm_out_info, &amp;forget_outstage_info));</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_forget_scale = recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, output_state_in, &amp;recurrent_weights_transposed, &amp;eff_bias_info, recurrent_to_forget_scale, &amp;mm_out_info, &amp;forget_outstage_info));</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;forget_outstage_info, &amp;forget_outstage_info, &amp;forget_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">has_peephole_opt</a>())</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    {</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>);</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(cell_state_in, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>(), &amp;mm_out_info, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                                                                        <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> cell_to_forget_scale = std::pow(2, cell_shift) * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">cell_to_forget_weights</a>()-&gt;quantization_info().uniform().scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">forget_intermediate_scale</a>();</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(cell_to_forget_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>));</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">NEGEMMLowpOutputStage::validate</a>(&amp;mm_out_info, <span class="keyword">nullptr</span>, &amp;forget_outstage_info, gemmlowp_info));</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;forget_outstage_info, &amp;forget_outstage_info, &amp;forget_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    }</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="keywordflow">if</span>(has_layer_norm)</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    {</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *w_info = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a7a4d5e8e4fdaff447b8c60f5ed6f4712">forget_layer_norm_weights</a>();</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">forget_gate_bias</a>;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_layer_norm(forget_outstage_info, *w_info, *b_info));</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    }</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    <span class="comment">// Output quantization info of Sigmoid and Tanh activations</span></div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> sigmoid_tanh_outqinfo(1.f / 32768.f, 0);</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>       forget_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(&amp;forget_outstage_info, &amp;forget_gate_info, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>)));</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="comment">// Modulation gate.</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>() == 0);</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> cell_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_cell_scale = input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>();</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, input, &amp;input_weights_transposed, &amp;eff_bias_info, input_to_cell_scale, &amp;mm_out_info, &amp;cell_outstage_info));</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_cell_scale = recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">cell_intermediate_scale</a>();</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, output_state_in, &amp;recurrent_weights_transposed, &amp;eff_bias_info, recurrent_to_cell_scale, &amp;mm_out_info, &amp;cell_outstage_info));</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;cell_outstage_info, &amp;cell_outstage_info, &amp;cell_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    <span class="keywordflow">if</span>(has_layer_norm)</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;    {</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *w_info = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a76f19cb614443980dcdf9b2054e4eb09">cell_layer_norm_weights</a>();</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b_info = cell_bias;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_layer_norm(cell_outstage_info, *w_info, *b_info));</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    }</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> cell_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(&amp;cell_outstage_info, &amp;cell_gate_info, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>, 1.f, 1.f)));</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    <span class="comment">// Input gate.</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">has_cifg_opt</a>())</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    {</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        <a class="code" href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>() != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Input gate bias must not be present when CIFG is used&quot;</span>);</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticSubtraction::validate</a>(&amp;input_gate_info, &amp;forget_gate_info, &amp;forget_gate_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    }</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    {</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>());</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        <span class="comment">// If the input_to_forget_weights data type is DataType::QSYMM8 then it can never match the other weights as they are all DataType::QASYMM8_SIGNED</span></div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        <span class="keywordflow">if</span> (input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>() == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">DataType::QSYMM8</a>)</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;        {</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>());</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        }</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        {</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input_to_forget_weights, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>());</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;        }</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(input_to_forget_weights, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>());</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(recurrent_to_forget_weights, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>());</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(forget_gate_bias, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>());</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(forget_gate_bias, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>());</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>() == 0);</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> input_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_input_scale = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">input_to_input_weights</a>()-&gt;quantization_info().uniform().scale * qinput.scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, input, &amp;input_weights_transposed, &amp;eff_bias_info, input_to_input_scale, &amp;mm_out_info, &amp;input_outstage_info));</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_input_scale = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">recurrent_to_input_weights</a>()-&gt;quantization_info().uniform().scale * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, output_state_in, &amp;recurrent_weights_transposed, &amp;eff_bias_info, recurrent_to_input_scale, &amp;mm_out_info, &amp;input_outstage_info));</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;input_outstage_info, &amp;input_outstage_info, &amp;input_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">has_peephole_opt</a>())</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        {</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(cell_state_in, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>(), &amp;mm_out_info, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                                                                            <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">float</span> cell_to_input_scale = std::pow(2, cell_shift) * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">cell_to_input_weights</a>()-&gt;quantization_info().uniform().scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">input_intermediate_scale</a>();</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(cell_to_input_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>));</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">NEGEMMLowpOutputStage::validate</a>(&amp;mm_out_info, &amp;eff_bias_info, &amp;input_outstage_info, gemmlowp_info));</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;input_outstage_info, &amp;input_outstage_info, &amp;input_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        }</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        <span class="keywordflow">if</span>(has_layer_norm)</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        {</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *w_info = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#aa261869a77af2c18d4b514bd0969d2d4">input_layer_norm_weights</a>();</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b_info = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">input_gate_bias</a>();</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_layer_norm(input_outstage_info, *w_info, *b_info));</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;        }</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(&amp;input_outstage_info, &amp;input_gate_info, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>, 1.f, 1.f)));</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    }</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    <span class="comment">// Cell.</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(&amp;forget_gate_info, cell_state_in, &amp;forget_gate_info, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(&amp;input_gate_info, cell_state_in, &amp;cell_gate_info, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;forget_gate_info, &amp;cell_gate_info, cell_state_out, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <span class="keywordflow">if</span>(quantized_cell_clip &gt; 0)</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    {</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(cell_state_out, <span class="keyword">nullptr</span>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, -quantized_cell_clip,</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                                                                                                             quantized_cell_clip)));</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    }</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <span class="comment">// Output gate.</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>() == 0);</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> output_outstage_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, <a class="code" href="classarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>(), 0));</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>      input_to_output_scale = input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qinput.scale / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>();</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, input, &amp;input_weights_transposed, &amp;eff_bias_info, input_to_output_scale, &amp;mm_out_info, &amp;output_outstage_info));</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> recurrent_to_output_scale = recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">quantization_info</a>().<a class="code" href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">uniform</a>().<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">output_intermediate_scale</a>();</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, output_state_in, &amp;recurrent_weights_transposed, &amp;eff_bias_info, recurrent_to_output_scale, &amp;mm_out_info, &amp;output_outstage_info));</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;output_outstage_info, &amp;output_outstage_info, &amp;output_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">has_peephole_opt</a>())</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    {</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>(), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>);</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;        <span class="comment">// TODO(COMPMID-3395): Perform multiplication in the quantized domain in NEPixelWiseMultiplication</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;        <span class="comment">// Here we are not using the output stage because all operations are done in float</span></div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;        <span class="comment">// const float cell_to_output_scale = std::pow(2, cell_shift) * lstm_params.cell_to_output_weights()-&gt;quantization_info().uniform().scale / lstm_params.output_intermediate_scale();</span></div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        <span class="comment">// ARM_COMPUTE_RETURN_ON_ERROR(quantization::calculate_quantized_multiplier(cell_to_output_scale, &amp;gemmlowp_info.gemmlowp_multiplier, &amp;gemmlowp_info.gemmlowp_shift));</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(cell_state_out, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">cell_to_output_weights</a>(), &amp;output_outstage_info, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>,</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                                                                        <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(&amp;output_outstage_info, &amp;output_outstage_info, &amp;output_outstage_info, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    }</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="keywordflow">if</span>(has_layer_norm)</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;    {</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *w_info = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a282e7eac2def0a1b1c5bb4a74c0f99a1">output_layer_norm_weights</a>();</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *b_info = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">output_gate_bias</a>;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_layer_norm(output_outstage_info, *w_info, *b_info));</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    }</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> output_gate_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">DataType::QSYMM16</a>, sigmoid_tanh_outqinfo);</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(&amp;output_outstage_info, &amp;output_gate_info, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">ActivationLayerInfo::ActivationFunction::LOGISTIC</a>)));</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;    <span class="comment">// Hidden.</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(cell_state_out, &amp;input_gate_info, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">ActivationLayerInfo::ActivationFunction::TANH</a>, 1.f, 1.f)));</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> hidden_mul_res(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>);</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> hidden_out_info(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(num_units, batch_size), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>);</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">NEPixelWiseMultiplication::validate</a>(&amp;output_gate_info, &amp;input_gate_info, &amp;hidden_mul_res, 1.f, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>, <a class="code" href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">RoundingPolicy::TO_ZERO</a>));</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">hidden_state_scale</a>() == 0);</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> hidden_state_scale = std::pow(2, -15) / lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">hidden_state_scale</a>() * std::pow(2, -15);</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(hidden_state_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>, <span class="comment">/* ignore_epsilon */</span> <span class="keyword">true</span>));</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">gemmlowp_offset</a>  = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#acce0a047e80de4da37b9add7acef765c">hidden_state_zero</a>();</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a> = hidden_out_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">data_type</a>();</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">NEGEMMLowpOutputStage::validate</a>(&amp;hidden_mul_res, <span class="keyword">nullptr</span>, &amp;hidden_out_info, gemmlowp_info));</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> projection_tensor_copy_required = num_units != <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">output_size</a>;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <span class="comment">// Projection.</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a127009377712009a84cd0c48aa7e1edd">has_projection</a>())</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    {</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(recurrent_to_forget_weights, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>());</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;        <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> == 0);</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml">UniformQuantizationInfo</a> qprojection      = lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>()-&gt;quantization_info().uniform();</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span>                   projection_scale = qprojection.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a> * lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">hidden_state_scale</a>() / qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">scale</a>;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">quantization::calculate_quantized_multiplier</a>(projection_scale, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a>, &amp;gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a>));</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">gemmlowp_offset</a>    = qoutput_state_in.<a class="code" href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">offset</a>;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">gemmlowp_min_bound</a> = <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">std::numeric_limits&lt;int8_t&gt;::lowest</a>();</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">gemmlowp_max_bound</a> = std::numeric_limits&lt;int8_t&gt;::max();</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        gemmlowp_info.<a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a>   = <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_outstage_info(*output_state_out);</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_weights_transposed(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(output_size, num_units), 1, lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>()-&gt;data_type(), lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">projection_weights</a>()-&gt;quantization_info());</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> projection_mm_out_info{ mm_out_info };</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        projection_mm_out_info.<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">set_tensor_shape</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(output_size, batch_size));</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(validate_mm(gemmlowp_info, &amp;hidden_out_info, &amp;projection_weights_transposed, &amp;projection_eff_bias_info, projection_scale, &amp;projection_mm_out_info,</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                                                &amp;projection_outstage_info));</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        <span class="keywordflow">if</span>(projection_tensor_copy_required)</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;        {</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">NEQLSTMLayer::TensorCopyKernel::validate</a>(*output_state_in, projection_outstage_info));</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;        }</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">NEArithmeticAddition::validate</a>(output_state_out, output_state_out, output_state_out, <a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a>));</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        <span class="keywordflow">if</span>(projection_tensor_copy_required)</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        {</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">NEQLSTMLayer::TensorCopyKernel::validate</a>(projection_outstage_info, *output_state_out));</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;        }</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;        int8_t quantized_projection_clip{ 0 };</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;        <span class="keywordflow">if</span>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a353a68a1102867145e4246af261a3a8f">projection_clip</a>() &gt; 0.0f)</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;        {</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;            quantized_projection_clip = <a class="code" href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">quantize_qasymm8_signed</a>(lstm_params.<a class="code" href="classarm__compute_1_1_l_s_t_m_params.xhtml#a353a68a1102867145e4246af261a3a8f">projection_clip</a>(), qprojection);</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;        }</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;        <span class="keywordflow">if</span>(quantized_projection_clip &gt; 0)</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;        {</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">NEActivationLayer::validate</a>(output_state_out, <span class="keyword">nullptr</span>, <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(<a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a>, -quantized_projection_clip,</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                                                                                                                   quantized_projection_clip)));</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;        }</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    }</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    {</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;        <span class="keywordflow">if</span>(projection_tensor_copy_required)</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;        {</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;            <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">NEQLSTMLayer::TensorCopyKernel::validate</a>(hidden_out_info, *output_state_out));</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;        }</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    }</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    <span class="keywordflow">if</span>(cell_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() &gt; 0)</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    {</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(cell_state_in, cell_state_out);</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(cell_state_in, cell_state_out);</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    }</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;    <span class="keywordflow">if</span>(output_state_out-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() &gt; 0)</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;    {</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a>(input, output_state_out);</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;        <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a>(output_state_in, output_state_out);</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    }</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="classarm__compute_1_1_n_e_copy.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">NECopy::validate</a>(output_state_out, output));</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a>{};</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;}</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;</div><div class="line"><a name="l01068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#ad1717410afd0be936c6213a63c8005fb"> 1068</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">NEQLSTMLayer::run</a>()</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;{</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">prepare</a>();</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    <span class="comment">// Acquire all the temporaries</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    <a class="code" href="classarm__compute_1_1_memory_group_resource_scope.xhtml">MemoryGroupResourceScope</a> scope_mg(_memory_group);</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    <span class="comment">// Forget gate.</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    _mm_input_to_forget.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    _input_to_forget_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    _mm_recurrent_to_forget.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    _recurrent_to_forget_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    _accumulate_input_recurrent_forget.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    {</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        _pixelwise_mul_cell_to_forget.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;        _cell_to_forget_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;        _accumulate_cell_forget.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    }</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    {</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">schedule</a>(get_layer_norm(LayerNormGate::Forget).<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    }</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    _forget_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <span class="comment">// Modulation gate.</span></div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    _mm_input_to_cell.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    _input_to_cell_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    _mm_recurrent_to_cell.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    _recurrent_to_cell_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;    _accumulate_input_recurrent_modulation.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    {</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">schedule</a>(get_layer_norm(LayerNormGate::Cell).<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    }</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    _cell_gate_tanh.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="comment">// Input gate</span></div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    <span class="keywordflow">if</span>(_has_cifg)</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    {</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;        _input_gate_sub.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    }</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    {</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        _mm_input_to_input.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;        _input_to_input_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;        _mm_recurrent_to_input.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;        _recurrent_to_input_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;        _accumulate_input_recurrent_input.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;        <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;        {</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;            _pixelwise_mul_cell_to_input.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;            _cell_to_input_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;            _accumulate_cell_input.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;        }</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;        <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;        {</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;            <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">schedule</a>(get_layer_norm(LayerNormGate::Input).<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;        }</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;        _input_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    }</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    <span class="comment">// Cell.</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    _pixelwise_mul_forget_cell.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    _pixelwise_mul_input_cell.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    _add_forget_cell.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    <span class="keywordflow">if</span>(_has_cell_clipping)</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;    {</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        _cell_clip.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    }</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    <span class="comment">// Output gate.</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    _mm_input_to_output.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    _input_to_output_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    _mm_recurrent_to_output.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    _recurrent_to_output_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    _accumulate_input_recurrent_output.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <span class="keywordflow">if</span>(_has_peephole)</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    {</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;        _pixelwise_mul_cell_to_output.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;        _cell_to_output_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;        _accumulate_cell_to_output.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    }</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keywordflow">if</span>(_has_layer_norm)</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    {</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">schedule</a>(get_layer_norm(LayerNormGate::Output).<span class="keyword">get</span>(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    }</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    _output_gate_sigmoid.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    <span class="comment">// Hidden.</span></div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;    _hidden_tanh.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    _pixelwise_mul_hidden.<a class="code" href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;    _hidden_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    <span class="comment">// Projection.</span></div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    <span class="keywordflow">if</span>(_has_projection)</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    {</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;        _mm_projection.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        _projection_outstage.<a class="code" href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        {</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;            _projection_output_to_accumulate_copy.run();</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        }</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        _accumulate_projection.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;        {</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;            _projection_accumulate_to_output_copy.run();</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;        }</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;        <span class="keywordflow">if</span>(_has_projection_clipping)</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;        {</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;            _projection_clip.<a class="code" href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        }</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    }</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    {</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;        <span class="keywordflow">if</span>(_projection_tensor_copy_required)</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        {</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;            _hidden_to_output_copy.run();</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;        }</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;    }</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    <span class="comment">// Copy output_state_out to output</span></div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    _copy_output.<a class="code" href="classarm__compute_1_1_n_e_copy.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;}</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;</div><div class="line"><a name="l01210"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77"> 1210</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">NEQLSTMLayer::prepare</a>()</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;{</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    <span class="keywordflow">if</span>(!_is_prepared)</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    {</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;        <span class="keywordflow">if</span>(_convert_input_to_forget_weights_to_qsymm8)</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;        {</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;            _input_to_forget_weights_f32.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;            _input_to_forget_weights_symm8.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;            _dequantize_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_dequantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;            _quantize_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_quantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;        }</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;        <span class="comment">// Pre-transpose weights to be used in GEMM.</span></div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;        _input_to_forget_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;        _input_to_cell_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;        _input_to_output_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;        _recurrent_to_forget_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;        _recurrent_to_cell_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;        _recurrent_to_output_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;        _transpose_input_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;        _transpose_input_to_cell_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;        _transpose_input_to_output_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;        _transpose_recurrent_to_forget_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;        _transpose_recurrent_to_cell_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;        _transpose_recurrent_to_output_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;        <span class="comment">// Precompute effective biases</span></div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        <span class="keywordflow">if</span>(_has_cifg)</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        {</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;            std::fill_n(reinterpret_cast&lt;int16_t *&gt;(_ones.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">buffer</a>()), _ones.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">total_size</a>() / _ones.<a class="code" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">element_size</a>(), 32767);</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;        }</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;        {</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;            _input_to_input_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;            _recurrent_to_input_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;            <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packII =</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;            {</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _input_to_input_weights },</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_input_to_input_eff_bias }</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;            };</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;            <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_input_to_input_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _input_to_input_reduction-&gt;window(), packII);</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;            <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packRI =</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;            {</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _recurrent_to_input_weights },</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_recurrent_to_input_eff_bias }</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;            };</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;            <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_recurrent_to_input_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _recurrent_to_input_reduction-&gt;window(), packRI);</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;            _input_to_input_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;            _recurrent_to_input_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;            _transpose_input_to_input_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;            _transpose_recurrent_to_input_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;            _input_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;            _recurrent_to_input_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;        }</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        _input_to_forget_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;        _recurrent_to_forget_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;        _input_to_cell_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;        _recurrent_to_cell_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;        _input_to_output_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;        _recurrent_to_output_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packIF =</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;        {</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _input_to_forget_weights },</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_input_to_forget_eff_bias }</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;        };</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_input_to_forget_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _input_to_forget_reduction-&gt;window(), packIF);</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packRF =</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;        {</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _recurrent_to_forget_weights },</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_recurrent_to_forget_eff_bias }</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;        };</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_recurrent_to_forget_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _recurrent_to_forget_reduction-&gt;window(), packRF);</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packIC =</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;        {</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _input_to_cell_weights },</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_input_to_cell_eff_bias }</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;        };</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_input_to_cell_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _input_to_cell_reduction-&gt;window(), packIC);</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packRC =</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;        {</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _recurrent_to_cell_weights },</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_recurrent_to_cell_eff_bias }</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;        };</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_recurrent_to_cell_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _recurrent_to_cell_reduction-&gt;window(), packRC);</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packIO =</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;        {</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _input_to_output_weights },</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_input_to_output_eff_bias }</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;        };</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_input_to_output_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _input_to_output_reduction-&gt;window(), packIO);</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;        <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> packRO =</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;        {</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _recurrent_to_output_weights },</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;            { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_recurrent_to_output_eff_bias }</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;        };</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_recurrent_to_output_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _recurrent_to_output_reduction-&gt;window(), packRO);</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;        <span class="keywordflow">if</span>(_has_projection)</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;        {</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;            _projection_eff_bias.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;            <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a> =</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;            {</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>, _projection_weights },</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;                { <a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>, &amp;_projection_eff_bias }</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;            };</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;            <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">NEScheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">schedule_op</a>(_projection_reduction.get(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>, _projection_reduction-&gt;window(), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>);</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;            <span class="keywordflow">if</span>(_projection_bias != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;            {</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;                _projection_bias_add.<a class="code" href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;                _projection_bias-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;            }</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;            _projection_weights_transposed.<a class="code" href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;            _transpose_projection_weights.<a class="code" href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">run</a>();</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;            _projection_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;            <span class="keywordflow">if</span>(!_projection_tensor_copy_required)</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;            {</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;                _hidden_gate.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;                _projection_accumulate_res.<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;            }</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;        }</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;        <span class="comment">// Mark weights as unused</span></div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;        _input_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        _input_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;        _input_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        _recurrent_to_forget_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;        _recurrent_to_cell_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;        _recurrent_to_output_weights-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a>();</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;        _is_prepared = <span class="keyword">true</span>;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;    }</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;}</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a1f4e725b8e1ea36b30e09dc08ae6961d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">arm_compute::ITensorInfo::num_dimensions</a></div><div class="ttdeci">virtual size_t num_dimensions() const =0</div><div class="ttdoc">The number of dimensions of the tensor (rank) </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml">arm_compute::MemoryGroup</a></div><div class="ttdoc">Memory group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00043">MemoryGroup.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ab1b3d5364f11bca8cacef026c8038dba"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ab1b3d5364f11bca8cacef026c8038dba">arm_compute::LSTMParams::projection_weights</a></div><div class="ttdeci">const T * projection_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00225">LSTMParams.h:225</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel_xhtml_abd9de6fe0c3fc5b1b9bb6dc6ae62fbde"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer_normalization_kernel.xhtml#abd9de6fe0c3fc5b1b9bb6dc6ae62fbde">arm_compute::NEQLSTMLayerNormalizationKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ITensorInfo *weight, const ITensorInfo *bias)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEQLSTMLayerNormalizatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00137">NEQLSTMLayerNormalizationKernel.cpp:137</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEPixelWiseMultiplication::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00063">NEPixelWiseMultiplication.cpp:63</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a1cfb92f1c287bf099c3fca0ef0391a2b"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_multiplier</a></div><div class="ttdeci">int32_t gemmlowp_multiplier</div><div class="ttdoc">GEMMLowp output stage multiplier used for quantizing to QASYMM8. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02293">Types.h:2293</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_afa54d4a35e697cb14a38359616709681"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#afa54d4a35e697cb14a38359616709681">arm_compute::LSTMParams::input_to_input_weights</a></div><div class="ttdeci">const T * input_to_input_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00195">LSTMParams.h:195</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a507bd7e4d98cb3e45d3e820d8bac422a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a507bd7e4d98cb3e45d3e820d8bac422a">arm_compute::test::validation::output_gate_bias</a></div><div class="ttdeci">auto output_gate_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00483">LSTMLayerQuantized.cpp:483</a></div></div>
<div class="ttc" id="_window_helpers_8h_xhtml"><div class="ttname"><a href="_window_helpers_8h.xhtml">WindowHelpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abd9a9e4bfba3b2e6a35099618122d38e"><div class="ttname"><a href="namespacearm__compute.xhtml#abd9a9e4bfba3b2e6a35099618122d38e">arm_compute::quantize_qsymm16</a></div><div class="ttdeci">int16_t quantize_qsymm16(float value, const UniformQuantizationInfo &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a 16-bit symmetric quantization scheme. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00498">QuantizationInfo.h:498</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca"><div class="ttname"><a href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab300cae200f67712c1eb9234e28158ca">arm_compute::GEMMLowpOutputStageType::QUANTIZE_DOWN_FIXEDPOINT</a></div><div class="ttdoc">Quantize using a fixed point multiplication. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_a424e51a62c2ae679356f94f175ba0642"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a424e51a62c2ae679356f94f175ba0642">arm_compute::NEQLSTMLayer::NEQLSTMLayer</a></div><div class="ttdeci">NEQLSTMLayer(std::shared_ptr&lt; IMemoryManager &gt; memory_manager=nullptr)</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00113">NEQLSTMLayer.cpp:113</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a3ca8a4ea8f992df3b462bc7b24d097c6">arm_compute::DataType::QSYMM16</a></div><div class="ttdoc">quantized, symmetric fixed-point 16-bit number </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a2d615f651270885a1b996046e9902a3c"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a2d615f651270885a1b996046e9902a3c">arm_compute::LSTMParams::use_layer_norm</a></div><div class="ttdeci">bool use_layer_norm() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00310">LSTMParams.h:310</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_addition_xhtml_a5d4d1bdc6b902a7075b6850977a9ba7c"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">arm_compute::NEArithmeticAddition::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticAddition. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00049">NEArithmeticAddition.cpp:49</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_allocator_xhtml_a3fc6adad84b23f10d54d5a7b6928f872"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a3fc6adad84b23f10d54d5a7b6928f872">arm_compute::TensorAllocator::init</a></div><div class="ttdeci">void init(const TensorAllocator &amp;allocator, const Coordinates &amp;coords, TensorInfo &amp;sub_info)</div><div class="ttdoc">Shares the same backing memory with another tensor allocator, while the tensor info might be differen...</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00107">TensorAllocator.cpp:107</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a178f0d3d87f959e00a743328d95359d2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">arm_compute::ITensorInfo::dimension</a></div><div class="ttdeci">virtual size_t dimension(size_t index) const =0</div><div class="ttdoc">Return the size of the requested dimension. </div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a23be92a19e0d7c174ed444e709518afd"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a23be92a19e0d7c174ed444e709518afd">arm_compute::LSTMParams::has_peephole_opt</a></div><div class="ttdeci">bool has_peephole_opt() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00295">LSTMParams.h:295</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a7a4d5e8e4fdaff447b8c60f5ed6f4712"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a7a4d5e8e4fdaff447b8c60f5ed6f4712">arm_compute::LSTMParams::forget_layer_norm_weights</a></div><div class="ttdeci">T * forget_layer_norm_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00240">LSTMParams.h:240</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEGEMMLowpOutputStage::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00071">NEGEMMLowpOutputStage.cpp:71</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1info__helpers_xhtml_ace12965ef6278f7717bcd30fb5f18e9e"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1info__helpers.xhtml#ace12965ef6278f7717bcd30fb5f18e9e">arm_compute::utils::info_helpers::build_lstm_params_tensor_info</a></div><div class="ttdeci">void build_lstm_params_tensor_info(const LSTMParams&lt; T &gt; &amp;lstm_params, LSTMParams&lt; ITensorInfo &gt; *lstm_params_info)</div><div class="ttdoc">Build LSTMParams&lt;ITensorInfo&gt; object by extracting the metadata from each tensor. ...</div><div class="ttdef"><b>Definition:</b> <a href="_info_helpers_8h_source.xhtml#l00071">InfoHelpers.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a12a4f1190952613e36b44846962e26bb"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a12a4f1190952613e36b44846962e26bb">arm_compute::ITensorInfo::set_tensor_shape</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_tensor_shape(const TensorShape &amp;shape)=0</div><div class="ttdoc">Set the shape of an already initialized tensor. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a55daaf57fb833fc416d779c28f7a3c85"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a55daaf57fb833fc416d779c28f7a3c85">arm_compute::test::validation::forget_gate_bias</a></div><div class="ttdeci">auto forget_gate_bias</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00481">LSTMLayerQuantized.cpp:481</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_subtraction_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEArithmeticSubtraction::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00063">NEArithmeticSubtraction.cpp:63</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a15103352886ec83d9c250a7f5d5c630f"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a15103352886ec83d9c250a7f5d5c630f">arm_compute::IScheduler::schedule_op</a></div><div class="ttdeci">virtual void schedule_op(ICPPKernel *kernel, const Hints &amp;hints, const Window &amp;window, ITensorPack &amp;tensors)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_xhtml_aa37e2d0b4cd4f835bfa2a2df4a0bdd2c"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer.xhtml#aa37e2d0b4cd4f835bfa2a2df4a0bdd2c">arm_compute::NEActivationLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output, const ActivationLayerInfo &amp;act_info)</div><div class="ttdoc">[NEActivationLayer snippet] </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_8cpp_source.xhtml#l00059">NEActivationLayer.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_addition_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEArithmeticAddition::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00063">NEArithmeticAddition.cpp:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_dequantization_layer_xhtml_a83a344e60eb7db895953a942abf16628"><div class="ttname"><a href="classarm__compute_1_1_n_e_dequantization_layer.xhtml#a83a344e60eb7db895953a942abf16628">arm_compute::NEDequantizationLayer::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output)</div><div class="ttdoc">Configure the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_dequantization_layer_8cpp_source.xhtml#l00046">NEDequantizationLayer.cpp:46</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::Format::F32</a></div><div class="ttdoc">1 channel, 1 F32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_af1545bc0f6a025ce69051acfb0fd6a60"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#af1545bc0f6a025ce69051acfb0fd6a60">arm_compute::LSTMParams::output_intermediate_scale</a></div><div class="ttdeci">float output_intermediate_scale() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00280">LSTMParams.h:280</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_aae040c52316d86a4df2c7cdf179049bf"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#aae040c52316d86a4df2c7cdf179049bf">arm_compute::LSTMParams::has_cifg_opt</a></div><div class="ttdeci">bool has_cifg_opt() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00305">LSTMParams.h:305</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_abacf1d695940354574516b9584376935"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#abacf1d695940354574516b9584376935">arm_compute::LSTMParams::cell_intermediate_scale</a></div><div class="ttdeci">float cell_intermediate_scale() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00275">LSTMParams.h:275</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_acb8ad8e139ced30ee37c9f2fcd61a5b9"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#acb8ad8e139ced30ee37c9f2fcd61a5b9">arm_compute::LSTMParams::forget_intermediate_scale</a></div><div class="ttdeci">float forget_intermediate_scale() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00270">LSTMParams.h:270</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac62dfdcc14798598d953342789c9927e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac62dfdcc14798598d953342789c9927e">arm_compute::test::validation::recurrent_to_forget_weights</a></div><div class="ttdeci">auto recurrent_to_forget_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00477">LSTMLayerQuantized.cpp:477</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml">arm_compute::UniformQuantizationInfo</a></div><div class="ttdoc">Quantization info when assuming per layer quantization. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00044">QuantizationInfo.h:44</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a1d28dec57cce925ad92342891bd71e7c"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a1d28dec57cce925ad92342891bd71e7c">arm_compute::UniformQuantizationInfo::scale</a></div><div class="ttdeci">float scale</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00066">QuantizationInfo.h:66</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a01934c5087f5193aaf3ea9bf41d1a8dc"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_offset</a></div><div class="ttdeci">int32_t gemmlowp_offset</div><div class="ttdoc">GEMMLowp output stage offset used for quantizing to QASYMM8. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02292">Types.h:2292</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a57add10b1fb4dd17a02e16f53ae68781"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a57add10b1fb4dd17a02e16f53ae68781">arm_compute::LSTMParams::cell_to_input_weights</a></div><div class="ttdeci">T * cell_to_input_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00205">LSTMParams.h:205</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1quantization_xhtml_aada9ec2ea42d767854b2b7545ffd310b"><div class="ttname"><a href="namespacearm__compute_1_1quantization.xhtml#aada9ec2ea42d767854b2b7545ffd310b">arm_compute::quantization::calculate_quantized_multiplier</a></div><div class="ttdeci">Status calculate_quantized_multiplier(float multiplier, int32_t *quant_multiplier, int32_t *shift, bool ignore_epsilon=false)</div><div class="ttdoc">Calculate quantized representation of multiplier. </div><div class="ttdef"><b>Definition:</b> <a href="_asymm_helpers_8cpp_source.xhtml#l00039">AsymmHelpers.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a6db94040329f1dedcd348ec7de072e2a"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_max_bound</a></div><div class="ttdeci">int32_t gemmlowp_max_bound</div><div class="ttdoc">GEMMLowp max value used to saturate down the output result before converting back to QASYMM8...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02296">Types.h:2296</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00296">Error.h:296</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01641">Types.h:1641</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a6e019ad85979fd73c74f97e5483faf35"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">arm_compute::GEMMLowpOutputStageInfo::type</a></div><div class="ttdeci">GEMMLowpOutputStageType type</div><div class="ttdoc">GEMMLowp output stage type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02291">Types.h:2291</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1support_1_1cpp11_xhtml_a73e352c61baaf9c1178da2d30105b04e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#a73e352c61baaf9c1178da2d30105b04e">arm_compute::support::cpp11::lowest</a></div><div class="ttdeci">T lowest()</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00277">ToolchainSupport.h:277</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_addition_xhtml_aa6cd3281fb8cd7ee2a724ca5fcefb695"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_addition.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">arm_compute::NEArithmeticAddition::configure</a></div><div class="ttdeci">void configure(const ITensor *input1, const ITensor *input2, ITensor *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output and conversion policy. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_addition_8cpp_source.xhtml#l00054">NEArithmeticAddition.cpp:54</a></div></div>
<div class="ttc" id="_i_tensor_pack_8h_xhtml"><div class="ttname"><a href="_i_tensor_pack_8h.xhtml">ITensorPack.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="_cpu_gemm_lowp_matrix_reduction_kernel_8h_xhtml"><div class="ttname"><a href="_cpu_gemm_lowp_matrix_reduction_kernel_8h.xhtml">CpuGemmLowpMatrixReductionKernel.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_a8c31fb434071a8c3f6fb667794135431"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a8c31fb434071a8c3f6fb667794135431">arm_compute::NEQLSTMLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *input_to_forget_weights, const ITensorInfo *input_to_cell_weights, const ITensorInfo *input_to_output_weights, const ITensorInfo *recurrent_to_forget_weights, const ITensorInfo *recurrent_to_cell_weights, const ITensorInfo *recurrent_to_output_weights, const ITensorInfo *forget_gate_bias, const ITensorInfo *cell_bias, const ITensorInfo *output_gate_bias, const ITensorInfo *cell_state_in, const ITensorInfo *output_state_in, const ITensorInfo *cell_state_out, const ITensorInfo *output_state_out, const ITensorInfo *output, const LSTMParams&lt; ITensorInfo &gt; &amp;lstm_params)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEQLSTMLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer.cpp:675</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac547a66fe26967afb94760061ee0d0d1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac547a66fe26967afb94760061ee0d0d1">arm_compute::test::validation::input_to_cell_weights</a></div><div class="ttdeci">auto input_to_cell_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00474">LSTMLayerQuantized.cpp:474</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_adbd0cf83a8e1b335a9bf405a8e5019fa"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#adbd0cf83a8e1b335a9bf405a8e5019fa">arm_compute::Tensor::allocator</a></div><div class="ttdeci">TensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor&amp;#39;s allocator. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_8cpp_source.xhtml#l00048">Tensor.cpp:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_a47d74e4e51f9b1a636c4831bd747a97c"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">arm_compute::Tensor::info</a></div><div class="ttdeci">ITensorInfo * info() const override</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_8cpp_source.xhtml#l00033">Tensor.cpp:33</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a9a3e72153aeb3ed212e9c3698774e881"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881">arm_compute::TensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const override</div><div class="ttdoc">Data type used for each element of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00244">TensorInfo.h:244</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aab02df8a9ee45153f2fd76e934407fbd"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aab02df8a9ee45153f2fd76e934407fbd">arm_compute::test::validation::recurrent_to_output_weights</a></div><div class="ttdeci">auto recurrent_to_output_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00479">LSTMLayerQuantized.cpp:479</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_aff911654521523937ff24372a870b89f"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#aff911654521523937ff24372a870b89f">ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a9bc00234de9adf8c99a21eb1d7d494c2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">arm_compute::ITensor::mark_as_unused</a></div><div class="ttdeci">void mark_as_unused() const</div><div class="ttdoc">Marks a tensor as unused. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8cpp_source.xhtml#l00168">ITensor.cpp:168</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::Format::S32</a></div><div class="ttdoc">1 channel, 1 S32 per channel </div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_xhtml_a6fc0a49304c152c20a0f6df0634fb3cd"><div class="ttname"><a href="classarm__compute_1_1_memory_group.xhtml#a6fc0a49304c152c20a0f6df0634fb3cd">arm_compute::MemoryGroup::manage</a></div><div class="ttdeci">void manage(IMemoryManageable *obj) override</div><div class="ttdoc">Sets a object to be managed by the given memory group. </div><div class="ttdef"><b>Definition:</b> <a href="_memory_group_8h_source.xhtml#l00079">MemoryGroup.h:79</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_transpose_xhtml_a83a344e60eb7db895953a942abf16628"><div class="ttname"><a href="classarm__compute_1_1_n_e_transpose.xhtml#a83a344e60eb7db895953a942abf16628">arm_compute::NETranspose::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output)</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs and output. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_transpose_8cpp_source.xhtml#l00046">NETranspose.cpp:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a35e4b6311397e1f9532fb37560aa9996"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a35e4b6311397e1f9532fb37560aa9996">arm_compute::LSTMParams::recurrent_to_input_weights</a></div><div class="ttdeci">const T * recurrent_to_input_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00200">LSTMParams.h:200</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_acce0a047e80de4da37b9add7acef765c"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#acce0a047e80de4da37b9add7acef765c">arm_compute::LSTMParams::hidden_state_zero</a></div><div class="ttdeci">int32_t hidden_state_zero() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00285">LSTMParams.h:285</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ace4dd633420fa8d8aa71f60ff730f01f"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ace4dd633420fa8d8aa71f60ff730f01f">arm_compute::test::validation::input_to_output_weights</a></div><div class="ttdeci">auto input_to_output_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00475">LSTMLayerQuantized.cpp:475</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_ad676992a90d193409fa6a28a001af6c8"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#ad676992a90d193409fa6a28a001af6c8">arm_compute::LSTMParams::projection_bias</a></div><div class="ttdeci">const T * projection_bias() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00230">LSTMParams.h:230</a></div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml">arm_compute::QuantizationInfo</a></div><div class="ttdoc">Quantization information. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00071">QuantizationInfo.h:71</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a282e7eac2def0a1b1c5bb4a74c0f99a1"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a282e7eac2def0a1b1c5bb4a74c0f99a1">arm_compute::LSTMParams::output_layer_norm_weights</a></div><div class="ttdeci">T * output_layer_norm_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00250">LSTMParams.h:250</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a99975b4640768f914ec61f1d2f114db7"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a99975b4640768f914ec61f1d2f114db7">arm_compute::LSTMParams::input_intermediate_scale</a></div><div class="ttdeci">float input_intermediate_scale() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00265">LSTMParams.h:265</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_transpose_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_transpose.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NETranspose::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_transpose_8cpp_source.xhtml#l00064">NETranspose.cpp:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core_xhtml_ae939cbc6a8a6747f193bfe8b54a7881c"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ae939cbc6a8a6747f193bfe8b54a7881c">arm_compute::NEGEMMLowpMatrixMultiplyCore::configure</a></div><div class="ttdeci">void configure(const ITensor *a, const ITensor *b, const ITensor *c, ITensor *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00061">NEGEMMLowpMatrixMultiplyCore.cpp:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel_xhtml_a050e76429cda1ebc6e1554450a97a53b"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_gemm_lowp_matrix_a_reduction_kernel.xhtml#a050e76429cda1ebc6e1554450a97a53b">arm_compute::cpu::kernels::CpuGemmLowpMatrixAReductionKernel::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *dst, const GEMMLowpReductionKernelInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00101">CpuGemmLowpMatrixReductionKernel.cpp:101</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEActivationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_8cpp_source.xhtml#l00064">NEActivationLayer.cpp:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a5befbfaf6bc224eabc58b5e88b1de6d1"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a5befbfaf6bc224eabc58b5e88b1de6d1">ARM_COMPUTE_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00539">Validate.h:539</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_a48e1c0390758f580a42ce9672596209d"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#a48e1c0390758f580a42ce9672596209d">arm_compute::NEPixelWiseMultiplication::configure</a></div><div class="ttdeci">void configure(const ITensor *input1, const ITensor *input2, ITensor *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output and convertion policy. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00053">NEPixelWiseMultiplication.cpp:53</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_a3ba062c6249f47497c8f16525bcf36ca"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a3ba062c6249f47497c8f16525bcf36ca">arm_compute::NEQLSTMLayer::~NEQLSTMLayer</a></div><div class="ttdeci">~NEQLSTMLayer()</div><div class="ttdoc">Default destructor. </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEGEMMLowpMatrixMultiplyCore::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00088">NEGEMMLowpMatrixMultiplyCore.cpp:88</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a464ea9027ae01e64014040d69302800f"><div class="ttname"><a href="namespacearm__compute.xhtml#a464ea9027ae01e64014040d69302800f">arm_compute::quantize_qasymm8_signed</a></div><div class="ttdeci">int8_t quantize_qasymm8_signed(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given a signed 8-bit asymmetric quantization scheme. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00317">QuantizationInfo.h:317</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_copy_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_n_e_copy.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::NECopy::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NECopy. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_copy_8cpp_source.xhtml#l00058">NECopy.cpp:58</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a0360e77265597dfd84cc83f893c7d191"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a0360e77265597dfd84cc83f893c7d191">arm_compute::LSTMParams::hidden_state_scale</a></div><div class="ttdeci">float hidden_state_scale() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00290">LSTMParams.h:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::TensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of CPU memory. </div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_allocator_8cpp_source.xhtml#l00132">TensorAllocator.cpp:132</a></div></div>
<div class="ttc" id="classarm__compute_1_1_quantization_info_xhtml_a706fc156bcd4c45441bcaad05884b57d"><div class="ttname"><a href="classarm__compute_1_1_quantization_info.xhtml#a706fc156bcd4c45441bcaad05884b57d">arm_compute::QuantizationInfo::uniform</a></div><div class="ttdeci">UniformQuantizationInfo uniform() const</div><div class="ttdoc">Return per layer quantization info. </div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00150">QuantizationInfo.h:150</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">arm_compute::GEMMLowpOutputStageInfo</a></div><div class="ttdoc">GEMMLowp output stage info. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02289">Types.h:2289</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml">arm_compute::Tensor</a></div><div class="ttdoc">Basic implementation of the tensor interface. </div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_tensor_8h_source.xhtml#l00037">Tensor.h:37</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_a221043df99c565143acbf54a1e68d904"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#a221043df99c565143acbf54a1e68d904">arm_compute::NEQLSTMLayer::configure</a></div><div class="ttdeci">void configure(const ITensor *input, const ITensor *input_to_forget_weights, const ITensor *input_to_cell_weights, const ITensor *input_to_output_weights, const ITensor *recurrent_to_forget_weights, const ITensor *recurrent_to_cell_weights, const ITensor *recurrent_to_output_weights, const ITensor *forget_gate_bias, const ITensor *cell_bias, const ITensor *output_gate_bias, const ITensor *cell_state_in, ITensor *output_state_in, ITensor *cell_state_out, ITensor *output_state_out, ITensor *output, const LSTMParams&lt; ITensor &gt; &amp;lstm_params)</div><div class="ttdoc">Initialize function&amp;#39;s tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer.cpp:214</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_aa459796b5489eca8a9160cb5dcf1a103"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">arm_compute::ITensorInfo::element_size</a></div><div class="ttdeci">virtual size_t element_size() const =0</div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels() </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac2236dfe2a3fc5fa4e125348829cbeb2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2236dfe2a3fc5fa4e125348829cbeb2">arm_compute::test::validation::recurrent_to_cell_weights</a></div><div class="ttdeci">auto recurrent_to_cell_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00478">LSTMLayerQuantized.cpp:478</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="_n_e_scheduler_8h_xhtml"><div class="ttname"><a href="_n_e_scheduler_8h.xhtml">NEScheduler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a575d37eaf8a905c8ca3c0250757c2b81"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a575d37eaf8a905c8ca3c0250757c2b81">arm_compute::ITensorInfo::set_quantization_info</a></div><div class="ttdeci">virtual ITensorInfo &amp; set_quantization_info(const QuantizationInfo &amp;quantization_info)=0</div><div class="ttdoc">Set the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa72ee60fba0509af07cbbd91398d8db9d">arm_compute::ActivationLayerInfo::ActivationFunction::LOGISTIC</a></div><div class="ttdoc">Logistic (  ) </div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_quantization_layer_xhtml_a83a344e60eb7db895953a942abf16628"><div class="ttname"><a href="classarm__compute_1_1_n_e_quantization_layer.xhtml#a83a344e60eb7db895953a942abf16628">arm_compute::NEQuantizationLayer::configure</a></div><div class="ttdeci">void configure(const ITensor *input, ITensor *output)</div><div class="ttdoc">Set the input and output tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_quantization_layer_8cpp_source.xhtml#l00051">NEQuantizationLayer.cpp:51</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a3f3e1a3200223e6a304a533b1016e749"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a3f3e1a3200223e6a304a533b1016e749">arm_compute::ITensorInfo::quantization_info</a></div><div class="ttdeci">virtual QuantizationInfo quantization_info() const =0</div><div class="ttdoc">Get the quantization settings (scale and offset) of the tensor. </div></div>
<div class="ttc" id="_quantization_info_8h_xhtml"><div class="ttname"><a href="_quantization_info_8h.xhtml">QuantizationInfo.h</a></div></div>
<div class="ttc" id="_n_e_q_l_s_t_m_layer_normalization_kernel_8h_xhtml"><div class="ttname"><a href="_n_e_q_l_s_t_m_layer_normalization_kernel_8h.xhtml">NEQLSTMLayerNormalizationKernel.h</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a5f007421a4becd11c0666c2058b0b36c">arm_compute::DataType::QSYMM8</a></div><div class="ttdoc">quantized, symmetric fixed-point 8-bit number </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="_n_e_q_l_s_t_m_layer_8h_xhtml"><div class="ttname"><a href="_n_e_q_l_s_t_m_layer_8h.xhtml">NEQLSTMLayer.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_aebbcdda23d18f77e84ee06e9f754c341"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#aebbcdda23d18f77e84ee06e9f754c341">arm_compute::LSTMParams::cell_clip</a></div><div class="ttdeci">float cell_clip() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00255">LSTMParams.h:255</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ae59cb3ec4cae7835d0a0283be56ef789"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ae59cb3ec4cae7835d0a0283be56ef789">arm_compute::test::validation::set_data_layout</a></div><div class="ttdeci">src_info set_data_layout(data_layout)</div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a06403ad5596b5405787cfca12e5b815e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a06403ad5596b5405787cfca12e5b815e">arm_compute::test::validation::run</a></div><div class="ttdeci">lstmq run()</div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a1b693dc82010b335dbab85107c44b14b"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a1b693dc82010b335dbab85107c44b14b">arm_compute::LSTMParams::cell_to_forget_weights</a></div><div class="ttdeci">T * cell_to_forget_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00215">LSTMParams.h:215</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaaab1d4411a9e7f5e82002512cddfdc33a">arm_compute::ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU</a></div><div class="ttdoc">Lower and Upper Bounded Rectifier (  ) </div></div>
<div class="ttc" id="_info_helpers_8h_xhtml"><div class="ttname"><a href="_info_helpers_8h.xhtml">InfoHelpers.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a127009377712009a84cd0c48aa7e1edd"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a127009377712009a84cd0c48aa7e1edd">arm_compute::LSTMParams::has_projection</a></div><div class="ttdeci">bool has_projection() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00300">LSTMParams.h:300</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a353a68a1102867145e4246af261a3a8f"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a353a68a1102867145e4246af261a3a8f">arm_compute::LSTMParams::projection_clip</a></div><div class="ttdeci">float projection_clip() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00260">LSTMParams.h:260</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a3f0613aeb69c326e7d8ffb34b44fae94"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_shift</a></div><div class="ttdeci">int32_t gemmlowp_shift</div><div class="ttdoc">GEMMLowp output stage shift used for quantizing to uint8. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02294">Types.h:2294</a></div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a5a3c173ddfa6f64cf40d9a2c383b6c59"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a5a3c173ddfa6f64cf40d9a2c383b6c59">arm_compute::LSTMParams::cell_to_output_weights</a></div><div class="ttdeci">T * cell_to_output_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00220">LSTMParams.h:220</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_subtraction_xhtml_aa6cd3281fb8cd7ee2a724ca5fcefb695"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#aa6cd3281fb8cd7ee2a724ca5fcefb695">arm_compute::NEArithmeticSubtraction::configure</a></div><div class="ttdeci">void configure(const ITensor *input1, const ITensor *input2, ITensor *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output and conversion policy. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00054">NEArithmeticSubtraction.cpp:54</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage_xhtml_a215ad3877ff40dcc4e6e39f25f2a27f0"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a215ad3877ff40dcc4e6e39f25f2a27f0">arm_compute::NEGEMMLowpOutputStage::configure</a></div><div class="ttdeci">void configure(const ITensor *input, const ITensor *bias, ITensor *output, const GEMMLowpOutputStageInfo &amp;info)</div><div class="ttdoc">Initialise the kernel&amp;#39;s inputs, output. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00047">NEGEMMLowpOutputStage.cpp:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_memory_group_resource_scope_xhtml"><div class="ttname"><a href="classarm__compute_1_1_memory_group_resource_scope.xhtml">arm_compute::MemoryGroupResourceScope</a></div><div class="ttdoc">Memory group resources scope handling class. </div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_group_8h_source.xhtml#l00082">IMemoryGroup.h:82</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_pixel_wise_multiplication_xhtml_ab8a2affed84fcb02163a828fd8a37bfd"><div class="ttname"><a href="classarm__compute_1_1_n_e_pixel_wise_multiplication.xhtml#ab8a2affed84fcb02163a828fd8a37bfd">arm_compute::NEPixelWiseMultiplication::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, float scale, ConvertPolicy overflow_policy, RoundingPolicy rounding_policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEPixelWiseMultiplicatio...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00047">NEPixelWiseMultiplication.cpp:47</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a18064e0011c3869d884653e9e7c47b66"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">arm_compute::ITensorInfo::total_size</a></div><div class="ttdeci">virtual size_t total_size() const =0</div><div class="ttdoc">Returns the total size of the tensor in bytes. </div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_aa261869a77af2c18d4b514bd0969d2d4"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#aa261869a77af2c18d4b514bd0969d2d4">arm_compute::LSTMParams::input_layer_norm_weights</a></div><div class="ttdeci">T * input_layer_norm_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00235">LSTMParams.h:235</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_scheduler_xhtml_a4e58f95544bd5ac6559a421671bd9842"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a4e58f95544bd5ac6559a421671bd9842">arm_compute::IScheduler::schedule</a></div><div class="ttdeci">virtual void schedule(ICPPKernel *kernel, const Hints &amp;hints)=0</div><div class="ttdoc">Runs the kernel in the same thread as the caller synchronously. </div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a27e4638546c88b8916f967e6e54480a9"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a27e4638546c88b8916f967e6e54480a9">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_SHAPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00439">Validate.h:439</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage_xhtml_a8014f142f8a43df8229c8d418f747f8a"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml#a8014f142f8a43df8229c8d418f747f8a">arm_compute::NEGEMMLowpOutputStage::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *bias, const ITensorInfo *output, const GEMMLowpOutputStageInfo &amp;info)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEGEMMLowpOutputStage. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00066">NEGEMMLowpOutputStage.cpp:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_dequantization_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_dequantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEDequantizationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_dequantization_layer_8cpp_source.xhtml#l00059">NEDequantizationLayer.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_activation_layer_info_xhtml_a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9eaa143c8c6f51b9bb893ce71e38702e3cc1">arm_compute::ActivationLayerInfo::ActivationFunction::TANH</a></div><div class="ttdoc">Hyperbolic tangent (  ) </div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a8f3ff7da485ff7e75dab07baadf5b4bd"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a8f3ff7da485ff7e75dab07baadf5b4bd">ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MISMATCHING_DATA_TYPES(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00541">Validate.h:541</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6bb1fa96fb01419887f07ecd236c8cd4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6bb1fa96fb01419887f07ecd236c8cd4">arm_compute::test::validation::input_size</a></div><div class="ttdeci">const int input_size</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00458">LSTMLayerQuantized.cpp:458</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_copy_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_copy.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NECopy::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_copy_8cpp_source.xhtml#l00066">NECopy.cpp:66</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEQLSTMLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01068">NEQLSTMLayer.cpp:1068</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_output_stage.xhtml">arm_compute::NEGEMMLowpOutputStage</a></div><div class="ttdoc">Basic function to execute GEMMLowpQuantizeDown kernels. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_output_stage_8h_source.xhtml#l00048">NEGEMMLowpOutputStage.h:48</a></div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_ae7eed178dac535c6e727061b1f5bc6eb"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#ae7eed178dac535c6e727061b1f5bc6eb">ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_DATA_TYPE_CHANNEL_NOT_IN(t, c,...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00788">Validate.h:788</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_activation_layer_xhtml_adfb5ef37594fc9371c4a2b95e3d5e31b"><div class="ttname"><a href="classarm__compute_1_1_n_e_activation_layer.xhtml#adfb5ef37594fc9371c4a2b95e3d5e31b">arm_compute::NEActivationLayer::configure</a></div><div class="ttdeci">void configure(ITensor *input, ITensor *output, ActivationLayerInfo activation_info)</div><div class="ttdoc">[NEActivationLayer snippet] </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_activation_layer_8cpp_source.xhtml#l00048">NEActivationLayer.cpp:48</a></div></div>
<div class="ttc" id="structarm__compute_1_1_uniform_quantization_info_xhtml_a97bd6c077f3c7769f575b82988b9b668"><div class="ttname"><a href="structarm__compute_1_1_uniform_quantization_info.xhtml#a97bd6c077f3c7769f575b82988b9b668">arm_compute::UniformQuantizationInfo::offset</a></div><div class="ttdeci">int32_t offset</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00067">QuantizationInfo.h:67</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a29a7a1636c6a8fd9e423d55c36e991a0"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a29a7a1636c6a8fd9e423d55c36e991a0">arm_compute::LSTMParams::input_gate_bias</a></div><div class="ttdeci">const T * input_gate_bias() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00210">LSTMParams.h:210</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_xhtml_a24954cca5108a24706441fd99a7fb04c"><div class="ttname"><a href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">arm_compute::Tensor::buffer</a></div><div class="ttdeci">uint8_t * buffer() const override</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory. ...</div><div class="ttdef"><b>Definition:</b> <a href="src_2runtime_2_tensor_8cpp_source.xhtml#l00043">Tensor.cpp:43</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a1c69762a42ab8add645d0a949b6f4b1f"><div class="ttname"><a href="_error_8h.xhtml#a1c69762a42ab8add645d0a949b6f4b1f">ARM_COMPUTE_RETURN_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON_MSG(cond, msg)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_quantization_layer_xhtml_ad1717410afd0be936c6213a63c8005fb"><div class="ttname"><a href="classarm__compute_1_1_n_e_quantization_layer.xhtml#ad1717410afd0be936c6213a63c8005fb">arm_compute::NEQuantizationLayer::run</a></div><div class="ttdeci">void run() override</div><div class="ttdoc">Run the kernels contained in the function. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_quantization_layer_8cpp_source.xhtml#l00059">NEQuantizationLayer.cpp:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="src_2common_2utils_2_log_8h_xhtml_a3ae35e22a098d589ff54ed85647ed87e"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a3ae35e22a098d589ff54ed85647ed87e">ARM_COMPUTE_LOG_PARAMS</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_PARAMS(...)</div></div>
<div class="ttc" id="arm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_reduction_kernel_info.xhtml">arm_compute::GEMMLowpReductionKernelInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00167">KernelDescriptors.h:167</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a2d7e8b8e05c3318b2d90c40d781745d2"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a2d7e8b8e05c3318b2d90c40d781745d2">arm_compute::TensorInfo::set_tensor_shape</a></div><div class="ttdeci">ITensorInfo &amp; set_tensor_shape(const TensorShape &amp;shape) override</div><div class="ttdoc">Set the shape of an already initialized tensor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_tensor_info_8cpp_source.xhtml#l00352">TensorInfo.cpp:352</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1info__helpers_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1info__helpers.xhtml">arm_compute::utils::info_helpers</a></div><div class="ttdef"><b>Definition:</b> <a href="_info_helpers_8h_source.xhtml#l00035">InfoHelpers.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core_xhtml_a8c3cf2d65afb288e39909171ada19566"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml#a8c3cf2d65afb288e39909171ada19566">arm_compute::NEGEMMLowpMatrixMultiplyCore::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *output, const GEMMInfo &amp;gemm_info=GEMMInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEGEMMLowpMatrixMultiply...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00083">NEGEMMLowpMatrixMultiplyCore.cpp:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml_a76f19cb614443980dcdf9b2054e4eb09"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml#a76f19cb614443980dcdf9b2054e4eb09">arm_compute::LSTMParams::cell_layer_norm_weights</a></div><div class="ttdeci">T * cell_layer_norm_weights() const</div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00245">LSTMParams.h:245</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a5357bacf3b395353bef0acf15487b92b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5357bacf3b395353bef0acf15487b92b">arm_compute::test::validation::configure</a></div><div class="ttdeci">im2col_func configure(src_target.info(), dst_target.info(), spatial_kernel, conv_info, has_bias)</div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_copy_xhtml_a9daf8026e68559806afe7d0aa12693d6"><div class="ttname"><a href="classarm__compute_1_1_n_e_copy.xhtml#a9daf8026e68559806afe7d0aa12693d6">arm_compute::NECopy::configure</a></div><div class="ttdeci">void configure(ITensor *input, ITensor *output)</div><div class="ttdoc">Initialise the function&amp;#39;s source and destination. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_copy_8cpp_source.xhtml#l00048">NECopy.cpp:48</a></div></div>
<div class="ttc" id="_asymm_helpers_8h_xhtml"><div class="ttname"><a href="_asymm_helpers_8h.xhtml">AsymmHelpers.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_a155d27c75f14a82a74e5039c9657c8eb"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">arm_compute::GEMMLowpOutputStageInfo::gemmlowp_min_bound</a></div><div class="ttdeci">int32_t gemmlowp_min_bound</div><div class="ttdoc">GEMMLowp min value used to saturate down the output result before converting back to QASYMM8...</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02295">Types.h:2295</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdoc">Saturate. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a269b19ce3f357ac65f41f9951906e38e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a269b19ce3f357ac65f41f9951906e38e">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const override</div><div class="ttdoc">Size for each dimension of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00236">TensorInfo.h:236</a></div></div>
<div class="ttc" id="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml_ab233758aca2751c6e71a2f79baf7b92a"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">arm_compute::GEMMLowpOutputStageInfo::output_data_type</a></div><div class="ttdeci">DataType output_data_type</div><div class="ttdoc">Output tensor data type to use if the output is not initialized. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02301">Types.h:2301</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06"><div class="ttname"><a href="namespacearm__compute.xhtml#add6426cbf2e057a195846d4ba09a50bea5631ad8e27788edfca7e13535d862c06">arm_compute::RoundingPolicy::TO_ZERO</a></div><div class="ttdoc">Truncates the least significant values that are lost in operations. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ad44f86834ae016bf696e8e664f39c136"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad44f86834ae016bf696e8e664f39c136">arm_compute::test::validation::output_size</a></div><div class="ttdeci">const int output_size</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00459">LSTMLayerQuantized.cpp:459</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_q_l_s_t_m_layer_xhtml_aa9b93ef660fc3c5b4b19d3fc7b891b77"><div class="ttname"><a href="classarm__compute_1_1_n_e_q_l_s_t_m_layer.xhtml#aa9b93ef660fc3c5b4b19d3fc7b891b77">arm_compute::NEQLSTMLayer::prepare</a></div><div class="ttdeci">void prepare() override</div><div class="ttdoc">Prepare the function for executing. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01210">NEQLSTMLayer.cpp:1210</a></div></div>
<div class="ttc" id="_kernel_descriptors_8h_xhtml"><div class="ttname"><a href="_kernel_descriptors_8h.xhtml">KernelDescriptors.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3b793c410cba57a1395184692a018356"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b793c410cba57a1395184692a018356">arm_compute::test::validation::input_to_forget_weights</a></div><div class="ttdeci">auto input_to_forget_weights</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00473">LSTMLayerQuantized.cpp:473</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core_xhtml"><div class="ttname"><a href="classarm__compute_1_1_n_e_g_e_m_m_lowp_matrix_multiply_core.xhtml">arm_compute::NEGEMMLowpMatrixMultiplyCore</a></div><div class="ttdoc">Function to run Gemm on quantized types. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8h_source.xhtml#l00045">NEGEMMLowpMatrixMultiplyCore.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_transpose_xhtml_a968b23a6ef327fcfb5b99d58e3fbe883"><div class="ttname"><a href="classarm__compute_1_1_n_e_transpose.xhtml#a968b23a6ef327fcfb5b99d58e3fbe883">arm_compute::NETranspose::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input, const ITensorInfo *output)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NETranspose. </div><div class="ttdef"><b>Definition:</b> <a href="_n_e_transpose_8cpp_source.xhtml#l00057">NETranspose.cpp:57</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a4feaaa70771629f4b5dcf3b219c8b647"><div class="ttname"><a href="namespacearm__compute.xhtml#a4feaaa70771629f4b5dcf3b219c8b647">arm_compute::validate</a></div><div class="ttdeci">Status validate(const ITensorInfo *scores_in, const ITensorInfo *boxes_in, const ITensorInfo *batch_splits_in, const ITensorInfo *scores_out, const ITensorInfo *boxes_out, const ITensorInfo *classes, const ITensorInfo *batch_splits_out, const ITensorInfo *keeps, const ITensorInfo *keeps_size, const BoxNMSLimitInfo info)</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00214">CPPBoxWithNonMaximaSuppressionLimit.cpp:214</a></div></div>
<div class="ttc" id="classarm__compute_1_1_l_s_t_m_params_xhtml"><div class="ttname"><a href="classarm__compute_1_1_l_s_t_m_params.xhtml">arm_compute::LSTMParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_l_s_t_m_params_8h_source.xhtml#l00036">LSTMParams.h:36</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
<div class="ttc" id="classarm__compute_1_1_n_e_arithmetic_subtraction_xhtml_a5d4d1bdc6b902a7075b6850977a9ba7c"><div class="ttname"><a href="classarm__compute_1_1_n_e_arithmetic_subtraction.xhtml#a5d4d1bdc6b902a7075b6850977a9ba7c">arm_compute::NEArithmeticSubtraction::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input1, const ITensorInfo *input2, const ITensorInfo *output, ConvertPolicy policy, const ActivationLayerInfo &amp;act_info=ActivationLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEArithmeticSubtraction...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00049">NEArithmeticSubtraction.cpp:49</a></div></div>
<div class="ttc" id="working__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00292">working_space.hpp:292</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_a36523fc4c32a6b0076906589b6fc202.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_4d03f28cfd35f8f734a3b0a2f1168d27.xhtml">functions</a></li><li class="navelem"><a class="el" href="_n_e_q_l_s_t_m_layer_8cpp.xhtml">NEQLSTMLayer.cpp</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:45 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
