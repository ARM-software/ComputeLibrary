<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Measurement::Value Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">Measurement::Value Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int. ">Measurement</a> value.  
 <a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab037372802cee601adeb0ee97dc0c0f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab037372802cee601adeb0ee97dc0c0f3">Value</a> (bool is_floating)</td></tr>
<tr class="memdesc:ab037372802cee601adeb0ee97dc0c0f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ab037372802cee601adeb0ee97dc0c0f3">More...</a><br /></td></tr>
<tr class="separator:ab037372802cee601adeb0ee97dc0c0f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac993ecccd3d88aafefb6b8e3caa1dee"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aac993ecccd3d88aafefb6b8e3caa1dee">to_string</a> () const</td></tr>
<tr class="memdesc:aac993ecccd3d88aafefb6b8e3caa1dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert the value stored to string.  <a href="#aac993ecccd3d88aafefb6b8e3caa1dee">More...</a><br /></td></tr>
<tr class="separator:aac993ecccd3d88aafefb6b8e3caa1dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a722639a64527d7e2fd655372694166ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a722639a64527d7e2fd655372694166ce">operator+</a> (<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> b) const</td></tr>
<tr class="memdesc:a722639a64527d7e2fd655372694166ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add with another value and return the sum.  <a href="#a722639a64527d7e2fd655372694166ce">More...</a><br /></td></tr>
<tr class="separator:a722639a64527d7e2fd655372694166ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fb5fa1257ad2837d4b83dded72e2fe8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a6fb5fa1257ad2837d4b83dded72e2fe8">operator-</a> (<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> b) const</td></tr>
<tr class="memdesc:a6fb5fa1257ad2837d4b83dded72e2fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtract with another value and return the result.  <a href="#a6fb5fa1257ad2837d4b83dded72e2fe8">More...</a><br /></td></tr>
<tr class="separator:a6fb5fa1257ad2837d4b83dded72e2fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9a75e9f2233655aa30f2199ed33bddd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ae9a75e9f2233655aa30f2199ed33bddd">operator*</a> (<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> b) const</td></tr>
<tr class="memdesc:ae9a75e9f2233655aa30f2199ed33bddd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiple with another value and return the result.  <a href="#ae9a75e9f2233655aa30f2199ed33bddd">More...</a><br /></td></tr>
<tr class="separator:ae9a75e9f2233655aa30f2199ed33bddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c0592147dad9d6f5185a4f83d1084a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5c0592147dad9d6f5185a4f83d1084a5">operator/</a> (int b) const</td></tr>
<tr class="memdesc:a5c0592147dad9d6f5185a4f83d1084a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the stored value divided by an integer.  <a href="#a5c0592147dad9d6f5185a4f83d1084a5">More...</a><br /></td></tr>
<tr class="separator:a5c0592147dad9d6f5185a4f83d1084a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cb5526035904ad08a9d5ba9fff9a942"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a6cb5526035904ad08a9d5ba9fff9a942">operator-=</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;b)</td></tr>
<tr class="memdesc:a6cb5526035904ad08a9d5ba9fff9a942"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtract another value and return the updated stored value.  <a href="#a6cb5526035904ad08a9d5ba9fff9a942">More...</a><br /></td></tr>
<tr class="separator:a6cb5526035904ad08a9d5ba9fff9a942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5c240d4c678a714ffb0217c6a8d6eb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a6a5c240d4c678a714ffb0217c6a8d6eb">operator&lt;</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;b) const</td></tr>
<tr class="memdesc:a6a5c240d4c678a714ffb0217c6a8d6eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare the stored value with another value.  <a href="#a6a5c240d4c678a714ffb0217c6a8d6eb">More...</a><br /></td></tr>
<tr class="separator:a6a5c240d4c678a714ffb0217c6a8d6eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9666a65078cee68787a9aad555ad0793"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a9666a65078cee68787a9aad555ad0793">relative_standard_deviation</a> (const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;variance, const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;mean)</td></tr>
<tr class="memdesc:a9666a65078cee68787a9aad555ad0793"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the relative standard deviation to a given distribution as a percentage.  <a href="#a9666a65078cee68787a9aad555ad0793">More...</a><br /></td></tr>
<tr class="separator:a9666a65078cee68787a9aad555ad0793"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:af7d15d1e567f4b6562de9d8bcc18a80b"><td class="memItemLeft" >union {</td></tr>
<tr class="memitem:ab32110eb040749e72f53d1a7ee30c25b"><td class="memItemLeft" >&#160;&#160;&#160;double&#160;&#160;&#160;<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">floating_point</a></td></tr>
<tr class="separator:ab32110eb040749e72f53d1a7ee30c25b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5283f2dae5da803262f8deb3c71525f0"><td class="memItemLeft" >&#160;&#160;&#160;long long int&#160;&#160;&#160;<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">integer</a></td></tr>
<tr class="separator:a5283f2dae5da803262f8deb3c71525f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d15d1e567f4b6562de9d8bcc18a80b"><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a></td></tr>
<tr class="memdesc:af7d15d1e567f4b6562de9d8bcc18a80b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stored value.  <a href="#af7d15d1e567f4b6562de9d8bcc18a80b">More...</a><br /></td></tr>
<tr class="separator:af7d15d1e567f4b6562de9d8bcc18a80b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea625d488d9eafbc023001f74f15f7af"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a></td></tr>
<tr class="memdesc:aea625d488d9eafbc023001f74f15f7af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the stored value floating point or integer ?  <a href="#aea625d488d9eafbc023001f74f15f7af">More...</a><br /></td></tr>
<tr class="separator:aea625d488d9eafbc023001f74f15f7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a7a4338759c5836029ef531ae45f57007"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a7a4338759c5836029ef531ae45f57007">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;<a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a>)</td></tr>
<tr class="memdesc:a7a4338759c5836029ef531ae45f57007"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the value stored to the stream as a string.  <a href="#a7a4338759c5836029ef531ae45f57007">More...</a><br /></td></tr>
<tr class="separator:a7a4338759c5836029ef531ae45f57007"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml" title="Generic measurement that stores values as either double or long long int. ">Measurement</a> value. </p>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00044">44</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab037372802cee601adeb0ee97dc0c0f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab037372802cee601adeb0ee97dc0c0f3">&#9670;&nbsp;</a></span>Value()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_floating</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">is_floating</td><td>Will the value stored be floating point ? </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00050">50</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            : <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>{ 0 }, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>(is_floating)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        }</div><div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae9a75e9f2233655aa30f2199ed33bddd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9a75e9f2233655aa30f2199ed33bddd">&#9670;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Multiple with another value and return the result. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Other value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result of the stored value * b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00121">121</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.floating_point *= <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.integer *= <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a722639a64527d7e2fd655372694166ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a722639a64527d7e2fd655372694166ce">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add with another value and return the sum. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Other value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Sum of the stored value + b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00083">83</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.floating_point += <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.integer += <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6fb5fa1257ad2837d4b83dded72e2fe8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fb5fa1257ad2837d4b83dded72e2fe8">&#9670;&nbsp;</a></span>operator-()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtract with another value and return the result. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Other value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Result of the stored value - b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.floating_point -= <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.integer -= <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6cb5526035904ad08a9d5ba9fff9a942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cb5526035904ad08a9d5ba9fff9a942">&#9670;&nbsp;</a></span>operator-=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a>&amp; operator-= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtract another value and return the updated stored value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Other value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The updated stored value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00160">160</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point -= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.floating_point;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer -= <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.integer;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5c0592147dad9d6f5185a4f83d1084a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c0592147dad9d6f5185a4f83d1084a5">&#9670;&nbsp;</a></span>operator/()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the stored value divided by an integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>Integer to divide the value by.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Stored value / b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00140">140</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">arm_compute::test::validation::b</a>, <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab037372802cee601adeb0ee97dc0c0f3">Value</a> res(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                res.v.floating_point = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                res.v.integer = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_ab037372802cee601adeb0ee97dc0c0f3"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab037372802cee601adeb0ee97dc0c0f3">arm_compute::test::framework::Measurement::Value::Value</a></div><div class="ttdeci">Value(bool is_floating)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00050">Measurement.h:50</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a5c240d4c678a714ffb0217c6a8d6eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a5c240d4c678a714ffb0217c6a8d6eb">&#9670;&nbsp;</a></span>operator<()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compare the stored value with another value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml" title="Measurement value. ">Value</a> to compare against</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of stored value &lt; b </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00179">179</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>
<div class="fragment"><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.floating_point &lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.floating_point;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            {</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.integer &lt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>.v.integer;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9666a65078cee68787a9aad555ad0793"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9666a65078cee68787a9aad555ad0793">&#9670;&nbsp;</a></span>relative_standard_deviation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static double relative_standard_deviation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>variance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>mean</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the relative standard deviation to a given distribution as a percentage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">variance</td><td>The variance of the distribution. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mean</td><td>The mean of the distribution.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the relative standard deviation. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00198">198</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="_measurement_8h_source.xhtml#l00213">Measurement::Value::floating_point</a>, <a class="el" href="_measurement_8h_source.xhtml#l00214">Measurement::Value::integer</a>, <a class="el" href="_measurement_8h_source.xhtml#l00216">Measurement::Value::is_floating_point</a>, and <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">Measurement::Value::v</a>.</p>

<p class="reference">Referenced by <a class="el" href="_instruments_stats_8cpp_source.xhtml#l00033">InstrumentsStats::InstrumentsStats()</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">if</span>(variance.is_floating_point)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">return</span> 100.0 * sqrt(variance.v.floating_point) / mean.v.floating_point;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">return</span> 100.0 * sqrt(static_cast&lt;double&gt;(variance.v.integer)) / mean.v.integer;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div></div><!-- fragment -->
</div>
</div>
<a id="aac993ecccd3d88aafefb6b8e3caa1dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac993ecccd3d88aafefb6b8e3caa1dee">&#9670;&nbsp;</a></span>to_string()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string to_string </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert the value stored to string. </p>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00071">71</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss()</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            ss &lt;&lt; *<span class="keyword">this</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a7a4338759c5836029ef531ae45f57007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a4338759c5836029ef531ae45f57007">&#9670;&nbsp;</a></span>operator<<</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add the value stored to the stream as a string. </p>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00057">57</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">is_floating_point</a>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                os &lt;&lt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a93690f80f7fb88ea733fdc6f9f3b3ada">arithmetic_to_string</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">floating_point</a>, 4);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                os &lt;&lt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a93690f80f7fb88ea733fdc6f9f3b3ada">arithmetic_to_string</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">value</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">v</a>.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">integer</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div><div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_ab32110eb040749e72f53d1a7ee30c25b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#ab32110eb040749e72f53d1a7ee30c25b">arm_compute::test::framework::Measurement::Value::floating_point</a></div><div class="ttdeci">double floating_point</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00213">Measurement.h:213</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_a5283f2dae5da803262f8deb3c71525f0"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#a5283f2dae5da803262f8deb3c71525f0">arm_compute::test::framework::Measurement::Value::integer</a></div><div class="ttdeci">long long int integer</div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00214">Measurement.h:214</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_af7d15d1e567f4b6562de9d8bcc18a80b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#af7d15d1e567f4b6562de9d8bcc18a80b">arm_compute::test::framework::Measurement::Value::v</a></div><div class="ttdeci">union arm_compute::test::framework::Measurement::Value::@5 v</div><div class="ttdoc">Stored value. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value_xhtml_aea625d488d9eafbc023001f74f15f7af"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml#aea625d488d9eafbc023001f74f15f7af">arm_compute::test::framework::Measurement::Value::is_floating_point</a></div><div class="ttdeci">bool is_floating_point</div><div class="ttdoc">Is the stored value floating point or integer ? </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00216">Measurement.h:216</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_measurement_xhtml_af2a8c2db065f7afb4dbaa382d2ecd5be"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml#af2a8c2db065f7afb4dbaa382d2ecd5be">arm_compute::test::framework::Measurement::value</a></div><div class="ttdeci">const Value &amp; value() const</div><div class="ttdoc">Accessor for the stored value. </div><div class="ttdef"><b>Definition:</b> <a href="_measurement_8h_source.xhtml#l00301">Measurement.h:301</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_a93690f80f7fb88ea733fdc6f9f3b3ada"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a93690f80f7fb88ea733fdc6f9f3b3ada">arm_compute::test::arithmetic_to_string</a></div><div class="ttdeci">std::string arithmetic_to_string(T val, int decimal_places=0)</div><div class="ttdoc">Create a string with the arithmetic value in full precision. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00164">Utils.h:164</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ab32110eb040749e72f53d1a7ee30c25b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab32110eb040749e72f53d1a7ee30c25b">&#9670;&nbsp;</a></span>floating_point</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double floating_point</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00213">213</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_measurement_8h_source.xhtml#l00121">Measurement::Value::operator*()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00083">Measurement::Value::operator+()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00102">Measurement::Value::operator-()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00160">Measurement::Value::operator-=()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00140">Measurement::Value::operator/()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00179">Measurement::Value::operator&lt;()</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00198">Measurement::Value::relative_standard_deviation()</a>.</p>

</div>
</div>
<a id="a5283f2dae5da803262f8deb3c71525f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5283f2dae5da803262f8deb3c71525f0">&#9670;&nbsp;</a></span>integer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long long int integer</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00214">214</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_measurement_8h_source.xhtml#l00121">Measurement::Value::operator*()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00083">Measurement::Value::operator+()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00102">Measurement::Value::operator-()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00160">Measurement::Value::operator-=()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00140">Measurement::Value::operator/()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00179">Measurement::Value::operator&lt;()</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00198">Measurement::Value::relative_standard_deviation()</a>.</p>

</div>
</div>
<a id="aea625d488d9eafbc023001f74f15f7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea625d488d9eafbc023001f74f15f7af">&#9670;&nbsp;</a></span>is_floating_point</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_floating_point</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is the stored value floating point or integer ? </p>

<p class="definition">Definition at line <a class="el" href="_measurement_8h_source.xhtml#l00216">216</a> of file <a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_instruments_stats_8cpp_source.xhtml#l00033">InstrumentsStats::InstrumentsStats()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00121">Measurement::Value::operator*()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00083">Measurement::Value::operator+()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00102">Measurement::Value::operator-()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00160">Measurement::Value::operator-=()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00140">Measurement::Value::operator/()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00179">Measurement::Value::operator&lt;()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00198">Measurement::Value::relative_standard_deviation()</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00050">Measurement::Value::Value()</a>.</p>

</div>
</div>
<a id="af7d15d1e567f4b6562de9d8bcc18a80b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7d15d1e567f4b6562de9d8bcc18a80b">&#9670;&nbsp;</a></span>v</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union { ... }   v</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stored value. </p>

<p class="reference">Referenced by <a class="el" href="_measurement_8h_source.xhtml#l00252">Measurement::Measurement()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00121">Measurement::Value::operator*()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00083">Measurement::Value::operator+()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00102">Measurement::Value::operator-()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00160">Measurement::Value::operator-=()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00140">Measurement::Value::operator/()</a>, <a class="el" href="_measurement_8h_source.xhtml#l00179">Measurement::Value::operator&lt;()</a>, and <a class="el" href="_measurement_8h_source.xhtml#l00198">Measurement::Value::relative_standard_deviation()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>tests/framework/instruments/<a class="el" href="_measurement_8h_source.xhtml">Measurement.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1test_1_1framework.xhtml">framework</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement.xhtml">Measurement</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1test_1_1framework_1_1_measurement_1_1_value.xhtml">Value</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:57 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
