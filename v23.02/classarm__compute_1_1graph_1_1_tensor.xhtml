<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: Tensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">Tensor Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> object.  
 <a href="classarm__compute_1_1graph_1_1_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="graph_2_tensor_8h_source.xhtml">Tensor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:add953d1e94e855a536231a2fde924251"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#add953d1e94e855a536231a2fde924251">Tensor</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a738f5e449958bed64c970006375540fd">id</a>, <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">desc</a>)</td></tr>
<tr class="memdesc:add953d1e94e855a536231a2fde924251"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#add953d1e94e855a536231a2fde924251">More...</a><br /></td></tr>
<tr class="separator:add953d1e94e855a536231a2fde924251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a738f5e449958bed64c970006375540fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a738f5e449958bed64c970006375540fd">id</a> () const</td></tr>
<tr class="memdesc:a738f5e449958bed64c970006375540fd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> ID accessor.  <a href="#a738f5e449958bed64c970006375540fd">More...</a><br /></td></tr>
<tr class="separator:a738f5e449958bed64c970006375540fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d3608f94078b90ab1ff9e9465d4ed3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">desc</a> ()</td></tr>
<tr class="memdesc:a0d3608f94078b90ab1ff9e9465d4ed3b"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">TensorInfo</a> metadata accessor.  <a href="#a0d3608f94078b90ab1ff9e9465d4ed3b">More...</a><br /></td></tr>
<tr class="separator:a0d3608f94078b90ab1ff9e9465d4ed3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0a7a8139c09a2e0dbbaeb547fcbe9ea"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ae0a7a8139c09a2e0dbbaeb547fcbe9ea">desc</a> () const</td></tr>
<tr class="memdesc:ae0a7a8139c09a2e0dbbaeb547fcbe9ea"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">TensorInfo</a> metadata accessor.  <a href="#ae0a7a8139c09a2e0dbbaeb547fcbe9ea">More...</a><br /></td></tr>
<tr class="separator:ae0a7a8139c09a2e0dbbaeb547fcbe9ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c1a8dc99f338372d7dc6dd33672ec03"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a8c1a8dc99f338372d7dc6dd33672ec03">set_handle</a> (std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt; backend_tensor)</td></tr>
<tr class="memdesc:a8c1a8dc99f338372d7dc6dd33672ec03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the backend tensor.  <a href="#a8c1a8dc99f338372d7dc6dd33672ec03">More...</a><br /></td></tr>
<tr class="separator:a8c1a8dc99f338372d7dc6dd33672ec03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45c1ef0023ce430d009ec79c97761544"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a45c1ef0023ce430d009ec79c97761544">handle</a> ()</td></tr>
<tr class="memdesc:a45c1ef0023ce430d009ec79c97761544"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backend tensor handle accessor.  <a href="#a45c1ef0023ce430d009ec79c97761544">More...</a><br /></td></tr>
<tr class="separator:a45c1ef0023ce430d009ec79c97761544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ca865118188dd8c307ae9e84f8a75f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a7ca865118188dd8c307ae9e84f8a75f6">set_accessor</a> (std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt; <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a761495426edf3b875f67a8f4c3a199b5">accessor</a>)</td></tr>
<tr class="memdesc:a7ca865118188dd8c307ae9e84f8a75f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the backend tensor accessor.  <a href="#a7ca865118188dd8c307ae9e84f8a75f6">More...</a><br /></td></tr>
<tr class="separator:a7ca865118188dd8c307ae9e84f8a75f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a761495426edf3b875f67a8f4c3a199b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a761495426edf3b875f67a8f4c3a199b5">accessor</a> ()</td></tr>
<tr class="memdesc:a761495426edf3b875f67a8f4c3a199b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backend tensor accessor.  <a href="#a761495426edf3b875f67a8f4c3a199b5">More...</a><br /></td></tr>
<tr class="separator:a761495426edf3b875f67a8f4c3a199b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cec440e0579d01d55a4e194f1c7178c"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0cec440e0579d01d55a4e194f1c7178c">extract_accessor</a> ()</td></tr>
<tr class="memdesc:a0cec440e0579d01d55a4e194f1c7178c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts accessor from the tensor.  <a href="#a0cec440e0579d01d55a4e194f1c7178c">More...</a><br /></td></tr>
<tr class="separator:a0cec440e0579d01d55a4e194f1c7178c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d65b04d950e6aba147624fcd308b34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a88d65b04d950e6aba147624fcd308b34">call_accessor</a> ()</td></tr>
<tr class="memdesc:a88d65b04d950e6aba147624fcd308b34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls accessor on tensor.  <a href="#a88d65b04d950e6aba147624fcd308b34">More...</a><br /></td></tr>
<tr class="separator:a88d65b04d950e6aba147624fcd308b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a56fcfb4c6a506d63f11d88e0981c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a37a56fcfb4c6a506d63f11d88e0981c0">bind_edge</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> eid)</td></tr>
<tr class="memdesc:a37a56fcfb4c6a506d63f11d88e0981c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds the tensor with an edge.  <a href="#a37a56fcfb4c6a506d63f11d88e0981c0">More...</a><br /></td></tr>
<tr class="separator:a37a56fcfb4c6a506d63f11d88e0981c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0839be1697496b3a951e030627f9e69b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0839be1697496b3a951e030627f9e69b">unbind_edge</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> eid)</td></tr>
<tr class="memdesc:a0839be1697496b3a951e030627f9e69b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unbinds an edge from a tensor.  <a href="#a0839be1697496b3a951e030627f9e69b">More...</a><br /></td></tr>
<tr class="separator:a0839be1697496b3a951e030627f9e69b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3dc08c2e62f20a8fbfbcc46c6b4cb68"><td class="memItemLeft" align="right" valign="top">std::set&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#aa3dc08c2e62f20a8fbfbcc46c6b4cb68">bound_edges</a> () const</td></tr>
<tr class="memdesc:aa3dc08c2e62f20a8fbfbcc46c6b4cb68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor the edges that are bound with the tensor.  <a href="#aa3dc08c2e62f20a8fbfbcc46c6b4cb68">More...</a><br /></td></tr>
<tr class="separator:aa3dc08c2e62f20a8fbfbcc46c6b4cb68"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> object. </p>

<p class="definition">Definition at line <a class="el" href="graph_2_tensor_8h_source.xhtml#l00041">41</a> of file <a class="el" href="graph_2_tensor_8h_source.xhtml">Tensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="add953d1e94e855a536231a2fde924251"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add953d1e94e855a536231a2fde924251">&#9670;&nbsp;</a></span>Tensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td>
          <td class="paramname"><em>desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> ID </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> information </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    : _id(<span class="keywordtype">id</span>), _desc(std::move(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">desc</a>)), _handle(<span class="keyword">nullptr</span>), _accessor(<span class="keyword">nullptr</span>), _bound_edges()</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a0d3608f94078b90ab1ff9e9465d4ed3b"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b">arm_compute::graph::Tensor::desc</a></div><div class="ttdeci">TensorDescriptor &amp; desc()</div><div class="ttdoc">TensorInfo metadata accessor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_tensor_8cpp_source.xhtml#l00040">Tensor.cpp:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a761495426edf3b875f67a8f4c3a199b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a761495426edf3b875f67a8f4c3a199b5">&#9670;&nbsp;</a></span>accessor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> * accessor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Backend tensor accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Backend tensor accessor </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> _accessor.get();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a37a56fcfb4c6a506d63f11d88e0981c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37a56fcfb4c6a506d63f11d88e0981c0">&#9670;&nbsp;</a></span>bind_edge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bind_edge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&#160;</td>
          <td class="paramname"><em>eid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds the tensor with an edge. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">eid</td><td><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" title="Graph Edge. ">Edge</a> ID that is bound to the tensor </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_node_8cpp_source.xhtml#l00077">INode::set_output_tensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    _bound_edges.insert(eid);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa3dc08c2e62f20a8fbfbcc46c6b4cb68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3dc08c2e62f20a8fbfbcc46c6b4cb68">&#9670;&nbsp;</a></span>bound_edges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::set&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> &gt; bound_edges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Accessor the edges that are bound with the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>Bound edges </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00073">arm_compute::graph::detail::allocate_all_input_tensors()</a>, and <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00086">arm_compute::graph::detail::allocate_all_output_tensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> _bound_edges;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a88d65b04d950e6aba147624fcd308b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88d65b04d950e6aba147624fcd308b34">&#9670;&nbsp;</a></span>call_accessor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool call_accessor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls accessor on tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the accessor was called else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00187">arm_compute::graph::detail::call_tensor_accessor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// Early exit guard</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span>(!_accessor || !_handle)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> access_data = _accessor-&gt;access_tensor_data();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span>(access_data)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// Map tensor</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        _handle-&gt;map(<span class="keyword">true</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="comment">// Return in case of null backend buffer</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span>(_handle-&gt;tensor().buffer() == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// Call accessor</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">bool</span> retval = _accessor-&gt;access_tensor(_handle-&gt;tensor());</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span>(access_data)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">// Unmap tensor</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        _handle-&gt;unmap();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> retval;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0d3608f94078b90ab1ff9e9465d4ed3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d3608f94078b90ab1ff9e9465d4ed3b">&#9670;&nbsp;</a></span>desc() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp; desc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">TensorInfo</a> metadata accessor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> descriptor metadata </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00051">PReluLayerNode::configure_output()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00063">GenerateProposalsLayerNode::configure_output()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00060">ROIAlignLayerNode::configure_output()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00077">StackLayerNode::configure_output()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00082">DeconvolutionLayerNode::configure_output()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00098">ConcatenateLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00083">EltwiseLayerNode::configure_output()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00131">FullyConnectedLayerNode::configure_output()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00115">DepthwiseConvolutionLayerNode::configure_output()</a>, <a class="el" href="_fused_convolution_batch_normalization_with_post_ops_node_8cpp_source.xhtml#l00115">FusedConvolutionBatchNormalizationWithPostOpsNode::configure_output()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00126">ConvolutionLayerNode::configure_output()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00147">UnaryEltwiseLayerNode::configure_output()</a>, <a class="el" href="_fused_convolution_with_post_op_node_8cpp_source.xhtml#l00126">FusedConvolutionWithPostOpNode::configure_output()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00117">FusedDepthwiseConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00126">FusedConvolutionBatchNormalizationNode::configure_output()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00217">arm_compute::graph::configure_tensor()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00407">arm_compute::graph::backends::detail::create_concatenate_layer()</a>, <a class="el" href="_n_e_device_backend_8cpp_source.xhtml#l00116">NEDeviceBackend::create_tensor()</a>, <a class="el" href="_c_l_device_backend_8cpp_source.xhtml#l00164">CLDeviceBackend::create_tensor()</a>, <a class="el" href="_flatten_layer_node_8cpp_source.xhtml#l00039">FlattenLayerNode::forward_descriptors()</a>, <a class="el" href="_normalize_planar_y_u_v_layer_node_8cpp_source.xhtml#l00040">NormalizePlanarYUVLayerNode::forward_descriptors()</a>, <a class="el" href="_p_relu_layer_node_8cpp_source.xhtml#l00039">PReluLayerNode::forward_descriptors()</a>, <a class="el" href="_const_node_8cpp_source.xhtml#l00039">ConstNode::forward_descriptors()</a>, <a class="el" href="_input_node_8cpp_source.xhtml#l00039">InputNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_reshape_layer_8cpp_source.xhtml#l00040">ReshapeLayerNode::forward_descriptors()</a>, <a class="el" href="_dequantization_layer_node_8cpp_source.xhtml#l00041">DequantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_softmax_layer_node_8cpp_source.xhtml#l00046">SoftmaxLayerNode::forward_descriptors()</a>, <a class="el" href="_normalization_layer_node_8cpp_source.xhtml#l00046">NormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_post_process_layer_node_8cpp_source.xhtml#l00047">DetectionPostProcessLayerNode::forward_descriptors()</a>, <a class="el" href="_channel_shuffle_layer_node_8cpp_source.xhtml#l00045">ChannelShuffleLayerNode::forward_descriptors()</a>, <a class="el" href="_generate_proposals_layer_node_8cpp_source.xhtml#l00047">GenerateProposalsLayerNode::forward_descriptors()</a>, <a class="el" href="_bounding_box_transform_layer_node_8cpp_source.xhtml#l00047">BoundingBoxTransformLayerNode::forward_descriptors()</a>, <a class="el" href="_quantization_layer_node_8cpp_source.xhtml#l00047">QuantizationLayerNode::forward_descriptors()</a>, <a class="el" href="_activation_layer_node_8cpp_source.xhtml#l00045">ActivationLayerNode::forward_descriptors()</a>, <a class="el" href="_resize_layer_node_8cpp_source.xhtml#l00051">ResizeLayerNode::forward_descriptors()</a>, <a class="el" href="_permute_layer_node_8cpp_source.xhtml#l00047">PermuteLayerNode::forward_descriptors()</a>, <a class="el" href="_dummy_node_8cpp_source.xhtml#l00042">DummyNode::forward_descriptors()</a>, <a class="el" href="_r_o_i_align_layer_node_8cpp_source.xhtml#l00048">ROIAlignLayerNode::forward_descriptors()</a>, <a class="el" href="_reduction_layer_node_8cpp_source.xhtml#l00057">ReductionLayerNode::forward_descriptors()</a>, <a class="el" href="_depth_to_space_layer_node_8cpp_source.xhtml#l00061">DepthToSpaceLayerNode::forward_descriptors()</a>, <a class="el" href="_pad_layer_node_8cpp_source.xhtml#l00052">PadLayerNode::forward_descriptors()</a>, <a class="el" href="_pooling_layer_node_8cpp_source.xhtml#l00068">PoolingLayerNode::forward_descriptors()</a>, <a class="el" href="_detection_output_layer_node_8cpp_source.xhtml#l00059">DetectionOutputLayerNode::forward_descriptors()</a>, <a class="el" href="_prior_box_layer_node_8cpp_source.xhtml#l00062">PriorBoxLayerNode::forward_descriptors()</a>, <a class="el" href="_reorg_layer_node_8cpp_source.xhtml#l00065">ReorgLayerNode::forward_descriptors()</a>, <a class="el" href="_stack_layer_node_8cpp_source.xhtml#l00065">StackLayerNode::forward_descriptors()</a>, <a class="el" href="_batch_normalization_layer_node_8cpp_source.xhtml#l00056">BatchNormalizationLayerNode::forward_descriptors()</a>, <a class="el" href="_deconvolution_layer_node_8cpp_source.xhtml#l00070">DeconvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_arg_min_max_layer_node_8cpp_source.xhtml#l00057">ArgMinMaxLayerNode::forward_descriptors()</a>, <a class="el" href="_slice_layer_node_8cpp_source.xhtml#l00063">SliceLayerNode::forward_descriptors()</a>, <a class="el" href="_print_layer_node_8cpp_source.xhtml#l00057">PrintLayerNode::forward_descriptors()</a>, <a class="el" href="_l2_normalize_layer_node_8cpp_source.xhtml#l00050">L2NormalizeLayerNode::forward_descriptors()</a>, <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00085">SplitLayerNode::forward_descriptors()</a>, <a class="el" href="_concatenate_layer_node_8cpp_source.xhtml#l00086">ConcatenateLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00071">EltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_strided_slice_layer_node_8cpp_source.xhtml#l00080">StridedSliceLayerNode::forward_descriptors()</a>, <a class="el" href="src_2graph_2nodes_2_fully_connected_layer_8cpp_source.xhtml#l00119">FullyConnectedLayerNode::forward_descriptors()</a>, <a class="el" href="_depthwise_convolution_layer_node_8cpp_source.xhtml#l00103">DepthwiseConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_convolution_batch_normalization_with_post_ops_node_8cpp_source.xhtml#l00103">FusedConvolutionBatchNormalizationWithPostOpsNode::forward_descriptors()</a>, <a class="el" href="_convolution_layer_node_8cpp_source.xhtml#l00114">ConvolutionLayerNode::forward_descriptors()</a>, <a class="el" href="_eltwise_layer_node_8cpp_source.xhtml#l00135">UnaryEltwiseLayerNode::forward_descriptors()</a>, <a class="el" href="_fused_convolution_with_post_op_node_8cpp_source.xhtml#l00114">FusedConvolutionWithPostOpNode::forward_descriptors()</a>, <a class="el" href="_fused_depthwise_convolution_batch_normalization_node_8cpp_source.xhtml#l00105">FusedDepthwiseConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_fused_convolution_batch_normalization_node_8cpp_source.xhtml#l00114">FusedConvolutionBatchNormalizationNode::forward_descriptors()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00640">arm_compute::graph::detail::fuse_convolution_batch_normalization_with_post_ops()</a>, <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00541">arm_compute::graph::detail::fuse_convolution_with_post_ops()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00062">arm_compute::graph::backends::detail::get_backing_tensor()</a>, <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00050">arm_compute::graph::get_tensor_descriptor()</a>, <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>, <a class="el" href="_depth_concat_sub_tensor_mutator_8cpp_source.xhtml#l00050">DepthConcatSubTensorMutator::mutate()</a>, <a class="el" href="_dot_graph_printer_8cpp_source.xhtml#l00141">DotGraphPrinter::print()</a>, and <a class="el" href="_split_layer_node_8cpp_source.xhtml#l00131">SplitLayerNode::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> _desc;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae0a7a8139c09a2e0dbbaeb547fcbe9ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0a7a8139c09a2e0dbbaeb547fcbe9ea">&#9670;&nbsp;</a></span>desc() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp; desc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1_tensor_info.xhtml" title="Store the tensor&#39;s metadata. ">TensorInfo</a> metadata accessor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> descriptor metadata </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> _desc;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0cec440e0579d01d55a4e194f1c7178c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cec440e0579d01d55a4e194f1c7178c">&#9670;&nbsp;</a></span>extract_accessor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt; extract_accessor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extracts accessor from the tensor. </p>
<dl class="section warning"><dt>Warning</dt><dd>Accessor gets unbound from the tensor</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The accessor of the tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00048">arm_compute::graph::detail::transfer_driving_nodes_and_remove_old_node()</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> std::move(_accessor);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a45c1ef0023ce430d009ec79c97761544"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45c1ef0023ce430d009ec79c97761544">&#9670;&nbsp;</a></span>handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * handle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Backend tensor handle accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Backend tensor handle </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00073">arm_compute::graph::detail::allocate_all_input_tensors()</a>, <a class="el" href="_execution_helpers_8cpp_source.xhtml#l00086">arm_compute::graph::detail::allocate_all_output_tensors()</a>, <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00217">arm_compute::graph::configure_tensor()</a>, <a class="el" href="_function_helpers_8h_source.xhtml#l00062">arm_compute::graph::backends::detail::get_backing_tensor()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">arm_compute::graph::backends::detail::get_backing_tensor_info()</a>, and <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> _handle.get();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a738f5e449958bed64c970006375540fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a738f5e449958bed64c970006375540fd">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> ID accessor. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> ID </dd></dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_edge_8h_source.xhtml#l00124">Edge::tensor_id()</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> _id;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7ca865118188dd8c307ae9e84f8a75f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ca865118188dd8c307ae9e84f8a75f6">&#9670;&nbsp;</a></span>set_accessor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_accessor </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt;&#160;</td>
          <td class="paramname"><em>accessor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the backend tensor accessor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">accessor</td><td>Accessor to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_grouped_convolution_mutator_8cpp_source.xhtml#l00113">GroupedConvolutionMutator::mutate()</a>, <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00062">arm_compute::graph::set_tensor_accessor()</a>, and <a class="el" href="_node_fusion_mutator_8cpp_source.xhtml#l00048">arm_compute::graph::detail::transfer_driving_nodes_and_remove_old_node()</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    _accessor = std::move(<a class="code" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a761495426edf3b875f67a8f4c3a199b5">accessor</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1graph_1_1_tensor_xhtml_a761495426edf3b875f67a8f4c3a199b5"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_tensor.xhtml#a761495426edf3b875f67a8f4c3a199b5">arm_compute::graph::Tensor::accessor</a></div><div class="ttdeci">ITensorAccessor * accessor()</div><div class="ttdoc">Backend tensor accessor. </div><div class="ttdef"><b>Definition:</b> <a href="src_2graph_2_tensor_8cpp_source.xhtml#l00065">Tensor.cpp:65</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8c1a8dc99f338372d7dc6dd33672ec03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c1a8dc99f338372d7dc6dd33672ec03">&#9670;&nbsp;</a></span>set_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_handle </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a> &gt;&#160;</td>
          <td class="paramname"><em>backend_tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the backend tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">backend_tensor</td><td>Backend tensor to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="src_2graph_2_utils_8cpp_source.xhtml#l00217">arm_compute::graph::configure_tensor()</a>, and <a class="el" href="_split_layer_sub_tensor_mutator_8cpp_source.xhtml#l00050">SplitLayerSubTensorMutator::mutate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    _handle = std::move(backend_tensor);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0839be1697496b3a951e030627f9e69b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0839be1697496b3a951e030627f9e69b">&#9670;&nbsp;</a></span>unbind_edge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void unbind_edge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&#160;</td>
          <td class="paramname"><em>eid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unbinds an edge from a tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">eid</td><td><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" title="Graph Edge. ">Edge</a> to unbind </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_node_8cpp_source.xhtml#l00077">INode::set_output_tensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    _bound_edges.erase(eid);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/graph/<a class="el" href="graph_2_tensor_8h_source.xhtml">Tensor.h</a></li>
<li>src/graph/<a class="el" href="src_2graph_2_tensor_8cpp_source.xhtml">Tensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:55 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
