<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/Winograd.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_c_l_2_winograd_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Winograd.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">arm_compute/core/Helpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2runtime_2_c_l_2_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLWinogradConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_2_helper_8h_source.xhtml">tests/CL/Helper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradInputTransformDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradOutputTransformDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/WinogradConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_winograd_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4aa7763717f234371acad168e9ed5e5f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4aa7763717f234371acad168e9ed5e5f">CLWinogradConvolutionLayerFastMathFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; CLTensor, CLAccessor, CLWinogradConvolutionLayer, float &gt;</td></tr>
<tr class="separator:a4aa7763717f234371acad168e9ed5e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae711168cbe2062ca32930ff4e3f761d0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae711168cbe2062ca32930ff4e3f761d0">CLWinogradConvolutionLayerFastMathMixedDataLayoutFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; CLTensor, CLAccessor, CLWinogradConvolutionLayer, float, float, true, true &gt;</td></tr>
<tr class="separator:ae711168cbe2062ca32930ff4e3f761d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aac048516f77e38ab5265d5baaa3422c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac048516f77e38ab5265d5baaa3422c5">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F16), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 8U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(19U), 1, DataType::F16), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F16), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 2, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false })), input_info, weights_info, bias_info, output_info, conv_info, expected)</td></tr>
<tr class="separator:aac048516f77e38ab5265d5baaa3422c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5f1a4f1c500cbb5a19b73cebee80b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aea5f1a4f1c500cbb5a19b73cebee80b4">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aea5f1a4f1c500cbb5a19b73cebee80b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e5ab3c9d701a7ec90d688417503aa24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6e5ab3c9d701a7ec90d688417503aa24">FIXTURE_DATA_TEST_CASE</a> (RunMixedDataLayout, CLWinogradConvolutionLayerFastMathMixedDataLayoutFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(combine(framework::dataset::make(&quot;Input&quot;, TensorShape(8U, 8U, 32U)), framework::dataset::make(&quot;Weight&quot;, TensorShape(1U, 3U, 32U, 1U))), framework::dataset::make(&quot;Bias&quot;, TensorShape(1U))), framework::dataset::make(&quot;Output&quot;, TensorShape(8U, 6U, 1U))), framework::dataset::make(&quot;PadStrideInfo&quot;, PadStrideInfo(1, 1, 0, 0))), framework::dataset::make(&quot;Dilation&quot;, Size2D(1U, 1U))), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a6e5ab3c9d701a7ec90d688417503aa24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a510c741b806778da951c9461e400ea66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a510c741b806778da951c9461e400ea66">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a510c741b806778da951c9461e400ea66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel. ">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc58e7b1ccb8c9b0abb9bcfa6e592c0c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afc58e7b1ccb8c9b0abb9bcfa6e592c0c">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:afc58e7b1ccb8c9b0abb9bcfa6e592c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4306d5a9d8a4719add50ba5be6df069b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4306d5a9d8a4719add50ba5be6df069b">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a4306d5a9d8a4719add50ba5be6df069b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6f542aa33954cc0c391ebc079bc0ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9a6f542aa33954cc0c391ebc079bc0ef">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a9a6f542aa33954cc0c391ebc079bc0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86dab0f898d801a593d95623ff272e86"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a86dab0f898d801a593d95623ff272e86">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a86dab0f898d801a593d95623ff272e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd84a2e27e9d1d931b54acdc1643bda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2bd84a2e27e9d1d931b54acdc1643bda">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a2bd84a2e27e9d1d931b54acdc1643bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dbffe87f2179ce2814d7b023279115a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0dbffe87f2179ce2814d7b023279115a">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a0dbffe87f2179ce2814d7b023279115a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e091bdcad717b20f789c709baee90d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa4e091bdcad717b20f789c709baee90d">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa4e091bdcad717b20f789c709baee90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a733f89d4143bb9b6823a7f2019842c9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a733f89d4143bb9b6823a7f2019842c9d">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a733f89d4143bb9b6823a7f2019842c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ac34c117469a1fea4f3749223fa00a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa6ac34c117469a1fea4f3749223fa00a">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa6ac34c117469a1fea4f3749223fa00a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3d3f69e3800e4033c4442fbc87bcd21"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa3d3f69e3800e4033c4442fbc87bcd21">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa3d3f69e3800e4033c4442fbc87bcd21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff759ab62872584f67270633e84e5aed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aff759ab62872584f67270633e84e5aed">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aff759ab62872584f67270633e84e5aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777c352be768ee425910acfed9931d93"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a777c352be768ee425910acfed9931d93">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a777c352be768ee425910acfed9931d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac782f10cf3f2d5e09d893218d5849e8e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac782f10cf3f2d5e09d893218d5849e8e">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ac782f10cf3f2d5e09d893218d5849e8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa18071fe6e7745469937e92be084e8aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa18071fe6e7745469937e92be084e8aa">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:aa18071fe6e7745469937e92be084e8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b374452891e5a2e155ae7801d032da7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0b374452891e5a2e155ae7801d032da7">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a0b374452891e5a2e155ae7801d032da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a5c2ad3fc736a6e26d776f62fb53ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7a5c2ad3fc736a6e26d776f62fb53ae">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:af7a5c2ad3fc736a6e26d776f62fb53ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4c16ee2840b5b6fdad9101c4332ad14"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac4c16ee2840b5b6fdad9101c4332ad14">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ac4c16ee2840b5b6fdad9101c4332ad14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adce25b8f486e9fb7a9bd665d0dc748eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#adce25b8f486e9fb7a9bd665d0dc748eb">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:adce25b8f486e9fb7a9bd665d0dc748eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8cf8d715ef18d45732ebcfc216ac405"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab8cf8d715ef18d45732ebcfc216ac405">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:ab8cf8d715ef18d45732ebcfc216ac405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8be4116648e92b15bfd506010433bfee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8be4116648e92b15bfd506010433bfee">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a8be4116648e92b15bfd506010433bfee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92ea6ac2e4c17a8b8cb61325165e6d52"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a92ea6ac2e4c17a8b8cb61325165e6d52">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a92ea6ac2e4c17a8b8cb61325165e6d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ac58b06396ca30913df4fe49cda47b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3ac58b06396ca30913df4fe49cda47b7">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })))</td></tr>
<tr class="separator:a3ac58b06396ca30913df4fe49cda47b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef554aa97e83764c6914288c18309a00"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aef554aa97e83764c6914288c18309a00">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x7Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsSmallDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:aef554aa97e83764c6914288c18309a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5383ca2486debad82a6ae5fb52f15ce2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5383ca2486debad82a6ae5fb52f15ce2">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture16, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x7Dataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), ActivationFunctionsDataset), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })))</td></tr>
<tr class="separator:a5383ca2486debad82a6ae5fb52f15ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a1016f3f9a608db04ae19147571d7ae9d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1016f3f9a608db04ae19147571d7ae9d">CLWinogradConvolutionLayerFastMathFixture16</a></td></tr>
<tr class="separator:a1016f3f9a608db04ae19147571d7ae9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_winograd_8cpp.xhtml">Winograd.cpp</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:49 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
