<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GEMMLowpOutputStageInfo Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">GEMMLowpOutputStageInfo Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>GEMMLowp output stage info.  
 <a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a6e019ad85979fd73c74f97e5483faf35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864">GEMMLowpOutputStageType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6e019ad85979fd73c74f97e5483faf35">type</a> { <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a> }</td></tr>
<tr class="memdesc:a6e019ad85979fd73c74f97e5483faf35"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage type.  <a href="#a6e019ad85979fd73c74f97e5483faf35">More...</a><br /></td></tr>
<tr class="separator:a6e019ad85979fd73c74f97e5483faf35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01934c5087f5193aaf3ea9bf41d1a8dc"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a01934c5087f5193aaf3ea9bf41d1a8dc">gemmlowp_offset</a> { 0 }</td></tr>
<tr class="memdesc:a01934c5087f5193aaf3ea9bf41d1a8dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage offset used for quantizing to QASYMM8.  <a href="#a01934c5087f5193aaf3ea9bf41d1a8dc">More...</a><br /></td></tr>
<tr class="separator:a01934c5087f5193aaf3ea9bf41d1a8dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cfb92f1c287bf099c3fca0ef0391a2b"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a1cfb92f1c287bf099c3fca0ef0391a2b">gemmlowp_multiplier</a> { 0 }</td></tr>
<tr class="memdesc:a1cfb92f1c287bf099c3fca0ef0391a2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage multiplier used for quantizing to QASYMM8.  <a href="#a1cfb92f1c287bf099c3fca0ef0391a2b">More...</a><br /></td></tr>
<tr class="separator:a1cfb92f1c287bf099c3fca0ef0391a2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f0613aeb69c326e7d8ffb34b44fae94"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a3f0613aeb69c326e7d8ffb34b44fae94">gemmlowp_shift</a> { 0 }</td></tr>
<tr class="memdesc:a3f0613aeb69c326e7d8ffb34b44fae94"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage shift used for quantizing to uint8.  <a href="#a3f0613aeb69c326e7d8ffb34b44fae94">More...</a><br /></td></tr>
<tr class="separator:a3f0613aeb69c326e7d8ffb34b44fae94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a155d27c75f14a82a74e5039c9657c8eb"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a155d27c75f14a82a74e5039c9657c8eb">gemmlowp_min_bound</a> { std::numeric_limits&lt;int32_t&gt;::lowest() }</td></tr>
<tr class="memdesc:a155d27c75f14a82a74e5039c9657c8eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp min value used to saturate down the output result before converting back to QASYMM8.  <a href="#a155d27c75f14a82a74e5039c9657c8eb">More...</a><br /></td></tr>
<tr class="separator:a155d27c75f14a82a74e5039c9657c8eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db94040329f1dedcd348ec7de072e2a"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a6db94040329f1dedcd348ec7de072e2a">gemmlowp_max_bound</a> { std::numeric_limits&lt;int32_t&gt;::max() }</td></tr>
<tr class="memdesc:a6db94040329f1dedcd348ec7de072e2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp max value used to saturate down the output result before converting back to QASYMM8.  <a href="#a6db94040329f1dedcd348ec7de072e2a">More...</a><br /></td></tr>
<tr class="separator:a6db94040329f1dedcd348ec7de072e2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">gemmlowp_multipliers</a> {}</td></tr>
<tr class="memdesc:ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage multiplier used for quantizing to QASYMM8.  <a href="#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">More...</a><br /></td></tr>
<tr class="separator:ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab269b182588a158cd256f9d4bb2a00dd"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab269b182588a158cd256f9d4bb2a00dd">gemmlowp_shifts</a> {}</td></tr>
<tr class="memdesc:ab269b182588a158cd256f9d4bb2a00dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage multiplier used for quantizing to QASYMM8.  <a href="#ab269b182588a158cd256f9d4bb2a00dd">More...</a><br /></td></tr>
<tr class="separator:ab269b182588a158cd256f9d4bb2a00dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc26274f64ea797e55d06e6a813f30f9"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#adc26274f64ea797e55d06e6a813f30f9">gemmlowp_real_multiplier</a> { 0 }</td></tr>
<tr class="memdesc:adc26274f64ea797e55d06e6a813f30f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage real multiplier used for quantizing to QASYMM8.  <a href="#adc26274f64ea797e55d06e6a813f30f9">More...</a><br /></td></tr>
<tr class="separator:adc26274f64ea797e55d06e6a813f30f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94e1801be6c3d9d6645c694d7e280cda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#a94e1801be6c3d9d6645c694d7e280cda">is_quantized_per_channel</a> { false }</td></tr>
<tr class="memdesc:a94e1801be6c3d9d6645c694d7e280cda"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp quantized per-channel flag.  <a href="#a94e1801be6c3d9d6645c694d7e280cda">More...</a><br /></td></tr>
<tr class="separator:a94e1801be6c3d9d6645c694d7e280cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab233758aca2751c6e71a2f79baf7b92a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml#ab233758aca2751c6e71a2f79baf7b92a">output_data_type</a> { <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a> }</td></tr>
<tr class="memdesc:ab233758aca2751c6e71a2f79baf7b92a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output tensor data type to use if the output is not initialized.  <a href="#ab233758aca2751c6e71a2f79baf7b92a">More...</a><br /></td></tr>
<tr class="separator:ab233758aca2751c6e71a2f79baf7b92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>GEMMLowp output stage info. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02289">2289</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Field Documentation</h2>
<a id="a6db94040329f1dedcd348ec7de072e2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db94040329f1dedcd348ec7de072e2a">&#9670;&nbsp;</a></span>gemmlowp_max_bound</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t gemmlowp_max_bound { std::numeric_limits&lt;int32_t&gt;::max() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp max value used to saturate down the output result before converting back to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02296">2296</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00088">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00262">CpuGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00105">CpuGemmLowpOutputStage::validate()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="a155d27c75f14a82a74e5039c9657c8eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a155d27c75f14a82a74e5039c9657c8eb">&#9670;&nbsp;</a></span>gemmlowp_min_bound</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t gemmlowp_min_bound { std::numeric_limits&lt;int32_t&gt;::lowest() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp min value used to saturate down the output result before converting back to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02295">2295</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00088">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00262">CpuGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00105">CpuGemmLowpOutputStage::validate()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="a1cfb92f1c287bf099c3fca0ef0391a2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cfb92f1c287bf099c3fca0ef0391a2b">&#9670;&nbsp;</a></span>gemmlowp_multiplier</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t gemmlowp_multiplier { 0 }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage multiplier used for quantizing to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02293">2293</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00114">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00094">CLQLSTMLayer::CLQLSTMLayer()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00113">NEQLSTMLayer::NEQLSTMLayer()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00248">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="ae5bd6bebbc0c7ebd9e7dbfd47d939c2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5bd6bebbc0c7ebd9e7dbfd47d939c2a">&#9670;&nbsp;</a></span>gemmlowp_multipliers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int32_t&gt; gemmlowp_multipliers {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage multiplier used for quantizing to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02297">2297</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00114">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>.</p>

</div>
</div>
<a id="a01934c5087f5193aaf3ea9bf41d1a8dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01934c5087f5193aaf3ea9bf41d1a8dc">&#9670;&nbsp;</a></span>gemmlowp_offset</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t gemmlowp_offset { 0 }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage offset used for quantizing to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02292">2292</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00088">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="adc26274f64ea797e55d06e6a813f30f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc26274f64ea797e55d06e6a813f30f9">&#9670;&nbsp;</a></span>gemmlowp_real_multiplier</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float gemmlowp_real_multiplier { 0 }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage real multiplier used for quantizing to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02299">2299</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00088">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a3f0613aeb69c326e7d8ffb34b44fae94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f0613aeb69c326e7d8ffb34b44fae94">&#9670;&nbsp;</a></span>gemmlowp_shift</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t gemmlowp_shift { 0 }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage shift used for quantizing to uint8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02294">2294</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00114">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00094">CLQLSTMLayer::CLQLSTMLayer()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00113">NEQLSTMLayer::NEQLSTMLayer()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00248">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="ab269b182588a158cd256f9d4bb2a00dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab269b182588a158cd256f9d4bb2a00dd">&#9670;&nbsp;</a></span>gemmlowp_shifts</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int32_t&gt; gemmlowp_shifts {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage multiplier used for quantizing to QASYMM8. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02298">2298</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_asymm_helpers_8cpp_source.xhtml#l00114">arm_compute::quantization::calculate_quantized_multipliers()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, and <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>.</p>

</div>
</div>
<a id="a94e1801be6c3d9d6645c694d7e280cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94e1801be6c3d9d6645c694d7e280cda">&#9670;&nbsp;</a></span>is_quantized_per_channel</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_quantized_per_channel { false }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp quantized per-channel flag. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02300">2300</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>.</p>

</div>
</div>
<a id="ab233758aca2751c6e71a2f79baf7b92a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab233758aca2751c6e71a2f79baf7b92a">&#9670;&nbsp;</a></span>output_data_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> output_data_type { <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a696b031073e74bf2cb98e5ef201d4aa3">DataType::UNKNOWN</a> }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Output tensor data type to use if the output is not initialized. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02301">2301</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00085">ClGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_quantize_down_int32_scale_by_float_kernel_8cpp_source.xhtml#l00088">ClGemmLowpQuantizeDownInt32ScaleByFloatKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_quantize_down_int32_scale_kernel_8cpp_source.xhtml#l00262">CpuGemmLowpQuantizeDownInt32ScaleKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00248">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<a id="a6e019ad85979fd73c74f97e5483faf35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e019ad85979fd73c74f97e5483faf35">&#9670;&nbsp;</a></span>type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864">GEMMLowpOutputStageType</a> type { <a class="el" href="namespacearm__compute.xhtml#a5558e2cc22f7f4771653d992c8ad8864ab50339a10e1de285ac99d4c3990b8693">GEMMLowpOutputStageType::NONE</a> }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GEMMLowp output stage type. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02291">2291</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_gemm_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00132">ClGemmLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00039">CpuGemmLowpOutputStage::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00288">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00040">ClGemmLowpOutputStage::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00162">ClGemmConv2d::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l02810">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00505">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="_cpu_gemm_lowp_output_stage_8cpp_source.xhtml#l00105">CpuGemmLowpOutputStage::validate()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00073">ClGemmLowpOutputStage::validate()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00349">ClGemmConv2d::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00248">NELSTMLayerQuantized::validate()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00675">NEQLSTMLayer::validate()</a>, and <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00603">CLQLSTMLayer::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
