<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/Framework.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_framework_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Framework.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_framework_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_framework_8h.xhtml">Framework.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parameters_library_8h.xhtml">tests/framework/ParametersLibrary.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_filter_8h.xhtml">tests/framework/TestFilter.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_runtime_context_8h.xhtml">arm_compute/runtime/CL/CLRuntimeContext.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>test</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">   46</a></span>&#160;std::unique_ptr&lt;ParametersLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span>framework</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">   50</a></span>&#160;std::unique_ptr&lt;InstrumentsInfo&gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">instruments_info</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;Framework::Framework()</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    : _test_filter(nullptr)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">InstrumentType::WALL_CLOCK_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;WallClockTimestamps, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">InstrumentType::WALL_CLOCK_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>),</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                   Instrument::make_instrument&lt;WallClockTimestamps, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">InstrumentType::WALL_CLOCK_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>),</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                   Instrument::make_instrument&lt;WallClockTimestamps, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">InstrumentType::WALL_CLOCK_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;WallClockTimer, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">InstrumentType::WALL_CLOCK_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>), Instrument::make_instrument&lt;WallClockTimer, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">InstrumentType::WALL_CLOCK_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>), Instrument::make_instrument&lt;WallClockTimer, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">InstrumentType::SCHEDULER_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;SchedulerTimestamps, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">InstrumentType::SCHEDULER_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                   Instrument::make_instrument&lt;SchedulerTimestamps, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">InstrumentType::SCHEDULER_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                   Instrument::make_instrument&lt;SchedulerTimestamps, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">InstrumentType::SCHEDULER_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;SchedulerTimer, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">InstrumentType::SCHEDULER_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>), Instrument::make_instrument&lt;SchedulerTimer, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">InstrumentType::SCHEDULER_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>), Instrument::make_instrument&lt;SchedulerTimer, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#ifdef PMU_ENABLED</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">InstrumentType::PMU</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;PMUCounter, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">InstrumentType::PMU</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">ScaleFactor::SCALE_1K</a>), Instrument::make_instrument&lt;PMUCounter, ScaleFactor::SCALE_1K&gt;);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">InstrumentType::PMU</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">ScaleFactor::SCALE_1M</a>), Instrument::make_instrument&lt;PMUCounter, ScaleFactor::SCALE_1M&gt;);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* PMU_ENABLED */</span><span class="preprocessor"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#ifdef MALI_ENABLED</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">InstrumentType::MALI</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;MaliCounter, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">InstrumentType::MALI</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">ScaleFactor::SCALE_1K</a>), Instrument::make_instrument&lt;MaliCounter, ScaleFactor::SCALE_1K&gt;);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">InstrumentType::MALI</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">ScaleFactor::SCALE_1M</a>), Instrument::make_instrument&lt;MaliCounter, ScaleFactor::SCALE_1M&gt;);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* MALI_ENABLED */</span><span class="preprocessor"></span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">InstrumentType::OPENCL_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;OpenCLTimestamps, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">InstrumentType::OPENCL_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">ScaleFactor::TIME_US</a>), Instrument::make_instrument&lt;OpenCLTimestamps, ScaleFactor::TIME_US&gt;);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">InstrumentType::OPENCL_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>), Instrument::make_instrument&lt;OpenCLTimestamps, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">InstrumentType::OPENCL_TIMESTAMPS</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>), Instrument::make_instrument&lt;OpenCLTimestamps, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">InstrumentType::OPENCL_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;OpenCLTimer, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">InstrumentType::OPENCL_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">ScaleFactor::TIME_US</a>), Instrument::make_instrument&lt;OpenCLTimer, ScaleFactor::TIME_US&gt;);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">InstrumentType::OPENCL_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">ScaleFactor::TIME_MS</a>), Instrument::make_instrument&lt;OpenCLTimer, ScaleFactor::TIME_MS&gt;);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">InstrumentType::OPENCL_TIMER</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">ScaleFactor::TIME_S</a>), Instrument::make_instrument&lt;OpenCLTimer, ScaleFactor::TIME_S&gt;);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">InstrumentType::OPENCL_MEMORY_USAGE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">ScaleFactor::NONE</a>), Instrument::make_instrument&lt;OpenCLMemoryUsage, ScaleFactor::NONE&gt;);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">InstrumentType::OPENCL_MEMORY_USAGE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">ScaleFactor::SCALE_1K</a>),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                   Instrument::make_instrument&lt;OpenCLMemoryUsage, ScaleFactor::SCALE_1K&gt;);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    _available_instruments.emplace(std::pair&lt;InstrumentType, ScaleFactor&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">InstrumentType::OPENCL_MEMORY_USAGE</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">ScaleFactor::SCALE_1M</a>),</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                   Instrument::make_instrument&lt;OpenCLMemoryUsage, ScaleFactor::SCALE_1M&gt;);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    instruments_info = std::make_unique&lt;InstrumentsInfo&gt;();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6f786ac52185e75dfb58b386d006c078">  100</a></span>&#160;std::set&lt;InstrumentsDescription&gt; <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6f786ac52185e75dfb58b386d006c078">Framework::available_instruments</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::set&lt;InstrumentsDescription&gt; types;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;instrument : _available_instruments)</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        types.emplace(instrument.first);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> types;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;std::map&lt;TestResult::Status, int&gt; Framework::count_test_results()<span class="keyword"> const</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    std::map&lt;TestResult::Status, int&gt; counts;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;test : _test_results)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        ++counts[test.second.status];</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> counts;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">  124</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">Framework::get</a>()</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">Framework</a> instance;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> instance;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">  130</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">Framework::init</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">FrameworkConfig</a> &amp;config)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    _test_filter.reset(<span class="keyword">new</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">TestFilter</a>(config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>, config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">name_filter</a>, config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">id_filter</a>));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    _num_iterations = config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">num_iterations</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    _log_level      = config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">log_level</a>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    _cooldown_sec   = config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">cooldown_sec</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    _configure_only = config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">configure_only</a>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    _instruments = std::set&lt;framework::InstrumentsDescription&gt;(std::begin(config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">instruments</a>), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(config.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">instruments</a>));</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;std::string Framework::current_suite_name()<span class="keyword"> const</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">join</a>(_test_suite_name.cbegin(), _test_suite_name.cend(), <span class="stringliteral">&quot;/&quot;</span>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a3893bc1fbad02227b78bbce22bcff1ba">  146</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a3893bc1fbad02227b78bbce22bcff1ba">Framework::push_suite</a>(std::string <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    _test_suite_name.emplace_back(std::move(name));</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aedbe6ac82569518fedc4a08718f8aa93">  151</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aedbe6ac82569518fedc4a08718f8aa93">Framework::pop_suite</a>()</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    _test_suite_name.pop_back();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab5eae10e0a4067cff9e87fdcb186eca8">  156</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab5eae10e0a4067cff9e87fdcb186eca8">Framework::add_test_info</a>(std::string <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    _test_info.emplace_back(std::move(info));</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">  161</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">Framework::clear_test_info</a>()</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    _test_info.clear();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6ad85a69f028cf3f5030666babd7e8e7">  166</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6ad85a69f028cf3f5030666babd7e8e7">Framework::has_test_info</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">return</span> !_test_info.empty();</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">  171</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">Framework::print_test_info</a>(std::ostream &amp;os)<span class="keyword"> const</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span>(!_test_info.empty())</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;CONTEXT:\n&quot;</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a> : _test_info)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;    &quot;</span> &lt;&lt; <a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keywordtype">void</span> Framework::func_on_all_printers(F &amp;&amp;func)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">std::for_each</a>(std::begin(_printers), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_printers), func);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">  190</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">Framework::log_test_start</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">LogLevel::TESTS</a>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">print_test_header</a>(info);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        });</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">  201</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">Framework::log_test_skipped</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">  206</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">Framework::log_test_end</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">LogLevel::MEASUREMENTS</a>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a02125d92756170feb5ffa1fda589f0e5">print_profiler_header</a>(_test_results.at(info).header_data);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">print_measurements</a>(_test_results.at(info).measurements);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        });</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">LogLevel::TESTS</a>)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        func_on_all_printers([](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">print_test_footer</a>();</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        });</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0128e62cd67888b56078dac05dd59761">  226</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0128e62cd67888b56078dac05dd59761">Framework::log_failed_expectation</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> &amp;error)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_current_test_info == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_current_test_result == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_expected_failure = _current_test_info-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a> == <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestCaseFactory::Status::EXPECTED_FAILURE</a>;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= error.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml#a01ff177012854b9a35d86825a3a8eabd">level</a>())</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(error, is_expected_failure);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        });</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    _current_test_result-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">  244</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">Framework::log_info</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>)</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;{</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">LogLevel::DEBUG</a>)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">print_info</a>(info);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        });</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">  255</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">Framework::num_iterations</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">return</span> _num_iterations;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ae0b69f2142100651d022d5af576f42cf">  260</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ae0b69f2142100651d022d5af576f42cf">Framework::set_num_iterations</a>(<span class="keywordtype">int</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">num_iterations</a>)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    _num_iterations = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">num_iterations</a>;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">  265</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">Framework::set_throw_errors</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">throw_errors</a>)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    _throw_errors = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">throw_errors</a>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">  270</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">Framework::throw_errors</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span> _throw_errors;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">  275</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">Framework::set_stop_on_error</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">stop_on_error</a>)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    _stop_on_error = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">stop_on_error</a>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">  280</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">Framework::stop_on_error</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">return</span> _stop_on_error;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">  285</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">Framework::set_error_on_missing_assets</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">error_on_missing_assets</a>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    _error_on_missing_assets = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">error_on_missing_assets</a>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">  290</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">Framework::error_on_missing_assets</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> _error_on_missing_assets;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keywordtype">void</span> Framework::run_test(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">TestCaseFactory</a> &amp;test_factory)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">if</span>(test_factory.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a12bb27a4d1aa5d1e69b44b06b515be74">status</a>() == <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">TestCaseFactory::Status::DISABLED</a>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">log_test_skipped</a>(info);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">set_test_result</a>(info, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">TestResult::Status::DISABLED</a>));</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    }</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">log_test_start</a>(info);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a>   profiler = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">get_profiler</a>();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a> result(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad3cbb6cb9043ad908cdd5414236e6603">TestResult::Status::NOT_RUN</a>);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    _current_test_info   = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    _current_test_result = &amp;result;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        func_on_all_printers([](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab7cc3070c9af8540e5805f5df8b0214f">print_errors_header</a>();</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        });</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> is_expected_failure = info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a> == <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestCaseFactory::Status::EXPECTED_FAILURE</a>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        std::unique_ptr&lt;TestCase&gt; test_case = test_factory.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a15cffdfdea029e4617b983044f27f25e">make</a>();</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a4b454bbf54829d209850a8efa639b942">test_start</a>();</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            test_case-&gt;do_setup();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; _num_iterations; ++i)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <span class="comment">//Start the profiler if:</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="comment">//- there is only one iteration</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                <span class="comment">//- it&#39;s not the first iteration of a multi-iterations run.</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="comment">//</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="comment">//Reason: if the CLTuner is enabled then the first run will be really messy</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="comment">//as each kernel will be executed several times, messing up the instruments like OpenCL timers.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="keywordflow">if</span>(_num_iterations == 1 || i != 0)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                    profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">start</a>();</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                }</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                test_case-&gt;do_run();</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                test_case-&gt;do_sync();</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="keywordflow">if</span>(_num_iterations == 1 || i != 0)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                {</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">stop</a>();</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            test_case-&gt;do_teardown();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">// Change status to success if no error has happend</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span>(result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> == <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad3cbb6cb9043ad908cdd5414236e6603">TestResult::Status::NOT_RUN</a>)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad0749aaba8b833466dfcbb0428e4f89c">TestResult::Status::SUCCESS</a>;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            }</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        }</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">catch</span>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml">FileNotFound</a> &amp;error)</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        {</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">if</span>(_error_on_missing_assets)</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> test_error(error.what(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                    func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(test_error, is_expected_failure);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    });</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                }</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                {</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                }</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            }</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            {</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">LogLevel::DEBUG</a>)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                    func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                        p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">print_info</a>(error.what());</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                    });</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                }</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad3cbb6cb9043ad908cdd5414236e6603">TestResult::Status::NOT_RUN</a>;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            }</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        }</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keywordflow">catch</span>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> &amp;error)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">if</span>(_log_level &gt;= error.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml#a01ff177012854b9a35d86825a3a8eabd">level</a>())</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(error, is_expected_failure);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                });</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            {</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        }</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keywordflow">catch</span>(const ::cl::Error &amp;error)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            {</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                std::stringstream stream;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                stream &lt;&lt; <span class="stringliteral">&quot;Error code: &quot;</span> &lt;&lt; error.err();</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a> test_error(error.what(), <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>, stream.str());</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                {</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(test_error, is_expected_failure);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                });</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            }</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            {</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::exception &amp;error)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        {</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                {</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                    p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(error, is_expected_failure);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                });</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            }</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            {</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            }</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        }</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">catch</span>(...)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">test_stop</a>();</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                {</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                    p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a>(<span class="stringliteral">&quot;Received unknown exception&quot;</span>), is_expected_failure);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                });</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        }</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::exception &amp;error)</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    {</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            {</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(error, is_expected_failure);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            });</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        }</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        {</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        }</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">catch</span>(...)</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        {</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            func_on_all_printers([&amp;](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            {</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">TestError</a>(<span class="stringliteral">&quot;Received unknown exception&quot;</span>), is_expected_failure);</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            });</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keywordflow">if</span>(_throw_errors)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        {</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        }</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">LogLevel::ERRORS</a>)</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        func_on_all_printers([](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        {</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a0aa25e682d18e48c986ed28cca43ad77">print_errors_footer</a>();</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        });</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    }</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    _current_test_info   = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    _current_test_result = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keywordflow">if</span>(result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> == <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>)</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    {</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">if</span>(info.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">status</a> == <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestCaseFactory::Status::EXPECTED_FAILURE</a>)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> = <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestResult::Status::EXPECTED_FAILURE</a>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">if</span>(result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> == <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a> || result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">status</a> == <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>)</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    {</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">if</span>(_stop_on_error)</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        {</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">throw</span> std::runtime_error(<span class="stringliteral">&quot;Abandon on first error.&quot;</span>);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        }</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    }</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a77bdf8b2932e6913743b37f6b34430c8">header_data</a>  = profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a13032d4f8b486c92fe3eeffebf8bd829">header</a>();</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    result.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a148bf915f9e0545fc2666ee2a777f563">measurements</a> = profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#ad548fafce1d10263d6d02fa8df934167">measurements</a>();</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">set_test_result</a>(info, result);</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">log_test_end</a>(info);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;}</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">  543</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">Framework::run</a>()</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="comment">// Clear old test results</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    _test_results.clear();</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">LogLevel::TESTS</a>)</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    {</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        func_on_all_printers([](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        {</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">print_run_header</a>();</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        });</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    }</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    <span class="keyword">const</span> std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt; start = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordtype">int</span> <span class="keywordtype">id</span>          = 0;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordtype">int</span> id_run_test = 0;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;test_factory : _test_factories)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    {</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keyword">const</span> std::string test_case_name = test_factory-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a1d89c28bd42ba9a52da008bb69367171">name</a>();</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a>    test_info{ id, test_case_name, test_factory-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a7a45c67d3c31de477d1a54c8dea7caa4">mode</a>(), test_factory-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a12bb27a4d1aa5d1e69b44b06b515be74">status</a>() };</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        <span class="keywordflow">if</span>(_test_filter-&gt;is_selected(test_info))</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        {</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            <span class="comment">// Every 100 tests, reset the OpenCL context to release the allocated memory</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>() &amp;&amp; (id_run_test % 100) == 0)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            {</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                <span class="keyword">auto</span> ctx_properties   = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>().getInfo&lt;CL_CONTEXT_PROPERTIES&gt;(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                <span class="keyword">auto</span> queue_properties = <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().getInfo&lt;CL_QUEUE_PROPERTIES&gt;(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                cl::Context      new_ctx   = cl::Context(CL_DEVICE_TYPE_DEFAULT, ctx_properties.data());</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                cl::CommandQueue new_queue = cl::CommandQueue(new_ctx, <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_device(), queue_properties);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a>();</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a>(new_ctx);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9608e5af9f3a199f69ca6aa41b94359a">set_queue</a>(new_queue);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            }</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor">#endif // ARM_COMPUTE_CL</span></div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            run_test(test_info, *test_factory);</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            ++id_run_test;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="comment">// Run test delay</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a9d63b2b6033b19236853f5f21d990b5b">sleep_in_seconds</a>(_cooldown_sec);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        }</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        ++id;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keyword">const</span> std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt; <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">end</a> = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">LogLevel::TESTS</a>)</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    {</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        func_on_all_printers([](<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> * p)</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        {</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            p-&gt;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">print_run_footer</a>();</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        });</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    }</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keyword">auto</span> runtime = std::chrono::duration_cast&lt;std::chrono::seconds&gt;(end - start);</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    std::map&lt;TestResult::Status, int&gt; results = count_test_results();</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">if</span>(_log_level &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">LogLevel::NONE</a>)</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    {</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;Executed &quot;</span> &lt;&lt; _test_results.size() &lt;&lt; <span class="stringliteral">&quot; test(s) (&quot;</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                  &lt;&lt; results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad0749aaba8b833466dfcbb0428e4f89c">TestResult::Status::SUCCESS</a>] &lt;&lt; <span class="stringliteral">&quot; passed, &quot;</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                  &lt;&lt; results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestResult::Status::EXPECTED_FAILURE</a>] &lt;&lt; <span class="stringliteral">&quot; expected failures, &quot;</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                  &lt;&lt; results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">TestResult::Status::FAILED</a>] &lt;&lt; <span class="stringliteral">&quot; failed, &quot;</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                  &lt;&lt; results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">TestResult::Status::CRASHED</a>] &lt;&lt; <span class="stringliteral">&quot; crashed, &quot;</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                  &lt;&lt; results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">TestResult::Status::DISABLED</a>] &lt;&lt; <span class="stringliteral">&quot; disabled) in &quot;</span> &lt;&lt; runtime.count() &lt;&lt; <span class="stringliteral">&quot; second(s)\n&quot;</span>;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordtype">int</span> num_successful_tests = results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad0749aaba8b833466dfcbb0428e4f89c">TestResult::Status::SUCCESS</a>] + results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">TestResult::Status::EXPECTED_FAILURE</a>] + results[<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">TestResult::Status::DISABLED</a>];</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keywordflow">return</span> (static_cast&lt;unsigned int&gt;(num_successful_tests) == _test_results.size());</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;}</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">  623</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">Framework::set_test_result</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> info, <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">TestResult</a> result)</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;{</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    _test_results.emplace(std::move(info), std::move(result));</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;}</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2fac8e2013fb935c058fb09ffd972b54">  628</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2fac8e2013fb935c058fb09ffd972b54">Framework::print_test_results</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;printer)<span class="keyword"> const</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">print_run_header</a>();</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;test : _test_results)</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">print_test_header</a>(test.first);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a02125d92756170feb5ffa1fda589f0e5">print_profiler_header</a>(test.second.header_data);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">print_measurements</a>(test.second.measurements);</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">print_test_footer</a>();</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    }</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    printer.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">print_run_footer</a>();</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;}</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">  643</a></span>&#160;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">Framework::get_profiler</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">Profiler</a> profiler;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span> all_instruments = std::any_of(</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                                     _instruments.begin(),</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                                     _instruments.end(),</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                                     [](<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>) -&gt; <span class="keywordtype">bool</span> { <span class="keywordflow">return</span> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>.first == <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">InstrumentType::ALL</a>; });</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="keyword">auto</span> <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#ab44ff437411ac6f9a6056ce323aaa834">is_selected</a> = [&amp;](<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> instrument) -&gt; <span class="keywordtype">bool</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    {</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">return</span> std::find_if(_instruments.begin(), _instruments.end(), [&amp;](<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">InstrumentsDescription</a> <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>) -&gt; <span class="keywordtype">bool</span> {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> group = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">InstrumentType</a><span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span>uint64_t<span class="keyword">&gt;</span>(<a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>.first) &amp; 0xFF00);</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            <span class="keywordflow">return</span> (group == instrument.first) &amp;&amp; (instrument.second == <a class="code" href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a>.second);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        })</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        != _instruments.end();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    };</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;instrument : _available_instruments)</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    {</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keywordflow">if</span>(all_instruments || <a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#ab44ff437411ac6f9a6056ce323aaa834">is_selected</a>(instrument.first))</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        {</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a9a2cd15d64a87642898d68b060a5afa9">add</a>(instrument.second());</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        }</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    }</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    <span class="keywordflow">return</span> profiler;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;}</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">  672</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">Framework::add_printer</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> *printer)</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;{</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    _printers.push_back(printer);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;}</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">  677</a></span>&#160;std::vector&lt;TestInfo&gt; <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">Framework::test_infos</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    std::vector&lt;TestInfo&gt; ids;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordtype">int</span> <span class="keywordtype">id</span> = 0;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;factory : _test_factories)</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    {</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> test_info{ id, factory-&gt;<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">name</a>(), factory-&gt;mode(), factory-&gt;status() };</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordflow">if</span>(_test_filter-&gt;is_selected(test_info))</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        {</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            ids.emplace_back(std::move(test_info));</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        }</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        ++id;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    }</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keywordflow">return</span> ids;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;}</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a621f62a02364fc584cf86a8f221e715d">  698</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">LogLevel</a> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a621f62a02364fc584cf86a8f221e715d">Framework::log_level</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordflow">return</span> _log_level;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;}</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">  703</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">Framework::set_instruments_info</a>(<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">InstrumentsInfo</a> instr_info)</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;{</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(instruments_info == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    *instruments_info = instr_info;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;}</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a955c72412a010bb3ea68a363c5c682d4">  709</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a955c72412a010bb3ea68a363c5c682d4">Framework::configure_only</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordflow">return</span> _configure_only;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;}</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c5c063edcdae06657674308ceae80fe">  714</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c5c063edcdae06657674308ceae80fe">Framework::new_fixture_call</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keywordflow">return</span> _new_fixture_call;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;}</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c1f2b12dae229a936fcbb6c54b7ee24">  719</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c1f2b12dae229a936fcbb6c54b7ee24">Framework::set_new_fixture_call</a>(<span class="keywordtype">bool</span> val)</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;{</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    _new_fixture_call = val;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;}</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;} <span class="comment">// namespace framework</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;} <span class="comment">// namespace test</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a9632e44563b724240d9299f0ab14aae8">arm_compute::test::framework::LogLevel::MEASUREMENTS</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_instruments_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">arm_compute::test::framework::InstrumentsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8h_source.xhtml#l00063">Instruments.h:63</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aedbe6ac82569518fedc4a08718f8aa93"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aedbe6ac82569518fedc4a08718f8aa93">arm_compute::test::framework::Framework::pop_suite</a></div><div class="ttdeci">void pop_suite()</div><div class="ttdoc">Remove innermost test suite. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00151">Framework.cpp:151</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a15cffdfdea029e4617b983044f27f25e"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a15cffdfdea029e4617b983044f27f25e">arm_compute::test::framework::TestCaseFactory::make</a></div><div class="ttdeci">virtual std::unique_ptr&lt; TestCase &gt; make() const =0</div><div class="ttdoc">Factory function to create the test case. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">arm_compute::test::framework::FrameworkConfig</a></div><div class="ttdoc">Framework configuration structure. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00057">Framework.h:57</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_aa18932675cbb5eb9c9dbf8ff4d7106c7"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#aa18932675cbb5eb9c9dbf8ff4d7106c7">arm_compute::test::join</a></div><div class="ttdeci">std::string join(T first, T last, const std::string &amp;separator)</div><div class="ttdoc">Helper function to concatenate multiple strings. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8h_source.xhtml#l00093">Utils.h:93</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a8b879125822f4f7e70d563c4f1672942"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">arm_compute::test::framework::Printer::print_error</a></div><div class="ttdeci">virtual void print_error(const std::exception &amp;error, bool expected)=0</div><div class="ttdoc">Print test error. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a2551b01adb00e6af451202a3aa2fe30a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">arm_compute::test::framework::Printer::print_run_footer</a></div><div class="ttdeci">virtual void print_run_footer()=0</div><div class="ttdoc">Print footer after running all tests. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a1c5c063edcdae06657674308ceae80fe"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c5c063edcdae06657674308ceae80fe">arm_compute::test::framework::Framework::new_fixture_call</a></div><div class="ttdeci">bool new_fixture_call() const</div><div class="ttdoc">Return whether the new fixture has been called. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00714">Framework.cpp:714</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_ab7cc3070c9af8540e5805f5df8b0214f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab7cc3070c9af8540e5805f5df8b0214f">arm_compute::test::framework::Printer::print_errors_header</a></div><div class="ttdeci">virtual void print_errors_header()=0</div><div class="ttdoc">Print header before errors. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a9a2cd15d64a87642898d68b060a5afa9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a9a2cd15d64a87642898d68b060a5afa9">arm_compute::test::framework::Profiler::add</a></div><div class="ttdeci">void add(std::unique_ptr&lt; Instrument &gt; instrument)</div><div class="ttdoc">Add instrument to the performance monitor. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00035">Profiler.cpp:35</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a423578da197956fa8689bdf4bfd8c26e">arm_compute::test::framework::InstrumentType::OPENCL_TIMESTAMPS</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ab702e2f7530d6172eea3780d8923bd71"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">arm_compute::test::framework::FrameworkConfig::num_iterations</a></div><div class="ttdeci">int num_iterations</div><div class="ttdoc">Number of iterations per test. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00063">Framework.h:63</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a2a9beba9ddfcbb1d1d7f695c9d86296e"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a2a9beba9ddfcbb1d1d7f695c9d86296e">arm_compute::test::framework::InstrumentsDescription</a></div><div class="ttdeci">std::pair&lt; InstrumentType, ScaleFactor &gt; InstrumentsDescription</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8h_source.xhtml#l00069">Instruments.h:69</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00103">CLScheduler.cpp:103</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00095">Framework.h:95</a></div></div>
<div class="ttc" id="namespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">arm_compute::test::framework::Profiler</a></div><div class="ttdoc">Profiler class to collect benchmark numbers. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00045">Profiler.h:45</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a293edc1bbcbddffb7228ac97917ed107"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a293edc1bbcbddffb7228ac97917ed107">arm_compute::CLScheduler::set_context</a></div><div class="ttdeci">void set_context(cl::Context context)</div><div class="ttdoc">Accessor to set the CL context to be used by the scheduler. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00148">CLScheduler.cpp:148</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a24f328af2266d153ab2ddd1ada7b02e2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">arm_compute::test::framework::Printer::print_info</a></div><div class="ttdeci">virtual void print_info(const std::string &amp;info)=0</div><div class="ttdoc">Print test log info. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a2899d3c2cd558569c0fd015419fe7a20"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2899d3c2cd558569c0fd015419fe7a20">arm_compute::test::framework::Framework::print_test_info</a></div><div class="ttdeci">void print_test_info(std::ostream &amp;os) const</div><div class="ttdoc">Print test info. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00171">Framework.cpp:171</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5e61ba4403f0d2bd4f755f59193af692"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">arm_compute::test::framework::Framework::set_throw_errors</a></div><div class="ttdeci">void set_throw_errors(bool throw_errors)</div><div class="ttdoc">Set whether errors are caught or thrown by the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00265">Framework.cpp:265</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a0fa5f7d6bcff8bfd18ec2aadf660a489"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0fa5f7d6bcff8bfd18ec2aadf660a489">arm_compute::test::framework::Framework::stop_on_error</a></div><div class="ttdeci">bool stop_on_error() const</div><div class="ttdoc">Indicates if test execution is stopped after the first failed test. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00280">Framework.cpp:280</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a0128e62cd67888b56078dac05dd59761"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a0128e62cd67888b56078dac05dd59761">arm_compute::test::framework::Framework::log_failed_expectation</a></div><div class="ttdeci">void log_failed_expectation(const TestError &amp;error)</div><div class="ttdoc">Tell the framework that the currently running test case failed a non-fatal expectation. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00226">Framework.cpp:226</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a7a45c67d3c31de477d1a54c8dea7caa4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a7a45c67d3c31de477d1a54c8dea7caa4">arm_compute::test::framework::TestCaseFactory::mode</a></div><div class="ttdeci">DatasetMode mode() const</div><div class="ttdoc">Get the mode for which test case will be enabled. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00152">TestCaseFactory.h:152</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a268a2f5477497be8355f2261db1c1d28">arm_compute::test::framework::InstrumentType::SCHEDULER_TIMESTAMPS</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">arm_compute::test::framework::Printer</a></div><div class="ttdoc">Abstract printer class used by the Framework to present output. </div><div class="ttdef"><b>Definition:</b> <a href="_printer_8h_source.xhtml#l00043">Printer.h:43</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a755837a8f4938f8013f4251014a958e4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">arm_compute::test::framework::Framework::set_instruments_info</a></div><div class="ttdeci">void set_instruments_info(InstrumentsInfo instr_info)</div><div class="ttdoc">Sets instruments info. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00703">Framework.cpp:703</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_adeaa0a402395806e538066d09bcd668b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">arm_compute::test::framework::instruments_info</a></div><div class="ttdeci">std::unique_ptr&lt; InstrumentsInfo &gt; instruments_info</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00050">Framework.cpp:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a60b060774255916807ef1cca44bfbfe1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a60b060774255916807ef1cca44bfbfe1">arm_compute::test::framework::Framework::log_info</a></div><div class="ttdeci">void log_info(const std::string &amp;info)</div><div class="ttdoc">Print the debug information that has already been logged. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00244">Framework.cpp:244</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a19091d72dfe50cd8474566e912701e8c"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a19091d72dfe50cd8474566e912701e8c">arm_compute::test::framework::Profiler::test_stop</a></div><div class="ttdeci">void test_stop()</div><div class="ttdoc">Call test_stop() on all the added instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00071">Profiler.cpp:71</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a77bdf8b2932e6913743b37f6b34430c8"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a77bdf8b2932e6913743b37f6b34430c8">arm_compute::test::framework::TestResult::header_data</a></div><div class="ttdeci">std::string header_data</div><div class="ttdoc">Test header data. </div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00076">TestResult.h:76</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00039">CLKernelLibrary.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af2086722b11ed9e777db00a74cdecfc1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af2086722b11ed9e777db00a74cdecfc1">arm_compute::test::framework::Framework::throw_errors</a></div><div class="ttdeci">bool throw_errors() const</div><div class="ttdoc">Should errors be caught or thrown by the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00270">Framework.cpp:270</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab714cb9b955131aefa9d36f9898e5b9a">arm_compute::test::framework::InstrumentType::SCHEDULER_TIMER</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a46a0cefc3b9a13645548ec705f438ce9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">arm_compute::test::framework::Framework::set_error_on_missing_assets</a></div><div class="ttdeci">void set_error_on_missing_assets(bool error_on_missing_assets)</div><div class="ttdoc">Set whether a test should be considered as failed if its assets cannot be found. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00285">Framework.cpp:285</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9">arm_compute::test::framework::LogLevel</a></div><div class="ttdeci">LogLevel</div><div class="ttdoc">Severity of the information. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00050">Exceptions.h:50</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a4494f098cda45f40105c454d0ffa9147"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a4494f098cda45f40105c454d0ffa9147">arm_compute::test::framework::Framework::set_test_result</a></div><div class="ttdeci">void set_test_result(TestInfo info, TestResult result)</div><div class="ttdoc">Set the result for an executed test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00623">Framework.cpp:623</a></div></div>
<div class="ttc" id="gemm__interleaved_8hpp_xhtml_a6fbca3dca9ecb372332fc525529cc086"><div class="ttname"><a href="gemm__interleaved_8hpp.xhtml#a6fbca3dca9ecb372332fc525529cc086">type</a></div><div class="ttdeci">decltype(strategy::transforms) typedef type</div><div class="ttdef"><b>Definition:</b> <a href="gemm__interleaved_8hpp_source.xhtml#l00260">gemm_interleaved.hpp:260</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a955c72412a010bb3ea68a363c5c682d4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a955c72412a010bb3ea68a363c5c682d4">arm_compute::test::framework::Framework::configure_only</a></div><div class="ttdeci">bool configure_only() const</div><div class="ttdoc">Get the configure only flag. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00709">Framework.cpp:709</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005aabf534ee93a5bd6473d70f13a7414d92">arm_compute::test::framework::InstrumentType::WALL_CLOCK_TIMER</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a1455a5b0439d88e4e1f4e344fb0f9113"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">arm_compute::test::framework::FrameworkConfig::cooldown_sec</a></div><div class="ttdeci">float cooldown_sec</div><div class="ttdoc">Delay between tests in seconds. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00064">Framework.h:64</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">arm_compute::test::framework::TestCaseFactory::Status::EXPECTED_FAILURE</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a52540fb0ac94f63ce54d23c4d462581b">arm_compute::test::framework::InstrumentType::OPENCL_MEMORY_USAGE</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00124">Framework.cpp:124</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">arm_compute::test::framework::TestCaseFactory::Status::DISABLED</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div></div>
<div class="ttc" id="_parameters_library_8h_xhtml"><div class="ttname"><a href="_parameters_library_8h.xhtml">ParametersLibrary.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ac769ef7bddc01ed21a9f7c5fecbe2430">arm_compute::test::framework::LogLevel::TESTS</a></div></div>
<div class="ttc" id="_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml">arm_compute::test::framework::TestCaseFactory</a></div><div class="ttdoc">Abstract factory class to create test cases. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00040">TestCaseFactory.h:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a503aa8ac13b547591098b2ce77c28e99">arm_compute::test::framework::InstrumentType::WALL_CLOCK_TIMESTAMPS</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9b45b3e13bd9167aab02e17e08916231"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9b45b3e13bd9167aab02e17e08916231">arm_compute::test::framework::TestInfo::name</a></div><div class="ttdeci">std::string name</div><div class="ttdoc">Test name. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00081">Framework.h:81</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a1d89c28bd42ba9a52da008bb69367171"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a1d89c28bd42ba9a52da008bb69367171">arm_compute::test::framework::TestCaseFactory::name</a></div><div class="ttdeci">std::string name() const</div><div class="ttdoc">Name of the test case. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00140">TestCaseFactory.h:140</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a16fda368866c2a2e2d5a54eda52050f9"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">arm_compute::test::framework::FrameworkConfig::log_level</a></div><div class="ttdeci">LogLevel log_level</div><div class="ttdoc">Verbosity of the output. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00065">Framework.h:65</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a8ed2f2476469f812d63a2f4e83166c61">arm_compute::test::framework::ScaleFactor::TIME_MS</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a149ad6701e3e2414cb566bb414029841"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">arm_compute::test::framework::Framework::run</a></div><div class="ttdeci">bool run()</div><div class="ttdoc">Run all enabled test cases. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00543">Framework.cpp:543</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a0ad613086cc79a2e32d5b87bcefc7488"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">arm_compute::CLKernelLibrary::clear_programs_cache</a></div><div class="ttdeci">void clear_programs_cache()</div><div class="ttdoc">Clear the library&amp;#39;s cache of binary programs. </div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00085">CLKernelLibrary.cpp:85</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a4ad3b7ba69599b41ab0954a39d7e7cbc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">arm_compute::test::framework::FrameworkConfig::instruments</a></div><div class="ttdeci">std::vector&lt; framework::InstrumentsDescription &gt; instruments</div><div class="ttdoc">Instrument types that will be used for benchmarking. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00059">Framework.h:59</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_error_xhtml_a01ff177012854b9a35d86825a3a8eabd"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml#a01ff177012854b9a35d86825a3a8eabd">arm_compute::test::framework::TestError::level</a></div><div class="ttdeci">LogLevel level() const</div><div class="ttdoc">Severity of the error. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00121">Exceptions.cpp:121</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLScheduler::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00032">CLScheduler.cpp:32</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aacd94676ebb33ecba00dfebe12c9392d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">arm_compute::test::framework::Framework::test_infos</a></div><div class="ttdeci">std::vector&lt; TestInfo &gt; test_infos() const</div><div class="ttdoc">List of TestInfo&amp;#39;s. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00677">Framework.cpp:677</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a543c34e4b882beda4230fbb8e9b99bfc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">arm_compute::test::framework::FrameworkConfig::name_filter</a></div><div class="ttdeci">std::string name_filter</div><div class="ttdoc">Regular expression to filter tests by name. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00060">Framework.h:60</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a13032d4f8b486c92fe3eeffebf8bd829"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a13032d4f8b486c92fe3eeffebf8bd829">arm_compute::test::framework::Profiler::header</a></div><div class="ttdeci">const std::string &amp; header() const</div><div class="ttdoc">Return JSON formatted header data. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00094">Profiler.cpp:94</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_ab44ff437411ac6f9a6056ce323aaa834"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#ab44ff437411ac6f9a6056ce323aaa834">is_selected</a></div><div class="ttdeci">const BatchNormalizationSelectorPtr is_selected</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00061">NEBatchNormalizationLayerKernel.cpp:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_filter_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_filter.xhtml">arm_compute::test::framework::TestFilter</a></div><div class="ttdoc">Test filter class. </div><div class="ttdef"><b>Definition:</b> <a href="_test_filter_8h_source.xhtml#l00046">TestFilter.h:46</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_case_factory_xhtml_a12bb27a4d1aa5d1e69b44b06b515be74"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a12bb27a4d1aa5d1e69b44b06b515be74">arm_compute::test::framework::TestCaseFactory::status</a></div><div class="ttdeci">Status status() const</div><div class="ttdoc">Get the status of the test case. </div><div class="ttdef"><b>Definition:</b> <a href="_test_case_factory_8h_source.xhtml#l00157">TestCaseFactory.h:157</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_aadbc5003f5cc399930b16ddb89b16cdc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">arm_compute::test::framework::FrameworkConfig::mode</a></div><div class="ttdeci">DatasetMode mode</div><div class="ttdoc">Dataset mode. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00062">Framework.h:62</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_file_not_found_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_file_not_found.xhtml">arm_compute::test::framework::FileNotFound</a></div><div class="ttdoc">Error class for when some external assets are missing. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00067">Exceptions.h:67</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005ab31212eaa6bb6d27e51301ef753dd4a8">arm_compute::test::framework::InstrumentType::PMU</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a6f786ac52185e75dfb58b386d006c078"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6f786ac52185e75dfb58b386d006c078">arm_compute::test::framework::Framework::available_instruments</a></div><div class="ttdeci">std::set&lt; InstrumentsDescription &gt; available_instruments() const</div><div class="ttdoc">Supported instrument types for benchmarking. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00100">Framework.cpp:100</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00078">Framework.h:78</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005">arm_compute::test::framework::InstrumentType</a></div><div class="ttdeci">InstrumentType</div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8h_source.xhtml#l00046">Instruments.h:46</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a621f62a02364fc584cf86a8f221e715d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a621f62a02364fc584cf86a8f221e715d">arm_compute::test::framework::Framework::log_level</a></div><div class="ttdeci">LogLevel log_level() const</div><div class="ttdoc">Get the current logging level. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00698">Framework.cpp:698</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a47e7a1a6baab80560c11a9ee8f8a0636"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">arm_compute::test::framework::Framework::get_profiler</a></div><div class="ttdeci">Profiler get_profiler() const</div><div class="ttdoc">Factory method to obtain a configured profiler. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00643">Framework.cpp:643</a></div></div>
<div class="ttc" id="_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00039">CLScheduler.cpp:39</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8135a21178dd34ec3b334b83381269a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8135a21178dd34ec3b334b83381269a">arm_compute::test::framework::Framework::log_test_start</a></div><div class="ttdeci">void log_test_start(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that execution of a test starts. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00190">Framework.cpp:190</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_ad548fafce1d10263d6d02fa8df934167"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#ad548fafce1d10263d6d02fa8df934167">arm_compute::test::framework::Profiler::measurements</a></div><div class="ttdeci">const MeasurementsMap &amp; measurements() const</div><div class="ttdoc">Return measurements for all instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00089">Profiler.cpp:89</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a55d658bdb6741297d391d36632cb51b1">arm_compute::test::framework::ScaleFactor::TIME_S</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70bad0749aaba8b833466dfcbb0428e4f89c"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad0749aaba8b833466dfcbb0428e4f89c">arm_compute::test::framework::TestResult::Status::SUCCESS</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_scheduler_xhtml_a9608e5af9f3a199f69ca6aa41b94359a"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9608e5af9f3a199f69ca6aa41b94359a">arm_compute::CLScheduler::set_queue</a></div><div class="ttdeci">void set_queue(cl::CommandQueue queue)</div><div class="ttdoc">Accessor to set the CL command queue to be used by the scheduler. </div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00055">CLScheduler.cpp:55</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100a31b560df072eca60895ba6d4541c41a2">arm_compute::test::framework::ScaleFactor::SCALE_1K</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a067ebd28103d827b6ec17032e2344064"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">arm_compute::utility::for_each</a></div><div class="ttdeci">void for_each(F &amp;&amp;)</div><div class="ttdoc">Base case of for_each. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00110">Utility.h:110</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a148bf915f9e0545fc2666ee2a777f563"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a148bf915f9e0545fc2666ee2a777f563">arm_compute::test::framework::TestResult::measurements</a></div><div class="ttdeci">Profiler::MeasurementsMap measurements</div><div class="ttdoc">Profiling information. </div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00075">TestResult.h:75</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_aa8974e876a9d2e4ed49aeab9b0a18a96"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">arm_compute::test::framework::Printer::print_run_header</a></div><div class="ttdeci">virtual void print_run_header()=0</div><div class="ttdoc">Print header before running all tests. </div></div>
<div class="ttc" id="_c_l_runtime_context_8h_xhtml"><div class="ttname"><a href="_c_l_runtime_context_8h.xhtml">CLRuntimeContext.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba9c51674930e03c276344d19f9e4398fb">arm_compute::test::framework::TestResult::Status::CRASHED</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab2cd8b6e8e0aac442fc1e35ad9e1ac45"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab2cd8b6e8e0aac442fc1e35ad9e1ac45">arm_compute::test::framework::Framework::log_test_end</a></div><div class="ttdeci">void log_test_end(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that a test case finished. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00206">Framework.cpp:206</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab5eae10e0a4067cff9e87fdcb186eca8"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab5eae10e0a4067cff9e87fdcb186eca8">arm_compute::test::framework::Framework::add_test_info</a></div><div class="ttdeci">void add_test_info(std::string info)</div><div class="ttdoc">Add info string for the next expectation/assertion. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00156">Framework.cpp:156</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a41183a1a8909c9f852acd99d3b69626d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a41183a1a8909c9f852acd99d3b69626d">arm_compute::test::framework::Framework::error_on_missing_assets</a></div><div class="ttdeci">bool error_on_missing_assets() const</div><div class="ttdoc">Indicates if a test should be marked as failed when its assets are missing. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00290">Framework.cpp:290</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a983ccd98b01612e3415a74981ec7d8ab"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">arm_compute::test::framework::Printer::print_test_footer</a></div><div class="ttdeci">virtual void print_test_footer()=0</div><div class="ttdoc">Print footer after a test. </div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a2b9042cf824009ba61c37b0c99b3eab7"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">arm_compute::test::framework::FrameworkConfig::id_filter</a></div><div class="ttdeci">std::string id_filter</div><div class="ttdoc">String to match selected test ids. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00061">Framework.h:61</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a6ad85a69f028cf3f5030666babd7e8e7"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a6ad85a69f028cf3f5030666babd7e8e7">arm_compute::test::framework::Framework::has_test_info</a></div><div class="ttdeci">bool has_test_info() const</div><div class="ttdoc">Check if any info has been registered. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00166">Framework.cpp:166</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ae0b69f2142100651d022d5af576f42cf"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ae0b69f2142100651d022d5af576f42cf">arm_compute::test::framework::Framework::set_num_iterations</a></div><div class="ttdeci">void set_num_iterations(int num_iterations)</div><div class="ttdoc">Set number of iterations per test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00260">Framework.cpp:260</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15">arm_compute::test::framework::LogLevel::DEBUG</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a3893bc1fbad02227b78bbce22bcff1ba"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a3893bc1fbad02227b78bbce22bcff1ba">arm_compute::test::framework::Framework::push_suite</a></div><div class="ttdeci">void push_suite(std::string name)</div><div class="ttdoc">Add a new test suite. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00146">Framework.cpp:146</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a60de64d75454385b23995437f1d72669"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">arm_compute::test::framework::Profiler::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Call start() on all the added instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00048">Profiler.cpp:48</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a02125d92756170feb5ffa1fda589f0e5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a02125d92756170feb5ffa1fda589f0e5">arm_compute::test::framework::Printer::print_profiler_header</a></div><div class="ttdeci">virtual void print_profiler_header(const std::string &amp;header_data)=0</div><div class="ttdoc">Print header data. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a53bc5501e639292688fa56780570a1c1">arm_compute::test::framework::InstrumentType::MALI</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml">arm_compute::test::framework::TestResult</a></div><div class="ttdoc">Class to store results of a test. </div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00039">TestResult.h:39</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_ae29aa2d4ae440022daaed1107eb306b3"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#ae29aa2d4ae440022daaed1107eb306b3">arm_compute::test::framework::TestResult::status</a></div><div class="ttdeci">Status status</div><div class="ttdoc">Execution status. </div><div class="ttdef"><b>Definition:</b> <a href="_test_result_8h_source.xhtml#l00074">TestResult.h:74</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a0aa25e682d18e48c986ed28cca43ad77"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a0aa25e682d18e48c986ed28cca43ad77">arm_compute::test::framework::Printer::print_errors_footer</a></div><div class="ttdeci">virtual void print_errors_footer()=0</div><div class="ttdoc">Print footer after errors. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a9d63b2b6033b19236853f5f21d990b5b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a9d63b2b6033b19236853f5f21d990b5b">arm_compute::test::framework::sleep_in_seconds</a></div><div class="ttdeci">void sleep_in_seconds(float seconds)</div><div class="ttdoc">Makes the calling thread to sleep for a specified number of seconds. </div><div class="ttdef"><b>Definition:</b> <a href="tests_2framework_2_utils_8cpp_source.xhtml#l00038">Utils.cpp:38</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ae702b5e08d44b9130a674277503d1af1"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">arm_compute::test::framework::FrameworkConfig::configure_only</a></div><div class="ttdeci">bool configure_only</div><div class="ttdoc">Only configure kernels. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00066">Framework.h:66</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aac6b258eb313f96447f4f0e273431005a873865e4a94b7ec656c000502a719b90">arm_compute::test::framework::InstrumentType::OPENCL_TIMER</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a5c0a4b9fd162ee32e0e6231947b6e9b0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">arm_compute::test::framework::Printer::print_test_header</a></div><div class="ttdeci">virtual void print_test_header(const TestInfo &amp;info)=0</div><div class="ttdoc">Print header before a test. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5f16ced78873ee3a193490197fbf57a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">arm_compute::test::framework::Framework::add_printer</a></div><div class="ttdeci">void add_printer(Printer *printer)</div><div class="ttdoc">Set the printer used for the output of test results. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00672">Framework.cpp:672</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a8c528baf37154d347366083f0f816846"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">arm_compute::test::framework::Profiler::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Call stop() on all the added instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00056">Profiler.cpp:56</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_info_xhtml_a9e590b7d913d38286ab0916c38bb600f"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml#a9e590b7d913d38286ab0916c38bb600f">arm_compute::test::framework::TestInfo::status</a></div><div class="ttdeci">TestCaseFactory::Status status</div><div class="ttdoc">Test status. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00083">Framework.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a4b454bbf54829d209850a8efa639b942"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a4b454bbf54829d209850a8efa639b942">arm_compute::test::framework::Profiler::test_start</a></div><div class="ttdeci">void test_start()</div><div class="ttdoc">Call test_start() on all the added instruments. </div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00040">Profiler.cpp:40</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ab843f590d06438293e06980b4f94bf39">arm_compute::test::framework::ScaleFactor::TIME_US</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5a2d19934af27623634c5ab3c47a9446"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5a2d19934af27623634c5ab3c47a9446">arm_compute::test::framework::Framework::log_test_skipped</a></div><div class="ttdeci">void log_test_skipped(const TestInfo &amp;info)</div><div class="ttdoc">Tell the framework that a test case is skipped. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00201">Framework.cpp:201</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b">arm_compute::test::framework::TestResult::Status::DISABLED</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70bad3cbb6cb9043ad908cdd5414236e6603"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bad3cbb6cb9043ad908cdd5414236e6603">arm_compute::test::framework::TestResult::Status::NOT_RUN</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a1c1f2b12dae229a936fcbb6c54b7ee24"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a1c1f2b12dae229a936fcbb6c54b7ee24">arm_compute::test::framework::Framework::set_new_fixture_call</a></div><div class="ttdeci">void set_new_fixture_call(bool val)</div><div class="ttdoc">Set the new fixture call flag. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00719">Framework.cpp:719</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_test_error_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_test_error.xhtml">arm_compute::test::framework::TestError</a></div><div class="ttdoc">Error class for failures during test execution. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8h_source.xhtml#l00078">Exceptions.h:78</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_afb6a973ccd27225a87d59d93ca458720"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#afb6a973ccd27225a87d59d93ca458720">arm_compute::test::framework::Framework::clear_test_info</a></div><div class="ttdeci">void clear_test_info()</div><div class="ttdoc">Clear the collected test info. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00161">Framework.cpp:161</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bab9e14d9b2886bcff408b85aefa780419">arm_compute::test::framework::TestResult::Status::FAILED</a></div></div>
<div class="ttc" id="_test_filter_8h_xhtml"><div class="ttname"><a href="_test_filter_8h.xhtml">TestFilter.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab4b7e9757ad7e9d23b608b617c5dffa6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">arm_compute::test::framework::Framework::set_stop_on_error</a></div><div class="ttdeci">void set_stop_on_error(bool stop_on_error)</div><div class="ttdoc">Set whether to stop execution after the first failed test. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00275">Framework.cpp:275</a></div></div>
<div class="ttc" id="_framework_8h_xhtml"><div class="ttname"><a href="_framework_8h.xhtml">Framework.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1test_1_1framework_1_1_test_result_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70babdb2c34681be3432a08e0450b707a014">arm_compute::test::framework::TestResult::Status::EXPECTED_FAILURE</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab803db44aeb4ad8cd93193be5eaf0fb7"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab803db44aeb4ad8cd93193be5eaf0fb7">arm_compute::test::framework::Framework::num_iterations</a></div><div class="ttdeci">int num_iterations() const</div><div class="ttdoc">Number of iterations per test case. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00255">Framework.cpp:255</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a01e3aa67ceaeae837e9a68050d850724"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">arm_compute::test::framework::Framework::init</a></div><div class="ttdeci">void init(const FrameworkConfig &amp;config)</div><div class="ttdoc">Init the framework. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00130">Framework.cpp:130</a></div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a93693778c8458ce21b0fc41b85467dd6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">arm_compute::test::framework::Printer::print_measurements</a></div><div class="ttdeci">virtual void print_measurements(const Profiler::MeasurementsMap &amp;measurements)=0</div><div class="ttdoc">Print measurements for a test. </div></div>
<div class="ttc" id="classarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a2fac8e2013fb935c058fb09ffd972b54"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a2fac8e2013fb935c058fb09ffd972b54">arm_compute::test::framework::Framework::print_test_results</a></div><div class="ttdeci">void print_test_results(Printer &amp;printer) const</div><div class="ttdoc">Use the specified printer to output test results from the last run. </div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00628">Framework.cpp:628</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available. </div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00188">OpenCL.cpp:188</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1framework_xhtml_a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a3a01a70ad3a22d8b80c413e8a5977100ade0343867b7ffbd33367905039d496f5">arm_compute::test::framework::ScaleFactor::SCALE_1M</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="_framework_8cpp.xhtml">Framework.cpp</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:45 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
