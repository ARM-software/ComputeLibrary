<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/DepthwiseConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_n_e_depthwise_convolution_layer_8h_source.xhtml">arm_compute/runtime/NEON/functions/NEDepthwiseConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="runtime_2_tensor_8h_source.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_allocator_8h_source.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_accessor_8h_source.xhtml">tests/NEON/Accessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_n_e_o_n_2_depthwise_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2023 Arm Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7dc2a897706e1f2567436cd05c17f2ce">NEDepthwiseConvolutionLayerFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T &gt;</td></tr>
<tr class="separator:a7dc2a897706e1f2567436cd05c17f2ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01cd26bc039610598a04ab8d869cc26"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac01cd26bc039610598a04ab8d869cc26"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac01cd26bc039610598a04ab8d869cc26">NEDepthwiseConvolutionLayerMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:ac01cd26bc039610598a04ab8d869cc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157e626fc043875a5f4572980d84b9b9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a157e626fc043875a5f4572980d84b9b9"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a157e626fc043875a5f4572980d84b9b9">NEDepthwiseConvolutionLayerVariableWeightsFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, false, false, true &gt;</td></tr>
<tr class="separator:a157e626fc043875a5f4572980d84b9b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2a97a56844f6b38b69db27458c05dca"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ad2a97a56844f6b38b69db27458c05dca"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad2a97a56844f6b38b69db27458c05dca">NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture</a> = DepthwiseConvolutionLayerValidationQuantizedFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, T, true &gt;</td></tr>
<tr class="separator:ad2a97a56844f6b38b69db27458c05dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee31694413d517bac1c0ae3ca81add5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5ee31694413d517bac1c0ae3ca81add5">NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture</a> = DepthwiseConvolutionLayerValidationQuantizedPerChannelFixture&lt; Tensor, Accessor, NEDepthwiseConvolutionLayer, uint8_t, int8_t &gt;</td></tr>
<tr class="separator:a5ee31694413d517bac1c0ae3ca81add5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a13906c8cbe4233df5fef380802decdd9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a13906c8cbe4233df5fef380802decdd9">DATA_TEST_CASE</a> (Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a13906c8cbe4233df5fef380802decdd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae1d00b2c6524b3ae0299937b63a7f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9ae1d00b2c6524b3ae0299937b63a7f7">DATA_TEST_CASE</a> (ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(25U, 1U), Size2D(0U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false})), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a9ae1d00b2c6524b3ae0299937b63a7f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72047db97106cd754d74f07162b1c866"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a72047db97106cd754d74f07162b1c866">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a72047db97106cd754d74f07162b1c866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36dcaf6b1dd096d692549959db57ddcd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a36dcaf6b1dd096d692549959db57ddcd">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, NEDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 2 })), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a36dcaf6b1dd096d692549959db57ddcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a378f7165a60284cac3249beeab2e1a47"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a378f7165a60284cac3249beeab2e1a47">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a378f7165a60284cac3249beeab2e1a47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7980d3c27e9b34dae658cc026698c6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace7980d3c27e9b34dae658cc026698c6">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ace7980d3c27e9b34dae658cc026698c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1b36fa3ea37bf90e93518344383fec5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac1b36fa3ea37bf90e93518344383fec5">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac1b36fa3ea37bf90e93518344383fec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512eb649fdb115f2dee5df9f1d156b16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a> () <a class="el" href="tests_2framework_2_macros_8h.xhtml#a42699a26fbdddf91da4aa58a610bb8a8">FIXTURE_DATA_TEST_CASE</a>(RunSmall = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="memdesc:a512eb649fdb115f2dee5df9f1d156b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">[<a class="el" href="classarm__compute_1_1_c_l_activation_layer.xhtml" title="Basic function to run opencl::kernels::ClActivationKernel. ">CLActivationLayer</a> Test snippet]  <a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">More...</a><br /></td></tr>
<tr class="separator:a512eb649fdb115f2dee5df9f1d156b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7572e076e3f01cd58525541295dab2f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af7572e076e3f01cd58525541295dab2f">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:af7572e076e3f01cd58525541295dab2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b00d2a2b10e7c8687b9b0980d5a367a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b00d2a2b10e7c8687b9b0980d5a367a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a3b00d2a2b10e7c8687b9b0980d5a367a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d18379ee0e36078ea29405085e73847"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1d18379ee0e36078ea29405085e73847">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a1d18379ee0e36078ea29405085e73847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa21d0679ceacfd32d62920a492c12c9c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa21d0679ceacfd32d62920a492c12c9c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa21d0679ceacfd32d62920a492c12c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca6156d3672080d8059b97e408599e54"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca6156d3672080d8059b97e408599e54">combine</a> (combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aca6156d3672080d8059b97e408599e54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0ff831be4049b1ab7d9c3c5bd93834c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af0ff831be4049b1ab7d9c3c5bd93834c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsSmall3x3, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:af0ff831be4049b1ab7d9c3c5bd93834c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af01d4da6f8208be363a0c9a9a28a4f42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af01d4da6f8208be363a0c9a9a28a4f42">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout3x3, NEDepthwiseConvolutionLayerMixedDataLayoutFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:af01d4da6f8208be363a0c9a9a28a4f42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa8ec9cdd686be72252f475053474b25"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afa8ec9cdd686be72252f475053474b25">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:afa8ec9cdd686be72252f475053474b25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f0aa259e88b23d7c3804554ef7ced72"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9f0aa259e88b23d7c3804554ef7ced72">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsSmall5x5, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9f0aa259e88b23d7c3804554ef7ced72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa5943b5844e3ff6ad3f572c92af03d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#affa5943b5844e3ff6ad3f572c92af03d">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:affa5943b5844e3ff6ad3f572c92af03d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6783f994fe8e5cc8c0b65dba9f80080d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6783f994fe8e5cc8c0b65dba9f80080d">FIXTURE_DATA_TEST_CASE_NEW</a> (RunVariableWeightsLarge3x3, NEDepthwiseConvolutionLayerVariableWeightsFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a6783f994fe8e5cc8c0b65dba9f80080d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a388d0fe3f92876aead5bea480d9c9741"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a388d0fe3f92876aead5bea480d9c9741">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a388d0fe3f92876aead5bea480d9c9741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c0a2f79b0fa83e2cc712c4dd5ffaef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62c0a2f79b0fa83e2cc712c4dd5ffaef">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout, NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), framework::dataset::make(&quot;DepthMultiplier&quot;, { 2 })), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:a62c0a2f79b0fa83e2cc712c4dd5ffaef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a715ee87cf46031fe20ebbe4a2ddf7314"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a715ee87cf46031fe20ebbe4a2ddf7314">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8f, 1) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a715ee87cf46031fe20ebbe4a2ddf7314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7553cc253de09014716043d33b668ea1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7553cc253de09014716043d33b668ea1">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a7553cc253de09014716043d33b668ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2330f9e9a464b7165a9c9c97c1f6ddf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac2330f9e9a464b7165a9c9c97c1f6ddf">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac2330f9e9a464b7165a9c9c97c1f6ddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b27ad9dcaa78293bea023c3738adea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad8b27ad9dcaa78293bea023c3738adea">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad8b27ad9dcaa78293bea023c3738adea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5592b4a1064f4843d72119bd14ff09c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5592b4a1064f4843d72119bd14ff09c7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a5592b4a1064f4843d72119bd14ff09c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eecfd7ed0f3bdad27602d974800d0f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2eecfd7ed0f3bdad27602d974800d0f7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2eecfd7ed0f3bdad27602d974800d0f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3569b2e7b7ccdb68d6f080f8b568f735"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3569b2e7b7ccdb68d6f080f8b568f735">combine</a> (combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a3569b2e7b7ccdb68d6f080f8b568f735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45bed3249e42358df1072ce7d644a91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae45bed3249e42358df1072ce7d644a91">FIXTURE_DATA_TEST_CASE_NEW</a> (RunMixedDataLayout3x3, NEDepthwiseConvolutionLayerQuantizedMixedDataLayoutFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), framework::dataset::make(&quot;ActivationInfo&quot;, ActivationLayerInfo())))</td></tr>
<tr class="separator:ae45bed3249e42358df1072ce7d644a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4152980e4b7345787e7decfbb3f351"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9c4152980e4b7345787e7decfbb3f351">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9c4152980e4b7345787e7decfbb3f351"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae63dbfc2ce0dcd0aba1faaaa38c55a64"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae63dbfc2ce0dcd0aba1faaaa38c55a64">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ae63dbfc2ce0dcd0aba1faaaa38c55a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5ae8cd4902168e0cd4513970d3ed34e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad5ae8cd4902168e0cd4513970d3ed34e">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad5ae8cd4902168e0cd4513970d3ed34e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81f11fab5e2a56c4d785823287c7ce56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a81f11fab5e2a56c4d785823287c7ce56">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.8f, 1) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a81f11fab5e2a56c4d785823287c7ce56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50e5d7b8098395fcd6fb41bc6c5307b6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a50e5d7b8098395fcd6fb41bc6c5307b6">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.9f, 11) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a50e5d7b8098395fcd6fb41bc6c5307b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a612c62079d4a1a0120b2c8cd2fb78966"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a612c62079d4a1a0120b2c8cd2fb78966">combine</a> (combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a612c62079d4a1a0120b2c8cd2fb78966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36d4ab793ebd9ec84188af9f350e1b2c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a36d4ab793ebd9ec84188af9f350e1b2c">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a36d4ab793ebd9ec84188af9f350e1b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2973f4ef701e41c95357a2979805f47"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2973f4ef701e41c95357a2979805f47">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.7f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa2973f4ef701e41c95357a2979805f47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5196fe4ee8c4792e901ccab253399636"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5196fe4ee8c4792e901ccab253399636">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), large_depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a5196fe4ee8c4792e901ccab253399636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6734c9c941e9fbf083285d67331a18b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac6734c9c941e9fbf083285d67331a18b">combine</a> (combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac6734c9c941e9fbf083285d67331a18b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5524fe94c03984a8d47bfac0320e4226"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5524fe94c03984a8d47bfac0320e4226">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall5x5, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset5x5(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a5524fe94c03984a8d47bfac0320e4226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33eacff5de6a3f864934c15fc385739a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a33eacff5de6a3f864934c15fc385739a">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8_SIGNED)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a33eacff5de6a3f864934c15fc385739a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2efb7efdcbeafb28cd667b921a70bcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab2efb7efdcbeafb28cd667b921a70bcf">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;InputDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab2efb7efdcbeafb28cd667b921a70bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d644f73a4a4648853b45148ff9cbb7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa6d644f73a4a4648853b45148ff9cbb7">FIXTURE_DATA_TEST_CASE_NEW</a> (RunSmall, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;InputDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa6d644f73a4a4648853b45148ff9cbb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeac61ec4e9c09c146ea9f46255a31c6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abeac61ec4e9c09c146ea9f46255a31c6">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;InputDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:abeac61ec4e9c09c146ea9f46255a31c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75707a8adda5011b4a25d628280f9c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac75707a8adda5011b4a25d628280f9c0">combine</a> (combine(combine(combine(combine(combine(combine(datasets::SmallOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;InputDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac75707a8adda5011b4a25d628280f9c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30fe4900ff41ed43e052770ee39b5d30"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a30fe4900ff41ed43e052770ee39b5d30">FIXTURE_DATA_TEST_CASE_NEW</a> (RunLarge3x3, NEDepthwiseConvolutionLayerQuantizedSymmetricPerChannelFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(combine(combine(datasets::LargeOptimizedDepthwiseConvolutionLayerDataset3x3(), framework::dataset::make(&quot;DepthMultiplier&quot;, 1)), framework::dataset::make(&quot;InputDataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;WeightsDataType&quot;, DataType::QSYMM8_PER_CHANNEL)), input_qinfo_dataset), framework::dataset::make(&quot;DstQuantizationInfo&quot;, { QuantizationInfo(0.5f, 4) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a30fe4900ff41ed43e052770ee39b5d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a71cdcf2657dadcfac775042af10298d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a71cdcf2657dadcfac775042af10298d6">NEDepthwiseConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a71cdcf2657dadcfac775042af10298d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2299eb4352ff65c991df6171a4afa4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2299eb4352ff65c991df6171a4afa4a">NEDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:aa2299eb4352ff65c991df6171a4afa4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00496e548e7ad3c3ec71109b9dc8a0f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00496e548e7ad3c3ec71109b9dc8a0f3">NEDepthwiseConvolutionLayerQuantizedFixture&lt; int8_t &gt;</a></td></tr>
<tr class="separator:a00496e548e7ad3c3ec71109b9dc8a0f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml">DepthwiseConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:48 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
