<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GEMMInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_g_e_m_m_info.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GEMMInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>GEMM information class.  
 <a href="classarm__compute_1_1_g_e_m_m_info.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae0c4636f1099428785df0463f7151889"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae0c4636f1099428785df0463f7151889">GEMMInfo</a> () noexcept</td></tr>
<tr class="memdesc:ae0c4636f1099428785df0463f7151889"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#ae0c4636f1099428785df0463f7151889">More...</a><br /></td></tr>
<tr class="separator:ae0c4636f1099428785df0463f7151889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5249ed9224810a95f8fa1366bc77c523"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a5249ed9224810a95f8fa1366bc77c523">GEMMInfo</a> (bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">is_a_reshaped</a>, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">is_b_reshaped</a>, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">reshape_b_only_on_first_run</a>, int <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">depth_output_gemm3d</a>=0, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">reinterpret_input_as_3d</a>=false, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ac9e7f8fc8a688fd119d3fb2892cce6b9">retain_internal_weights</a>=false, <a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>=<a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a>(), bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a501521734ce4f9d81d91d0c7e35dcfe9">fp_mixed_precision</a>=false, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>=false, bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a757197ffaf53ef6b284c6ceb24fdb688">broadcast_bias</a>=false, const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a>=<a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(), const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">post_ops</a>=<a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt;(), bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">fixed_format</a>=false, <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">weight_format</a>=<a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a>) noexcept</td></tr>
<tr class="memdesc:a5249ed9224810a95f8fa1366bc77c523"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a5249ed9224810a95f8fa1366bc77c523">More...</a><br /></td></tr>
<tr class="separator:a5249ed9224810a95f8fa1366bc77c523"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7e9584d7080ca6442cec62afaff6cad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">is_a_reshaped</a> () const</td></tr>
<tr class="memdesc:aa7e9584d7080ca6442cec62afaff6cad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the matrix A has been reshaped.  <a href="#aa7e9584d7080ca6442cec62afaff6cad">More...</a><br /></td></tr>
<tr class="separator:aa7e9584d7080ca6442cec62afaff6cad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77964edb8d16bb8ec14ddd8985e03cb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">is_b_reshaped</a> () const</td></tr>
<tr class="memdesc:a77964edb8d16bb8ec14ddd8985e03cb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the matrix B has been reshaped.  <a href="#a77964edb8d16bb8ec14ddd8985e03cb0">More...</a><br /></td></tr>
<tr class="separator:a77964edb8d16bb8ec14ddd8985e03cb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c8f9fa843de1086c27c86a6b8cf4582"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">reshape_b_only_on_first_run</a> () const</td></tr>
<tr class="memdesc:a4c8f9fa843de1086c27c86a6b8cf4582"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the reshape of matrix B should executed only for the first.  <a href="#a4c8f9fa843de1086c27c86a6b8cf4582">More...</a><br /></td></tr>
<tr class="separator:a4c8f9fa843de1086c27c86a6b8cf4582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbd888f118c2209bf7578eb4f8942a07"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">depth_output_gemm3d</a> () const</td></tr>
<tr class="memdesc:abbd888f118c2209bf7578eb4f8942a07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Depth of the output when GEMM output is reinterpreted as 3D tensor.  <a href="#abbd888f118c2209bf7578eb4f8942a07">More...</a><br /></td></tr>
<tr class="separator:abbd888f118c2209bf7578eb4f8942a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00330b8913cac3b07029ac0c3350e806"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">reinterpret_input_as_3d</a> () const</td></tr>
<tr class="memdesc:a00330b8913cac3b07029ac0c3350e806"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the input tensor has to be reinterpreted as 3D.  <a href="#a00330b8913cac3b07029ac0c3350e806">More...</a><br /></td></tr>
<tr class="separator:a00330b8913cac3b07029ac0c3350e806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9e7f8fc8a688fd119d3fb2892cce6b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ac9e7f8fc8a688fd119d3fb2892cce6b9">retain_internal_weights</a> () const</td></tr>
<tr class="memdesc:ac9e7f8fc8a688fd119d3fb2892cce6b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the weights tensor has to be retained from previous run.  <a href="#ac9e7f8fc8a688fd119d3fb2892cce6b9">More...</a><br /></td></tr>
<tr class="separator:ac9e7f8fc8a688fd119d3fb2892cce6b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11d8f855e323a8396fe6944edcef4238"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a> () const</td></tr>
<tr class="memdesc:a11d8f855e323a8396fe6944edcef4238"><td class="mdescLeft">&#160;</td><td class="mdescRight">GEMMLowp output stage.  <a href="#a11d8f855e323a8396fe6944edcef4238">More...</a><br /></td></tr>
<tr class="separator:a11d8f855e323a8396fe6944edcef4238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae081b85ce44f2ec7cfe875afabcdfcc3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae081b85ce44f2ec7cfe875afabcdfcc3">set_gemmlowp_output_stage</a> (<a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> &amp;<a class="el" href="working__space_8hpp.xhtml#aa2b9b52a4827eeb41f97f92a3781eee8">output_stage</a>)</td></tr>
<tr class="memdesc:ae081b85ce44f2ec7cfe875afabcdfcc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets GEMMLowp output stage.  <a href="#ae081b85ce44f2ec7cfe875afabcdfcc3">More...</a><br /></td></tr>
<tr class="separator:ae081b85ce44f2ec7cfe875afabcdfcc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501521734ce4f9d81d91d0c7e35dcfe9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a501521734ce4f9d81d91d0c7e35dcfe9">fp_mixed_precision</a> () const</td></tr>
<tr class="memdesc:a501521734ce4f9d81d91d0c7e35dcfe9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if a wider accumulator should be used.  <a href="#a501521734ce4f9d81d91d0c7e35dcfe9">More...</a><br /></td></tr>
<tr class="separator:a501521734ce4f9d81d91d0c7e35dcfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d38726d9f14d748185f77798617c8a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a> () const</td></tr>
<tr class="memdesc:ae2d38726d9f14d748185f77798617c8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if a shorter accumulator to be used.  <a href="#ae2d38726d9f14d748185f77798617c8a">More...</a><br /></td></tr>
<tr class="separator:ae2d38726d9f14d748185f77798617c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af706055cbc19cf4ee2b6effe3beaccee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#af706055cbc19cf4ee2b6effe3beaccee">set_fast_math</a> (bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>)</td></tr>
<tr class="memdesc:af706055cbc19cf4ee2b6effe3beaccee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set fast math flag.  <a href="#af706055cbc19cf4ee2b6effe3beaccee">More...</a><br /></td></tr>
<tr class="separator:af706055cbc19cf4ee2b6effe3beaccee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a757197ffaf53ef6b284c6ceb24fdb688"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a757197ffaf53ef6b284c6ceb24fdb688">broadcast_bias</a> () const</td></tr>
<tr class="memdesc:a757197ffaf53ef6b284c6ceb24fdb688"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies whether to broadcast the shape of the bias tensor.  <a href="#a757197ffaf53ef6b284c6ceb24fdb688">More...</a><br /></td></tr>
<tr class="separator:a757197ffaf53ef6b284c6ceb24fdb688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6663acffe7ad0fa26750779bec17d82"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ac6663acffe7ad0fa26750779bec17d82">pretranspose_A</a> () const</td></tr>
<tr class="memdesc:ac6663acffe7ad0fa26750779bec17d82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies whether A should be pre-transposed if supported.  <a href="#ac6663acffe7ad0fa26750779bec17d82">More...</a><br /></td></tr>
<tr class="separator:ac6663acffe7ad0fa26750779bec17d82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72940f70ecb21f935870ca4b61947ce9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a72940f70ecb21f935870ca4b61947ce9">set_pretranspose_A</a> (bool flag)</td></tr>
<tr class="memdesc:a72940f70ecb21f935870ca4b61947ce9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set pre-transpose A flag.  <a href="#a72940f70ecb21f935870ca4b61947ce9">More...</a><br /></td></tr>
<tr class="separator:a72940f70ecb21f935870ca4b61947ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade745f0d990160b2ad90ded0814a2498"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ade745f0d990160b2ad90ded0814a2498">pretranspose_B</a> () const</td></tr>
<tr class="memdesc:ade745f0d990160b2ad90ded0814a2498"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies whether b should be pre-transposed if supported.  <a href="#ade745f0d990160b2ad90ded0814a2498">More...</a><br /></td></tr>
<tr class="separator:ade745f0d990160b2ad90ded0814a2498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e1df6b05c99e52dc87aaa3b1aeab3e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a7e1df6b05c99e52dc87aaa3b1aeab3e9">set_pretranspose_B</a> (bool flag)</td></tr>
<tr class="memdesc:a7e1df6b05c99e52dc87aaa3b1aeab3e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set pre-transpose b flag.  <a href="#a7e1df6b05c99e52dc87aaa3b1aeab3e9">More...</a><br /></td></tr>
<tr class="separator:a7e1df6b05c99e52dc87aaa3b1aeab3e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a8dd296461705ee5cb54eacb4b2818"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a> () const</td></tr>
<tr class="memdesc:a39a8dd296461705ee5cb54eacb4b2818"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activation layer to apply after the matrix multiplication.  <a href="#a39a8dd296461705ee5cb54eacb4b2818">More...</a><br /></td></tr>
<tr class="separator:a39a8dd296461705ee5cb54eacb4b2818"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8fc03416b05b11b3b57e6cb17deea6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad8fc03416b05b11b3b57e6cb17deea6f">set_activation_info</a> (const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a>)</td></tr>
<tr class="memdesc:ad8fc03416b05b11b3b57e6cb17deea6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set activation layer info.  <a href="#ad8fc03416b05b11b3b57e6cb17deea6f">More...</a><br /></td></tr>
<tr class="separator:ad8fc03416b05b11b3b57e6cb17deea6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad712f5f9ad21fa465f07cd8a6336c2d3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">post_ops</a> () const</td></tr>
<tr class="memdesc:ad712f5f9ad21fa465f07cd8a6336c2d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post operations to apply after the matrix multiplication.  <a href="#ad712f5f9ad21fa465f07cd8a6336c2d3">More...</a><br /></td></tr>
<tr class="separator:ad712f5f9ad21fa465f07cd8a6336c2d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab522b11b1700985df0dae26ec03cb249"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab522b11b1700985df0dae26ec03cb249">set_post_ops</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;<a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">post_ops</a>)</td></tr>
<tr class="memdesc:ab522b11b1700985df0dae26ec03cb249"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set post ops.  <a href="#ab522b11b1700985df0dae26ec03cb249">More...</a><br /></td></tr>
<tr class="separator:ab522b11b1700985df0dae26ec03cb249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8326941d60f08c5d1f47ed65514f3ed"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">fixed_format</a> () const</td></tr>
<tr class="memdesc:ab8326941d60f08c5d1f47ed65514f3ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag which specifies if the GEMM operation is running fixed-format kernels.  <a href="#ab8326941d60f08c5d1f47ed65514f3ed">More...</a><br /></td></tr>
<tr class="separator:ab8326941d60f08c5d1f47ed65514f3ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15aa71f614ff585d24cbb101bfa5232e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a15aa71f614ff585d24cbb101bfa5232e">set_fixed_format</a> (bool <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">fixed_format</a>)</td></tr>
<tr class="memdesc:a15aa71f614ff585d24cbb101bfa5232e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set fixed-format flag.  <a href="#a15aa71f614ff585d24cbb101bfa5232e">More...</a><br /></td></tr>
<tr class="separator:a15aa71f614ff585d24cbb101bfa5232e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d5e7ad98fd0d58a84c837e931464de6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">weight_format</a> () const</td></tr>
<tr class="separator:a6d5e7ad98fd0d58a84c837e931464de6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a76aeb3d02431c5dc06ea031c2e49a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a9a76aeb3d02431c5dc06ea031c2e49a6">set_weight_format</a> (<a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> <a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">weight_format</a>)</td></tr>
<tr class="memdesc:a9a76aeb3d02431c5dc06ea031c2e49a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set weight format to be used.  <a href="#a9a76aeb3d02431c5dc06ea031c2e49a6">More...</a><br /></td></tr>
<tr class="separator:a9a76aeb3d02431c5dc06ea031c2e49a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>GEMM information class. </p>
<p>This class stores the necessary information to compute GEMM functions</p>
<p>This object also contains the information about how matrix A and matrix B have been reshaped </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02341">2341</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae0c4636f1099428785df0463f7151889"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0c4636f1099428785df0463f7151889">&#9670;&nbsp;</a></span>GEMMInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02345">2345</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;        : _is_a_reshaped(<span class="keyword">false</span>),</div><div class="line"><a name="l02347"></a><span class="lineno"> 2347</span>&#160;          _is_b_reshaped(<span class="keyword">false</span>),</div><div class="line"><a name="l02348"></a><span class="lineno"> 2348</span>&#160;          _reshape_b_only_on_first_run(<span class="keyword">true</span>),</div><div class="line"><a name="l02349"></a><span class="lineno"> 2349</span>&#160;          _depth_output_gemm3d(0),</div><div class="line"><a name="l02350"></a><span class="lineno"> 2350</span>&#160;          _reinterpret_input_as_3d(<span class="keyword">false</span>),</div><div class="line"><a name="l02351"></a><span class="lineno"> 2351</span>&#160;          _retain_internal_weights(<span class="keyword">false</span>),</div><div class="line"><a name="l02352"></a><span class="lineno"> 2352</span>&#160;          _gemmlowp_output_stage(),</div><div class="line"><a name="l02353"></a><span class="lineno"> 2353</span>&#160;          _fast_math(<span class="keyword">false</span>),</div><div class="line"><a name="l02354"></a><span class="lineno"> 2354</span>&#160;          _fp_mixed_precision(<span class="keyword">false</span>),</div><div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;          _broadcast_bias(<span class="keyword">false</span>),</div><div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;          _pretranspose_A(<span class="keyword">false</span>),</div><div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;          _pretranspose_B(<span class="keyword">false</span>),</div><div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;          _activation_info(),</div><div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;          _post_ops(),</div><div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;          _fixed_format(<span class="keyword">false</span>),</div><div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;          _weight_format(<a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a>)</div><div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;    {</div><div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5249ed9224810a95f8fa1366bc77c523"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5249ed9224810a95f8fa1366bc77c523">&#9670;&nbsp;</a></span>GEMMInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_a_reshaped</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_b_reshaped</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reshape_b_only_on_first_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth_output_gemm3d</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reinterpret_input_as_3d</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>retain_internal_weights</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a>&#160;</td>
          <td class="paramname"><em>gemmlowp_output_stage</em> = <code><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fp_mixed_precision</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fast_math</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>broadcast_bias</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>activation_info</em> = <code><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>post_ops</em> = <code><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt;<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>&#160;*&gt;()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fixed_format</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a>&#160;</td>
          <td class="paramname"><em>weight_format</em> = <code><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">is_a_reshaped</td><td>True if the matrix A has been reshaped </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">is_b_reshaped</td><td>True if the matrix B has been reshaped </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reshape_b_only_on_first_run</td><td>Reshape matrix B only for the first run </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">depth_output_gemm3d</td><td>(Optional) Depth (third dimension) of the output tensor to be used with the GEMM3D kernel If 0 the output will not be reinterpreted as 3D. Default 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">reinterpret_input_as_3d</td><td>(Optional) Reinterpret the input as 3D tensor. (i.e. this flag should be set to true when GEMM is used to perform 1x1 convolutions with the NHWC data layout) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">retain_internal_weights</td><td>(Optional) Retain the weights tensor from previous run </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gemmlowp_output_stage</td><td>(Optional) GEMMLowp Output stage info </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fp_mixed_precision</td><td>(Optional) Use wider accumulators (32 bit instead of 16 for FP16) to improve accuracy. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fast_math</td><td>(Optional) Use a data type of shorter width to improve performance </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">broadcast_bias</td><td>(Optional) Broadcast the shape of the bias tensor from a vector to a matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">activation_info</td><td>(Optional) Activation to apply after the matrix multiplication </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">post_ops</td><td>(Optional) A sequence of post operations that are performed after the main operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fixed_format</td><td>(Optional) Specify the selection of fixed format kernels for variable weights support in GEMM. These kernels expect the weights tensor to be in amemory format that is fixed by the kernel itself. For more information, see <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5" title="Memory layouts for the weights tensor. ">arm_compute::WeightFormat</a>. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weight_format</td><td>(Optional) <a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a>:WeightFormat enumeration requested by the user. Default is <a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a>. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02383">2383</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;        : _is_a_reshaped(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">is_a_reshaped</a>),</div><div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;          _is_b_reshaped(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">is_b_reshaped</a>),</div><div class="line"><a name="l02389"></a><span class="lineno"> 2389</span>&#160;          _reshape_b_only_on_first_run(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">reshape_b_only_on_first_run</a>),</div><div class="line"><a name="l02390"></a><span class="lineno"> 2390</span>&#160;          _depth_output_gemm3d(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">depth_output_gemm3d</a>),</div><div class="line"><a name="l02391"></a><span class="lineno"> 2391</span>&#160;          _reinterpret_input_as_3d(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">reinterpret_input_as_3d</a>),</div><div class="line"><a name="l02392"></a><span class="lineno"> 2392</span>&#160;          _retain_internal_weights(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ac9e7f8fc8a688fd119d3fb2892cce6b9">retain_internal_weights</a>),</div><div class="line"><a name="l02393"></a><span class="lineno"> 2393</span>&#160;          _gemmlowp_output_stage(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">gemmlowp_output_stage</a>),</div><div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;          _fast_math(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>),</div><div class="line"><a name="l02395"></a><span class="lineno"> 2395</span>&#160;          _fp_mixed_precision(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a501521734ce4f9d81d91d0c7e35dcfe9">fp_mixed_precision</a>),</div><div class="line"><a name="l02396"></a><span class="lineno"> 2396</span>&#160;          _broadcast_bias(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a757197ffaf53ef6b284c6ceb24fdb688">broadcast_bias</a>),</div><div class="line"><a name="l02397"></a><span class="lineno"> 2397</span>&#160;          _pretranspose_A(<span class="keyword">false</span>),</div><div class="line"><a name="l02398"></a><span class="lineno"> 2398</span>&#160;          _pretranspose_B(<span class="keyword">false</span>),</div><div class="line"><a name="l02399"></a><span class="lineno"> 2399</span>&#160;          _activation_info(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a>),</div><div class="line"><a name="l02400"></a><span class="lineno"> 2400</span>&#160;          _post_ops(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">post_ops</a>),</div><div class="line"><a name="l02401"></a><span class="lineno"> 2401</span>&#160;          _fixed_format(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">fixed_format</a>),</div><div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;          _weight_format(<a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">weight_format</a>)</div><div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;    {</div><div class="line"><a name="l02404"></a><span class="lineno"> 2404</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a11d8f855e323a8396fe6944edcef4238"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a11d8f855e323a8396fe6944edcef4238">arm_compute::GEMMInfo::gemmlowp_output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo gemmlowp_output_stage() const</div><div class="ttdoc">GEMMLowp output stage. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02459">Types.h:2459</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a501521734ce4f9d81d91d0c7e35dcfe9"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a501521734ce4f9d81d91d0c7e35dcfe9">arm_compute::GEMMInfo::fp_mixed_precision</a></div><div class="ttdeci">bool fp_mixed_precision() const</div><div class="ttdoc">Flag which specifies if a wider accumulator should be used. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02475">Types.h:2475</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_abbd888f118c2209bf7578eb4f8942a07"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07">arm_compute::GEMMInfo::depth_output_gemm3d</a></div><div class="ttdeci">int depth_output_gemm3d() const</div><div class="ttdoc">Depth of the output when GEMM output is reinterpreted as 3D tensor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02435">Types.h:2435</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ac9e7f8fc8a688fd119d3fb2892cce6b9"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ac9e7f8fc8a688fd119d3fb2892cce6b9">arm_compute::GEMMInfo::retain_internal_weights</a></div><div class="ttdeci">bool retain_internal_weights() const</div><div class="ttdoc">Flag which specifies if the weights tensor has to be retained from previous run. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02451">Types.h:2451</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a77964edb8d16bb8ec14ddd8985e03cb0"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a77964edb8d16bb8ec14ddd8985e03cb0">arm_compute::GEMMInfo::is_b_reshaped</a></div><div class="ttdeci">bool is_b_reshaped() const</div><div class="ttdoc">Flag which specifies if the matrix B has been reshaped. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02417">Types.h:2417</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a00330b8913cac3b07029ac0c3350e806"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a00330b8913cac3b07029ac0c3350e806">arm_compute::GEMMInfo::reinterpret_input_as_3d</a></div><div class="ttdeci">bool reinterpret_input_as_3d() const</div><div class="ttdoc">Flag which specifies if the input tensor has to be reinterpreted as 3D. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02443">Types.h:2443</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a757197ffaf53ef6b284c6ceb24fdb688"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a757197ffaf53ef6b284c6ceb24fdb688">arm_compute::GEMMInfo::broadcast_bias</a></div><div class="ttdeci">bool broadcast_bias() const</div><div class="ttdoc">Flag which specifies whether to broadcast the shape of the bias tensor. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02499">Types.h:2499</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_aa7e9584d7080ca6442cec62afaff6cad"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#aa7e9584d7080ca6442cec62afaff6cad">arm_compute::GEMMInfo::is_a_reshaped</a></div><div class="ttdeci">bool is_a_reshaped() const</div><div class="ttdoc">Flag which specifies if the matrix A has been reshaped. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02409">Types.h:2409</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ad712f5f9ad21fa465f07cd8a6336c2d3"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">arm_compute::GEMMInfo::post_ops</a></div><div class="ttdeci">const experimental::PostOpList&lt; ITensorInfo * &gt; &amp; post_ops() const</div><div class="ttdoc">Post operations to apply after the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02555">Types.h:2555</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ae2d38726d9f14d748185f77798617c8a"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">arm_compute::GEMMInfo::fast_math</a></div><div class="ttdeci">bool fast_math() const</div><div class="ttdoc">Flag which specifies if a shorter accumulator to be used. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02483">Types.h:2483</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a4c8f9fa843de1086c27c86a6b8cf4582"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a4c8f9fa843de1086c27c86a6b8cf4582">arm_compute::GEMMInfo::reshape_b_only_on_first_run</a></div><div class="ttdeci">bool reshape_b_only_on_first_run() const</div><div class="ttdoc">Flag which specifies if the reshape of matrix B should executed only for the first. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02427">Types.h:2427</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ab8326941d60f08c5d1f47ed65514f3ed"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">arm_compute::GEMMInfo::fixed_format</a></div><div class="ttdeci">bool fixed_format() const</div><div class="ttdoc">Flag which specifies if the GEMM operation is running fixed-format kernels. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02571">Types.h:2571</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a39a8dd296461705ee5cb54eacb4b2818"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">arm_compute::GEMMInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info() const</div><div class="ttdoc">Activation layer to apply after the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02539">Types.h:2539</a></div></div>
<div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a6d5e7ad98fd0d58a84c837e931464de6"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">arm_compute::GEMMInfo::weight_format</a></div><div class="ttdeci">arm_compute::WeightFormat weight_format() const</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02585">Types.h:2585</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a39a8dd296461705ee5cb54eacb4b2818"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a8dd296461705ee5cb54eacb4b2818">&#9670;&nbsp;</a></span>activation_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> activation_info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Activation layer to apply after the matrix multiplication. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml" title="Activation Layer Information class. ">ActivationLayerInfo</a> object </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02539">2539</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>, and <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;    {</div><div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160;        <span class="keywordflow">return</span> _activation_info;</div><div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a757197ffaf53ef6b284c6ceb24fdb688"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a757197ffaf53ef6b284c6ceb24fdb688">&#9670;&nbsp;</a></span>broadcast_bias()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool broadcast_bias </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies whether to broadcast the shape of the bias tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the shape of the bias tensor is to be broadcasted. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02499">2499</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l02500"></a><span class="lineno"> 2500</span>&#160;    {</div><div class="line"><a name="l02501"></a><span class="lineno"> 2501</span>&#160;        <span class="keywordflow">return</span> _broadcast_bias;</div><div class="line"><a name="l02502"></a><span class="lineno"> 2502</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="abbd888f118c2209bf7578eb4f8942a07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbd888f118c2209bf7578eb4f8942a07">&#9670;&nbsp;</a></span>depth_output_gemm3d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int depth_output_gemm3d </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Depth of the output when GEMM output is reinterpreted as 3D tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>the depth of the output tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02435">2435</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02436"></a><span class="lineno"> 2436</span>&#160;    {</div><div class="line"><a name="l02437"></a><span class="lineno"> 2437</span>&#160;        <span class="keywordflow">return</span> _depth_output_gemm3d;</div><div class="line"><a name="l02438"></a><span class="lineno"> 2438</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ae2d38726d9f14d748185f77798617c8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2d38726d9f14d748185f77798617c8a">&#9670;&nbsp;</a></span>fast_math()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fast_math </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if a shorter accumulator to be used. </p>
<dl class="section return"><dt>Returns</dt><dd>True if a shorter accumulator has to be used </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02483">2483</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02484"></a><span class="lineno"> 2484</span>&#160;    {</div><div class="line"><a name="l02485"></a><span class="lineno"> 2485</span>&#160;        <span class="keywordflow">return</span> _fast_math;</div><div class="line"><a name="l02486"></a><span class="lineno"> 2486</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ab8326941d60f08c5d1f47ed65514f3ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8326941d60f08c5d1f47ed65514f3ed">&#9670;&nbsp;</a></span>fixed_format()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fixed_format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the GEMM operation is running fixed-format kernels. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the GEMM operation is running fixed-format kernel else false. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02571">2571</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;    {</div><div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;        <span class="keywordflow">return</span> _fixed_format;</div><div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a501521734ce4f9d81d91d0c7e35dcfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a501521734ce4f9d81d91d0c7e35dcfe9">&#9670;&nbsp;</a></span>fp_mixed_precision()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool fp_mixed_precision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if a wider accumulator should be used. </p>
<dl class="section return"><dt>Returns</dt><dd>True if a wider accumulator has to be used </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02475">2475</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l02476"></a><span class="lineno"> 2476</span>&#160;    {</div><div class="line"><a name="l02477"></a><span class="lineno"> 2477</span>&#160;        <span class="keywordflow">return</span> _fp_mixed_precision;</div><div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="a11d8f855e323a8396fe6944edcef4238"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11d8f855e323a8396fe6944edcef4238">&#9670;&nbsp;</a></span>gemmlowp_output_stage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> gemmlowp_output_stage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>GEMMLowp output stage. </p>
<dl class="section return"><dt>Returns</dt><dd>the GEMMLowp output stage info </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02459">2459</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00505">CpuGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02460"></a><span class="lineno"> 2460</span>&#160;    {</div><div class="line"><a name="l02461"></a><span class="lineno"> 2461</span>&#160;        <span class="keywordflow">return</span> _gemmlowp_output_stage;</div><div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="aa7e9584d7080ca6442cec62afaff6cad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7e9584d7080ca6442cec62afaff6cad">&#9670;&nbsp;</a></span>is_a_reshaped()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_a_reshaped </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the matrix A has been reshaped. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the matrix A has been reshaped </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02409">2409</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>, and <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02410"></a><span class="lineno"> 2410</span>&#160;    {</div><div class="line"><a name="l02411"></a><span class="lineno"> 2411</span>&#160;        <span class="keywordflow">return</span> _is_a_reshaped;</div><div class="line"><a name="l02412"></a><span class="lineno"> 2412</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="a77964edb8d16bb8ec14ddd8985e03cb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77964edb8d16bb8ec14ddd8985e03cb0">&#9670;&nbsp;</a></span>is_b_reshaped()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is_b_reshaped </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the matrix B has been reshaped. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the matrix B has been reshaped </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02417">2417</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>, and <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00309">CpuGemmLowpMatrixMultiplyCore::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;    {</div><div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;        <span class="keywordflow">return</span> _is_b_reshaped;</div><div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ad712f5f9ad21fa465f07cd8a6336c2d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad712f5f9ad21fa465f07cd8a6336c2d3">&#9670;&nbsp;</a></span>post_ops()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt;<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt;&amp; post_ops </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Post operations to apply after the matrix multiplication. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml" title="A sequence of PostOps that can be appended to the end of other operators. ">experimental::PostOpList</a> object </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02555">2555</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;    {</div><div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;        <span class="keywordflow">return</span> _post_ops;</div><div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ac6663acffe7ad0fa26750779bec17d82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6663acffe7ad0fa26750779bec17d82">&#9670;&nbsp;</a></span>pretranspose_A()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool pretranspose_A </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies whether A should be pre-transposed if supported. </p>
<dl class="section return"><dt>Returns</dt><dd>True if A should be pre-transposed else false. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02507">2507</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02508"></a><span class="lineno"> 2508</span>&#160;    {</div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;        <span class="keywordflow">return</span> _pretranspose_A;</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ade745f0d990160b2ad90ded0814a2498"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade745f0d990160b2ad90ded0814a2498">&#9670;&nbsp;</a></span>pretranspose_B()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool pretranspose_B </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies whether b should be pre-transposed if supported. </p>
<dl class="section return"><dt>Returns</dt><dd>True if b should be pre-transposed else false. </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02523">2523</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l02524"></a><span class="lineno"> 2524</span>&#160;    {</div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;        <span class="keywordflow">return</span> _pretranspose_B;</div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="a00330b8913cac3b07029ac0c3350e806"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00330b8913cac3b07029ac0c3350e806">&#9670;&nbsp;</a></span>reinterpret_input_as_3d()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool reinterpret_input_as_3d </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the input tensor has to be reinterpreted as 3D. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the input tensor has to be reinterpreted as 3D tensor </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02443">2443</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">ClGemm::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00612">ClGemm::validate()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02444"></a><span class="lineno"> 2444</span>&#160;    {</div><div class="line"><a name="l02445"></a><span class="lineno"> 2445</span>&#160;        <span class="keywordflow">return</span> _reinterpret_input_as_3d;</div><div class="line"><a name="l02446"></a><span class="lineno"> 2446</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="a4c8f9fa843de1086c27c86a6b8cf4582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c8f9fa843de1086c27c86a6b8cf4582">&#9670;&nbsp;</a></span>reshape_b_only_on_first_run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool reshape_b_only_on_first_run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the reshape of matrix B should executed only for the first. </p>
<dl class="section note"><dt>Note</dt><dd>This flag could be set to TRUE when GEMM is used to accelerate convolution layer</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if the reshaped of matrix B happens only for the first run </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02427">2427</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">ClGemm::configure()</a>, <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00060">CpuGemm::configure()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00256">ClGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00612">ClGemm::validate()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00472">ClGemmLowpMatrixMultiplyCore::validate()</a>, and <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02428"></a><span class="lineno"> 2428</span>&#160;    {</div><div class="line"><a name="l02429"></a><span class="lineno"> 2429</span>&#160;        <span class="keywordflow">return</span> _reshape_b_only_on_first_run;</div><div class="line"><a name="l02430"></a><span class="lineno"> 2430</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ac9e7f8fc8a688fd119d3fb2892cce6b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9e7f8fc8a688fd119d3fb2892cce6b9">&#9670;&nbsp;</a></span>retain_internal_weights()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool retain_internal_weights </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag which specifies if the weights tensor has to be retained from previous run. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the weights tensor has to be retained </dd></dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02451">2451</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00557">ClGemm::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_8cpp_source.xhtml#l00068">CLGEMM::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00071">CLGEMMLowpMatrixMultiplyCore::configure()</a>, and <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01521">arm_compute::operator&lt;&lt;()</a>.</p>
<div class="fragment"><div class="line"><a name="l02452"></a><span class="lineno"> 2452</span>&#160;    {</div><div class="line"><a name="l02453"></a><span class="lineno"> 2453</span>&#160;        <span class="keywordflow">return</span> _retain_internal_weights;</div><div class="line"><a name="l02454"></a><span class="lineno"> 2454</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="ad8fc03416b05b11b3b57e6cb17deea6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8fc03416b05b11b3b57e6cb17deea6f">&#9670;&nbsp;</a></span>set_activation_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_activation_info </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>activation_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set activation layer info. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">activation_info</td><td><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml" title="Activation Layer Information class. ">ActivationLayerInfo</a> object to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02547">2547</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00345">CpuFullyConnected::has_opt_impl()</a>.</p>
<div class="fragment"><div class="line"><a name="l02548"></a><span class="lineno"> 2548</span>&#160;    {</div><div class="line"><a name="l02549"></a><span class="lineno"> 2549</span>&#160;        _activation_info = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">activation_info</a>;</div><div class="line"><a name="l02550"></a><span class="lineno"> 2550</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a39a8dd296461705ee5cb54eacb4b2818"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a39a8dd296461705ee5cb54eacb4b2818">arm_compute::GEMMInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info() const</div><div class="ttdoc">Activation layer to apply after the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02539">Types.h:2539</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af706055cbc19cf4ee2b6effe3beaccee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af706055cbc19cf4ee2b6effe3beaccee">&#9670;&nbsp;</a></span>set_fast_math()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_fast_math </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fast_math</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set fast math flag. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fast_math</td><td>Flag to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02491">2491</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00345">CpuFullyConnected::has_opt_impl()</a>.</p>
<div class="fragment"><div class="line"><a name="l02492"></a><span class="lineno"> 2492</span>&#160;    {</div><div class="line"><a name="l02493"></a><span class="lineno"> 2493</span>&#160;        _fast_math = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">fast_math</a>;</div><div class="line"><a name="l02494"></a><span class="lineno"> 2494</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ae2d38726d9f14d748185f77798617c8a"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ae2d38726d9f14d748185f77798617c8a">arm_compute::GEMMInfo::fast_math</a></div><div class="ttdeci">bool fast_math() const</div><div class="ttdoc">Flag which specifies if a shorter accumulator to be used. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02483">Types.h:2483</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a15aa71f614ff585d24cbb101bfa5232e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15aa71f614ff585d24cbb101bfa5232e">&#9670;&nbsp;</a></span>set_fixed_format()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_fixed_format </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fixed_format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set fixed-format flag. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fixed_format</td><td>sets whether or not to use fixed-format kernels </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02580">2580</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00345">CpuFullyConnected::has_opt_impl()</a>.</p>
<div class="fragment"><div class="line"><a name="l02581"></a><span class="lineno"> 2581</span>&#160;    {</div><div class="line"><a name="l02582"></a><span class="lineno"> 2582</span>&#160;        _fixed_format = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">fixed_format</a>;</div><div class="line"><a name="l02583"></a><span class="lineno"> 2583</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ab8326941d60f08c5d1f47ed65514f3ed"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ab8326941d60f08c5d1f47ed65514f3ed">arm_compute::GEMMInfo::fixed_format</a></div><div class="ttdeci">bool fixed_format() const</div><div class="ttdoc">Flag which specifies if the GEMM operation is running fixed-format kernels. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02571">Types.h:2571</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae081b85ce44f2ec7cfe875afabcdfcc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae081b85ce44f2ec7cfe875afabcdfcc3">&#9670;&nbsp;</a></span>set_gemmlowp_output_stage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_gemmlowp_output_stage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output_stage</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets GEMMLowp output stage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">output_stage</td><td>Output stage to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02467">2467</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00107">output_stage</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00109">CpuGemmLowpMatrixMultiplyCore::configure()</a>.</p>
<div class="fragment"><div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;    {</div><div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;        _gemmlowp_output_stage = <a class="code" href="working__space_8hpp.xhtml#aa2b9b52a4827eeb41f97f92a3781eee8">output_stage</a>;</div><div class="line"><a name="l02470"></a><span class="lineno"> 2470</span>&#160;    };</div><div class="ttc" id="working__space_8hpp_xhtml_aa2b9b52a4827eeb41f97f92a3781eee8"><div class="ttname"><a href="working__space_8hpp.xhtml#aa2b9b52a4827eeb41f97f92a3781eee8">output_stage</a></div><div class="ttdeci">const OutputStage &amp; output_stage</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00107">working_space.hpp:107</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab522b11b1700985df0dae26ec03cb249"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab522b11b1700985df0dae26ec03cb249">&#9670;&nbsp;</a></span>set_post_ops()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_post_ops </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml">experimental::PostOpList</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>post_ops</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set post ops. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">post_ops</td><td><a class="el" href="classarm__compute_1_1experimental_1_1_post_op_list.xhtml" title="A sequence of PostOps that can be appended to the end of other operators. ">experimental::PostOpList</a> object to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02563">2563</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">References <a class="el" href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00413">arm_compute::test::validation::post_ops</a>.</p>
<div class="fragment"><div class="line"><a name="l02564"></a><span class="lineno"> 2564</span>&#160;    {</div><div class="line"><a name="l02565"></a><span class="lineno"> 2565</span>&#160;        _post_ops = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">post_ops</a>;</div><div class="line"><a name="l02566"></a><span class="lineno"> 2566</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_ad712f5f9ad21fa465f07cd8a6336c2d3"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#ad712f5f9ad21fa465f07cd8a6336c2d3">arm_compute::GEMMInfo::post_ops</a></div><div class="ttdeci">const experimental::PostOpList&lt; ITensorInfo * &gt; &amp; post_ops() const</div><div class="ttdoc">Post operations to apply after the matrix multiplication. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02555">Types.h:2555</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a72940f70ecb21f935870ca4b61947ce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72940f70ecb21f935870ca4b61947ce9">&#9670;&nbsp;</a></span>set_pretranspose_A()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_pretranspose_A </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set pre-transpose A flag. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>Flag to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02515">2515</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;    {</div><div class="line"><a name="l02517"></a><span class="lineno"> 2517</span>&#160;        _pretranspose_A = flag;</div><div class="line"><a name="l02518"></a><span class="lineno"> 2518</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a7e1df6b05c99e52dc87aaa3b1aeab3e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e1df6b05c99e52dc87aaa3b1aeab3e9">&#9670;&nbsp;</a></span>set_pretranspose_B()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_pretranspose_B </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set pre-transpose b flag. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>Flag to set </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02531">2531</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l02532"></a><span class="lineno"> 2532</span>&#160;    {</div><div class="line"><a name="l02533"></a><span class="lineno"> 2533</span>&#160;        _pretranspose_B = flag;</div><div class="line"><a name="l02534"></a><span class="lineno"> 2534</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a9a76aeb3d02431c5dc06ea031c2e49a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a76aeb3d02431c5dc06ea031c2e49a6">&#9670;&nbsp;</a></span>set_weight_format()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_weight_format </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a>&#160;</td>
          <td class="paramname"><em>weight_format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set weight format to be used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">weight_format</td><td><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5" title="Memory layouts for the weights tensor. ">arm_compute::WeightFormat</a> enumeration </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02594">2594</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00345">CpuFullyConnected::has_opt_impl()</a>.</p>
<div class="fragment"><div class="line"><a name="l02595"></a><span class="lineno"> 2595</span>&#160;    {</div><div class="line"><a name="l02596"></a><span class="lineno"> 2596</span>&#160;        _weight_format = <a class="code" href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">weight_format</a>;</div><div class="line"><a name="l02597"></a><span class="lineno"> 2597</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_g_e_m_m_info_xhtml_a6d5e7ad98fd0d58a84c837e931464de6"><div class="ttname"><a href="classarm__compute_1_1_g_e_m_m_info.xhtml#a6d5e7ad98fd0d58a84c837e931464de6">arm_compute::GEMMInfo::weight_format</a></div><div class="ttdeci">arm_compute::WeightFormat weight_format() const</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02585">Types.h:2585</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6d5e7ad98fd0d58a84c837e931464de6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d5e7ad98fd0d58a84c837e931464de6">&#9670;&nbsp;</a></span>weight_format()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> weight_format </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02585">2585</a> of file <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_gemm_8cpp_source.xhtml#l00153">CpuGemm::validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;    {</div><div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;        <span class="keywordflow">return</span> _weight_format;</div><div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">Types.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_g_e_m_m_info.xhtml">GEMMInfo</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
