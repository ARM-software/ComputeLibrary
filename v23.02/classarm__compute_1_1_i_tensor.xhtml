<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ITensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_i_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ITensor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for CPU tensor.  
 <a href="classarm__compute_1_1_i_tensor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0e95dc1e53c361348314873b168ae237"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a> () const =0</td></tr>
<tr class="memdesc:a0e95dc1e53c361348314873b168ae237"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#a0e95dc1e53c361348314873b168ae237">More...</a><br /></td></tr>
<tr class="separator:a0e95dc1e53c361348314873b168ae237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a7e6b5e55a2914b1fb1966310e7733ac4">info</a> ()=0</td></tr>
<tr class="memdesc:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return the tensor's metadata.  <a href="#a7e6b5e55a2914b1fb1966310e7733ac4">More...</a><br /></td></tr>
<tr class="separator:a7e6b5e55a2914b1fb1966310e7733ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4aa2df36743089ac6814d83e7d4b7ffc">~ITensor</a> ()=default</td></tr>
<tr class="memdesc:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default virtual destructor.  <a href="#a4aa2df36743089ac6814d83e7d4b7ffc">More...</a><br /></td></tr>
<tr class="separator:a4aa2df36743089ac6814d83e7d4b7ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="memItemLeft" align="right" valign="top">virtual uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a> () const =0</td></tr>
<tr class="memdesc:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to be implemented by the child class to return a pointer to CPU memory.  <a href="#ab988210662dbd3bf32fd563c7dd1bdbf">More...</a><br /></td></tr>
<tr class="separator:ab988210662dbd3bf32fd563c7dd1bdbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73147d41e8a640bc299d12613c31e"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#adbd73147d41e8a640bc299d12613c31e">ptr_to_element</a> (const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;id) const</td></tr>
<tr class="memdesc:adbd73147d41e8a640bc299d12613c31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the element at the passed coordinates.  <a href="#adbd73147d41e8a640bc299d12613c31e">More...</a><br /></td></tr>
<tr class="separator:adbd73147d41e8a640bc299d12613c31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a4a774ad8d5f4837f3d7de1876d367c5b">copy_from</a> (const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;src)</td></tr>
<tr class="memdesc:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy the content of another tensor.  <a href="#a4a774ad8d5f4837f3d7de1876d367c5b">More...</a><br /></td></tr>
<tr class="separator:a4a774ad8d5f4837f3d7de1876d367c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade74189c92e70baa2848986c10dbe7ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">print</a> (std::ostream &amp;s, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a> io_fmt=<a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()) const</td></tr>
<tr class="memdesc:ade74189c92e70baa2848986c10dbe7ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a tensor to a given stream using user defined formatting information.  <a href="#ade74189c92e70baa2848986c10dbe7ef">More...</a><br /></td></tr>
<tr class="separator:ade74189c92e70baa2848986c10dbe7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ea2ddfdfa80703799c92da8beb643"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a209ea2ddfdfa80703799c92da8beb643">is_used</a> () const</td></tr>
<tr class="memdesc:a209ea2ddfdfa80703799c92da8beb643"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags if the tensor is used or not.  <a href="#a209ea2ddfdfa80703799c92da8beb643">More...</a><br /></td></tr>
<tr class="separator:a209ea2ddfdfa80703799c92da8beb643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a9bc00234de9adf8c99a21eb1d7d494c2">mark_as_unused</a> () const</td></tr>
<tr class="memdesc:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as unused.  <a href="#a9bc00234de9adf8c99a21eb1d7d494c2">More...</a><br /></td></tr>
<tr class="separator:a9bc00234de9adf8c99a21eb1d7d494c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bac1e8a45b7823cbd4f74fe44f8c602"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0bac1e8a45b7823cbd4f74fe44f8c602">mark_as_used</a> () const</td></tr>
<tr class="memdesc:a0bac1e8a45b7823cbd4f74fe44f8c602"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks a tensor as used.  <a href="#a0bac1e8a45b7823cbd4f74fe44f8c602">More...</a><br /></td></tr>
<tr class="separator:a0bac1e8a45b7823cbd4f74fe44f8c602"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for CPU tensor. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8h_source.xhtml#l00036">36</a> of file <a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4aa2df36743089ac6814d83e7d4b7ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4aa2df36743089ac6814d83e7d4b7ffc">&#9670;&nbsp;</a></span>~ITensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab988210662dbd3bf32fd563c7dd1bdbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab988210662dbd3bf32fd563c7dd1bdbf">&#9670;&nbsp;</a></span>buffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint8_t* buffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return a pointer to CPU memory. </p>
<dl class="section return"><dt>Returns</dt><dd>A CPU pointer to the beginning of the image's allocation. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">ICLTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#a24954cca5108a24706441fd99a7fb04c">Tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00432">ValidationOutputAccessor::access_tensor()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00038">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="boundingboxtransform_2generic_2neon_2impl_8cpp_source.xhtml#l00087">arm_compute::cpu::bounding_box_transform()</a>, <a class="el" href="boundingboxtransform_2generic_2neon_2impl_8cpp_source.xhtml#l00029">arm_compute::cpu::bounding_box_transform_qsymm16()</a>, <a class="el" href="_sub_tensor_8cpp_source.xhtml#l00053">SubTensor::buffer()</a>, <a class="el" href="directconv2d_2nchw_2all_8cpp_source.xhtml#l00062">arm_compute::cpu::kernels::convolve_nchw()</a>, <a class="el" href="directconv2d_2nhwc_2neon_2impl_8cpp_source.xhtml#l00057">arm_compute::cpu::kernels::convolve_nhwc()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00134">Accessor::data()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00518">DetectionOutputAccessor::DetectionOutputAccessor()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00039">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00130">arm_compute::utils::draw_detection_rectangle()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00095">Iterator::Iterator()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00228">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="maxunpool_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::max_unpooling()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00110">CpuDepthwiseConv2dAssemblyDispatch::prepare()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00374">CpuWinogradConv2d::prepare()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00666">RandomAccessor::RandomAccessor()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00213">arm_compute::cpu::roi_align()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00150">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00102">NEReorgLayerKernel::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00549">CpuGemmConv2d::run()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00036">CpuWinogradConv2dTransformInputKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_height_kernel_8cpp_source.xhtml#l00084">CpuConcatenateHeightKernel::run_op()</a>, <a class="el" href="_cpu_concatenate_width_kernel_8cpp_source.xhtml#l00085">CpuConcatenateWidthKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00304">CpuDepthwiseConv2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00144">CpuPool2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00074">CpuWinogradConv2dTransformOutputKernel::run_op()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>, <a class="el" href="select_2generic_2neon_2impl_8cpp_source.xhtml#l00118">arm_compute::cpu::select_op_not_same_rank()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00589">TopNPredictionsAccessor::TopNPredictionsAccessor()</a>, and <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00136">NEFFTDigitReverseKernel::validate()</a>.</p>

</div>
</div>
<a id="a4a774ad8d5f4837f3d7de1876d367c5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a774ad8d5f4837f3d7de1876d367c5b">&#9670;&nbsp;</a></span>copy_from()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void copy_from </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy the content of another tensor. </p>
<dl class="section note"><dt>Note</dt><dd>The number of dimensions of the source tensor must be less or equal to those of the destination tensor.</dd>
<dd>
All dimensions of the destination tensor must be greater or equal to the source tensor ones.</dd>
<dd>
num_channels() and element_size() of both tensors must match.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Source tensor to copy from. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>

<p class="reference">References <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02695">IOFormatInfo::align_columns</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00267">ValidRegion::anchor</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00394">BorderSize::bottom</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor::buffer()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6a7a1920d61156abc05a60135aefe8bc67">IOFormatInfo::Default</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2">ITensorInfo::dimension()</a>, <a class="el" href="_window_8h_source.xhtml#l00045">Window::DimY</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00051">dt</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02691">IOFormatInfo::element_delim</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#aa459796b5489eca8a9160cb5dcf1a103">ITensorInfo::element_size()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00077">arm_compute::execute_window_loop()</a>, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6abbd47109890259c0127154db1af26c75">IOFormatInfo::Full</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="arm__compute_2core_2_utils_8h_source.xhtml#l01010">arm_compute::is_data_type_float()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00395">BorderSize::left</a>, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0a23bb2bd76e5604aace0bdaa7b279a8fd">IOFormatInfo::NoPadding</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad7829ae79223ab87f9da4c0bd7d229ba">ITensorInfo::num_channels()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1f4e725b8e1ea36b30e09dc08ae6961d">ITensorInfo::num_dimensions()</a>, <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01110">offset()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">ITensorInfo::offset_element_in_bytes()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ad0bd5cc32e7e4c0699eccba91e5de397">ITensorInfo::offset_first_element_in_bytes()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a07b929c34ad1dc823d8315876aa403ce">ITensorInfo::padding()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02689">IOFormatInfo::precision</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02687">IOFormatInfo::precision_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">ITensor::print()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02685">IOFormatInfo::print_region</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00139">Iterator::ptr()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00393">BorderSize::right</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l02693">IOFormatInfo::row_delim</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a9586081a29fceb532ab270bd843abee6">ITensorInfo::set_valid_region()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00268">ValidRegion::shape</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a6b14f175bf5281f57b561e2d4e4b1f1f">ITensorInfo::strides_in_bytes()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">ITensorInfo::tensor_shape()</a>, <a class="el" href="arm__compute_2core_2_types_8h_source.xhtml#l00392">BorderSize::top</a>, <a class="el" href="_tensor_shape_8h_source.xhtml#l00182">TensorShape::total_size_upper()</a>, <a class="el" href="_window_8inl_source.xhtml#l00276">Window::use_tensor_dimensions()</a>, <a class="el" href="validation_2_c_l_2_scale_8cpp_source.xhtml#l00214">arm_compute::test::validation::valid_region</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a74dfd07380a290c34fe7c8e065029b95">ITensorInfo::valid_region()</a>, <a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml#ae283722f31a4c59039f9abd44f10dbd0a3131a0d8b04c3dbc9119dc93a14bdbb9">IOFormatInfo::ValidRegion</a>, <a class="el" href="_dimensions_8h_source.xhtml#l00087">Dimensions&lt; T &gt;::x()</a>, and <a class="el" href="_dimensions_8h_source.xhtml#l00092">Dimensions&lt; T &gt;::y()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">if</span>(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a> == <span class="keyword">this</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> ITensorInfo *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">src_info</a> = <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.info();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    ITensorInfo       *dst_info = this-&gt;<a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(src_info-&gt;num_dimensions() &gt; dst_info-&gt;num_dimensions());</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(src_info-&gt;num_channels() != dst_info-&gt;num_channels());</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(src_info-&gt;element_size() != dst_info-&gt;element_size());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> d = 0; d &lt; src_info-&gt;num_dimensions(); d++)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(src_info-&gt;dimension(d) &gt; dst_info-&gt;dimension(d));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// Copy information about valid region</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    dst_info-&gt;set_valid_region(src_info-&gt;valid_region());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    Window win_src;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    win_src.use_tensor_dimensions(src_info-&gt;tensor_shape(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    Window win_dst;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    win_dst.use_tensor_dimensions(dst_info-&gt;tensor_shape(), <a class="code" href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">Window::DimY</a>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    Iterator src_it(&amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, win_src);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    Iterator dst_it(<span class="keyword">this</span>, win_dst);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> line_size = src_info-&gt;element_size() * src_info-&gt;dimension(0);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        win_src, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        memcpy(dst_it.ptr(), src_it.ptr(), line_size);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    },</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    src_it, dst_it);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a15541ee1af263ccf663a5dc23de9fb89"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a15541ee1af263ccf663a5dc23de9fb89">arm_compute::test::validation::src_info</a></div><div class="ttdeci">TensorInfo src_info(src_shape, 1, data_type)</div></div>
<div class="ttc" id="classarm__compute_1_1_window_xhtml_ad2d402364fa822b0b7775081291eeca9"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9">arm_compute::Window::DimY</a></div><div class="ttdeci">static constexpr size_t DimY</div><div class="ttdoc">Alias for dimension 1 also known as Y dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00045">Window.h:45</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0e95dc1e53c361348314873b168ae237"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e95dc1e53c361348314873b168ae237">&#9670;&nbsp;</a></span>info() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">CLSubTensor</a>, <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml#ad45f0c01a0713dfb6bd7232c7f396fc4">CLTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#a47d74e4e51f9b1a636c4831bd747a97c">Tensor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00211">NumPyAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00263">ImageAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00344">ValidationInputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00432">ValidationOutputAccessor::access_tensor()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00362">VerifyAccessor&lt; D &gt;::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00573">DetectionOutputAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00646">TopNPredictionsAccessor::access_tensor()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00698">RandomAccessor::access_tensor()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00119">ICLKernel::add_3d_tensor_nhw_argument()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00144">ICLKernel::add_4d_tensor_nhwc_argument()</a>, <a class="el" href="add_2generic_2sve2_2qasymm8__signed_8cpp_source.xhtml#l00037">arm_compute::cpu::add_qasymm8_signed_sve2()</a>, <a class="el" href="add_2generic_2sve2_2qasymm8_8cpp_source.xhtml#l00037">arm_compute::cpu::add_qasymm8_sve2()</a>, <a class="el" href="add_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::add_qsymm16_neon()</a>, <a class="el" href="add_2generic_2sve2_2qsymm16_8cpp_source.xhtml#l00037">arm_compute::cpu::add_qsymm16_sve2()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::add_same_neon()</a>, <a class="el" href="add_2generic_2sve_2impl_8cpp_source.xhtml#l00036">arm_compute::cpu::add_same_sve()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00178">arm_compute::cpu::add_sub_q8_neon_fixedpoint()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00382">arm_compute::cpu::add_sub_qasymm8_neon()</a>, <a class="el" href="add_2generic_2neon_2impl_8cpp_source.xhtml#l00565">arm_compute::cpu::add_sub_qasymm8_signed_neon()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00088">ICLKernel::add_tensor_argument()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00038">arm_compute::cpu::avg_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00141">arm_compute::cpu::bilinear_neon_scale()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00218">CLComparisonKernel::border_size()</a>, <a class="el" href="boundingboxtransform_2generic_2neon_2impl_8cpp_source.xhtml#l00087">arm_compute::cpu::bounding_box_transform()</a>, <a class="el" href="boundingboxtransform_2generic_2neon_2impl_8cpp_source.xhtml#l00029">arm_compute::cpu::bounding_box_transform_qsymm16()</a>, <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00042">CLAuxTensorHandler::CLAuxTensorHandler()</a>, <a class="el" href="_i_c_l_tensor_8cpp_source.xhtml#l00046">ICLTensor::clear()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00094">CLQLSTMLayer::CLQLSTMLayer()</a>, <a class="el" href="_c_l_sub_tensor_8cpp_source.xhtml#l00037">CLSubTensor::CLSubTensor()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00517">arm_compute::colorconvert_iyuv_to_rgb()</a>, <a class="el" href="_n_e_color_convert_helper_8inl_source.xhtml#l00455">arm_compute::colorconvert_nv12_to_rgb()</a>, <a class="el" href="utils_2_utils_8h_source.xhtml#l00786">arm_compute::utils::compare_tensor()</a>, <a class="el" href="genproposals_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::compute_all_anchors()</a>, <a class="el" href="genproposals_2generic_2neon_2impl_8cpp_source.xhtml#l00065">arm_compute::cpu::compute_all_anchors_qasymm16()</a>, <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00039">ClKernelRuntime::configure()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00393">CPPDetectionOutputLayer::configure()</a>, <a class="el" href="_i_c_l_simple_kernel_8cpp_source.xhtml#l00038">ICLSimpleKernel::configure()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00063">NEReverseKernel::configure()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00067">NETileKernel::configure()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00088">NEBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_prior_box_layer_kernel_8cpp_source.xhtml#l00200">NEPriorBoxLayerKernel::configure()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00077">NESpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00063">CLFillBorderKernel::configure()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00074">NEDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00141">NEChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00073">NEReorgLayerKernel::configure()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00099">CPPTopKVKernel::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00129">NEComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00135">NEInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00084">NEQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00093">NESpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00044">CPPUpsampleKernel::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00159">CLInstanceNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_bitwise_not_kernel_8cpp_source.xhtml#l00058">NEBitwiseNotKernel::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_kernel_8cpp_source.xhtml#l00080">CLMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_bitwise_kernel_8cpp_source.xhtml#l00043">CLBitwiseKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00076">NEFFTDigitReverseKernel::configure()</a>, <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00185">CpuScaleKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_scale_kernel_8cpp_source.xhtml#l00091">NEFFTScaleKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00072">CLReverseKernel::configure()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00071">CLSelectKernel::configure()</a>, <a class="el" href="_c_p_p_permute_kernel_8cpp_source.xhtml#l00102">CPPPermuteKernel::configure()</a>, <a class="el" href="_n_e_bitwise_and_kernel_8cpp_source.xhtml#l00063">NEBitwiseAndKernel::configure()</a>, <a class="el" href="_n_e_bitwise_or_kernel_8cpp_source.xhtml#l00059">NEBitwiseOrKernel::configure()</a>, <a class="el" href="_n_e_bitwise_xor_kernel_8cpp_source.xhtml#l00059">NEBitwiseXorKernel::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00108">CLChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_n_e_normalization_layer_kernel_8cpp_source.xhtml#l00072">NENormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_pad_layer_kernel_8cpp_source.xhtml#l00186">NEPadLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00076">CLDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00077">CLSpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_8cpp_source.xhtml#l00135">CPPBoxWithNonMaximaSuppressionLimit::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00094">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00076">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00146">NERangeKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00079">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00095">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00121">NEROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00346">CPPBoxWithNonMaximaSuppressionLimitKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00066">CLFFTScaleKernel::configure()</a>, <a class="el" href="_n_e_flatten_layer_8cpp_source.xhtml#l00049">NEFlattenLayer::configure()</a>, <a class="el" href="_n_e_reshape_layer_8cpp_source.xhtml#l00048">NEReshapeLayer::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00086">CLGatherKernel::configure()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00145">NEBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00140">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00088">CLQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00983">NEFFTRadixStageKernel::configure()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00136">NEMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00068">CLTileKernel::configure()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00092">NEStackLayerKernel::configure()</a>, <a class="el" href="_n_e_fill_8cpp_source.xhtml#l00047">NEFill::configure()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00096">NEFillBorderKernel::configure()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00112">CLComparisonKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00079">CLReorgLayerKernel::configure()</a>, <a class="el" href="_n_e_reduction_operation_kernel_8cpp_source.xhtml#l01748">NEReductionOperationKernel::configure()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00169">NESelectKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00081">CLFFTDigitReverseKernel::configure()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00218">CPPDetectionPostProcessLayer::configure()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00062">CPPNonMaximumSuppressionKernel::configure()</a>, <a class="el" href="_n_e_copy_8cpp_source.xhtml#l00048">NECopy::configure()</a>, <a class="el" href="_n_e_transpose_8cpp_source.xhtml#l00046">NETranspose::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00048">NELogicalAnd::configure()</a>, <a class="el" href="_n_e_quantization_layer_8cpp_source.xhtml#l00051">NEQuantizationLayer::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00070">CLMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00220">NEFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00040">CLComparison::configure()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00146">NEROIAlignLayerKernel::configure()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00314">NEBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00197">NECropKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00094">CLNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00079">CLRangeKernel::configure()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00170">NEGatherKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00086">CLReductionOperationKernel::configure()</a>, <a class="el" href="_n_e_dequantization_layer_8cpp_source.xhtml#l00046">NEDequantizationLayer::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00078">CLPadLayerKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00089">CLFFTRadixStageKernel::configure()</a>, <a class="el" href="_n_e_permute_8cpp_source.xhtml#l00045">NEPermute::configure()</a>, <a class="el" href="_n_e_slice_8cpp_source.xhtml#l00087">NESlice::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00110">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00057">CLReshapeLayer::configure()</a>, <a class="el" href="_n_e_f_f_t2_d_8cpp_source.xhtml#l00040">NEFFT2D::configure()</a>, <a class="el" href="_n_e_p_relu_layer_8cpp_source.xhtml#l00049">NEPReluLayer::configure()</a>, <a class="el" href="_n_e_reduce_mean_8cpp_source.xhtml#l00103">NEReduceMean::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00085">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_n_e_strided_slice_8cpp_source.xhtml#l00069">NEStridedSlice::configure()</a>, <a class="el" href="_n_e_unstack_8cpp_source.xhtml#l00063">NEUnstack::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00096">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00069">CLUnstack::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00050">NEElementwiseMax::configure()</a>, <a class="el" href="_n_e_r_n_n_layer_8cpp_source.xhtml#l00072">NERNNLayer::configure()</a>, <a class="el" href="_n_e_space_to_batch_layer_8cpp_source.xhtml#l00045">NESpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00054">CLRsqrtLayer::configure()</a>, <a class="el" href="_c_l_flatten_layer_8cpp_source.xhtml#l00057">CLFlattenLayer::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00179">CLDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="_n_e_pooling3d_layer_8cpp_source.xhtml#l00052">NEPooling3dLayer::configure()</a>, <a class="el" href="_n_e_softmax_layer_8cpp_source.xhtml#l00062">NESoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00079">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00087">CLStackLayerKernel::configure()</a>, <a class="el" href="_c_l_reduce_mean_8cpp_source.xhtml#l00114">CLReduceMean::configure()</a>, <a class="el" href="_n_e_max_unpooling_layer_8cpp_source.xhtml#l00051">NEMaxUnpoolingLayer::configure()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00059">NECropResize::configure()</a>, <a class="el" href="_n_e_scale_8cpp_source.xhtml#l00048">NEScale::configure()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00076">CLLogicalAnd::configure()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00076">CLLogicalOr::configure()</a>, <a class="el" href="_n_e_conv3_d_8cpp_source.xhtml#l00049">NEConv3D::configure()</a>, <a class="el" href="_n_e_f_f_t1_d_8cpp_source.xhtml#l00044">NEFFT1D::configure()</a>, <a class="el" href="_n_e_reduction_operation_8cpp_source.xhtml#l00105">NEReductionOperation::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00080">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_logical_not_8cpp_source.xhtml#l00053">CLLogicalNot::configure()</a>, <a class="el" href="_c_l_conv3_d_8cpp_source.xhtml#l00054">CLConv3D::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00090">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_n_e_g_e_m_m_8cpp_source.xhtml#l00064">NEGEMM::configure()</a>, <a class="el" href="_n_e_instance_normalization_layer_8cpp_source.xhtml#l00041">NEInstanceNormalizationLayer::configure()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00054">CLDequantizationLayer::configure()</a>, <a class="el" href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00042">NEDetectionPostProcessLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_output_stage_8cpp_source.xhtml#l00047">NEGEMMLowpOutputStage::configure()</a>, <a class="el" href="_n_e_normalization_layer_8cpp_source.xhtml#l00044">NENormalizationLayer::configure()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00125">CLDeconvolutionReshapeOutputKernel::configure()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00049">CLFFT2D::configure()</a>, <a class="el" href="_n_e_arithmetic_subtraction_8cpp_source.xhtml#l00054">NEArithmeticSubtraction::configure()</a>, <a class="el" href="_n_e_pooling_layer_8cpp_source.xhtml#l00053">NEPoolingLayer::configure()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00055">CLPReluLayer::configure()</a>, <a class="el" href="_n_e_add_mul_add_8cpp_source.xhtml#l00049">NEAddMulAdd::configure()</a>, <a class="el" href="_n_e_depthwise_convolution_layer_8cpp_source.xhtml#l00310">NEDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00082">CLRNNLayer::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00121">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00117">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00066">CLDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_8cpp_source.xhtml#l00055">CLDeconvolutionLayerUpsample::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00057">CLFFT1D::configure()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00066">CLFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_pooling3d_layer_8cpp_source.xhtml#l00052">CLPooling3dLayer::configure()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00173">NEPadLayer::configure()</a>, <a class="el" href="_c_l_pooling_layer_8cpp_source.xhtml#l00052">CLPoolingLayer::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_8cpp_source.xhtml#l00052">CLSpaceToBatchLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_scale_8cpp_source.xhtml#l00052">CLScale::configure()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00092">CLSlice::configure()</a>, <a class="el" href="_n_e_direct_convolution_layer_8cpp_source.xhtml#l00049">NEDirectConvolutionLayer::configure()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00051">CLQuantizationLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_conv2d_8cpp_source.xhtml#l00056">NEGEMMConv2d::configure()</a>, <a class="el" href="_n_e_winograd_convolution_layer_8cpp_source.xhtml#l00064">NEWinogradConvolutionLayer::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00072">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00068">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00045">CLPadLayer::configure()</a>, <a class="el" href="_c_l_indirect_convolution_layer_8cpp_source.xhtml#l00057">CLIndirectConvolutionLayer::configure()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00111">CLReductionOperation::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_8cpp_source.xhtml#l00068">CLGEMM::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00121">CLArgMinMaxLayer::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_8cpp_source.xhtml#l00060">CLDirectConvolutionLayer::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00053">NEPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00105">NEFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00057">NEGEMMConvolutionLayer::configure()</a>, <a class="el" href="_n_e_g_e_m_m_lowp_matrix_multiply_core_8cpp_source.xhtml#l00061">NEGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_n_e_generate_proposals_layer_8cpp_source.xhtml#l00071">NEGenerateProposalsLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00063">CLGEMMLowpOutputStage::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00057">CLPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00092">CLCropResize::configure()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00063">CLWinogradConvolutionLayer::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00060">NELSTMLayerQuantized::configure()</a>, <a class="el" href="_n_e_l_s_t_m_layer_8cpp_source.xhtml#l00057">NELSTMLayer::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00078">CLComputeMeanVariance::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00058">CLArithmeticAddition::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00070">CLComparisonStatic&lt; COP &gt;::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00071">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00113">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00157">NEDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00081">NELogicalOr::configure()</a>, <a class="el" href="_n_e_convolution_layer_8cpp_source.xhtml#l00062">NEConvolutionLayer::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00080">CLGenerateProposalsLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00077">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00224">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00121">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00063">NEFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00072">CLLSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00096">CLExpLayer::configure()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l00214">NEQLSTMLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00091">NEElementwiseMin::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00069">CLConvolutionLayer::configure()</a>, <a class="el" href="_n_e_pixel_wise_multiplication_8cpp_source.xhtml#l00091">NEComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00104">CLComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_n_e_logical_8cpp_source.xhtml#l00114">NELogicalNot::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00073">CLLSTMLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00172">CLQLSTMLayer::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00138">CLNegLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00132">NEElementwiseSquaredDiff::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00104">CLArithmeticSubtraction::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00179">CLSinLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00173">NEElementwiseDivision::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00261">CLLogLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00150">CLArithmeticDivision::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00214">NEElementwisePower::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00220">CLAbsLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00302">NEElementwiseComparison::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00195">CLElementwiseMax::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00302">CLRoundLayer::configure()</a>, <a class="el" href="_n_e_elementwise_operations_8cpp_source.xhtml#l00261">NEElementwiseComparisonStatic&lt; op &gt;::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00240">CLElementwiseMin::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00285">CLElementwiseSquaredDiff::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00330">CLElementwisePower::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00234">NECropKernel::configure_output_shape()</a>, <a class="el" href="directconv2d_2nchw_2all_8cpp_source.xhtml#l00062">arm_compute::cpu::kernels::convolve_nchw()</a>, <a class="el" href="directconv2d_2nhwc_2neon_2impl_8cpp_source.xhtml#l00057">arm_compute::cpu::kernels::convolve_nhwc()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="_cpu_aux_tensor_handler_8h_source.xhtml#l00042">CpuAuxTensorHandler::CpuAuxTensorHandler()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00104">Accessor::data_layout()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00109">Accessor::data_type()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00518">DetectionOutputAccessor::DetectionOutputAccessor()</a>, <a class="el" href="cpu_2kernels_2conv3d_2neon_2list_8h_source.xhtml#l00039">arm_compute::cpu::directconv3d_float_neon_ndhwc()</a>, <a class="el" href="conv3d_2neon_2quantized_8h_source.xhtml#l00040">arm_compute::cpu::directconv3d_quantized_neon_ndhwc()</a>, <a class="el" href="utils_2_utils_8cpp_source.xhtml#l00130">arm_compute::utils::draw_detection_rectangle()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00089">Accessor::element_size()</a>, <a class="el" href="elementwise__binary_2generic_2sve_2impl_8cpp_source.xhtml#l00036">arm_compute::cpu::elementwise_arithmetic_op()</a>, <a class="el" href="elementwise__binary_2generic_2sve2_2impl_8h_source.xhtml#l00104">arm_compute::cpu::elementwise_arithmetic_quantized_op()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00856">arm_compute::cpu::elementwise_comp_quantized_signed()</a>, <a class="el" href="elementwise__binary_2generic_2sve_2impl_8cpp_source.xhtml#l00141">arm_compute::cpu::elementwise_comparison_op()</a>, <a class="el" href="elementwise__binary_2generic_2sve2_2impl_8h_source.xhtml#l00235">arm_compute::cpu::elementwise_comparison_quantized_op()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00084">arm_compute::cpu::elementwise_op()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00748">arm_compute::cpu::elementwise_op_quantized()</a>, <a class="el" href="elementwise__binary_2generic_2neon_2impl_8h_source.xhtml#l00963">arm_compute::cpu::elementwise_op_quantized_signed()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00733">arm_compute::error_on_data_layout_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00779">arm_compute::error_on_data_type_channel_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00681">arm_compute::error_on_data_type_not_in()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00479">arm_compute::error_on_mismatching_data_layouts()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00530">arm_compute::error_on_mismatching_data_types()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00597">arm_compute::error_on_mismatching_quantization_info()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00427">arm_compute::error_on_mismatching_shapes()</a>, <a class="el" href="_validate_8cpp_source.xhtml#l00092">arm_compute::error_on_tensor_not_2d()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00104">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00087">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00820">arm_compute::error_on_unsupported_fp16()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00099">Accessor::format()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8cpp_source.xhtml#l00031">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2nchw_2all_8cpp_source.xhtml#l00032">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8cpp_source.xhtml#l00031">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="_validate_helpers_8h_source.xhtml#l00050">arm_compute::graph::backends::detail::get_backing_tensor_info()</a>, <a class="el" href="_i_tensor_v2_8cpp_source.xhtml#l00030">ITensorV2::get_size()</a>, <a class="el" href="crop_2generic_2neon_2impl_8cpp_source.xhtml#l00036">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="instancenorm_2generic_2neon_2impl_8cpp_source.xhtml#l00070">arm_compute::cpu::instance_normalization_nchw()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00095">Iterator::Iterator()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8cpp_source.xhtml#l00038">arm_compute::cpu::l2_normalize_x()</a>, <a class="el" href="l2normlayer_2generic_2neon_2impl_8cpp_source.xhtml#l00079">arm_compute::cpu::l2_normalize_yz()</a>, <a class="el" href="gemm__matrix__mul_2generic_2neon_2impl_8cpp_source.xhtml#l00462">arm_compute::cpu::matrix_matrix_multiply_f32()</a>, <a class="el" href="pool3d_2neon_2quantized_8h_source.xhtml#l00228">arm_compute::cpu::max_poolingMxNxD_q8_neon_ndhwc()</a>, <a class="el" href="maxunpool_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::max_unpooling()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2impl_8cpp_source.xhtml#l00033">arm_compute::cpu::mean_stddev_normalization()</a>, <a class="el" href="cpu_2kernels_2scale_2neon_2list_8h_source.xhtml#l00051">arm_compute::cpu::nearest_neon_scale()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00089">NEGatherKernel::NEGatherKernel()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qasymm8_activation()</a>, <a class="el" href="meanstddevnorm_2generic_2neon_2qasymm8_8cpp_source.xhtml#l00051">arm_compute::cpu::neon_qasymm8_meanstddevnorm()</a>, <a class="el" href="activation_2generic_2neon_2qasymm8__signed_8cpp_source.xhtml#l00038">arm_compute::cpu::neon_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2neon_2qsymm16_8cpp_source.xhtml#l00040">arm_compute::cpu::neon_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00268">arm_compute::cpu::neon_softmax_logits_1d_float()</a>, <a class="el" href="softmax_2generic_2neon_2impl_8cpp_source.xhtml#l00091">arm_compute::cpu::neon_softmax_logits_1d_quantized()</a>, <a class="el" href="_n_e_pad_layer_8cpp_source.xhtml#l00054">NEPadLayer::NEPadLayer()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00114">Accessor::num_channels()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00119">Accessor::num_elements()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00185">NumPyAccessor::NumPyAccessor()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00130">get_tensor_info_t&lt; ITensorInfo * &gt;::operator()()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00419">VerifyAccessor&lt; D &gt;::output_shape()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00124">Accessor::padding()</a>, <a class="el" href="cpu_2kernels_2pool2d_2neon_2fp32_8cpp_source.xhtml#l00146">arm_compute::cpu::poolingMxN_fp32_neon_nhwc()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00110">CpuDepthwiseConv2dAssemblyDispatch::prepare()</a>, <a class="el" href="_cpu_winograd_conv2d_8cpp_source.xhtml#l00374">CpuWinogradConv2d::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00256">CLDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00110">CaffePreproccessor::preprocess()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00069">TFPreproccessor::preprocess()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="scale_2neon_2qasymm8_8cpp_source.xhtml#l00310">arm_compute::cpu::qasymm8_neon_scale()</a>, <a class="el" href="scale_2neon_2qasymm8__signed_8cpp_source.xhtml#l00309">arm_compute::cpu::qasymm8_signed_neon_scale()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00129">Accessor::quantization_info()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00666">RandomAccessor::RandomAccessor()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00213">arm_compute::cpu::roi_align()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::roi_align_1x1()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00102">arm_compute::cpu::roi_align_1x1_qasymm8()</a>, <a class="el" href="_cpu_elementwise_8cpp_source.xhtml#l00033">CpuElementwiseBase::run()</a>, <a class="el" href="_cpu_elementwise_unary_8cpp_source.xhtml#l00048">CpuElementwiseUnary::run()</a>, <a class="el" href="_cpu_add_mul_add_8cpp_source.xhtml#l00088">CpuAddMulAdd::run()</a>, <a class="el" href="_c_p_p_upsample_kernel_8cpp_source.xhtml#l00063">CPPUpsampleKernel::run()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00449">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_n_e_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00150">NEROIPoolingLayerKernel::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00395">CPPBoxWithNonMaximaSuppressionLimitKernel::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_n_e_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00167">NEChannelShuffleLayerKernel::run()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00145">NEReverseKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_generate_proposals_layer_kernel_8cpp_source.xhtml#l00160">NEComputeAllAnchorsKernel::run()</a>, <a class="el" href="_n_e_instance_normalization_layer_kernel_8cpp_source.xhtml#l00162">NEInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00205">CLInstanceNormalizationLayerKernel::run()</a>, <a class="el" href="_n_e_reorg_layer_kernel_8cpp_source.xhtml#l00102">NEReorgLayerKernel::run()</a>, <a class="el" href="_c_p_p_top_k_v_kernel_8cpp_source.xhtml#l00129">CPPTopKVKernel::run()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00105">CLDeconvolutionLayerUpsampleKernel::run()</a>, <a class="el" href="_n_e_range_kernel_8cpp_source.xhtml#l00175">NERangeKernel::run()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00148">CLQLSTMLayerNormalizationKernel::run()</a>, <a class="el" href="_n_e_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00159">NEMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00172">CLComparisonKernel::run()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00136">CLROIPoolingLayerKernel::run()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00122">NEFillBorderKernel::run()</a>, <a class="el" href="_n_e_select_kernel_8cpp_source.xhtml#l00209">NESelectKernel::run()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00119">CLMeanStdDevNormalizationKernel::run()</a>, <a class="el" href="_n_e_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l01037">NEFFTRadixStageKernel::run()</a>, <a class="el" href="_n_e_bounding_box_transform_kernel_8cpp_source.xhtml#l00173">NEBoundingBoxTransformKernel::run()</a>, <a class="el" href="_n_e_stack_layer_kernel_8cpp_source.xhtml#l00116">NEStackLayerKernel::run()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00198">CLReductionOperationKernel::run()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00208">CLPriorBoxLayerKernel::run()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00288">CPPDetectionPostProcessLayer::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00176">NEROIAlignLayerKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00292">NECropKernel::run()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00377">NEBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00122">CLStackLayerKernel::run()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00155">CLArgMinMaxLayerKernel::run()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00358">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00153">CLROIAlignLayerKernel::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00666">ClGemm::run()</a>, <a class="el" href="_c_l_instance_normalization_layer_kernel_8cpp_source.xhtml#l00128">CLComputeMeanVariance::run()</a>, <a class="el" href="_cpu_gemm_conv2d_8cpp_source.xhtml#l00549">CpuGemmConv2d::run()</a>, <a class="el" href="depthwiseconv2d_2generic_2neon_2impl_8cpp_source.xhtml#l00771">arm_compute::cpu::run_depthwise_quanitized8bit()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00198">CPPBoxWithNonMaximaSuppressionLimitKernel::run_nmslimit()</a>, <a class="el" href="_cl_kernel_runtime_8cpp_source.xhtml#l00152">ClKernelRuntime::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00036">CpuWinogradConv2dTransformInputKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_kernel_8cpp_source.xhtml#l00351">CpuPool2dKernel::run_op()</a>, <a class="el" href="_cpu_gemm_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00397">CpuGemmLowpOffsetContributionKernel::run_op()</a>, <a class="el" href="_cpu_col2_im_kernel_8cpp_source.xhtml#l00086">CpuCol2ImKernel::run_op()</a>, <a class="el" href="_cpu_depthwise_conv2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00304">CpuDepthwiseConv2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00178">CpuCastKernel::run_op()</a>, <a class="el" href="_cpu_gemm_matrix_multiply_kernel_8cpp_source.xhtml#l00178">CpuGemmMatrixMultiplyKernel::run_op()</a>, <a class="el" href="_cpu_pool2d_assembly_wrapper_kernel_8cpp_source.xhtml#l00144">CpuPool2dAssemblyWrapperKernel::run_op()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00161">NEFillBorderKernel::run_op()</a>, <a class="el" href="_cpu_weights_reshape_kernel_8cpp_source.xhtml#l00105">CpuWeightsReshapeKernel::run_op()</a>, <a class="el" href="_cpu_winograd_conv2d_kernel_8cpp_source.xhtml#l00074">CpuWinogradConv2dTransformOutputKernel::run_op()</a>, <a class="el" href="_cpu_gemm_transpose1x_w_kernel_8cpp_source.xhtml#l00076">CpuGemmTranspose1xWKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00127">NEStridedSliceKernel::run_op()</a>, <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>, <a class="el" href="select_2generic_2neon_2impl_8cpp_source.xhtml#l00118">arm_compute::cpu::select_op_not_same_rank()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00084">Accessor::shape()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00094">Accessor::size()</a>, <a class="el" href="sub_2neon_2qsymm16_8cpp_source.xhtml#l00035">arm_compute::cpu::sub_qsymm16_neon()</a>, <a class="el" href="cpu_2kernels_2sub_2neon_2list_8h_source.xhtml#l00047">arm_compute::cpu::sub_same_neon()</a>, <a class="el" href="_sub_tensor_8cpp_source.xhtml#l00035">SubTensor::SubTensor()</a>, <a class="el" href="activation_2generic_2sve2_2qasymm8_8cpp_source.xhtml#l00039">arm_compute::cpu::sve2_qasymm8_activation()</a>, <a class="el" href="activation_2generic_2sve2_2qasymm8__signed_8cpp_source.xhtml#l00039">arm_compute::cpu::sve2_qasymm8_signed_activation()</a>, <a class="el" href="activation_2generic_2sve2_2qsymm16_8cpp_source.xhtml#l00040">arm_compute::cpu::sve2_qsymm16_activation()</a>, <a class="el" href="softmax_2generic_2sve2_2impl_8cpp_source.xhtml#l00034">arm_compute::cpu::sve2_softmax_logits_1d_quantized()</a>, <a class="el" href="softmax_2generic_2sve_2impl_8cpp_source.xhtml#l00073">arm_compute::cpu::sve_softmax_logits_1d_float()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l01375">arm_compute::to_string()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00589">TopNPredictionsAccessor::TopNPredictionsAccessor()</a>, <a class="el" href="_cpu_quantize_kernel_8cpp_source.xhtml#l00156">CpuQuantizeKernel::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00101">CpuGemmLowpMatrixAReductionKernel::validate()</a>, <a class="el" href="_n_e_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00136">NEFFTDigitReverseKernel::validate()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00048">CLReductionOperation::validate()</a>, <a class="el" href="_cpu_gemm_lowp_matrix_reduction_kernel_8cpp_source.xhtml#l00226">CpuGemmLowpMatrixBReductionKernel::validate()</a>, and <a class="el" href="gemm__matrix__mul_2generic_2neon_2impl_8cpp_source.xhtml#l00230">arm_compute::cpu::vector_matrix_multiply_f32()</a>.</p>

</div>
</div>
<a id="a7e6b5e55a2914b1fb1966310e7733ac4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e6b5e55a2914b1fb1966310e7733ac4">&#9670;&nbsp;</a></span>info() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* info </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interface to be implemented by the child class to return the tensor's metadata. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the tensor's metadata. </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1_c_l_sub_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">CLSubTensor</a>, <a class="el" href="classarm__compute_1_1_c_l_tensor.xhtml#a2edd900d6f8eb9a995be55adfffbede5">CLTensor</a>, <a class="el" href="classarm__compute_1_1_sub_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">SubTensor</a>, <a class="el" href="classarm__compute_1_1experimental_1_1_operator_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">OperatorTensor</a>, and <a class="el" href="classarm__compute_1_1_tensor.xhtml#af3913a3ffefed788b1fa3fb91407472a">Tensor</a>.</p>

</div>
</div>
<a id="a209ea2ddfdfa80703799c92da8beb643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a209ea2ddfdfa80703799c92da8beb643">&#9670;&nbsp;</a></span>is_used()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_used </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flags if the tensor is used or not. </p>
<dl class="section return"><dt>Returns</dt><dd>True if it is used else false </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00115">CLFullyConnectedLayer::prepare()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00256">CLDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00350">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00241">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00355">CLFFTConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00379">CLGEMMDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00217">CLDirectDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_fully_connected_layer_8cpp_source.xhtml#l00113">NEFullyConnectedLayer::prepare()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_n_e_tensor_handle_8cpp_source.xhtml#l00068">NETensorHandle::release_if_unused()</a>, and <a class="el" href="_c_l_tensor_handle_8cpp_source.xhtml#l00068">CLTensorHandle::release_if_unused()</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> _is_used;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9bc00234de9adf8c99a21eb1d7d494c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bc00234de9adf8c99a21eb1d7d494c2">&#9670;&nbsp;</a></span>mark_as_unused()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void mark_as_unused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marks a tensor as unused. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_depthwise_conv2d_assembly_dispatch_8cpp_source.xhtml#l00110">CpuDepthwiseConv2dAssemblyDispatch::prepare()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00453">ClFullyConnected::prepare()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00256">CLDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_cpu_fully_connected_8cpp_source.xhtml#l00492">CpuFullyConnected::prepare()</a>, <a class="el" href="_n_e_f_f_t_convolution_layer_8cpp_source.xhtml#l00350">NEFFTConvolutionLayer::prepare()</a>, <a class="el" href="_n_e_deconvolution_layer_8cpp_source.xhtml#l00241">NEDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00355">CLFFTConvolutionLayer::prepare()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00379">CLGEMMDeconvolutionLayer::prepare()</a>, <a class="el" href="_n_e_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00509">NELSTMLayerQuantized::prepare()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00217">CLDirectDeconvolutionLayer::prepare()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00542">CLLSTMLayerQuantized::prepare()</a>, <a class="el" href="_n_e_q_l_s_t_m_layer_8cpp_source.xhtml#l01210">NEQLSTMLayer::prepare()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l01109">CLQLSTMLayer::prepare()</a>, <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>, <a class="el" href="_i_weights_manager_8cpp_source.xhtml#l00155">IWeightsManager::release()</a>, and <a class="el" href="_i_weights_manager_8cpp_source.xhtml#l00056">IWeightsManager::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    _is_used = <span class="keyword">false</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0bac1e8a45b7823cbd4f74fe44f8c602"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bac1e8a45b7823cbd4f74fe44f8c602">&#9670;&nbsp;</a></span>mark_as_used()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void mark_as_used </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marks a tensor as used. </p>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    _is_used = <span class="keyword">true</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ade74189c92e70baa2848986c10dbe7ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade74189c92e70baa2848986c10dbe7ef">&#9670;&nbsp;</a></span>print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>&#160;</td>
          <td class="paramname"><em>io_fmt</em> = <code><a class="el" href="structarm__compute_1_1_i_o_format_info.xhtml">IOFormatInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print a tensor to a given stream using user defined formatting information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>Output stream </td></tr>
    <tr><td class="paramname">io_fmt</td><td>Format information </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00211">NumPyAccessor::access_tensor()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="_workload_8cpp_source.xhtml#l00041">arm_compute::graph::execute_task()</a>, <a class="el" href="neon__gemm__qasymm8_8cpp_source.xhtml#l00095">main()</a>, and <a class="el" href="_i_tensor_8h_source.xhtml#l00063">ITensor::ptr_to_element()</a>.</p>

</div>
</div>
<a id="adbd73147d41e8a640bc299d12613c31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbd73147d41e8a640bc299d12613c31e">&#9670;&nbsp;</a></span>ptr_to_element()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* ptr_to_element </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return a pointer to the element at the passed coordinates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td><a class="el" href="classarm__compute_1_1_coordinates.xhtml" title="Coordinates of an item. ">Coordinates</a> of the element</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the requested element </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_tensor_8h_source.xhtml#l00063">63</a> of file <a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">ITensor::buffer()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00035">ITensor::copy_from()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00163">ITensor::is_used()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00168">ITensor::mark_as_unused()</a>, <a class="el" href="_i_tensor_8cpp_source.xhtml#l00173">ITensor::mark_as_used()</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">ITensorInfo::offset_element_in_bytes()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#ade74189c92e70baa2848986c10dbe7ef">ITensor::print()</a>, and <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>.</p>

<p class="reference">Referenced by <a class="el" href="genproposals_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::compute_all_anchors()</a>, <a class="el" href="genproposals_2generic_2neon_2impl_8cpp_source.xhtml#l00065">arm_compute::cpu::compute_all_anchors_qasymm16()</a>, <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00185">CpuScaleKernel::configure()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00234">NECropKernel::configure_output_shape()</a>, <a class="el" href="_c_l_2_generate_proposals_layer_8cpp_source.xhtml#l00224">arm_compute::test::validation::DATA_TEST_CASE()</a>, <a class="el" href="fuse__batch__normalization_2generic_2impl_8cpp_source.xhtml#l00031">arm_compute::cpu::fused_batch_normalization_conv()</a>, <a class="el" href="fuse__batch__normalization_2nchw_2all_8cpp_source.xhtml#l00032">arm_compute::cpu::fused_batch_normalization_dwc_nchw()</a>, <a class="el" href="fuse__batch__normalization_2nhwc_2neon_2impl_8cpp_source.xhtml#l00031">arm_compute::cpu::fused_batch_normalization_dwc_nhwc()</a>, <a class="el" href="crop_2generic_2neon_2impl_8cpp_source.xhtml#l00036">arm_compute::cpu::in_bounds_crop_window()</a>, <a class="el" href="_n_e_gather_kernel_8cpp_source.xhtml#l00089">NEGatherKernel::NEGatherKernel()</a>, <a class="el" href="_accessor_8h_source.xhtml#l00144">Accessor::operator()()</a>, <a class="el" href="_c_l_accessor_8h_source.xhtml#l00164">CLAccessor::operator()()</a>, <a class="el" href="pool2d_2neon_2quantized_8h_source.xhtml#l00041">arm_compute::cpu::poolingMxN_q8_neon_nhwc()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00792">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00256">CLDepthwiseConvolutionLayer::prepare()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00110">CaffePreproccessor::preprocess()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00069">TFPreproccessor::preprocess()</a>, <a class="el" href="_graph_utils_8cpp_source.xhtml#l00666">RandomAccessor::RandomAccessor()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00213">arm_compute::cpu::roi_align()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00032">arm_compute::cpu::roi_align_1x1()</a>, <a class="el" href="roialign_2generic_2neon_2impl_8cpp_source.xhtml#l00102">arm_compute::cpu::roi_align_1x1_qasymm8()</a>, <a class="el" href="_c_p_p_detection_output_layer_8cpp_source.xhtml#l00449">CPPDetectionOutputLayer::run()</a>, <a class="el" href="_n_e_tile_kernel_8cpp_source.xhtml#l00092">NETileKernel::run()</a>, <a class="el" href="_n_e_space_to_depth_layer_kernel_8cpp_source.xhtml#l00102">NESpaceToDepthLayerKernel::run()</a>, <a class="el" href="_n_e_depth_to_space_layer_kernel_8cpp_source.xhtml#l00101">NEDepthToSpaceLayerKernel::run()</a>, <a class="el" href="_c_p_p_non_maximum_suppression_kernel_8cpp_source.xhtml#l00092">CPPNonMaximumSuppressionKernel::run()</a>, <a class="el" href="_c_p_p_detection_post_process_layer_8cpp_source.xhtml#l00288">CPPDetectionPostProcessLayer::run()</a>, <a class="el" href="_n_e_batch_to_space_layer_kernel_8cpp_source.xhtml#l00138">NEBatchToSpaceLayerKernel::run()</a>, <a class="el" href="_n_e_crop_kernel_8cpp_source.xhtml#l00292">NECropKernel::run()</a>, <a class="el" href="_n_e_space_to_batch_layer_kernel_8cpp_source.xhtml#l00143">NESpaceToBatchLayerKernel::run()</a>, <a class="el" href="_n_e_crop_resize_8cpp_source.xhtml#l00107">NECropResize::run()</a>, <a class="el" href="_c_p_p_box_with_non_maxima_suppression_limit_kernel_8cpp_source.xhtml#l00198">CPPBoxWithNonMaximaSuppressionLimitKernel::run_nmslimit()</a>, <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00161">NEFillBorderKernel::run_op()</a>, <a class="el" href="_n_e_strided_slice_kernel_8cpp_source.xhtml#l00127">NEStridedSliceKernel::run_op()</a>, and <a class="el" href="_n_e_reverse_kernel_8cpp_source.xhtml#l00088">arm_compute::run_reverse()</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">buffer</a>() + <a class="code" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">info</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">offset_element_in_bytes</a>(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_ac80aea0e8c7c5c812ea8c7221fbfd4b2"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#ac80aea0e8c7c5c812ea8c7221fbfd4b2">arm_compute::ITensorInfo::offset_element_in_bytes</a></div><div class="ttdeci">virtual int32_t offset_element_in_bytes(const Coordinates &amp;pos) const =0</div><div class="ttdoc">The offset in bytes from the beginning of the memory allocation to access the element at position (x...</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_ab988210662dbd3bf32fd563c7dd1bdbf"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#ab988210662dbd3bf32fd563c7dd1bdbf">arm_compute::ITensor::buffer</a></div><div class="ttdeci">virtual uint8_t * buffer() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return a pointer to CPU memory. ...</div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_xhtml_a0e95dc1e53c361348314873b168ae237"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">arm_compute::ITensor::info</a></div><div class="ttdeci">virtual ITensorInfo * info() const =0</div><div class="ttdoc">Interface to be implemented by the child class to return the tensor&amp;#39;s metadata. </div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/<a class="el" href="_i_tensor_8h_source.xhtml">ITensor.h</a></li>
<li>src/core/<a class="el" href="_i_tensor_8cpp_source.xhtml">ITensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
