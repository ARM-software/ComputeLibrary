<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/heuristics/indirect_conv/ClIndirectConvDefaultConfigValhall.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_indirect_conv_default_config_valhall_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClIndirectConvDefaultConfigValhall.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_indirect_conv_default_config_valhall_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022 Arm Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_indirect_conv_default_config_valhall_8h.xhtml">src/runtime/heuristics/indirect_conv/ClIndirectConvDefaultConfigValhall.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/core/CL/CLHelpers.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_g_p_u_target_8h.xhtml">arm_compute/core/GPUTarget.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_info_8h.xhtml">arm_compute/core/TensorInfo.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_shape_8h.xhtml">arm_compute/core/TensorShape.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_calculator_8h.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cl__indirect__conv.xhtml">   34</a></span>&#160;<span class="keyword">namespace </span>cl_indirect_conv</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a6caee910cbc5af96c6d82be1f8ccf011">   38</a></span>&#160;<a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a6caee910cbc5af96c6d82be1f8ccf011">ClIndirectConvDefaultConfigValhall::ClIndirectConvDefaultConfigValhall</a>(<a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a> gpu)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    : <a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_i_cl_indirect_conv_kernel_config.xhtml">IClIndirectConvKernelConfig</a>(gpu)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a521e9b207ed968e0c6bbc6a96a9d6c1e">   43</a></span>&#160;<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> <a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a521e9b207ed968e0c6bbc6a96a9d6c1e">ClIndirectConvDefaultConfigValhall::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">using</span> ConfigurationFunctionExecutorPtr = <a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> (<a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml">ClIndirectConvDefaultConfigValhall</a>::*)(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml">ClIndirectConvConfigArray&lt;ConfigurationFunctionExecutorPtr&gt;</a> configs_G77(&amp;ClIndirectConvDefaultConfigValhall::configure_G77_f32,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                                            &amp;ClIndirectConvDefaultConfigValhall::configure_G77_f16);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Important note: Indirect convolution should not be used when the kernel size is 1x1 (pointwise). The reason is because the indirect buffer makes</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// indirect convolution less efficient than direct convolution or gemm. For this reason, the heuristic of indirect convolution has not been tuned</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// for the pointwise convolution cases.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    ConfigurationFunctionExecutorPtr func = configs_G77.<a class="code" href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml#a5073c9e1c06647b1a00a9f127ff83d67">get_function</a>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(func == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Data type not supported for indirect convolution&quot;</span>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> (this-&gt;*func)(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, wei, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> ClIndirectConvDefaultConfigValhall::configure_G77_f32(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> desc;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>                  = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(*src, *wei, conv_info);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span>        export_weights_to_cl_image = <a class="code" href="namespacearm__compute.xhtml#aad1276bf6fb54ae42d709743edbe5a21">export_to_cl_image</a>(wei);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">const</span> int32_t stride_x     = conv_info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">stride</a>().first;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">const</span> int32_t stride_y     = conv_info.<a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">stride</a>().second;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">const</span> int32_t ofm          = dst_shape[0];</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">const</span> int32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>            = (dst_shape[1]/ stride_x) * (dst_shape[2] / stride_y);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ada2a5801780244eb981a561c134e27f9">export_weights_to_cl_image</a> = export_weights_to_cl_image;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span>(ofm &lt;= 4)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 1;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = 2;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 16;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="comment">// The 16000 threshold value has been identified as the right</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="comment">// one for using the biggest block size allowed on F32: 5x4x4</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span>(m &lt; 16000)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 4;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = 4;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 4;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 5;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = 4;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 4;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> desc;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> ClIndirectConvDefaultConfigValhall::configure_G77_f16(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *wei, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> &amp;conv_info)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">DirectConvComputeKernelInfo</a> desc;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span>(src-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">data_layout</a>() == <a class="code" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">DataLayout::NHWC</a>)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> wei_shape                  = wei-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">dst_shape</a>                  = <a class="code" href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">misc::shape_calculator::compute_deep_convolution_shape</a>(*src, *wei, conv_info);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span>        export_weights_to_cl_image = <a class="code" href="namespacearm__compute.xhtml#aad1276bf6fb54ae42d709743edbe5a21">export_to_cl_image</a>(wei);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">const</span> int32_t ofm          = dst_shape[0];</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">const</span> int32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">m</a>            = dst_shape[1] * dst_shape[2];</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keyword">const</span> int32_t <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">k</a>            = wei_shape[0];</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ada2a5801780244eb981a561c134e27f9">export_weights_to_cl_image</a> = export_weights_to_cl_image;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">if</span>(ofm &lt;= 4)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="comment">// k0 should be as larger as possible. However, we should avoid</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="comment">// having left-over for loops that make the implementation slower.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span>((k % 16) == 0)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 16;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span>((k % 8) == 0)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 8;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 4;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 1;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = ofm;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="comment">// The 16000 threshold value has been identified as the right</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="comment">// one for using the biggest block size allowed on F16: 8x4</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">if</span>(m &gt;= 16000 &amp;&amp; k &lt; 4)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 8;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = 4;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 4;    <span class="comment">// k0 is clamped to k inside the kernel when k is less than 4</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">m0</a> = 5;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">n0</a> = 4;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                desc.<a class="code" href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">k0</a> = 8;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> desc;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;} <span class="comment">// namespace cl_indirect_conv</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_af22d91f65b56b795fd28f3b302cd3ad2"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#af22d91f65b56b795fd28f3b302cd3ad2">arm_compute::test::validation::dst_shape</a></div><div class="ttdeci">TensorShape dst_shape</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00164">DFT.cpp:164</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">const auto conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_convolution_layer_8cpp_source.xhtml#l00407">ConvolutionLayer.cpp:407</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor. </div></div>
<div class="ttc" id="_cl_indirect_conv_default_config_valhall_8h_xhtml"><div class="ttname"><a href="_cl_indirect_conv_default_config_valhall_8h.xhtml">ClIndirectConvDefaultConfigValhall.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00040">ITensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_i_cl_indirect_conv_kernel_config_xhtml"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_i_cl_indirect_conv_kernel_config.xhtml">arm_compute::cl_indirect_conv::IClIndirectConvKernelConfig</a></div><div class="ttdoc">Basic interface for the indirect convolution kernel configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_i_cl_indirect_conv_kernel_config_8h_source.xhtml#l00081">IClIndirectConvKernelConfig.h:81</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_conv_compute_kernel_info_xhtml_ada2a5801780244eb981a561c134e27f9"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ada2a5801780244eb981a561c134e27f9">arm_compute::DirectConvComputeKernelInfo::export_weights_to_cl_image</a></div><div class="ttdeci">bool export_weights_to_cl_image</div><div class="ttdoc">Flag to export the weights to cl_image. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00119">KernelDescriptors.h:119</a></div></div>
<div class="ttc" id="core_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="core_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="_tensor_info_8h_xhtml"><div class="ttname"><a href="_tensor_info_8h.xhtml">TensorInfo.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited. </div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_conv_compute_kernel_info_xhtml_a0bea01fabfe061a06f08c8c5c7395516"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a0bea01fabfe061a06f08c8c5c7395516">arm_compute::DirectConvComputeKernelInfo::n0</a></div><div class="ttdeci">int32_t n0</div><div class="ttdoc">Number of columns to be processed by the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00117">KernelDescriptors.h:117</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_conv_compute_kernel_info_xhtml_ae707418e0c622a87064e14571ce30a72"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#ae707418e0c622a87064e14571ce30a72">arm_compute::DirectConvComputeKernelInfo::k0</a></div><div class="ttdeci">int32_t k0</div><div class="ttdoc">Number of partial accumulations to be processed in a single iteration by the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00118">KernelDescriptors.h:118</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array_xhtml"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml">arm_compute::cl_indirect_conv::ClIndirectConvConfigArray</a></div><div class="ttdoc">Basic container for the OpenCL indirect convolution configuration functions. </div><div class="ttdef"><b>Definition:</b> <a href="_i_cl_indirect_conv_kernel_config_8h_source.xhtml#l00038">IClIndirectConvKernelConfig.h:38</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml_a6e324c1bd1111876469ea247da156147"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml#a6e324c1bd1111876469ea247da156147">arm_compute::PadStrideInfo::stride</a></div><div class="ttdeci">std::pair&lt; unsigned int, unsigned int &gt; stride() const</div><div class="ttdoc">Get the stride. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00719">Types.h:719</a></div></div>
<div class="ttc" id="_shape_calculator_8h_xhtml"><div class="ttname"><a href="_shape_calculator_8h.xhtml">ShapeCalculator.h</a></div></div>
<div class="ttc" id="structarm__compute_1_1_direct_conv_compute_kernel_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml">arm_compute::DirectConvComputeKernelInfo</a></div><div class="ttdoc">Compute descriptor used by the direct convolution kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00114">KernelDescriptors.h:114</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00671">Types.h:671</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall_xhtml"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml">arm_compute::cl_indirect_conv::ClIndirectConvDefaultConfigValhall</a></div><div class="ttdoc">Valhall based OpenCL indirect convolution configuration. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_indirect_conv_default_config_valhall_8h_source.xhtml#l00034">ClIndirectConvDefaultConfigValhall.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a73aa59d7b088082ec257a1c65edbf1d0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a73aa59d7b088082ec257a1c65edbf1d0">arm_compute::test::validation::k</a></div><div class="ttdeci">const unsigned int k</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00361">GEMMMatrixMultiplyNative.cpp:361</a></div></div>
<div class="ttc" id="_g_p_u_target_8h_xhtml"><div class="ttname"><a href="_g_p_u_target_8h.xhtml">GPUTarget.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array_xhtml_a5073c9e1c06647b1a00a9f127ff83d67"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_config_array.xhtml#a5073c9e1c06647b1a00a9f127ff83d67">arm_compute::cl_indirect_conv::ClIndirectConvConfigArray::get_function</a></div><div class="ttdeci">T get_function(DataType data_type)</div><div class="ttdoc">Method to return the indirect convolution configuration function based on data type. </div><div class="ttdef"><b>Definition:</b> <a href="_i_cl_indirect_conv_kernel_config_8h_source.xhtml#l00063">IClIndirectConvKernelConfig.h:63</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets. </div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">arm_compute::DataLayout::NHWC</a></div><div class="ttdoc">Num samples, height, width, channels. </div></div>
<div class="ttc" id="structarm__compute_1_1_direct_conv_compute_kernel_info_xhtml_a7fc920d041b4123c404d143170e835f1"><div class="ttname"><a href="structarm__compute_1_1_direct_conv_compute_kernel_info.xhtml#a7fc920d041b4123c404d143170e835f1">arm_compute::DirectConvComputeKernelInfo::m0</a></div><div class="ttdeci">int32_t m0</div><div class="ttdoc">Number of rows to be processed by the kernel. </div><div class="ttdef"><b>Definition:</b> <a href="_kernel_descriptors_8h_source.xhtml#l00116">KernelDescriptors.h:116</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall_xhtml_a521e9b207ed968e0c6bbc6a96a9d6c1e"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a521e9b207ed968e0c6bbc6a96a9d6c1e">arm_compute::cl_indirect_conv::ClIndirectConvDefaultConfigValhall::configure</a></div><div class="ttdeci">DirectConvComputeKernelInfo configure(const ITensorInfo *src, const ITensorInfo *wei, const PadStrideInfo &amp;conv_info) override</div><div class="ttdoc">This method returns the DirectConvComputeKernelInfo for the given inputs. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_indirect_conv_default_config_valhall_8cpp_source.xhtml#l00043">ClIndirectConvDefaultConfigValhall.cpp:43</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml">arm_compute::misc::shape_calculator</a></div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00041">ShapeCalculator.h:41</a></div></div>
<div class="ttc" id="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall_xhtml_a6caee910cbc5af96c6d82be1f8ccf011"><div class="ttname"><a href="classarm__compute_1_1cl__indirect__conv_1_1_cl_indirect_conv_default_config_valhall.xhtml#a6caee910cbc5af96c6d82be1f8ccf011">arm_compute::cl_indirect_conv::ClIndirectConvDefaultConfigValhall::ClIndirectConvDefaultConfigValhall</a></div><div class="ttdeci">ClIndirectConvDefaultConfigValhall(GPUTarget gpu)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_indirect_conv_default_config_valhall_8cpp_source.xhtml#l00038">ClIndirectConvDefaultConfigValhall.cpp:38</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_aad1276bf6fb54ae42d709743edbe5a21"><div class="ttname"><a href="namespacearm__compute.xhtml#aad1276bf6fb54ae42d709743edbe5a21">arm_compute::export_to_cl_image</a></div><div class="ttdeci">bool export_to_cl_image(const ITensorInfo *tensor)</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00444">CLHelpers.cpp:444</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a545be126d77ec11a9824249de111def9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a545be126d77ec11a9824249de111def9">arm_compute::test::validation::m</a></div><div class="ttdeci">const unsigned int m</div><div class="ttdef"><b>Definition:</b> <a href="_g_e_m_m_matrix_multiply_native_8cpp_source.xhtml#l00359">GEMMMatrixMultiplyNative.cpp:359</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1misc_1_1shape__calculator_xhtml_ac93cc76b563b366f030b8310a46046c3"><div class="ttname"><a href="namespacearm__compute_1_1misc_1_1shape__calculator.xhtml#ac93cc76b563b366f030b8310a46046c3">arm_compute::misc::shape_calculator::compute_deep_convolution_shape</a></div><div class="ttdeci">TensorShape compute_deep_convolution_shape(const TensorShape &amp;input_shape, DataLayout input_data_layout, const TensorShape &amp;weights_shape, const PadStrideInfo &amp;conv_info)</div><div class="ttdoc">Calculate the deep convolution shape output shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_shape_calculator_8h_source.xhtml#l00713">ShapeCalculator.h:713</a></div></div>
<div class="ttc" id="_tensor_shape_8h_xhtml"><div class="ttname"><a href="_tensor_shape_8h.xhtml">TensorShape.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_tensor_info_xhtml_a367b5090ab432bc7de2c32369e087ab1"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1">arm_compute::ITensorInfo::data_layout</a></div><div class="ttdeci">virtual DataLayout data_layout() const =0</div><div class="ttdoc">Get the data layout of the tensor. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_3fe890f1593b95fd486bc879bbb074a9.xhtml">heuristics</a></li><li class="navelem"><a class="el" href="dir_add9b9f075221f89da3d954275376ce7.xhtml">indirect_conv</a></li><li class="navelem"><a class="el" href="_cl_indirect_conv_default_config_valhall_8cpp.xhtml">ClIndirectConvDefaultConfigValhall.cpp</a></li>
    <li class="footer">Generated on Thu Feb 16 2023 15:45:44 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
