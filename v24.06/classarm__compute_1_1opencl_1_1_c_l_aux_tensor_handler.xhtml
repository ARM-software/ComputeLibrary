<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLAuxTensorHandler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLAuxTensorHandler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> handler to wrap and handle tensor allocations on workspace buffers.  
 <a href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a41d8ebee4a6727701cd51868443066d0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#a41d8ebee4a6727701cd51868443066d0">CLAuxTensorHandler</a> (int slot_id, <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;info, <a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;pack, bool pack_inject=false, bool bypass_alloc=false, bool bypass_import=false)</td></tr>
<tr class="memdesc:a41d8ebee4a6727701cd51868443066d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a temporary tensor handle, by either important an existing tensor from a tensor pack, or allocating a new one.  <a href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#a41d8ebee4a6727701cd51868443066d0">More...</a><br /></td></tr>
<tr class="separator:a41d8ebee4a6727701cd51868443066d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabd0e893fb9c69401dda57264445c66d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#aabd0e893fb9c69401dda57264445c66d">CLAuxTensorHandler</a> (<a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;info, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, bool bypass_import=false)</td></tr>
<tr class="memdesc:aabd0e893fb9c69401dda57264445c66d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a temporary handle to the original tensor with a new <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> This is useful if we want to change a tensor's tensor info at run time without modifying the original tensor.  <a href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#aabd0e893fb9c69401dda57264445c66d">More...</a><br /></td></tr>
<tr class="separator:aabd0e893fb9c69401dda57264445c66d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a927e0811733a69003718f90929bf5417"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#a927e0811733a69003718f90929bf5417">CLAuxTensorHandler</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> &amp;)=delete</td></tr>
<tr class="separator:a927e0811733a69003718f90929bf5417"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9397e1feafa0525251d90fe7e2bef5aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#a9397e1feafa0525251d90fe7e2bef5aa">operator=</a> (const <a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a>)=delete</td></tr>
<tr class="separator:a9397e1feafa0525251d90fe7e2bef5aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12421ec66053d3454cfb69b8e602f0dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#a12421ec66053d3454cfb69b8e602f0dc">~CLAuxTensorHandler</a> ()</td></tr>
<tr class="separator:a12421ec66053d3454cfb69b8e602f0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af34f1529f3b4b4e5517b36cd84447b23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#af34f1529f3b4b4e5517b36cd84447b23">get</a> ()</td></tr>
<tr class="separator:af34f1529f3b4b4e5517b36cd84447b23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae33c134542c4159ea636c4723c9772eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml#ae33c134542c4159ea636c4723c9772eb">operator()</a> ()</td></tr>
<tr class="separator:ae33c134542c4159ea636c4723c9772eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> handler to wrap and handle tensor allocations on workspace buffers. </p>
<dl class="section note"><dt>Note</dt><dd>About memory handling using bypass_* flags See <a class="el" href="classarm__compute_1_1cpu_1_1_cpu_aux_tensor_handler.xhtml">arm_compute::cpu::CpuAuxTensorHandler</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a41d8ebee4a6727701cd51868443066d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41d8ebee4a6727701cd51868443066d0">&#9670;&nbsp;</a></span>CLAuxTensorHandler() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>slot_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>pack</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pack_inject</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bypass_alloc</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bypass_import</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a temporary tensor handle, by either important an existing tensor from a tensor pack, or allocating a new one. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">slot_id</td><td>Slot id of the tensor to be retrieved in the tensor pack If no such tensor exists in the tensor pack, a new tensor will be allocated. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> info containing requested size of the new tensor. If requested size is larger than the tensor retrieved from the tensor pack, a new tensor will be allocated. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pack</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> pack to retrieve the old tensor. When <code>pack_inject</code> is true, the new tensor will also be added here. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pack_inject</td><td>In case of a newly allocated tensor, whether to add this tensor back to the <code>pack</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bypass_alloc</td><td>Bypass allocation in case of a new tensor This is to prevent unnecessary memory operations when the handler object is not used </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bypass_import</td><td>Bypass importation in case of a retrieved tensor This is to prevent unnecessary memory operations when the handler object is not used </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00065">65</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        : _tensor()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.total_size() == 0)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a7e551033018a2665355bbb757ed32e9a">soft_init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        ICLTensor *packed_tensor = utils::cast::polymorphic_downcast&lt;ICLTensor *&gt;(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(slot_id));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> ((packed_tensor == <span class="keyword">nullptr</span>) || (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.total_size() &gt; packed_tensor-&gt;info()-&gt;total_size()))</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">if</span> (!bypass_alloc)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">allocate</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <a class="code" href="src_2common_2utils_2_log_8h.xhtml#a9711076575f7df473c6e0214334687f3">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a>(<span class="stringliteral">&quot;Allocating auxiliary tensor&quot;</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span> (pack_inject)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">add_tensor</a>(slot_id, &amp;_tensor);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                _injected_tensor_pack = &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">pack</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                _injected_slot_id     = slot_id;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">if</span> (!bypass_import)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#aee45c9a6939cadf66a6e7d998c6f59df">import_memory</a>(packed_tensor-&gt;cl_buffer());</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00038">ITensorPack::add_tensor()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator::allocate()</a>, <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00034">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a>, <a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml#a1fb4c50755a0ef424652246838ed91a6">ICLTensor::cl_buffer()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack::get_tensor()</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00171">CLTensorAllocator::import_memory()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">arm_compute::test::validation::pack</a>, <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00040">ITensorAllocator::soft_init()</a>, and <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a18064e0011c3869d884653e9e7c47b66">ITensorInfo::total_size()</a>.</p>

</div>
</div>
<a id="aabd0e893fb9c69401dda57264445c66d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabd0e893fb9c69401dda57264445c66d">&#9670;&nbsp;</a></span>CLAuxTensorHandler() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bypass_import</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a temporary handle to the original tensor with a new <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> This is useful if we want to change a tensor's tensor info at run time without modifying the original tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>New tensor info to "assign" to <code>tensor</code> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> to be assigned a new <a class="el" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bypass_import</td><td>Bypass importing <code>tensor's</code> memory into the handler. This is to prevent unnecessary memory operations when the handler object is not used </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00112">112</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                                                        : _tensor()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_allocator.xhtml#a7e551033018a2665355bbb757ed32e9a">soft_init</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">if</span> (!bypass_import)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.total_size() &lt;= <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.info()-&gt;total_size())</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                _tensor.<a class="code" href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">allocator</a>()-&gt;<a class="code" href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#aee45c9a6939cadf66a6e7d998c6f59df">import_memory</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.cl_buffer());</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor::allocator()</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="_c_l_tensor_allocator_8cpp_source.xhtml#l00171">CLTensorAllocator::import_memory()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="_i_tensor_allocator_8cpp_source.xhtml#l00040">ITensorAllocator::soft_init()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor</a>.</p>

</div>
</div>
<a id="a927e0811733a69003718f90929bf5417"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a927e0811733a69003718f90929bf5417">&#9670;&nbsp;</a></span>CLAuxTensorHandler() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a12421ec66053d3454cfb69b8e602f0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12421ec66053d3454cfb69b8e602f0dc">&#9670;&nbsp;</a></span>~CLAuxTensorHandler()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">if</span> (_injected_tensor_pack)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            _injected_tensor_pack-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a2475b3be2ed6a5ef5654491aa6b7ca48">remove_tensor</a>(_injected_slot_id);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00069">ITensorPack::remove_tensor()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af34f1529f3b4b4e5517b36cd84447b23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af34f1529f3b4b4e5517b36cd84447b23">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00136">136</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">return</span> &amp;_tensor;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00634">ClFullyConnected::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00877">ClGemmLowpMatrixMultiplyCore::prepare()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00894">ClGemm::prepare()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00296">ClWinogradConv2d::prepare()</a>, <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00639">ClGemmConv2d::prepare()</a>, <a class="el" href="_cl_softmax_8cpp_source.xhtml#l00069">ClSoftmax::run()</a>, <a class="el" href="_cl_indirect_conv2d_8cpp_source.xhtml#l00121">ClIndirectConv2d::run()</a>, <a class="el" href="_cl_fully_connected_8cpp_source.xhtml#l00579">ClFullyConnected::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00759">ClGemmLowpMatrixMultiplyCore::run()</a>, <a class="el" href="gpu_2cl_2operators_2_cl_gemm_8cpp_source.xhtml#l00786">ClGemm::run()</a>, <a class="el" href="_cl_winograd_conv2d_8cpp_source.xhtml#l00257">ClWinogradConv2d::run()</a>, and <a class="el" href="_cl_gemm_conv2d_8cpp_source.xhtml#l00579">ClGemmConv2d::run()</a>.</p>

</div>
</div>
<a id="ae33c134542c4159ea636c4723c9772eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae33c134542c4159ea636c4723c9772eb">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>* operator() </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml#l00141">141</a> of file <a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">return</span> &amp;_tensor;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9397e1feafa0525251d90fe7e2bef5aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9397e1feafa0525251d90fe7e2bef5aa">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const&#160;</td>
          <td class="paramname"><em>CLAuxTensorHandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gpu/cl/utils/<a class="el" href="_cl_aux_tensor_handler_8h_source.xhtml">ClAuxTensorHandler.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_a9711076575f7df473c6e0214334687f3"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#a9711076575f7df473c6e0214334687f3">ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_INFO_WITH_FUNCNAME_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00034">Log.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a2475b3be2ed6a5ef5654491aa6b7ca48"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a2475b3be2ed6a5ef5654491aa6b7ca48">arm_compute::ITensorPack::remove_tensor</a></div><div class="ttdeci">void remove_tensor(int id)</div><div class="ttdoc">Remove the tensor stored with the given id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00069">ITensorPack.cpp:69</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a6d8078b635739e84400cf8240a2993e7"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a6d8078b635739e84400cf8240a2993e7">arm_compute::ITensorPack::add_tensor</a></div><div class="ttdeci">void add_tensor(int id, ITensor *tensor)</div><div class="ttdoc">Add tensor to the pack.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00038">ITensorPack.cpp:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_allocator_xhtml_a7e551033018a2665355bbb757ed32e9a"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_allocator.xhtml#a7e551033018a2665355bbb757ed32e9a">arm_compute::ITensorAllocator::soft_init</a></div><div class="ttdeci">void soft_init(TensorInfo &amp;input, size_t alignment=0)</div><div class="ttdoc">Initialize a tensor based with a reference TensorInfo.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_allocator_8cpp_source.xhtml#l00040">ITensorAllocator.cpp:40</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_aee45c9a6939cadf66a6e7d998c6f59df"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#aee45c9a6939cadf66a6e7d998c6f59df">arm_compute::CLTensorAllocator::import_memory</a></div><div class="ttdeci">Status import_memory(cl::Buffer buffer)</div><div class="ttdoc">Import an existing memory as a tensor's backing memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00171">CLTensorAllocator.cpp:171</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_allocator_xhtml_a6e509c2a177b0b29e9e2369535094dee"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor_allocator.xhtml#a6e509c2a177b0b29e9e2369535094dee">arm_compute::CLTensorAllocator::allocate</a></div><div class="ttdeci">void allocate() override</div><div class="ttdoc">Allocate size specified by TensorInfo of OpenCL memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tensor_allocator_8cpp_source.xhtml#l00131">CLTensorAllocator.cpp:131</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1e041dc03ff256dfc8b0bf5c5fe099e0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e041dc03ff256dfc8b0bf5c5fe099e0">arm_compute::test::validation::pack</a></div><div class="ttdeci">ITensorPack pack</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00188">Im2Col.cpp:188</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tensor_xhtml_a4083de30daebd6bdee6b35d9c8262108"><div class="ttname"><a href="classarm__compute_1_1_c_l_tensor.xhtml#a4083de30daebd6bdee6b35d9c8262108">arm_compute::CLTensor::allocator</a></div><div class="ttdeci">CLTensorAllocator * allocator()</div><div class="ttdoc">Return a pointer to the tensor's allocator.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_cl_tensor_8cpp_source.xhtml#l00061">CLTensor.cpp:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1opencl.xhtml">opencl</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1opencl_1_1_c_l_aux_tensor_handler.xhtml">CLAuxTensorHandler</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
