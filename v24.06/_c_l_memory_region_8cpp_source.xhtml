<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/CL/CLMemoryRegion.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_memory_region_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLMemoryRegion.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_memory_region_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_memory_region_8h.xhtml">arm_compute/runtime/CL/CLMemoryRegion.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">   33</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion::ICLMemoryRegion</a>(<span class="keywordtype">size_t</span> size)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a>(size), _ctx(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml">CLScheduler</a>::get().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>()), _mapping(nullptr), _mem()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">   38</a></span>&#160;<span class="keyword">const</span> cl::Buffer &amp;<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">ICLMemoryRegion::cl_data</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> _mem;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">   43</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">ICLMemoryRegion::buffer</a>()</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">ICLMemoryRegion::buffer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">   53</a></span>&#160;std::unique_ptr&lt;IMemoryRegion&gt; <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">ICLMemoryRegion::extract_subregion</a>(<span class="keywordtype">size_t</span> <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, <span class="keywordtype">size_t</span> size)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">   59</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">CLBufferMemoryRegion::CLBufferMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> size) : <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a>(size)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (_size != 0)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        _mem = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>(), flags, _size);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a2f7c7937af50d414b7aa85c97f188fdf">   67</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">CLBufferMemoryRegion::CLBufferMemoryRegion</a>(<span class="keyword">const</span> cl::Buffer &amp;buffer) : <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a>(buffer.getInfo&lt;CL_MEM_SIZE&gt;())</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    _mem = <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">   72</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">CLBufferMemoryRegion::~CLBufferMemoryRegion</a>()</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Flush the command queue to ensure all commands that may use this memory buffer are scheduled to be finished before</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// this buffer is freed</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Do not call finish as it is a blocking call which affects the performance</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().flush();</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception &amp;e)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(e.what());</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">   87</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">CLBufferMemoryRegion::ptr</a>()</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">   92</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">CLBufferMemoryRegion::map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mem.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _mapping = q.enqueueMapBuffer(_mem, blocking ? CL_TRUE : CL_FALSE, CL_MAP_READ | CL_MAP_WRITE, 0, _size);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">   99</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">CLBufferMemoryRegion::unmap</a>(cl::CommandQueue &amp;q)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mem.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    q.enqueueUnmapMemObject(_mem, _mapping);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;ICLSVMMemoryRegion::ICLSVMMemoryRegion(cl_mem_flags flags, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a>(size), _ptr(nullptr)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> != 0)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        _ptr = <a class="code" href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>().get(), flags, <a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>, alignment);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">if</span> (_ptr != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            _mem = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>(), CL_MEM_READ_WRITE | CL_MEM_USE_HOST_PTR, _size, _ptr);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;ICLSVMMemoryRegion::~ICLSVMMemoryRegion()</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span> (_ptr != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="comment">// Can only use the blocking finish instead of the non-blocking flush here, because clSVMFree requires all</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="comment">// commands that may use the svm pointer to finish beforehand</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="comment">// https://registry.khronos.org/OpenCL/sdk/3.0/docs/man/html/clSVMFree.html</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <a class="code" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a>(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().queue().get());</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            _mem = cl::Buffer();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <a class="code" href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a>(_ctx.get(), _ptr);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">catch</span> (...)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">void</span> *ICLSVMMemoryRegion::ptr()</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> _ptr;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a87b20fb80c64fce743137a9c24b81e87">  143</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a87b20fb80c64fce743137a9c24b81e87">CLCoarseSVMMemoryRegion::CLCoarseSVMMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>(flags, size, alignment)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">  148</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">CLCoarseSVMMemoryRegion::map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_ptr == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a>(q.get(), blocking ? CL_TRUE : CL_FALSE, CL_MAP_READ | CL_MAP_WRITE, _ptr, _size, 0, <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    _mapping = _ptr;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">  157</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">CLCoarseSVMMemoryRegion::unmap</a>(cl::CommandQueue &amp;q)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_ptr == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a>(q.get(), _ptr, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a322777fe48f83f5eeb8083499a578aaa">  164</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a322777fe48f83f5eeb8083499a578aaa">CLFineSVMMemoryRegion::CLFineSVMMemoryRegion</a>(cl_mem_flags flags, <span class="keywordtype">size_t</span> size, <span class="keywordtype">size_t</span> alignment)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    : <a class="code" href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">ICLSVMMemoryRegion</a>(flags, size, alignment)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">  169</a></span>&#160;<span class="keywordtype">void</span> *<a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">CLFineSVMMemoryRegion::map</a>(cl::CommandQueue &amp;q, <span class="keywordtype">bool</span> blocking)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">if</span> (blocking)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <a class="code" href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a>(q.get());</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    _mapping = _ptr;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">  179</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">CLFineSVMMemoryRegion::unmap</a>(cl::CommandQueue &amp;q)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(q);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00072">IMemoryRegion.h:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml">arm_compute::IMemoryRegion</a></div><div class="ttdoc">Memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00033">IMemoryRegion.h:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLCoarseSVMMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00157">CLMemoryRegion.cpp:157</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml">arm_compute::CLScheduler</a></div><div class="ttdoc">Provides global access to a CL context and command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8h_source.xhtml#l00043">CLScheduler.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLFineSVMMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00179">CLMemoryRegion.cpp:179</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_ac7e247b94ceae35db2a172961ab83df9"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">arm_compute::ICLMemoryRegion::cl_data</a></div><div class="ttdeci">const cl::Buffer &amp; cl_data() const</div><div class="ttdoc">Returns the underlying CL buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00038">CLMemoryRegion.cpp:38</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a66cc3ae002a3eb6b7c70291ba3eac1b5"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a66cc3ae002a3eb6b7c70291ba3eac1b5">clEnqueueSVMMap</a></div><div class="ttdeci">cl_int clEnqueueSVMMap(cl_command_queue command_queue, cl_bool blocking_map, cl_map_flags flags, void *svm_ptr, size_t size, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00288">OpenCL.cpp:288</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1412ab782ad4055d71dc9c5a7c4c11e4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1412ab782ad4055d71dc9c5a7c4c11e4">clSVMFree</a></div><div class="ttdeci">void clSVMFree(cl_context context, void *svm_pointer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00341">OpenCL.cpp:341</a></div></div>
<div class="ttc" id="a_c_l_memory_region_8h_xhtml"><div class="ttname"><a href="_c_l_memory_region_8h.xhtml">CLMemoryRegion.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">arm_compute::CLBufferMemoryRegion::CLBufferMemoryRegion</a></div><div class="ttdeci">CLBufferMemoryRegion(cl_mem_flags flags, size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00059">CLMemoryRegion.cpp:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLFineSVMMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00169">CLMemoryRegion.cpp:169</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a14c7c495a1add2aec81bc886462efe89"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">arm_compute::CLBufferMemoryRegion::unmap</a></div><div class="ttdeci">void unmap(cl::CommandQueue &amp;q) final</div><div class="ttdoc">Enqueue an unmap operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00099">CLMemoryRegion.cpp:99</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLCoarseSVMMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00148">CLMemoryRegion.cpp:148</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ac78e93d371eecbe98f00bdf965c98ed6"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ac78e93d371eecbe98f00bdf965c98ed6">clFinish</a></div><div class="ttdeci">cl_int clFinish(cl_command_queue command_queue)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00771">OpenCL.cpp:771</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml">arm_compute::ICLMemoryRegion</a></div><div class="ttdoc">OpenCL memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00035">CLMemoryRegion.h:35</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_af15c1cf404e8af8057e176c967080fd4"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#af15c1cf404e8af8057e176c967080fd4">clEnqueueSVMUnmap</a></div><div class="ttdeci">cl_int clEnqueueSVMUnmap(cl_command_queue command_queue, void *svm_ptr, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00309">OpenCL.cpp:309</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a3f3b491b813e283ae79a756cb7ae84bd"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a3f3b491b813e283ae79a756cb7ae84bd">clSVMAlloc</a></div><div class="ttdeci">void * clSVMAlloc(cl_context context, cl_svm_mem_flags_arm flags, size_t size, cl_uint alignment)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00327">OpenCL.cpp:327</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a95a318ceefc8e9ec4057343e31fc29e9"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">arm_compute::CLBufferMemoryRegion::~CLBufferMemoryRegion</a></div><div class="ttdeci">virtual ~CLBufferMemoryRegion() override</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00072">CLMemoryRegion.cpp:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a0a9140a4eab3cacf1ccd4f0ea82d51a7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">arm_compute::ICLMemoryRegion::ICLMemoryRegion</a></div><div class="ttdeci">ICLMemoryRegion(size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00033">CLMemoryRegion.cpp:33</a></div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_coarse_s_v_m_memory_region_xhtml_a87b20fb80c64fce743137a9c24b81e87"><div class="ttname"><a href="classarm__compute_1_1_c_l_coarse_s_v_m_memory_region.xhtml#a87b20fb80c64fce743137a9c24b81e87">arm_compute::CLCoarseSVMMemoryRegion::CLCoarseSVMMemoryRegion</a></div><div class="ttdeci">CLCoarseSVMMemoryRegion(cl_mem_flags flags, size_t size, size_t alignment)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00143">CLMemoryRegion.cpp:143</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00151">Error.h:151</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_s_v_m_memory_region_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_s_v_m_memory_region.xhtml">arm_compute::ICLSVMMemoryRegion</a></div><div class="ttdoc">OpenCL SVM memory region interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8h_source.xhtml#l00117">CLMemoryRegion.h:117</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a518b9e7c59ddb616c098499d7c50f378"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">arm_compute::CLBufferMemoryRegion::map</a></div><div class="ttdeci">void * map(cl::CommandQueue &amp;q, bool blocking) final</div><div class="ttdoc">Enqueue a map operation of the allocated buffer on the given queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00092">CLMemoryRegion.cpp:92</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a000cbaa76e2cb0ae0aeee0b95b6470b7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">arm_compute::ICLMemoryRegion::extract_subregion</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryRegion &gt; extract_subregion(size_t offset, size_t size) override</div><div class="ttdoc">Extract a sub-region from the memory.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00053">CLMemoryRegion.cpp:53</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_fine_s_v_m_memory_region_xhtml_a322777fe48f83f5eeb8083499a578aaa"><div class="ttname"><a href="classarm__compute_1_1_c_l_fine_s_v_m_memory_region.xhtml#a322777fe48f83f5eeb8083499a578aaa">arm_compute::CLFineSVMMemoryRegion::CLFineSVMMemoryRegion</a></div><div class="ttdeci">CLFineSVMMemoryRegion(cl_mem_flags flags, size_t size, size_t alignment)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00164">CLMemoryRegion.cpp:164</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a490c935b104197bbd29bd1f917f1ed47"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">arm_compute::ICLMemoryRegion::buffer</a></div><div class="ttdeci">void * buffer() override</div><div class="ttdoc">Returns the pointer to the allocated data.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00043">CLMemoryRegion.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_buffer_memory_region_xhtml_a567fad71aedc47306dbf7b0c020257d8"><div class="ttname"><a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">arm_compute::CLBufferMemoryRegion::ptr</a></div><div class="ttdeci">void * ptr() final</div><div class="ttdoc">Host/SVM pointer accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00087">CLMemoryRegion.cpp:87</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_43c3fdbf778d1fd99e2e38f09fddd920.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_memory_region_8cpp.xhtml">CLMemoryRegion.cpp</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:22 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
