<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/CLMutableCommandBuffer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_c_l_mutable_command_buffer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLMutableCommandBuffer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_mutable_command_buffer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_mutable_command_buffer_8h.xhtml">src/core/CL/CLMutableCommandBuffer.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_log_8h.xhtml">src/common/utils/Log.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_utils_8h.xhtml">src/core/CL/CLUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a43cf22ad4e0358981630f536f6c58599">   35</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a43cf22ad4e0358981630f536f6c58599">CLMutableCommandBuffer::CLMutableCommandBuffer</a>(cl_command_queue queue) : <a class="code" href="classarm__compute_1_1_c_l_command_buffer.xhtml">CLCommandBuffer</a>()</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    cl_int status = CL_SUCCESS;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    cl_command_buffer_properties_khr properties[] = {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        CL_COMMAND_BUFFER_FLAGS_KHR,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        CL_COMMAND_BUFFER_MUTABLE_KHR,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        0,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    };</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    _cb = <a class="code" href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a>(1, &amp;queue, properties, &amp;status);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clCreateCommandBufferKHR&quot;</span>, status);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a5552826c0c8b979b71d350cb67209721">   49</a></span>&#160;<a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a5552826c0c8b979b71d350cb67209721">CLMutableCommandBuffer::~CLMutableCommandBuffer</a>()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> status = <a class="code" href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a>(_cb);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">if</span> (status != CL_SUCCESS)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">const</span> std::string error_message = <span class="stringliteral">&quot;clReleaseCommandBufferKHR - Error code: &quot;</span> + <a class="code" href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">std::to_string</a>(status);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(error_message);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">   59</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">CLMutableCommandBuffer::add_kernel</a>(cl_kernel          kernel,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                        <span class="keyword">const</span> cl::NDRange &amp;<a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                        <span class="keyword">const</span> cl::NDRange &amp;global,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                        <span class="keyword">const</span> cl::NDRange &amp;local)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    cl_mutable_command_khr mutable_handle = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    cl_ndrange_kernel_command_properties_khr properties[] = {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        CL_MUTABLE_DISPATCH_UPDATABLE_FIELDS_KHR,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        CL_MUTABLE_DISPATCH_ARGUMENTS_KHR,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        0,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    };</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a>(</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        _cb, <span class="keyword">nullptr</span>, properties, kernel, global.dimensions(), <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.dimensions() != 0 ? <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>.get() : <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        global.get(), local.dimensions() != 0 ? local.get() : <span class="keyword">nullptr</span>, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, &amp;mutable_handle);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clCommandNDRangeKernelKHR&quot;</span>, error);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    cl_mutable_dispatch_config_khr mut_dispatch_cfg{};</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    mut_dispatch_cfg.type    = CL_STRUCTURE_TYPE_MUTABLE_DISPATCH_CONFIG_KHR;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    mut_dispatch_cfg.command = mutable_handle;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    _mut_dispatch_cfgs.emplace_back(mut_dispatch_cfg);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keywordtype">void</span> CLMutableCommandBuffer::add_mutable_argument_generic(cl_uint arg_idx, <span class="keyword">const</span> <span class="keywordtype">void</span> *value, <span class="keywordtype">size_t</span> size)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    cl_mutable_dispatch_arg_khr cfg{};</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    cfg.arg_index = arg_idx;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    cfg.arg_size  = size;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    cfg.arg_value = value;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    _mut_arg_cfgs.emplace_back(cfg);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    ++_mut_dispatch_cfgs.back().num_args;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">  100</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">CLMutableCommandBuffer::finalize</a>()</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Created);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a>(_cb);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clFinalizeCommandBufferKHR&quot;</span>, error);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    state(State::Finalized);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _mut_dispatch_cfgs.shrink_to_fit();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    _mut_arg_cfgs.shrink_to_fit();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">size_t</span> arg_no = 0;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;mut_dispatch_cfg : _mut_dispatch_cfgs)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(arg_no &gt;= _mut_arg_cfgs.size());</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        mut_dispatch_cfg.arg_list = &amp;_mut_arg_cfgs[arg_no];</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        arg_no += mut_dispatch_cfg.num_args;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    _mut_cfg.type                  = CL_STRUCTURE_TYPE_MUTABLE_BASE_CONFIG_KHR;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    _mut_cfg.next                  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    _mut_cfg.num_mutable_dispatch  = _mut_dispatch_cfgs.size();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    _mut_cfg.mutable_dispatch_list = &amp;_mut_dispatch_cfgs[0];</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">CLMutableCommandBuffer::update</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a>(_cb, &amp;_mut_cfg);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clUpdateMutableCommandsKHR&quot;</span>, error);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">  137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">CLMutableCommandBuffer::enqueue</a>()</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(state() != State::Finalized);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> error = <a class="code" href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a>(0, <span class="keyword">nullptr</span>, _cb, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">handle_cl_error</a>(<span class="stringliteral">&quot;clEnqueueCommandBufferKHR&quot;</span>, error);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">  146</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">CLMutableCommandBuffer::is_finalized</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">return</span> state() == State::Finalized;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ae4091b6ac9dd4388f5b95f320a0c85a8"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ae4091b6ac9dd4388f5b95f320a0c85a8">clCreateCommandBufferKHR</a></div><div class="ttdeci">cl_command_buffer_khr clCreateCommandBufferKHR(cl_uint num_queues, const cl_command_queue *queues, const cl_command_buffer_properties_khr *properties, cl_int *errcode_ret)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01107">OpenCL.cpp:1107</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_acdc4200f6df3ab658adb5b2b4c22f6ac"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#acdc4200f6df3ab658adb5b2b4c22f6ac">clCommandNDRangeKernelKHR</a></div><div class="ttdeci">cl_int clCommandNDRangeKernelKHR(cl_command_buffer_khr command_buffer, cl_command_queue command_queue, const cl_ndrange_kernel_command_properties_khr *properties, cl_kernel kernel, cl_uint work_dim, const size_t *global_work_offset, const size_t *global_work_size, const size_t *local_work_size, cl_uint num_sync_points_in_wait_list, const cl_sync_point_khr *sync_point_wait_list, cl_sync_point_khr *sync_point, cl_mutable_command_khr *mutable_handle)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01195">OpenCL.cpp:1195</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a44137bb65de2396875934e48a6ee5099"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a44137bb65de2396875934e48a6ee5099">arm_compute::CLMutableCommandBuffer::update</a></div><div class="ttdeci">void update() override</div><div class="ttdoc">Update the command buffer with new kernel argument values.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00128">CLMutableCommandBuffer.cpp:128</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_abef52b4cd29e5d9e45d53b1ed3f569ad"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#abef52b4cd29e5d9e45d53b1ed3f569ad">arm_compute::CLMutableCommandBuffer::is_finalized</a></div><div class="ttdeci">bool is_finalized() const override</div><div class="ttdoc">Check if the command buffer has been finalized.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00146">CLMutableCommandBuffer.cpp:146</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a6a32bafa8064e666aed52486c4af4144"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a6a32bafa8064e666aed52486c4af4144">arm_compute::CLMutableCommandBuffer::finalize</a></div><div class="ttdeci">void finalize() override</div><div class="ttdoc">Finalize the command buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00100">CLMutableCommandBuffer.cpp:100</a></div></div>
<div class="ttc" id="a_c_l_mutable_command_buffer_8h_xhtml"><div class="ttname"><a href="_c_l_mutable_command_buffer_8h.xhtml">CLMutableCommandBuffer.h</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_ad92270fbfad08428c9ed518170a8a74a"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#ad92270fbfad08428c9ed518170a8a74a">clReleaseCommandBufferKHR</a></div><div class="ttdeci">cl_int clReleaseCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01160">OpenCL.cpp:1160</a></div></div>
<div class="ttc" id="a_c_l_utils_8h_xhtml"><div class="ttname"><a href="_c_l_utils_8h.xhtml">CLUtils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a36ec98486a2f4b7ee530e1953370572c"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a36ec98486a2f4b7ee530e1953370572c">arm_compute::CLMutableCommandBuffer::enqueue</a></div><div class="ttdeci">void enqueue() override</div><div class="ttdoc">Enqueue the command buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00137">CLMutableCommandBuffer.cpp:137</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5bbad0e81db8c98c3e6bf6f9aa09c785"><div class="ttname"><a href="namespacearm__compute.xhtml#a5bbad0e81db8c98c3e6bf6f9aa09c785">arm_compute::handle_cl_error</a></div><div class="ttdeci">void handle_cl_error(const std::string &amp;function_name, cl_int error_code)</div><div class="ttdoc">Check for CL error code and throw exception accordingly.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_utils_8cpp_source.xhtml#l00120">CLUtils.cpp:120</a></div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01142">helpers.h:1142</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a1384e99dd308097bc7a2edb202eb91a2"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a1384e99dd308097bc7a2edb202eb91a2">clUpdateMutableCommandsKHR</a></div><div class="ttdeci">cl_int clUpdateMutableCommandsKHR(cl_command_buffer_khr command_buffer, const cl_mutable_base_config_khr *mutable_config)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01222">OpenCL.cpp:1222</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_command_buffer_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_command_buffer.xhtml">arm_compute::CLCommandBuffer</a></div><div class="ttdoc">Command buffer contains a list of commands that is constructed once and later enqueued multiple times...</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_command_buffer_8h_source.xhtml#l00052">CLCommandBuffer.h:52</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_a2eda66fd1833633bdc55e29686b7d454"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#a2eda66fd1833633bdc55e29686b7d454">clFinalizeCommandBufferKHR</a></div><div class="ttdeci">cl_int clFinalizeCommandBufferKHR(cl_command_buffer_khr command_buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01130">OpenCL.cpp:1130</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a062b90d0a8defe70b0cd19300fee2825"><div class="ttname"><a href="namespacearm__compute.xhtml#a062b90d0a8defe70b0cd19300fee2825">arm_compute::to_string</a></div><div class="ttdeci">std::string to_string(const ClComponentElementwiseBinary::Attributes::ElementwiseOp &amp;op)</div><div class="ttdoc">Formatted output of the arm_compute::experimental::dynamic_fusion::ClComponentElementwiseBinary::Attr...</div><div class="ttdef"><b>Definition:</b> <a href="components_2utils_2type__printer_2_elementwise_binary_8h_source.xhtml#l00068">ElementwiseBinary.h:68</a></div></div>
<div class="ttc" id="a_open_c_l_8cpp_xhtml_aabca83598a7d2f2db7aaa2d4b1cbd1a7"><div class="ttname"><a href="_open_c_l_8cpp.xhtml#aabca83598a7d2f2db7aaa2d4b1cbd1a7">clEnqueueCommandBufferKHR</a></div><div class="ttdeci">cl_int clEnqueueCommandBufferKHR(cl_uint num_queues, cl_command_queue *queues, cl_command_buffer_khr command_buffer, cl_uint num_events_in_wait_list, const cl_event *event_wait_list, cl_event *event)</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l01175">OpenCL.cpp:1175</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml">Log.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a43cf22ad4e0358981630f536f6c58599"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a43cf22ad4e0358981630f536f6c58599">arm_compute::CLMutableCommandBuffer::CLMutableCommandBuffer</a></div><div class="ttdeci">CLMutableCommandBuffer(cl_command_queue queue)</div><div class="ttdoc">Create a new mutable dispatch command buffer targeting the specified command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00035">CLMutableCommandBuffer.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a06ba711f428dcc60e33df9b34aa18fbc"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a06ba711f428dcc60e33df9b34aa18fbc">arm_compute::CLMutableCommandBuffer::add_kernel</a></div><div class="ttdeci">void add_kernel(cl_kernel kernel, const cl::NDRange &amp;offset, const cl::NDRange &amp;global, const cl::NDRange &amp;local) override</div><div class="ttdoc">Add a kernel enqueue command to the command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00059">CLMutableCommandBuffer.cpp:59</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_mutable_command_buffer_xhtml_a5552826c0c8b979b71d350cb67209721"><div class="ttname"><a href="classarm__compute_1_1_c_l_mutable_command_buffer.xhtml#a5552826c0c8b979b71d350cb67209721">arm_compute::CLMutableCommandBuffer::~CLMutableCommandBuffer</a></div><div class="ttdeci">virtual ~CLMutableCommandBuffer()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_mutable_command_buffer_8cpp_source.xhtml#l00049">CLMutableCommandBuffer.cpp:49</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_mutable_command_buffer_8cpp.xhtml">CLMutableCommandBuffer.cpp</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:16 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
