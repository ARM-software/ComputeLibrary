<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_conv/depthwise/interleaves/generic.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">generic.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="arm__conv_2depthwise_2interleaves_2generic_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="generic_8hpp.xhtml">generic.hpp</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv.xhtml">arm_conv</a> {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">depthwise</a> {</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml">   31</a></span>&#160;<span class="keyword">namespace </span>interleaves {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3bd64ed48112db160dfcc1f6e3327687">   33</a></span>&#160;<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3bd64ed48112db160dfcc1f6e3327687">PackingArguments::PackingArguments</a>(</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_rows, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernel_cols, <span class="keywordtype">size_t</span> weight_element_size,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">bool</span> include_bias, <span class="keywordtype">size_t</span> bias_element_size, <span class="keywordtype">bool</span> premultiply,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <a class="code" href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a> vl_type, <span class="keywordtype">size_t</span> accumulator_element_size, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> accumulator_depth_vl,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  std::function&lt;<span class="keywordtype">bool</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> &amp;)&gt; get_weight_pos</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;) : kernel_rows(kernel_rows), kernel_cols(kernel_cols), weight_element_size(weight_element_size),</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    include_bias(include_bias), bias_element_size(bias_element_size), premultiply(premultiply),</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    vl_type(vl_type), accumulator_element_size(accumulator_element_size), accumulator_depth_vl(accumulator_depth_vl),</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    get_weight_pos(get_weight_pos)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">   45</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">get_storage_size_generic</a>(<span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">PackingArguments</a> &amp;packing_args, <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="comment">// If the channel multiplier is greater than one, then we treat this as a</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="comment">// repeated packing of `channel_multiplier`-sized problems.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier &gt; 1 &amp;&amp; !packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ae1ff2c9a92d9dba77a7f763331889b85">premultiply</a>)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    DepthwiseArgs args_per_input_channel(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    args_per_input_channel.input_channels = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    args_per_input_channel.channel_multiplier = 1;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">get_storage_size_generic</a>(packing_args, args_per_input_channel);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vl =</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a08c74e4da18a394da2a13dede36ab864">accumulator_depth_vl</a> *</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    arm_gemm::utils::get_vector_length&lt;uint8_t&gt;(packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3c31f3fa13f6938504d313cbc9513ec3">vl_type</a>) / packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a2a1a66fb15cd1465f2b35f4d4a9068b7">accumulator_element_size</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_packs = <a class="code" href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a>(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier, vl);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span> pack_size = (packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a250f966f2ceae7ffe65c7eec55b6c1dc">include_bias</a> ? packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a> : 0) +</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                         packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a77c88cc2487370bb31d26d5f76a3e969">kernel_points</a>() * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">weight_element_size</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">return</span> n_packs * pack_size * vl;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">   67</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">pack_parameters_generic</a>(</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">PackingArguments</a> &amp;packing_args,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">const</span> DepthwiseArgs &amp;<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> *buffer_raw,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">void</span> *biases_raw,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">void</span> *weights_raw,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">size_t</span> ld_weight_col,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">size_t</span> ld_weight_row</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">// Cast the pointers to byte sizes</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keyword">auto</span> *buffer = <span class="keyword">static_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(buffer_raw);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">auto</span> *biases = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(biases_raw);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keyword">auto</span> *weights = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(weights_raw);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="comment">// If the channel multiplier is greater than one, then we treat this as a</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">// repeated packing of `channel_multiplier`-sized problems.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier &gt; 1 &amp;&amp; !packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ae1ff2c9a92d9dba77a7f763331889b85">premultiply</a>)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Get a modified copy of the depthwise arguments</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    DepthwiseArgs args_per_input_channel(<a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    args_per_input_channel.input_channels = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    args_per_input_channel.channel_multiplier = 1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Resolve the strides here</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    ld_weight_col = ld_weight_col ? ld_weight_col : <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    ld_weight_row = ld_weight_row ? ld_weight_row : ld_weight_col * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa54966e5f1ae12e04b0dc3449ea67071">kernel_cols</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">auto</span> per_input_channel_size = <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">get_storage_size_generic</a>(packing_args, args_per_input_channel);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels; c++)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <a class="code" href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">pack_parameters_generic</a>(</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        packing_args, args_per_input_channel, buffer, biases, weights, ld_weight_col, ld_weight_row);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="comment">// Update the pointers</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      buffer += per_input_channel_size;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      biases += (biases == <span class="keyword">nullptr</span>) ? 0 : packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a> * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      weights += packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">weight_element_size</a> * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">auto</span> input_channels = <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.input_channels * <a class="code" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>.channel_multiplier;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="comment">// Finalise the weight strides</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  ld_weight_col = (ld_weight_col == 0) ? input_channels : ld_weight_col;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  ld_weight_row = (ld_weight_row == 0) ? packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa54966e5f1ae12e04b0dc3449ea67071">kernel_cols</a> * ld_weight_col : ld_weight_row;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vl =</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a08c74e4da18a394da2a13dede36ab864">accumulator_depth_vl</a> *</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    arm_gemm::utils::get_vector_length&lt;uint8_t&gt;(packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3c31f3fa13f6938504d313cbc9513ec3">vl_type</a>) / packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a2a1a66fb15cd1465f2b35f4d4a9068b7">accumulator_element_size</a>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n = 0; n &lt; input_channels; n += vl)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> todo = std::min(vl, input_channels - n);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span> (packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a250f966f2ceae7ffe65c7eec55b6c1dc">include_bias</a>)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;      <span class="keywordflow">if</span> (biases != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        memcpy(buffer, biases, todo * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        biases += todo * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        memset(buffer, 0, vl * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      buffer += vl * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">bias_element_size</a>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Copy each of the weights in turn</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kx, ky;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> kindex = 0; packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a573eafa692d92219aa60bf1e2016c467">get_weight_pos</a>(kindex, kx, ky); kindex++)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = weights + (kx*ld_weight_row + ky*ld_weight_col + n) * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">weight_element_size</a>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      memcpy(buffer, src_ptr, todo * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">weight_element_size</a>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      buffer += vl * packing_args.<a class="code" href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">weight_element_size</a>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}  <span class="comment">// namespace interleaves</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}  <span class="comment">// namespace depthwise</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}  <span class="comment">// namespace arm_conv</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a3c31f3fa13f6938504d313cbc9513ec3"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3c31f3fa13f6938504d313cbc9513ec3">arm_conv::depthwise::interleaves::PackingArguments::vl_type</a></div><div class="ttdeci">arm_gemm::VLType vl_type</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00044">generic.hpp:44</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml">arm_conv::depthwise::interleaves::PackingArguments</a></div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00036">generic.hpp:36</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a8187411843a6284ffb964ef3fb9fcab3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">GemmTuner.args</a></div><div class="ttdeci">args</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00679">GemmTuner.py:679</a></div></div>
<div class="ttc" id="anamespacearm__conv_1_1depthwise_xhtml_a301c401a1e9a5ac74367c4719a185aa4"><div class="ttname"><a href="namespacearm__conv_1_1depthwise.xhtml#a301c401a1e9a5ac74367c4719a185aa4">arm_conv::depthwise::depthwise</a></div><div class="ttdeci">template UniqueDepthwiseCommon&lt; float &gt; depthwise(const DepthwiseArgs &amp;, const Nothing &amp;)</div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a77c88cc2487370bb31d26d5f76a3e969"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a77c88cc2487370bb31d26d5f76a3e969">arm_conv::depthwise::interleaves::PackingArguments::kernel_points</a></div><div class="ttdeci">unsigned int kernel_points(void) const</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00049">generic.hpp:49</a></div></div>
<div class="ttc" id="anamespacearm__conv_1_1depthwise_1_1interleaves_xhtml_a3b433ad9e7b77bf0702700e2006e4210"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#a3b433ad9e7b77bf0702700e2006e4210">arm_conv::depthwise::interleaves::pack_parameters_generic</a></div><div class="ttdeci">void pack_parameters_generic(const PackingArguments &amp;packing_args, const DepthwiseArgs &amp;args, void *buffer_raw, const void *biases_raw, const void *weights_raw, size_t ld_weight_col, size_t ld_weight_row)</div><div class="ttdef"><b>Definition:</b> <a href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00067">generic.cpp:67</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a08c74e4da18a394da2a13dede36ab864"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a08c74e4da18a394da2a13dede36ab864">arm_conv::depthwise::interleaves::PackingArguments::accumulator_depth_vl</a></div><div class="ttdeci">const unsigned int accumulator_depth_vl</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00046">generic.hpp:46</a></div></div>
<div class="ttc" id="anamespacearm__conv_1_1depthwise_1_1interleaves_xhtml_af85eedd0781815c14baa970aeecb8c88"><div class="ttname"><a href="namespacearm__conv_1_1depthwise_1_1interleaves.xhtml#af85eedd0781815c14baa970aeecb8c88">arm_conv::depthwise::interleaves::get_storage_size_generic</a></div><div class="ttdeci">size_t get_storage_size_generic(const PackingArguments &amp;packing_args, const DepthwiseArgs &amp;args)</div><div class="ttdef"><b>Definition:</b> <a href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00045">generic.cpp:45</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_aed0e2852860309af99fad49a8c3ef315"><div class="ttname"><a href="namespacearm__gemm.xhtml#aed0e2852860309af99fad49a8c3ef315">arm_gemm::iceildiv</a></div><div class="ttdeci">T iceildiv(const T a, const T b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00065">utils.hpp:65</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a3bd64ed48112db160dfcc1f6e3327687"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a3bd64ed48112db160dfcc1f6e3327687">arm_conv::depthwise::interleaves::PackingArguments::PackingArguments</a></div><div class="ttdeci">PackingArguments(unsigned int kernel_rows, unsigned int kernel_cols, size_t weight_element_size, bool include_bias, size_t bias_element_size, bool premultiply, arm_gemm::VLType vl_type, size_t accumulator_element_size, unsigned int accumulator_depth_vl, std::function&lt; bool(unsigned int, unsigned int &amp;, unsigned int &amp;)&gt; get_weight_pos)</div><div class="ttdef"><b>Definition:</b> <a href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00033">generic.cpp:33</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_ae1ff2c9a92d9dba77a7f763331889b85"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ae1ff2c9a92d9dba77a7f763331889b85">arm_conv::depthwise::interleaves::PackingArguments::premultiply</a></div><div class="ttdeci">const bool premultiply</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00043">generic.hpp:43</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a2a1a66fb15cd1465f2b35f4d4a9068b7"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a2a1a66fb15cd1465f2b35f4d4a9068b7">arm_conv::depthwise::interleaves::PackingArguments::accumulator_element_size</a></div><div class="ttdeci">const size_t accumulator_element_size</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00045">generic.hpp:45</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_aa2b61ce9c47543bc88df5ffefcf22774"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa2b61ce9c47543bc88df5ffefcf22774">arm_conv::depthwise::interleaves::PackingArguments::bias_element_size</a></div><div class="ttdeci">const size_t bias_element_size</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00042">generic.hpp:42</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_a764ff3bbe137fc7792aee26f022aa29d"><div class="ttname"><a href="namespacearm__gemm.xhtml#a764ff3bbe137fc7792aee26f022aa29d">arm_gemm::VLType</a></div><div class="ttdeci">VLType</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00080">utils.hpp:80</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_aa54966e5f1ae12e04b0dc3449ea67071"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#aa54966e5f1ae12e04b0dc3449ea67071">arm_conv::depthwise::interleaves::PackingArguments::kernel_cols</a></div><div class="ttdeci">const unsigned int kernel_cols</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00039">generic.hpp:39</a></div></div>
<div class="ttc" id="anamespacearm__conv_xhtml"><div class="ttname"><a href="namespacearm__conv.xhtml">arm_conv</a></div><div class="ttdef"><b>Definition:</b> <a href="addressing_8cpp_source.xhtml#l00030">addressing.cpp:30</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a250f966f2ceae7ffe65c7eec55b6c1dc"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a250f966f2ceae7ffe65c7eec55b6c1dc">arm_conv::depthwise::interleaves::PackingArguments::include_bias</a></div><div class="ttdeci">const bool include_bias</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00041">generic.hpp:41</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_ab38845ad7e40f15a8ad13498d52b1374"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#ab38845ad7e40f15a8ad13498d52b1374">arm_conv::depthwise::interleaves::PackingArguments::weight_element_size</a></div><div class="ttdeci">const size_t weight_element_size</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00040">generic.hpp:40</a></div></div>
<div class="ttc" id="astructarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments_xhtml_a573eafa692d92219aa60bf1e2016c467"><div class="ttname"><a href="structarm__conv_1_1depthwise_1_1interleaves_1_1_packing_arguments.xhtml#a573eafa692d92219aa60bf1e2016c467">arm_conv::depthwise::interleaves::PackingArguments::get_weight_pos</a></div><div class="ttdeci">std::function&lt; bool(unsigned int, unsigned int &amp;, unsigned int &amp;)&gt; get_weight_pos</div><div class="ttdef"><b>Definition:</b> <a href="generic_8hpp_source.xhtml#l00047">generic.hpp:47</a></div></div>
<div class="ttc" id="ageneric_8hpp_xhtml"><div class="ttname"><a href="generic_8hpp.xhtml">generic.hpp</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_ea98ae4f30fbc97db6231c6535bdb2d9.xhtml">arm_conv</a></li><li class="navelem"><a class="el" href="dir_abb214ad2a926c78a0f27cabc6cb4a00.xhtml">depthwise</a></li><li class="navelem"><a class="el" href="dir_b7f97eccce2eea27364902fe679cf4c6.xhtml">interleaves</a></li><li class="navelem"><a class="el" href="arm__conv_2depthwise_2interleaves_2generic_8cpp.xhtml">generic.cpp</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:17 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
