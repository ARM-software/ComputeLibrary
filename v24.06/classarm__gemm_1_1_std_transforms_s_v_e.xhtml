<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla, integrate_sums &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__gemm_1_1_std_transforms_s_v_e.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla, integrate_sums &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4bc2cdea393e8af9f824152ecca65fcc"><td class="memTemplParams" colspan="2">template&lt;typename TIn &gt; </td></tr>
<tr class="memitem:a4bc2cdea393e8af9f824152ecca65fcc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#a4bc2cdea393e8af9f824152ecca65fcc">PrepareA</a> (TOperand *out, const TIn *in, const int stride, const int y0, const int ymax, const int k0, const int kmax, int32_t row_sum_multiplier)</td></tr>
<tr class="separator:a4bc2cdea393e8af9f824152ecca65fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac989e3d3d18da73368be84f5ac8df5ac"><td class="memTemplParams" colspan="2">template&lt;typename TIn &gt; </td></tr>
<tr class="memitem:ac989e3d3d18da73368be84f5ac8df5ac"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#ac989e3d3d18da73368be84f5ac8df5ac">PrepareA_indirect</a> (TOperand *out, const TIn *const *const *ptr, size_t stringlen, size_t rounded_stringlen, const int y0, const int ymax, const int k0, const int kmax, int32_t row_sum_multiplier)</td></tr>
<tr class="separator:ac989e3d3d18da73368be84f5ac8df5ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a794178859c1c27c8f32a58b746dd0a85"><td class="memTemplParams" colspan="2">template&lt;typename TIn &gt; </td></tr>
<tr class="memitem:a794178859c1c27c8f32a58b746dd0a85"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#a794178859c1c27c8f32a58b746dd0a85">PrepareA_convolution</a> (TOperand *out, const TIn *ptr, size_t stride, const <a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a>&lt; TIn &gt; &amp;conv, size_t rounded_stringlen, const int y0, const int ymax, const int k0, const int kmax, int32_t row_sum_multiplier)</td></tr>
<tr class="separator:a794178859c1c27c8f32a58b746dd0a85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96bef661444e4a498d0f46eb1039a06b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#a96bef661444e4a498d0f46eb1039a06b">PrepareB_supports_transpose</a> () const</td></tr>
<tr class="separator:a96bef661444e4a498d0f46eb1039a06b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedba4df70219eb533eb0149b60ab182e"><td class="memTemplParams" colspan="2">template&lt;typename TIn &gt; </td></tr>
<tr class="memitem:aedba4df70219eb533eb0149b60ab182e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#aedba4df70219eb533eb0149b60ab182e">PrepareB</a> (TOperand *out, const TIn *in, const int stride, const int x0, const int xmax, const int k0, const int kmax, bool transposed)</td></tr>
<tr class="separator:aedba4df70219eb533eb0149b60ab182e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1a6738212fc10bde3bf8c5bf679350a"><td class="memTemplParams" colspan="2">template&lt;typename TOut &gt; </td></tr>
<tr class="memitem:af1a6738212fc10bde3bf8c5bf679350a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml#af1a6738212fc10bde3bf8c5bf679350a">Merge</a> (TOut *out, const TResult *in, int stride, int y0, int ymax, int x0, int xmax, const TOut *<a class="el" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, const <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a> act, bool append)</td></tr>
<tr class="separator:af1a6738212fc10bde3bf8c5bf679350a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TOperand, typename TResult, unsigned int height, unsigned int width_vectors, unsigned int block = 1, unsigned int mmla = 1, bool integrate_sums = false&gt;<br />
class arm_gemm::StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla, integrate_sums &gt;</h3>


<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af1a6738212fc10bde3bf8c5bf679350a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1a6738212fc10bde3bf8c5bf679350a">&#9670;&nbsp;</a></span>Merge()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Merge </td>
          <td>(</td>
          <td class="paramtype">TOut *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TResult *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TOut *&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_activation.xhtml">Activation</a>&#160;</td>
          <td class="paramname"><em>act</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>append</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00076">76</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                                                                                                                  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="namespacearm__gemm.xhtml#aa2ed1c3595c8114064e8170b00df37c5">MergeResults</a>&lt;width_vectors / mmla, height, <span class="keyword">true</span>&gt;(out, in, stride, y0, ymax, x0, xmax, <a class="code" href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a>, act, append);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="working__space_8hpp_source.xhtml#l00322">bias</a>, and <a class="el" href="mergeresults_8cpp_source.xhtml#l00039">arm_gemm::MergeResults()</a>.</p>

</div>
</div>
<a id="a4bc2cdea393e8af9f824152ecca65fcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bc2cdea393e8af9f824152ecca65fcc">&#9670;&nbsp;</a></span>PrepareA()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void PrepareA </td>
          <td>(</td>
          <td class="paramtype">TOperand *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                                                            {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        Interleave&lt;height, block, VLType::None&gt;(out, in, stride, y0, ymax, k0, kmax, integrate_sums, row_sum_multiplier);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a794178859c1c27c8f32a58b746dd0a85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a794178859c1c27c8f32a58b746dd0a85">&#9670;&nbsp;</a></span>PrepareA_convolution()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void PrepareA_convolution </td>
          <td>(</td>
          <td class="paramtype">TOperand *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__gemm_1_1convolver.xhtml">convolver</a>&lt; TIn &gt; &amp;&#160;</td>
          <td class="paramname"><em>conv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>rounded_stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00059">59</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                                                                                      {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        ConvolutionInterleave&lt;height, block, VLType::None&gt;(out, ptr, stride, conv, rounded_stringlen, y0, ymax, k0, kmax, integrate_sums, row_sum_multiplier);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac989e3d3d18da73368be84f5ac8df5ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac989e3d3d18da73368be84f5ac8df5ac">&#9670;&nbsp;</a></span>PrepareA_indirect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void PrepareA_indirect </td>
          <td>(</td>
          <td class="paramtype">TOperand *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *const *const *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>rounded_stringlen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>row_sum_multiplier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                                                                                     {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        IndirectInterleave&lt;height, block, VLType::None&gt;(out, ptr, stringlen, rounded_stringlen, y0, ymax, k0, kmax, integrate_sums, row_sum_multiplier);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aedba4df70219eb533eb0149b60ab182e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedba4df70219eb533eb0149b60ab182e">&#9670;&nbsp;</a></span>PrepareB()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void PrepareB </td>
          <td>(</td>
          <td class="paramtype">TOperand *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const TIn *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>k0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>kmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>transposed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00069">69</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                                                                 {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        assert (!transposed);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        Transform&lt;width_vectors, block,  true, VLType::SVE&gt;(out, in, stride, x0, xmax, k0, kmax);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a96bef661444e4a498d0f46eb1039a06b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96bef661444e4a498d0f46eb1039a06b">&#9670;&nbsp;</a></span>PrepareB_supports_transpose()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool PrepareB_supports_transpose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00064">64</a> of file <a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                             {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/core/NEON/kernels/arm_gemm/<a class="el" href="std__transforms__sve_8hpp_source.xhtml">std_transforms_sve.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aworking__space_8hpp_xhtml_a1fb7b822a92dd3ab6e7ab15c67b0ff9e"><div class="ttname"><a href="working__space_8hpp.xhtml#a1fb7b822a92dd3ab6e7ab15c67b0ff9e">bias</a></div><div class="ttdeci">const int32_t * bias</div><div class="ttdef"><b>Definition:</b> <a href="working__space_8hpp_source.xhtml#l00322">working_space.hpp:322</a></div></div>
<div class="ttc" id="anamespacearm__gemm_xhtml_aa2ed1c3595c8114064e8170b00df37c5"><div class="ttname"><a href="namespacearm__gemm.xhtml#aa2ed1c3595c8114064e8170b00df37c5">arm_gemm::MergeResults</a></div><div class="ttdeci">void MergeResults(Tout *out, const Tin *in, int ldc, int y0, int ymax, int x0, int xmax, const Tout *bias, Activation act, bool append)</div><div class="ttdef"><b>Definition:</b> <a href="mergeresults_8cpp_source.xhtml#l00039">mergeresults.cpp:39</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml">StdTransformsSVE</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:35 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
