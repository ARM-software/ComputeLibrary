<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: IStream Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">IStream Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a> interface.  
 <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a79a466f03b984179d44fe640cc2a98ef"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a79a466f03b984179d44fe640cc2a98ef">~IStream</a> ()=default</td></tr>
<tr class="separator:a79a466f03b984179d44fe640cc2a98ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1279b8b362e78d55d4951512f410b14e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a1279b8b362e78d55d4951512f410b14e">add_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a> &amp;layer)=0</td></tr>
<tr class="memdesc:a1279b8b362e78d55d4951512f410b14e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a layer to the stream.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a1279b8b362e78d55d4951512f410b14e">More...</a><br /></td></tr>
<tr class="separator:a1279b8b362e78d55d4951512f410b14e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f9edb3a23ff98069aaa52590d53bf5f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">graph</a> ()=0</td></tr>
<tr class="memdesc:a2f9edb3a23ff98069aaa52590d53bf5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying graph.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">More...</a><br /></td></tr>
<tr class="separator:a2f9edb3a23ff98069aaa52590d53bf5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9d564f9d6113ecafc98200face036b8"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#ab9d564f9d6113ecafc98200face036b8">graph</a> () const =0</td></tr>
<tr class="memdesc:ab9d564f9d6113ecafc98200face036b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying graph.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#ab9d564f9d6113ecafc98200face036b8">More...</a><br /></td></tr>
<tr class="separator:ab9d564f9d6113ecafc98200face036b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a110fbabe5b6b600f0f5b1fec06ab1484"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">tail_node</a> ()</td></tr>
<tr class="memdesc:a110fbabe5b6b600f0f5b1fec06ab1484"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tail node of the <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a>.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a110fbabe5b6b600f0f5b1fec06ab1484">More...</a><br /></td></tr>
<tr class="separator:a110fbabe5b6b600f0f5b1fec06ab1484"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ce23fbe59cc58db22e1b6d072b10c6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml">StreamHints</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">hints</a> ()</td></tr>
<tr class="memdesc:a75ce23fbe59cc58db22e1b6d072b10c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the stream hints that are currently used.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a75ce23fbe59cc58db22e1b6d072b10c6">More...</a><br /></td></tr>
<tr class="separator:a75ce23fbe59cc58db22e1b6d072b10c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d1067259b70c7d8753be5062a4b9f6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a3d1067259b70c7d8753be5062a4b9f6d">forward_tail</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> nid)</td></tr>
<tr class="memdesc:a3d1067259b70c7d8753be5062a4b9f6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forwards tail of stream to a given nid.  <a href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a3d1067259b70c7d8753be5062a4b9f6d">More...</a><br /></td></tr>
<tr class="separator:a3d1067259b70c7d8753be5062a4b9f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a> interface. </p>

<p class="definition">Definition at line <a class="el" href="_i_stream_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a79a466f03b984179d44fe640cc2a98ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79a466f03b984179d44fe640cc2a98ef">&#9670;&nbsp;</a></span>~IStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1279b8b362e78d55d4951512f410b14e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1279b8b362e78d55d4951512f410b14e">&#9670;&nbsp;</a></span>add_layer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void add_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a> &amp;&#160;</td>
          <td class="paramname"><em>layer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a layer to the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">layer</td><td>Layer to add </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml#a962a6d769f57dd2f1a0b8beb714fc6bb">Stream</a>, and <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml#a962a6d769f57dd2f1a0b8beb714fc6bb">SubStream</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_stream_operators_8h_source.xhtml#l00046">arm_compute::graph::frontend::operator&lt;&lt;()</a>.</p>

</div>
</div>
<a id="a3d1067259b70c7d8753be5062a4b9f6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d1067259b70c7d8753be5062a4b9f6d">&#9670;&nbsp;</a></span>forward_tail()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void forward_tail </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td>
          <td class="paramname"><em>nid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Forwards tail of stream to a given nid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nid</td><td>NodeID of the updated tail node </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_i_stream_8h_source.xhtml#l00081">81</a> of file <a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        _tail_node = (nid != <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a>) ? nid : _tail_node;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">arm_compute::graph::NullTensorID</a>.</p>

</div>
</div>
<a id="ab9d564f9d6113ecafc98200face036b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9d564f9d6113ecafc98200face036b8">&#9670;&nbsp;</a></span>graph() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a>&amp; graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the underlying graph. </p>
<dl class="section return"><dt>Returns</dt><dd>Underlying graph </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml#a51dadcfc4a2bbd3ffa4c595c1cca6fd8">Stream</a>, and <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml#a51dadcfc4a2bbd3ffa4c595c1cca6fd8">SubStream</a>.</p>

</div>
</div>
<a id="a2f9edb3a23ff98069aaa52590d53bf5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f9edb3a23ff98069aaa52590d53bf5f">&#9670;&nbsp;</a></span>graph() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a>&amp; graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the underlying graph. </p>
<dl class="section return"><dt>Returns</dt><dd>Underlying graph </dd></dl>

<p>Implemented in <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml#a7e4fdf6dbe73cb6da5cc36976cff9fa7">Stream</a>, and <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml#a7e4fdf6dbe73cb6da5cc36976cff9fa7">SubStream</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layers_8h_source.xhtml#l00056">InputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00080">ConstantLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00105">OutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00131">ActivationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00169">ArgMinMaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00209">BatchNormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00251">BoundingBoxTransformLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00277">ChannelShuffleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00339">ConcatLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00409">ConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00459">DeconvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00510">DepthwiseConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00543">DepthToSpaceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00565">DequantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00590">DetectionOutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00627">DetectionPostProcessLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00657">DummyLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00682">EltwiseLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00705">FlattenLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00775">FullyConnectedLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00835">GenerateProposalsLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00864">L2NormalizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00888">NormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00913">NormalizePlanarYUVLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00943">PadLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00969">PermuteLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00993">PoolingLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01018">PReluLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01078">PrintLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01105">PriorBoxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01130">QuantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01156">ReductionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01182">ReorgLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01205">ReshapeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01225">ResizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01258">ROIAlignLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01286">ScaleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01311">SliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01335">SoftmaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01393">StackLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01445">StridedSliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01471">YOLOLayer::create_layer()</a>, and <a class="el" href="_sub_stream_8cpp_source.xhtml#l00047">SubStream::graph()</a>.</p>

</div>
</div>
<a id="a75ce23fbe59cc58db22e1b6d072b10c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ce23fbe59cc58db22e1b6d072b10c6">&#9670;&nbsp;</a></span>hints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml">StreamHints</a>&amp; hints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the stream hints that are currently used. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a> hints </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_stream_8h_source.xhtml#l00073">73</a> of file <a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> _hints;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_layers_8h_source.xhtml#l00056">InputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00080">ConstantLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00105">OutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00131">ActivationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00169">ArgMinMaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00209">BatchNormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00251">BoundingBoxTransformLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00277">ChannelShuffleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00339">ConcatLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00409">ConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00459">DeconvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00510">DepthwiseConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00543">DepthToSpaceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00565">DequantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00590">DetectionOutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00627">DetectionPostProcessLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00657">DummyLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00682">EltwiseLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00705">FlattenLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00775">FullyConnectedLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00835">GenerateProposalsLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00864">L2NormalizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00888">NormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00913">NormalizePlanarYUVLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00943">PadLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00969">PermuteLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00993">PoolingLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01018">PReluLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01078">PrintLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01105">PriorBoxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01130">QuantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01156">ReductionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01182">ReorgLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01205">ReshapeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01225">ResizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01258">ROIAlignLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01286">ScaleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01311">SliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01335">SoftmaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01393">StackLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01445">StridedSliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01471">YOLOLayer::create_layer()</a>, <a class="el" href="_i_stream_operators_8h_source.xhtml#l00070">arm_compute::graph::frontend::operator&lt;&lt;()</a>, and <a class="el" href="_sub_stream_8cpp_source.xhtml#l00035">SubStream::SubStream()</a>.</p>

</div>
</div>
<a id="a110fbabe5b6b600f0f5b1fec06ab1484"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a110fbabe5b6b600f0f5b1fec06ab1484">&#9670;&nbsp;</a></span>tail_node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> tail_node </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the tail node of the <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion.">Stream</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Tail Node ID </dd></dl>

<p class="definition">Definition at line <a class="el" href="_i_stream_8h_source.xhtml#l00065">65</a> of file <a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">return</span> _tail_node;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_layers_8h_source.xhtml#l00105">OutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00131">ActivationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00169">ArgMinMaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00209">BatchNormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00251">BoundingBoxTransformLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00277">ChannelShuffleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00409">ConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00459">DeconvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00510">DepthwiseConvolutionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00543">DepthToSpaceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00565">DequantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00590">DetectionOutputLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00627">DetectionPostProcessLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00657">DummyLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00682">EltwiseLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00705">FlattenLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00775">FullyConnectedLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00835">GenerateProposalsLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00864">L2NormalizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00888">NormalizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00913">NormalizePlanarYUVLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00943">PadLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00969">PermuteLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l00993">PoolingLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01018">PReluLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01078">PrintLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01105">PriorBoxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01130">QuantizationLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01156">ReductionLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01182">ReorgLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01205">ReshapeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01225">ResizeLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01258">ROIAlignLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01286">ScaleLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01311">SliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01335">SoftmaxLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01445">StridedSliceLayer::create_layer()</a>, <a class="el" href="_layers_8h_source.xhtml#l01471">YOLOLayer::create_layer()</a>, and <a class="el" href="_sub_stream_8cpp_source.xhtml#l00035">SubStream::SubStream()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/graph/frontend/<a class="el" href="_i_stream_8h_source.xhtml">IStream.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1graph_xhtml_aa94938a3eb11fda4724c362c53c28f24"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">arm_compute::graph::NullTensorID</a></div><div class="ttdeci">constexpr TensorID NullTensorID</div><div class="ttdoc">Constant NodeID specifying an equivalent of null node.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00077">Types.h:77</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">frontend</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:32 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
