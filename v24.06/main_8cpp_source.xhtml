<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/main.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('main_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">main.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="main_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_version_8h.xhtml">arm_compute/core/Version.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_string_support_8h.xhtml">support/StringSupport.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_assets_library_8h.xhtml">tests/AssetsLibrary.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dataset_modes_8h.xhtml">tests/framework/DatasetModes.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_exceptions_8h.xhtml">tests/framework/Exceptions.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_framework_8h.xhtml">tests/framework/Framework.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parameters_library_8h.xhtml">tests/framework/ParametersLibrary.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiler_8h.xhtml">tests/framework/Profiler.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_common_options_8h.xhtml">tests/framework/command_line/CommonOptions.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instruments_8h.xhtml">tests/framework/instruments/Instruments.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2printers_2_printers_8h.xhtml">tests/framework/printers/Printers.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2instruments_2_helpers_8h.xhtml">tests/instruments/Helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_options_8h.xhtml">utils/command_line/CommandLineOptions.h</a>&quot;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_parser_8h.xhtml">utils/command_line/CommandLineParser.h</a>&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_open_c_l_8h.xhtml">arm_compute/core/CL/OpenCL.h</a>&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_g_e_m_m_heuristics_handle_8h.xhtml">arm_compute/runtime/CL/CLGEMMHeuristicsHandle.h</a>&quot;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">arm_compute/runtime/CL/CLHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_scheduler_8h.xhtml">arm_compute/runtime/CL/CLScheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_tuner_8h.xhtml">arm_compute/runtime/CL/CLTuner.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_2_type_printer_8h.xhtml">utils/TypePrinter.h</a>&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_scheduler_8h.xhtml">arm_compute/runtime/Scheduler.h</a>&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cpu_model_8h.xhtml">src/common/cpuinfo/CpuModel.h</a>&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &lt;initializer_list&gt;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &lt;random&gt;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;std::string command_line(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::stringstream <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i = 0; i &lt; argc; i++)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a> &lt;&lt; argv[i] &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">ss</a>.str();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">   77</a></span>&#160;std::unique_ptr&lt;AssetsLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">static</span> constexpr uint32_t      fixed_seed = 1;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">   80</a></span>&#160;std::unique_ptr&lt;AssetsLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">fixed_library</a>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">extern</span> std::unique_ptr&lt;ParametersLibrary&gt; <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">bool</span> file_exists(<span class="keyword">const</span> std::string &amp;filename)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::ifstream file(filename);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> file.good();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;} <span class="comment">//namespace</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">   97</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">framework::Framework</a> &amp;framework = <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">framework::Framework::get</a>();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">utils::CommandLineParser</a> <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    std::set&lt;framework::DatasetMode&gt; allowed_modes</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">framework::DatasetMode::DISABLED</a>,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">framework::DatasetMode::PRECOMMIT</a>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">framework::DatasetMode::NIGHTLY</a>,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    };</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">framework::CommonOptions</a> options(<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">auto</span> dataset_mode = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml">utils::EnumOption&lt;framework::DatasetMode&gt;</a>&gt;(<span class="stringliteral">&quot;mode&quot;</span>, allowed_modes, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">framework::DatasetMode::PRECOMMIT</a>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    dataset_mode-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;For managed datasets select which group to use&quot;</span>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> filter = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;filter&quot;</span>, <span class="stringliteral">&quot;.*&quot;</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    filter-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Regular expression to select test cases&quot;</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">auto</span> filter_id = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;filter-id&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    filter_id-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;List of test ids. ... can be used to define a range.&quot;</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">auto</span> stop_on_error = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;stop-on-error&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    stop_on_error-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Stop execution after the first failed test (useful for debugging)&quot;</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">auto</span> seed = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::random_device::result_type&gt;</a>&gt;(<span class="stringliteral">&quot;seed&quot;</span>, std::random_device()());</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    seed-&gt;set_help(<span class="stringliteral">&quot;Global seed for random number generation&quot;</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">auto</span> list_tests = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;list-tests&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    list_tests-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;List all test names&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">auto</span> test_instruments = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;test-instruments&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    test_instruments-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Test if the instruments work on the platform&quot;</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">auto</span> error_on_missing_assets = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;error-on-missing-assets&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    error_on_missing_assets-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Mark a test as failed instead of skipping it when assets are missing&quot;</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">auto</span> assets = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_positional_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;assets&quot;</span>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    assets-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Path to the assets directory&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">auto</span> print_rerun_command = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;rerun-cmd&quot;</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    print_rerun_command-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Print out the command to rerun the exact failed testcase&quot;</span>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">auto</span> enable_tuner = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;enable-tuner&quot;</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    enable_tuner-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Enable OpenCL dynamic tuner&quot;</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">const</span> std::set&lt;CLTunerMode&gt; supported_tuner_modes</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5ca39e07a5dab0694c7ebb6a0578511ee15">CLTunerMode::EXHAUSTIVE</a>,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5ca1e23852820b9154316c7c06e2b7ba051">CLTunerMode::NORMAL</a>,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5caba44d3559b36fc1c14e5752bccce1eef">CLTunerMode::RAPID</a></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    };</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">auto</span> tuner_mode = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml">utils::EnumOption&lt;CLTunerMode&gt;</a>&gt;(<span class="stringliteral">&quot;tuner-mode&quot;</span>, supported_tuner_modes, <a class="code" href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5ca1e23852820b9154316c7c06e2b7ba051">CLTunerMode::NORMAL</a>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    tuner_mode-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Configures the time taken by the tuner to tune. Slow tuner produces the most performant LWS configuration&quot;</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">auto</span> tuner_file = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;tuner-file&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    tuner_file-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;File to load/save CLTuner values&quot;</span>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">auto</span> mlgo_file = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;std::string&gt;</a>&gt;(<span class="stringliteral">&quot;mlgo-file&quot;</span>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    mlgo_file-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;File to load MLGO heuristics&quot;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">auto</span> threads = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;int&gt;</a>&gt;(<span class="stringliteral">&quot;threads&quot;</span>, 1);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    threads-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Number of threads to use&quot;</span>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">auto</span> cooldown_sec = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml">utils::SimpleOption&lt;float&gt;</a>&gt;(<span class="stringliteral">&quot;delay&quot;</span>, -1.f);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    cooldown_sec-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Delay to add between test executions in seconds&quot;</span>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">auto</span> configure_only = <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.add_option&lt;<a class="code" href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">utils::ToggleOption</a>&gt;(<span class="stringliteral">&quot;configure-only&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    configure_only-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">set_help</a>(<span class="stringliteral">&quot;Only configures kernels, without allocating, running or validating. Needed in order to validate OpenCL kernel run-time compilation, without necessarily running or validating the kernels&#39; execution&quot;</span>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.parse(argc, argv);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">help</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_option.xhtml#a8d75095e0ce4d0cc3ed6bc4733664a74">is_set</a>() &amp;&amp; options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">help</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>())</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.print_help(argv[0]);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        std::vector&lt;std::unique_ptr&lt;framework::Printer&gt;&gt; printers = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a0ecd10cc93de5d317347eab52ede1775">create_printers</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">// Setup CPU Scheduler</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">Scheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">set_num_threads</a>(threads-&gt;value());</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">// Create CPU context</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keyword">auto</span> cpu_ctx = std::make_unique&lt;RuntimeContext&gt;();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        cpu_ctx-&gt;set_scheduler(&amp;<a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">Scheduler::get</a>());</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">// Track CPU context</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keyword">auto</span> cpu_ctx_track = std::make_unique&lt;ContextSchedulerUser&gt;(cpu_ctx.get());</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="comment">// Create parameters</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a> = std::make_unique&lt;ParametersLibrary&gt;();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">parameters</a>-&gt;set_cpu_ctx(std::move(cpu_ctx));</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml">CLTuner</a>                cl_tuner(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml">CLGEMMHeuristicsHandle</a> gemm_heuristics;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>())</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keyword">auto</span> ctx_dev_err = <a class="code" href="namespacearm__compute.xhtml#a419153497f83b7db0c19112371b10a3f">create_opencl_context_and_device</a>(<a class="code" href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">CLBackendType::Native</a>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(std::get&lt;2&gt;(ctx_dev_err) != CL_SUCCESS, <span class="stringliteral">&quot;Failed to create OpenCL context&quot;</span>);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            gemm_heuristics.<a class="code" href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml#a5c2c484ee9132b98af079a39793cd6fd">reload_from_file</a>(mlgo_file-&gt;value());</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ab74ade35e03d97dc260789e541a157ef">default_init_with_context</a>(std::get&lt;1&gt;(ctx_dev_err), std::get&lt;0&gt;(ctx_dev_err), &amp;cl_tuner, &amp;gemm_heuristics);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">if</span>(enable_tuner-&gt;is_set())</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            cl_tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">set_tune_new_kernels</a>(enable_tuner-&gt;value());</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="comment">//set tuner mode</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            cl_tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">set_tuner_mode</a>(tuner_mode-&gt;value());</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="comment">// If that&#39;s the first run then the file won&#39;t exist yet</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span>(file_exists(tuner_file-&gt;value()))</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                cl_tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">load_from_file</a>(tuner_file-&gt;value());</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!tuner_file-&gt;value().empty())</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="comment">//If we&#39;re not tuning and the file doesn&#39;t exist then we should raise an error:</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            cl_tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">load_from_file</a>(tuner_file-&gt;value());</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                p-&gt;print_global_header();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt;= <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">framework::LogLevel::CONFIG</a>)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Version&quot;</span>, <a class="code" href="namespacearm__compute.xhtml#a64c17a5a42d2499a1626222ff9753b4d">build_information</a>());</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;CommandLine&quot;</span>, command_line(argc, argv));</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Seed&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(seed-&gt;value()));</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>())</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    p-&gt;print_entry(<span class="stringliteral">&quot;CL_DEVICE_VERSION&quot;</span>, <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().get_device_version());</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    p-&gt;print_entry(<span class="stringliteral">&quot;CL_DEVICE_VERSION&quot;</span>, <span class="stringliteral">&quot;Unavailable&quot;</span>);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a> &amp;cpu_info = <a class="code" href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">Scheduler::get</a>().<a class="code" href="classarm__compute_1_1_i_scheduler.xhtml#ab0fd9e7b4f6240c55b4fe6a54d4418b5">cpu_info</a>();</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>          num_cpus = cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">get_cpu_num</a>();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_sve&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">has_sve</a>()));</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_sve2&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">has_sve2</a>()));</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_svef32mm&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">has_svef32mm</a>()));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_svei8mm&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">has_svei8mm</a>()));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_svebf16&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">has_svebf16</a>()));</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_sme&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">has_sme</a>()));</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_sme2&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">has_sme2</a>()));</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_fp16&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">has_fp16</a>()));</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_bf16&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">has_bf16</a>()));</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_dotprod&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">has_dotprod</a>()));</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;cpu_has_i8mm&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">has_i8mm</a>()));</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0; j &lt; num_cpus; ++j)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    <span class="keyword">const</span> <a class="code" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> model = cpu_info.<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">get_cpu_model</a>(j);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    p-&gt;print_entry(<span class="stringliteral">&quot;CPU&quot;</span> + <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(j), <a class="code" href="namespacearm__compute_1_1cpuinfo.xhtml#af40137501da64f2da7377b5288e35215">cpuinfo::cpu_model_to_string</a>(model));</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Iterations&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">iterations</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>()));</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                p-&gt;print_entry(<span class="stringliteral">&quot;Threads&quot;</span>, <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>(threads-&gt;value()));</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">support::cpp11::to_string</a>;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    p-&gt;print_entry(<span class="stringliteral">&quot;Dataset mode&quot;</span>, <a class="code" href="namespacearm__compute_1_1test.xhtml#ad98da810dec350d13c281c15ce2f8590">to_string</a>(dataset_mode-&gt;value()));</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="comment">// Setup instruments meta-data</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">framework::InstrumentsInfo</a> <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">instruments_info</a>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">instruments_info</a>._scheduler_users.push_back(cpu_ctx_track.get());</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">set_instruments_info</a>(<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">instruments_info</a>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">// Initialize framework</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">framework::FrameworkConfig</a> fconfig;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">instruments</a>     = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a1f6f1e0b49987b1449fc7c293d19a383">instruments</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml#a0aeb5d3910631c64f1370af7b0f19c26">value</a>();</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">name_filter</a>     = filter-&gt;value();</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">id_filter</a>       = filter_id-&gt;value();</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">num_iterations</a>  = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">iterations</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">mode</a>            = dataset_mode-&gt;value();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">log_level</a>       = options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">cooldown_sec</a>    = cooldown_sec-&gt;value();</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">configure_only</a>  = configure_only-&gt;value();</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aa0ce7e1d2541479293f9ec29f92da6f3">print_rerun_cmd</a> = print_rerun_command-&gt;value();</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        fconfig.<a class="code" href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae21f357c223957d36046a0d71cc6aed7">seed</a>            = seed-&gt;value();</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">init</a>(fconfig);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">add_printer</a>(p.get());</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">set_throw_errors</a>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#acfa78593a32c16d1b3f397a68bbd1c29">throw_errors</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>());</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">set_stop_on_error</a>(stop_on_error-&gt;value());</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">set_error_on_missing_assets</a>(error_on_missing_assets-&gt;value());</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordtype">bool</span> success = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">if</span>(list_tests-&gt;value())</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                p-&gt;print_list_tests(framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">test_infos</a>());</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                p-&gt;print_global_footer();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">if</span>(test_instruments-&gt;value())</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">framework::Profiler</a> profiler = framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">get_profiler</a>();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">start</a>();</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">stop</a>();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                p-&gt;print_measurements(profiler.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#ad548fafce1d10263d6d02fa8df934167">measurements</a>());</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">library</a>       = std::make_unique&lt;AssetsLibrary&gt;(assets-&gt;value(), seed-&gt;value());</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <a class="code" href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">fixed_library</a> = std::make_unique&lt;AssetsLibrary&gt;(assets-&gt;value(), fixed_seed);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">if</span>(!<a class="code" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a>.validate())</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        success = framework.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">run</a>();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">log_level</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>() &gt; <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">framework::LogLevel::NONE</a>)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;p : printers)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                p-&gt;print_global_footer();</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">#ifdef ARM_COMPUTE_CL</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">opencl_is_available</a>())</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">sync</a>();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="keywordflow">if</span>(enable_tuner-&gt;is_set() &amp;&amp; enable_tuner-&gt;value() &amp;&amp; tuner_file-&gt;is_set())</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                cl_tuner.<a class="code" href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">save_to_file</a>(tuner_file-&gt;value());</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        }</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CL */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160; </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">return</span> (success ? 0 : 1);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordflow">catch</span>(<span class="keyword">const</span> std::exception &amp;error)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        std::cerr &lt;&lt; error.what() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">if</span>(options.<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#acfa78593a32c16d1b3f397a68bbd1c29">throw_errors</a>-&gt;<a class="code" href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">value</a>())</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_cpu_model_8h_xhtml"><div class="ttname"><a href="_cpu_model_8h.xhtml">CpuModel.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_acc5dddee1cbe93a4eaf0a9f74ee96bb7"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#acc5dddee1cbe93a4eaf0a9f74ee96bb7">arm_compute::support::cpp11::to_string</a></div><div class="ttdeci">std::string to_string(T &amp;&amp;value)</div><div class="ttdoc">Convert integer and float values to string.</div><div class="ttdef"><b>Definition:</b> <a href="_string_support_8h_source.xhtml#l00168">StringSupport.h:168</a></div></div>
<div class="ttc" id="a_c_l_g_e_m_m_heuristics_handle_8h_xhtml"><div class="ttname"><a href="_c_l_g_e_m_m_heuristics_handle_8h.xhtml">CLGEMMHeuristicsHandle.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5f49decb4b0a74d5361686ab45db8961"><div class="ttname"><a href="namespacearm__compute.xhtml#a5f49decb4b0a74d5361686ab45db8961">arm_compute::opencl_is_available</a></div><div class="ttdeci">bool opencl_is_available()</div><div class="ttdoc">Check if OpenCL is available.</div><div class="ttdef"><b>Definition:</b> <a href="_open_c_l_8cpp_source.xhtml#l00236">OpenCL.cpp:236</a></div></div>
<div class="ttc" id="a_string_support_8h_xhtml"><div class="ttname"><a href="_string_support_8h.xhtml">StringSupport.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a81409e78339a5ed0dfb97d152111b568"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">arm_compute::CPUInfo::has_sve2</a></div><div class="ttdeci">bool has_sve2() const</div><div class="ttdoc">Checks if the cpu model supports sve2.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00100">CPPTypes.cpp:100</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml">arm_compute::test::framework::FrameworkConfig</a></div><div class="ttdoc">Framework configuration structure.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00057">Framework.h:57</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml">arm_compute::test::framework::CommonOptions</a></div><div class="ttdoc">Common command line options used to configure the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00054">CommonOptions.h:54</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ab702e2f7530d6172eea3780d8923bd71"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ab702e2f7530d6172eea3780d8923bd71">arm_compute::test::framework::FrameworkConfig::num_iterations</a></div><div class="ttdeci">int num_iterations</div><div class="ttdoc">Number of iterations per test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00063">Framework.h:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml">arm_compute::test::framework::Profiler</a></div><div class="ttdoc">Profiler class to collect benchmark numbers.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00045">Profiler.h:45</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_aa0ce7e1d2541479293f9ec29f92da6f3"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aa0ce7e1d2541479293f9ec29f92da6f3">arm_compute::test::framework::FrameworkConfig::print_rerun_cmd</a></div><div class="ttdeci">bool print_rerun_cmd</div><div class="ttdoc">Print the command to rerun the failed testcase.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00067">Framework.h:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5f16ced78873ee3a193490197fbf57a5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5f16ced78873ee3a193490197fbf57a5">arm_compute::test::framework::Framework::add_printer</a></div><div class="ttdeci">void add_printer(Printer *printer)</div><div class="ttdoc">Set the printer used for the output of test results.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00678">Framework.cpp:678</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa41d7415a5386798147cccae2333d5d4"><div class="ttname"><a href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">arm_compute::CPUModel</a></div><div class="ttdeci">CPUModel</div><div class="ttdoc">CPU models types.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00059">CPPTypes.h:59</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_ad98da810dec350d13c281c15ce2f8590"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#ad98da810dec350d13c281c15ce2f8590">arm_compute::test::to_string</a></div><div class="ttdeci">std::string to_string(const SimpleTensor&lt; T &gt; &amp;tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_simple_tensor_printer_8h_source.xhtml#l00138">SimpleTensorPrinter.h:138</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></div><div class="ttdef"><b>Definition:</b> <a href="tests_8dox_source.xhtml#l00026">tests.dox:26</a></div></div>
<div class="ttc" id="a_command_line_options_8h_xhtml"><div class="ttname"><a href="_command_line_options_8h.xhtml">CommandLineOptions.h</a></div></div>
<div class="ttc" id="a_assets_library_8h_xhtml"><div class="ttname"><a href="_assets_library_8h.xhtml">AssetsLibrary.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a419153497f83b7db0c19112371b10a3f"><div class="ttname"><a href="namespacearm__compute.xhtml#a419153497f83b7db0c19112371b10a3f">arm_compute::create_opencl_context_and_device</a></div><div class="ttdeci">std::tuple&lt; cl::Context, cl::Device, cl_int &gt; create_opencl_context_and_device(CLBackendType cl_backend_type)</div><div class="ttdoc">This function creates an OpenCL context and a device.</div><div class="ttdef"><b>Definition:</b> <a href="runtime_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00121">CLHelpers.cpp:121</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a3954437274c111b1d51ae164fbe6bb2f"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a3954437274c111b1d51ae164fbe6bb2f">arm_compute::CLTuner::save_to_file</a></div><div class="ttdeci">bool save_to_file(const std::string &amp;filename) const</div><div class="ttdoc">Save the content of the tuning parameters table to file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00350">CLTuner.cpp:350</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_aacd94676ebb33ecba00dfebe12c9392d"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#aacd94676ebb33ecba00dfebe12c9392d">arm_compute::test::framework::Framework::test_infos</a></div><div class="ttdeci">std::vector&lt; TestInfo &gt; test_infos() const</div><div class="ttdoc">List of TestInfo's.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00683">Framework.cpp:683</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a8941b8f8c3adf13bdd7ecd43deac39f2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a8941b8f8c3adf13bdd7ecd43deac39f2">arm_compute::test::framework::CommonOptions::help</a></div><div class="ttdeci">arm_compute::utils::ToggleOption * help</div><div class="ttdoc">Show help option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00074">CommonOptions.h:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_ad55f80ed3cd8b6c4f247763b747016af"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ad55f80ed3cd8b6c4f247763b747016af">arm_compute::CLScheduler::sync</a></div><div class="ttdeci">void sync()</div><div class="ttdoc">Blocks until all commands in the associated command queue have finished.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00071">CLScheduler.cpp:71</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_aadbc5003f5cc399930b16ddb89b16cdc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#aadbc5003f5cc399930b16ddb89b16cdc">arm_compute::test::framework::FrameworkConfig::mode</a></div><div class="ttdeci">DatasetMode mode</div><div class="ttdoc">Dataset mode.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00062">Framework.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_ab4b7e9757ad7e9d23b608b617c5dffa6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#ab4b7e9757ad7e9d23b608b617c5dffa6">arm_compute::test::framework::Framework::set_stop_on_error</a></div><div class="ttdeci">void set_stop_on_error(bool stop_on_error)</div><div class="ttdoc">Set whether to stop execution after the first failed test.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00277">Framework.cpp:277</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_scheduler_xhtml_ab0fd9e7b4f6240c55b4fe6a54d4418b5"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#ab0fd9e7b4f6240c55b4fe6a54d4418b5">arm_compute::IScheduler::cpu_info</a></div><div class="ttdeci">CPUInfo &amp; cpu_info()</div><div class="ttdoc">Get CPU info.</div><div class="ttdef"><b>Definition:</b> <a href="_i_scheduler_8cpp_source.xhtml#l00042">IScheduler.cpp:42</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9ab50339a10e1de285ac99d4c3990b8693">arm_compute::test::framework::LogLevel::NONE</a></div><div class="ttdeci">@ NONE</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_scheduler_xhtml_a645ac2d9d4144fd0174296de7eb1e1b5"><div class="ttname"><a href="classarm__compute_1_1_i_scheduler.xhtml#a645ac2d9d4144fd0174296de7eb1e1b5">arm_compute::IScheduler::set_num_threads</a></div><div class="ttdeci">virtual void set_num_threads(unsigned int num_threads)=0</div><div class="ttdoc">Sets the number of threads the scheduler will use to run the kernels.</div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a90eee7a4677ca8b1ed116364a24367f9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">GemmTuner.parser</a></div><div class="ttdeci">parser</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00640">GemmTuner.py:640</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a8d31247d25bfe0a0b669d367aa801c2d"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">arm_compute::CPUInfo::has_dotprod</a></div><div class="ttdeci">bool has_dotprod() const</div><div class="ttdoc">Checks if the cpu model supports dot product.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00075">CPPTypes.cpp:75</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a16fda368866c2a2e2d5a54eda52050f9"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a16fda368866c2a2e2d5a54eda52050f9">arm_compute::test::framework::FrameworkConfig::log_level</a></div><div class="ttdeci">LogLevel log_level</div><div class="ttdoc">Verbosity of the output.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00065">Framework.h:65</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae76ef5bd3ad69f7380ebb3ac6033ec5ca39e07a5dab0694c7ebb6a0578511ee15"><div class="ttname"><a href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5ca39e07a5dab0694c7ebb6a0578511ee15">arm_compute::CLTunerMode::EXHAUSTIVE</a></div><div class="ttdeci">@ EXHAUSTIVE</div><div class="ttdoc">Searches all possible LWS configurations while tuning.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a934b3b3a24b2f25bde992b6883caf3f0"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">arm_compute::CPUInfo::has_sme</a></div><div class="ttdeci">bool has_sme() const</div><div class="ttdoc">Checks if the cpu model supports sme.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00105">CPPTypes.cpp:105</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a0ecd10cc93de5d317347eab52ede1775"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a0ecd10cc93de5d317347eab52ede1775">arm_compute::test::framework::CommonOptions::create_printers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Printer &gt; &gt; create_printers()</div><div class="ttdoc">Create the printers based on parsed command line options.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8cpp_source.xhtml#l00104">CommonOptions.cpp:104</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a3828c0e892d45f2b4af6dc5d34c377b7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">arm_compute::CPUInfo::get_cpu_num</a></div><div class="ttdeci">unsigned int get_cpu_num() const</div><div class="ttdoc">Return the maximum number of CPUs present.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00055">CPPTypes.cpp:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae76ef5bd3ad69f7380ebb3ac6033ec5ca1e23852820b9154316c7c06e2b7ba051"><div class="ttname"><a href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5ca1e23852820b9154316c7c06e2b7ba051">arm_compute::CLTunerMode::NORMAL</a></div><div class="ttdeci">@ NORMAL</div><div class="ttdoc">Searches a subset of LWS configurations while tuning.</div></div>
<div class="ttc" id="a_c_l_tuner_8h_xhtml"><div class="ttname"><a href="_c_l_tuner_8h.xhtml">CLTuner.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_command_line_parser_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_command_line_parser.xhtml">arm_compute::utils::CommandLineParser</a></div><div class="ttdoc">Class to parse command line arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_parser_8h_source.xhtml#l00044">CommandLineParser.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_enum_list_option_xhtml_a0aeb5d3910631c64f1370af7b0f19c26"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_enum_list_option.xhtml#a0aeb5d3910631c64f1370af7b0f19c26">arm_compute::utils::EnumListOption::value</a></div><div class="ttdeci">const std::vector&lt; T &gt; &amp; value() const</div><div class="ttdoc">Get the values of the option.</div><div class="ttdef"><b>Definition:</b> <a href="_enum_list_option_8h_source.xhtml#l00147">EnumListOption.h:147</a></div></div>
<div class="ttc" id="a_profiler_8h_xhtml"><div class="ttname"><a href="_profiler_8h.xhtml">Profiler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_ae3a44e5d711e5707a9d974d085bcccdd"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">arm_compute::CPUInfo::has_bf16</a></div><div class="ttdeci">bool has_bf16() const</div><div class="ttdoc">Checks if the cpu model supports bf16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00065">CPPTypes.cpp:65</a></div></div>
<div class="ttc" id="autils_2_type_printer_8h_xhtml"><div class="ttname"><a href="utils_2_type_printer_8h.xhtml">TypePrinter.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a02110ece50ffc08b8ae07c7a63eb10df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a02110ece50ffc08b8ae07c7a63eb10df">arm_compute::test::validation::ss</a></div><div class="ttdeci">std::stringstream ss(mlgo_str)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a0647761f309e3b3edb5a5501b3ff38d2"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">arm_compute::CPUInfo::has_fp16</a></div><div class="ttdeci">bool has_fp16() const</div><div class="ttdoc">Checks if the cpu model supports fp16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00060">CPPTypes.cpp:60</a></div></div>
<div class="ttc" id="atests_2framework_2printers_2_printers_8h_xhtml"><div class="ttname"><a href="tests_2framework_2printers_2_printers_8h.xhtml">Printers.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml">arm_compute::test::framework::Framework</a></div><div class="ttdoc">Main framework class.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00097">Framework.h:97</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="a_dataset_modes_8h_xhtml"><div class="ttname"><a href="_dataset_modes_8h.xhtml">DatasetModes.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a47e7a1a6baab80560c11a9ee8f8a0636"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a47e7a1a6baab80560c11a9ee8f8a0636">arm_compute::test::framework::Framework::get_profiler</a></div><div class="ttdeci">Profiler get_profiler() const</div><div class="ttdoc">Factory method to obtain a configured profiler.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00649">Framework.cpp:649</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ae702b5e08d44b9130a674277503d1af1"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae702b5e08d44b9130a674277503d1af1">arm_compute::test::framework::FrameworkConfig::configure_only</a></div><div class="ttdeci">bool configure_only</div><div class="ttdoc">Only configure kernels.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00066">Framework.h:66</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfad791cd54143e331164a2b216451a5dd3">arm_compute::test::framework::DatasetMode::NIGHTLY</a></div><div class="ttdeci">@ NIGHTLY</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a755837a8f4938f8013f4251014a958e4"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a755837a8f4938f8013f4251014a958e4">arm_compute::test::framework::Framework::set_instruments_info</a></div><div class="ttdeci">void set_instruments_info(InstrumentsInfo instr_info)</div><div class="ttdoc">Sets instruments info.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00709">Framework.cpp:709</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_scheduler_xhtml_a0d63ca713bab377aabcfb63c192b8429"><div class="ttname"><a href="classarm__compute_1_1_scheduler.xhtml#a0d63ca713bab377aabcfb63c192b8429">arm_compute::Scheduler::get</a></div><div class="ttdeci">static IScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_scheduler_8cpp_source.xhtml#l00094">Scheduler.cpp:94</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a2b9042cf824009ba61c37b0c99b3eab7"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a2b9042cf824009ba61c37b0c99b3eab7">arm_compute::test::framework::FrameworkConfig::id_filter</a></div><div class="ttdeci">std::string id_filter</div><div class="ttdoc">String to match selected test ids.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00061">Framework.h:61</a></div></div>
<div class="ttc" id="a_command_line_parser_8h_xhtml"><div class="ttname"><a href="_command_line_parser_8h.xhtml">CommandLineParser.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a5e61ba4403f0d2bd4f755f59193af692"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a5e61ba4403f0d2bd4f755f59193af692">arm_compute::test::framework::Framework::set_throw_errors</a></div><div class="ttdeci">void set_throw_errors(bool throw_errors)</div><div class="ttdoc">Set whether errors are caught or thrown by the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00267">Framework.cpp:267</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_toggle_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_toggle_option.xhtml">arm_compute::utils::ToggleOption</a></div><div class="ttdoc">Implementation of an option that can be either true or false.</div><div class="ttdef"><b>Definition:</b> <a href="_toggle_option_8h_source.xhtml#l00035">ToggleOption.h:35</a></div></div>
<div class="ttc" id="a_c_l_scheduler_8h_xhtml"><div class="ttname"><a href="_c_l_scheduler_8h.xhtml">CLScheduler.h</a></div><div class="ttdoc">Interface to enqueue OpenCL kernels and get/set the OpenCL CommandQueue and ICLTuner.</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a4ad3b7ba69599b41ab0954a39d7e7cbc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a4ad3b7ba69599b41ab0954a39d7e7cbc">arm_compute::test::framework::FrameworkConfig::instruments</a></div><div class="ttdeci">std::vector&lt; framework::InstrumentsDescription &gt; instruments</div><div class="ttdoc">Instrument types that will be used for benchmarking.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00059">Framework.h:59</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae76ef5bd3ad69f7380ebb3ac6033ec5caba44d3559b36fc1c14e5752bccce1eef"><div class="ttname"><a href="namespacearm__compute.xhtml#ae76ef5bd3ad69f7380ebb3ac6033ec5caba44d3559b36fc1c14e5752bccce1eef">arm_compute::CLTunerMode::RAPID</a></div><div class="ttdeci">@ RAPID</div><div class="ttdoc">Searches a minimal subset of LWS configurations while tuning.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a149ad6701e3e2414cb566bb414029841"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a149ad6701e3e2414cb566bb414029841">arm_compute::test::framework::Framework::run</a></div><div class="ttdeci">bool run()</div><div class="ttdoc">Run all enabled test cases.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00546">Framework.cpp:546</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a46a0cefc3b9a13645548ec705f438ce9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a46a0cefc3b9a13645548ec705f438ce9">arm_compute::test::framework::Framework::set_error_on_missing_assets</a></div><div class="ttdeci">void set_error_on_missing_assets(bool error_on_missing_assets)</div><div class="ttdoc">Set whether a test should be considered as failed if its assets cannot be found.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00287">Framework.cpp:287</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_option_xhtml_a8d75095e0ce4d0cc3ed6bc4733664a74"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a8d75095e0ce4d0cc3ed6bc4733664a74">arm_compute::utils::Option::is_set</a></div><div class="ttdeci">bool is_set() const</div><div class="ttdoc">Has a value been assigned to the option?</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00134">Option.h:134</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_heuristics_handle_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml">arm_compute::CLGEMMHeuristicsHandle</a></div><div class="ttdoc">Handle for loading and retrieving GEMM heuristics.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_heuristics_handle_8h_source.xhtml#l00038">CLGEMMHeuristicsHandle.h:38</a></div></div>
<div class="ttc" id="a_open_c_l_8h_xhtml"><div class="ttname"><a href="_open_c_l_8h.xhtml">OpenCL.h</a></div><div class="ttdoc">Wrapper to configure the Khronos OpenCL C++ header.</div></div>
<div class="ttc" id="a_exceptions_8h_xhtml"><div class="ttname"><a href="_exceptions_8h.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a_instruments_8h_xhtml"><div class="ttname"><a href="_instruments_8h.xhtml">Instruments.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_enum_option_xhtml_ab5d906b55180c260032ce43d6c5d4d06"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_enum_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">arm_compute::utils::EnumOption::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdoc">Get the selected value.</div><div class="ttdef"><b>Definition:</b> <a href="_enum_option_8h_source.xhtml#l00129">EnumOption.h:129</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfab829534c7b40afdbd3c3ffea05202a97">arm_compute::test::framework::DatasetMode::PRECOMMIT</a></div><div class="ttdeci">@ PRECOMMIT</div></div>
<div class="ttc" id="aruntime_2_c_l_2_c_l_helpers_8h_xhtml"><div class="ttname"><a href="runtime_2_c_l_2_c_l_helpers_8h.xhtml">CLHelpers.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a77c6d2e5ffdac1eb191c637584b63e9f"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">arm_compute::CPUInfo::has_svebf16</a></div><div class="ttdeci">bool has_svebf16() const</div><div class="ttdoc">Checks if the cpu model supports bf16.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00070">CPPTypes.cpp:70</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a7b945f4077c1c4e623fd8d13b0cac29c"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">arm_compute::CPUInfo::has_i8mm</a></div><div class="ttdeci">bool has_i8mm() const</div><div class="ttdoc">Checks if the cpu model supports integer matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00085">CPPTypes.cpp:85</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_g_e_m_m_heuristics_handle_xhtml_a5c2c484ee9132b98af079a39793cd6fd"><div class="ttname"><a href="classarm__compute_1_1_c_l_g_e_m_m_heuristics_handle.xhtml#a5c2c484ee9132b98af079a39793cd6fd">arm_compute::CLGEMMHeuristicsHandle::reload_from_file</a></div><div class="ttdeci">bool reload_from_file(const std::string &amp;filename)</div><div class="ttdoc">(Re)Load the heuristics from reading a dotmlgo file</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_g_e_m_m_heuristics_handle_8cpp_source.xhtml#l00035">CLGEMMHeuristicsHandle.cpp:35</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_af8fbb8b386d3cce307a89002bcdbcfc9"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#af8fbb8b386d3cce307a89002bcdbcfc9">arm_compute::test::framework::Framework::get</a></div><div class="ttdeci">static Framework &amp; get()</div><div class="ttdoc">Access to the singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00124">Framework.cpp:124</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_af90c2445eb8a45fd74b11c574c8cb6b9"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#af90c2445eb8a45fd74b11c574c8cb6b9">arm_compute::test::fixed_library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; fixed_library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00080">main.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="a_common_options_8h_xhtml"><div class="ttname"><a href="_common_options_8h.xhtml">CommonOptions.h</a></div></div>
<div class="ttc" id="a_scheduler_8h_xhtml"><div class="ttname"><a href="_scheduler_8h.xhtml">Scheduler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_ad548fafce1d10263d6d02fa8df934167"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#ad548fafce1d10263d6d02fa8df934167">arm_compute::test::framework::Profiler::measurements</a></div><div class="ttdeci">const MeasurementsMap &amp; measurements() const</div><div class="ttdoc">Return measurements for all instruments.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00089">Profiler.cpp:89</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_option_xhtml_a48a2672f362eeed9a3e93403f4d3de37"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_option.xhtml#a48a2672f362eeed9a3e93403f4d3de37">arm_compute::utils::Option::set_help</a></div><div class="ttdeci">void set_help(std::string help)</div><div class="ttdoc">Set the help message for the option.</div><div class="ttdef"><b>Definition:</b> <a href="_option_8h_source.xhtml#l00124">Option.h:124</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_instruments_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_instruments_info.xhtml">arm_compute::test::framework::InstrumentsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_instruments_8h_source.xhtml#l00063">Instruments.h:63</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_a71326f0909d77386e29b511e1990a11f"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#a71326f0909d77386e29b511e1990a11f">arm_compute::test::library</a></div><div class="ttdeci">std::unique_ptr&lt; AssetsLibrary &gt; library</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00077">main.cpp:77</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a543c34e4b882beda4230fbb8e9b99bfc"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a543c34e4b882beda4230fbb8e9b99bfc">arm_compute::test::framework::FrameworkConfig::name_filter</a></div><div class="ttdeci">std::string name_filter</div><div class="ttdoc">Regular expression to filter tests by name.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00060">Framework.h:60</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b">arm_compute::test::framework::DatasetMode::DISABLED</a></div><div class="ttdeci">@ DISABLED</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a629b7f8097121022b5fae83ed4b1581f"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">arm_compute::CPUInfo::has_sme2</a></div><div class="ttdeci">bool has_sme2() const</div><div class="ttdoc">Checks if the cpu model supports sme2.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00110">CPPTypes.cpp:110</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_xhtml_abb222b6342b2b9056ec65056984d5e21"><div class="ttname"><a href="namespacearm__compute_1_1test.xhtml#abb222b6342b2b9056ec65056984d5e21">arm_compute::test::parameters</a></div><div class="ttdeci">std::unique_ptr&lt; ParametersLibrary &gt; parameters</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00046">Framework.cpp:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2f7dae768d45b1c3781748808f1c16a4"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">arm_compute::CPUInfo::has_sve</a></div><div class="ttdeci">bool has_sve() const</div><div class="ttdoc">Checks if the cpu model supports sve.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00095">CPPTypes.cpp:95</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_ab74ade35e03d97dc260789e541a157ef"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#ab74ade35e03d97dc260789e541a157ef">arm_compute::CLScheduler::default_init_with_context</a></div><div class="ttdeci">void default_init_with_context(cl::Device &amp;device, cl::Context &amp;ctx, ICLTuner *cl_tuner=nullptr, CLGEMMHeuristicsHandle *gemm_h=nullptr)</div><div class="ttdoc">Initialises the scheduler with context and device provided by the user.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00119">CLScheduler.cpp:119</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826"><div class="ttname"><a href="namespacearm__compute.xhtml#a94eb95e47316e7dc5af7615592d26bdda925641e0b76c28cc940e8f3ca178d826">arm_compute::CLBackendType::Native</a></div><div class="ttdeci">@ Native</div><div class="ttdoc">OpenCL native backend.</div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_enum_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_enum_option.xhtml">arm_compute::utils::EnumOption</a></div><div class="ttdoc">Implementation of a simple option that accepts a value from a fixed set.</div><div class="ttdef"><b>Definition:</b> <a href="_enum_option_8h_source.xhtml#l00039">EnumOption.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a73e99d350a4aa6f1a5af04ec29173f73">arm_compute::test::framework::LogLevel::CONFIG</a></div><div class="ttdeci">@ CONFIG</div></div>
<div class="ttc" id="a_version_8h_xhtml"><div class="ttname"><a href="_version_8h.xhtml">Version.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a64c17a5a42d2499a1626222ff9753b4d"><div class="ttname"><a href="namespacearm__compute.xhtml#a64c17a5a42d2499a1626222ff9753b4d">arm_compute::build_information</a></div><div class="ttdeci">std::string build_information()</div><div class="ttdoc">Returns the arm_compute library build information.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_afcea4ca06109422a01d4d844c92ce6d1"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#afcea4ca06109422a01d4d844c92ce6d1">arm_compute::test::framework::CommonOptions::iterations</a></div><div class="ttdeci">arm_compute::utils::SimpleOption&lt; int &gt; * iterations</div><div class="ttdoc">Number of iterations option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00076">CommonOptions.h:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2ce2bff23b934048c003ac612e9abd83"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">arm_compute::CPUInfo::has_svei8mm</a></div><div class="ttdeci">bool has_svei8mm() const</div><div class="ttdoc">Checks if the cpu model supports integer matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00090">CPPTypes.cpp:90</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_simple_option_xhtml_ab5d906b55180c260032ce43d6c5d4d06"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml#ab5d906b55180c260032ce43d6c5d4d06">arm_compute::utils::SimpleOption::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdoc">Get the option value.</div><div class="ttdef"><b>Definition:</b> <a href="_simple_option_8h_source.xhtml#l00111">SimpleOption.h:111</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_a1f6f1e0b49987b1449fc7c293d19a383"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#a1f6f1e0b49987b1449fc7c293d19a383">arm_compute::test::framework::CommonOptions::instruments</a></div><div class="ttdeci">arm_compute::utils::EnumListOption&lt; InstrumentsDescription &gt; * instruments</div><div class="ttdoc">Instruments option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00075">CommonOptions.h:75</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a8c528baf37154d347366083f0f816846"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a8c528baf37154d347366083f0f816846">arm_compute::test::framework::Profiler::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Call stop() on all the added instruments.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00056">Profiler.cpp:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_a5ddfa449f78e4c4d8345e37f1719cc57"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#a5ddfa449f78e4c4d8345e37f1719cc57">arm_compute::CLTuner::load_from_file</a></div><div class="ttdeci">void load_from_file(const std::string &amp;filename)</div><div class="ttdoc">Load the tuning parameters table from file.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00298">CLTuner.cpp:298</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a60de64d75454385b23995437f1d72669"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a60de64d75454385b23995437f1d72669">arm_compute::test::framework::Profiler::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Call start() on all the added instruments.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8cpp_source.xhtml#l00048">Profiler.cpp:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aae485b24df65d39cb646e48317f49639"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aae485b24df65d39cb646e48317f49639">arm_compute::CLTuner::set_tuner_mode</a></div><div class="ttdeci">void set_tuner_mode(CLTunerMode mode)</div><div class="ttdoc">Set OpenCL tuner mode.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00089">CLTuner.cpp:89</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpuinfo_xhtml_af40137501da64f2da7377b5288e35215"><div class="ttname"><a href="namespacearm__compute_1_1cpuinfo.xhtml#af40137501da64f2da7377b5288e35215">arm_compute::cpuinfo::cpu_model_to_string</a></div><div class="ttdeci">std::string cpu_model_to_string(CpuModel model)</div><div class="ttdoc">Convert a CPU model value to a string.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_model_8cpp_source.xhtml#l00030">CpuModel.cpp:30</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_aa6a7c74a5e00e3846338fbcd5ea57094"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#aa6a7c74a5e00e3846338fbcd5ea57094">arm_compute::test::framework::CommonOptions::log_level</a></div><div class="ttdeci">arm_compute::utils::EnumOption&lt; LogLevel &gt; * log_level</div><div class="ttdoc">Logging level option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00079">CommonOptions.h:79</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_framework_xhtml_a01e3aa67ceaeae837e9a68050d850724"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_framework.xhtml#a01e3aa67ceaeae837e9a68050d850724">arm_compute::test::framework::Framework::init</a></div><div class="ttdeci">void init(const FrameworkConfig &amp;config)</div><div class="ttdoc">Init the framework.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00130">Framework.cpp:130</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml_aba10acdb2d58e3e0a96364c487a71d40"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml#aba10acdb2d58e3e0a96364c487a71d40">arm_compute::CLTuner::set_tune_new_kernels</a></div><div class="ttdeci">void set_tune_new_kernels(bool tune_new_kernels)</div><div class="ttdoc">Setter for tune_new_kernels option.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8cpp_source.xhtml#l00080">CLTuner.cpp:80</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_common_options_xhtml_acfa78593a32c16d1b3f397a68bbd1c29"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_common_options.xhtml#acfa78593a32c16d1b3f397a68bbd1c29">arm_compute::test::framework::CommonOptions::throw_errors</a></div><div class="ttdeci">arm_compute::utils::ToggleOption * throw_errors</div><div class="ttdoc">Throw errors option.</div><div class="ttdef"><b>Definition:</b> <a href="_common_options_8h_source.xhtml#l00080">CommonOptions.h:80</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_ae21f357c223957d36046a0d71cc6aed7"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#ae21f357c223957d36046a0d71cc6aed7">arm_compute::test::framework::FrameworkConfig::seed</a></div><div class="ttdeci">unsigned int seed</div><div class="ttdoc">The seed that is used to fill tensors with random values.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00068">Framework.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1utils_1_1_simple_option_xhtml"><div class="ttname"><a href="classarm__compute_1_1utils_1_1_simple_option.xhtml">arm_compute::utils::SimpleOption&lt; std::string &gt;</a></div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_framework_config_xhtml_a1455a5b0439d88e4e1f4e344fb0f9113"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_framework_config.xhtml#a1455a5b0439d88e4e1f4e344fb0f9113">arm_compute::test::framework::FrameworkConfig::cooldown_sec</a></div><div class="ttdeci">float cooldown_sec</div><div class="ttdoc">Delay between tests in seconds.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00064">Framework.h:64</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_aaa12d6e2d28e061e8dec5a29b0a0817d"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">arm_compute::CPUInfo::has_svef32mm</a></div><div class="ttdeci">bool has_svef32mm() const</div><div class="ttdoc">Checks if the cpu model supports floating-point matrix multiplication.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00080">CPPTypes.cpp:80</a></div></div>
<div class="ttc" id="atests_2instruments_2_helpers_8h_xhtml"><div class="ttname"><a href="tests_2instruments_2_helpers_8h.xhtml">Helpers.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_adeaa0a402395806e538066d09bcd668b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#adeaa0a402395806e538066d09bcd668b">arm_compute::test::framework::instruments_info</a></div><div class="ttdeci">std::unique_ptr&lt; InstrumentsInfo &gt; instruments_info</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8cpp_source.xhtml#l00050">Framework.cpp:50</a></div></div>
<div class="ttc" id="amain_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="main_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdef"><b>Definition:</b> <a href="main_8cpp_source.xhtml#l00097">main.cpp:97</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_tuner_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_tuner.xhtml">arm_compute::CLTuner</a></div><div class="ttdoc">Basic implementation of the OpenCL tuner interface.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_tuner_8h_source.xhtml#l00040">CLTuner.h:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a1d1a4992ced850f18f97b27492bbb081"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">arm_compute::CPUInfo::get_cpu_model</a></div><div class="ttdeci">CPUModel get_cpu_model(unsigned int cpuid) const</div><div class="ttdoc">Gets the cpu model for a given cpuid.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00120">CPPTypes.cpp:120</a></div></div>
<div class="ttc" id="a_parameters_library_8h_xhtml"><div class="ttname"><a href="_parameters_library_8h.xhtml">ParametersLibrary.h</a></div></div>
<div class="ttc" id="a_framework_8h_xhtml"><div class="ttname"><a href="_framework_8h.xhtml">Framework.h</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="main_8cpp.xhtml">main.cpp</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:23 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
