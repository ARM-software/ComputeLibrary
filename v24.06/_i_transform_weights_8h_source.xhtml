<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/runtime/ITransformWeights.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_i_transform_weights_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ITransformWeights.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_transform_weights_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_ITRANSFORMWEIGHTS_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_ITRANSFORMWEIGHTS_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;atomic&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">// Forward declarations</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">class </span>ITensor;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/** Weights tensor transform interface</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> *  In order to identify the different reshape functions, each reshape function has</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> * to generate a unique id. We use the following conversion using an unsigned 32bit value:</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * Lower two bits store the target:</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> * 00 -&gt; Neon</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> * 01 -&gt; CL</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * 11 -&gt; Unused</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * Five bits store the id of the reshape function:</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * 00000 -&gt; FullyConnectedLayerReshapeWeights</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * 00001 -&gt; ConvertFullyConnectedWeights</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> * 00010 -&gt; ConvolutionLayerReshapeWeights</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * 00011 -&gt; DepthwiseConvolutionLayerReshapeWeights</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * 00100 -&gt; GEMMReshapeLHSMatrixKernel</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> * 00101 -&gt; GEMMReshapeRHSMatrixKernel</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> * Rest of the bits are used for identifying special cases such as assembly functions and extra</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * arguments in the reshape kernels.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> * */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml">   56</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /** Default Constructor */</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a3be73f42915ec7c1dc86f1fc3d55f16c">ITransformWeights</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">    /** Default Destructor */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a14340b394ad5337e5df508acfc761be2">~ITransformWeights</a>() = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /** Prevent instances of this class to be copy constructed */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a3be73f42915ec7c1dc86f1fc3d55f16c">ITransformWeights</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">    /** Prevent instances of this class to be copied */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;<a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#ae88b4b071d62e2347cff2560f1cc7d77">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml#a878b78d4a3173364df38b206ea17551d">   68</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a878b78d4a3173364df38b206ea17551d">ITransformWeights</a>(<a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;&amp;other)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        *<span class="keyword">this</span> = std::move(other);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml#a659c3992e945dff7803f0cd4e695df4d">   73</a></span>&#160;    <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;<a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a659c3992e945dff7803f0cd4e695df4d">operator=</a>(<a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml">ITransformWeights</a> &amp;&amp;other)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;other)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            _num_refcount = other._num_refcount.load();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            _reshape_run  = other._reshape_run;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /** Get a pointer to the transformed weights</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @return The pointer to the transformed ITensor weights</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_i_tensor.xhtml">ITensor</a> *<a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#abbb145f6ce09dfdcff05acb800b76da0">get_weights</a>() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /** Function that returns a unique id of the reshape function</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * @return The computed unique id</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">virtual</span> uint32_t <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#ad893d467b72461e2d242b457017678f2">uid</a>() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">    /** Run the transformation function */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a18954417d3124a8095783ea13dc6d00b">run</a>() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">    /** Release transformed weights memory */</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#aab0a52fdd148a54108e7bf49287d7c47">release</a>() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /** Increase the object&#39;s refcount */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml#a107499c55d761f85406e7dfa751cbf5c">   98</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#a107499c55d761f85406e7dfa751cbf5c">increase_refcount</a>()</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        ++_num_refcount;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /** Decrease the object&#39;s refcount and return the updated value</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @return The updated refcount</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * */</span></div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml#ab360283eef792af17ef4bb54fdf112e0">  107</a></span>&#160;    int32_t <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#ab360283eef792af17ef4bb54fdf112e0">decrease_refcount</a>()</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> --_num_refcount;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /** Function that returns a flag on whether the weights are reshaped or not</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @return True if the function is reshaped</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_transform_weights.xhtml#aadbb0bd6002839d9d1650fae463a36c2">  116</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_i_transform_weights.xhtml#aadbb0bd6002839d9d1650fae463a36c2">is_reshape_run</a>()</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> _reshape_run;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    std::atomic&lt;int32_t&gt; _num_refcount{0};</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">bool</span>                 _reshape_run{<span class="keyword">false</span>};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;};</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*ARM_COMPUTE_ITRANSFORMWEIGHTS_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a659c3992e945dff7803f0cd4e695df4d"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a659c3992e945dff7803f0cd4e695df4d">arm_compute::ITransformWeights::operator=</a></div><div class="ttdeci">ITransformWeights &amp; operator=(ITransformWeights &amp;&amp;other)</div><div class="ttdoc">Allow instances of this class to be moved.</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00073">ITransformWeights.h:73</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a3be73f42915ec7c1dc86f1fc3d55f16c"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a3be73f42915ec7c1dc86f1fc3d55f16c">arm_compute::ITransformWeights::ITransformWeights</a></div><div class="ttdeci">ITransformWeights()=default</div><div class="ttdoc">Default Constructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a14340b394ad5337e5df508acfc761be2"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a14340b394ad5337e5df508acfc761be2">arm_compute::ITransformWeights::~ITransformWeights</a></div><div class="ttdeci">virtual ~ITransformWeights()=default</div><div class="ttdoc">Default Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_aab0a52fdd148a54108e7bf49287d7c47"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#aab0a52fdd148a54108e7bf49287d7c47">arm_compute::ITransformWeights::release</a></div><div class="ttdeci">virtual void release()=0</div><div class="ttdoc">Release transformed weights memory.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor.xhtml">arm_compute::ITensor</a></div><div class="ttdoc">Interface for CPU tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_8h_source.xhtml#l00036">ITensor.h:36</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml">arm_compute::ITransformWeights</a></div><div class="ttdoc">Weights tensor transform interface In order to identify the different reshape functions,...</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00056">ITransformWeights.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_ad893d467b72461e2d242b457017678f2"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#ad893d467b72461e2d242b457017678f2">arm_compute::ITransformWeights::uid</a></div><div class="ttdeci">virtual uint32_t uid()=0</div><div class="ttdoc">Function that returns a unique id of the reshape function.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a878b78d4a3173364df38b206ea17551d"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a878b78d4a3173364df38b206ea17551d">arm_compute::ITransformWeights::ITransformWeights</a></div><div class="ttdeci">ITransformWeights(ITransformWeights &amp;&amp;other)</div><div class="ttdoc">Allow instances of this class to be move constructed.</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00068">ITransformWeights.h:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a18954417d3124a8095783ea13dc6d00b"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a18954417d3124a8095783ea13dc6d00b">arm_compute::ITransformWeights::run</a></div><div class="ttdeci">virtual void run()=0</div><div class="ttdoc">Run the transformation function.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_a107499c55d761f85406e7dfa751cbf5c"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#a107499c55d761f85406e7dfa751cbf5c">arm_compute::ITransformWeights::increase_refcount</a></div><div class="ttdeci">void increase_refcount()</div><div class="ttdoc">Increase the object's refcount.</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00098">ITransformWeights.h:98</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_ab360283eef792af17ef4bb54fdf112e0"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#ab360283eef792af17ef4bb54fdf112e0">arm_compute::ITransformWeights::decrease_refcount</a></div><div class="ttdeci">int32_t decrease_refcount()</div><div class="ttdoc">Decrease the object's refcount and return the updated value.</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00107">ITransformWeights.h:107</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_abbb145f6ce09dfdcff05acb800b76da0"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#abbb145f6ce09dfdcff05acb800b76da0">arm_compute::ITransformWeights::get_weights</a></div><div class="ttdeci">virtual ITensor * get_weights()=0</div><div class="ttdoc">Get a pointer to the transformed weights.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_ae88b4b071d62e2347cff2560f1cc7d77"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#ae88b4b071d62e2347cff2560f1cc7d77">arm_compute::ITransformWeights::operator=</a></div><div class="ttdeci">ITransformWeights &amp; operator=(const ITransformWeights &amp;)=delete</div><div class="ttdoc">Prevent instances of this class to be copied.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_transform_weights_xhtml_aadbb0bd6002839d9d1650fae463a36c2"><div class="ttname"><a href="classarm__compute_1_1_i_transform_weights.xhtml#aadbb0bd6002839d9d1650fae463a36c2">arm_compute::ITransformWeights::is_reshape_run</a></div><div class="ttdeci">bool is_reshape_run()</div><div class="ttdoc">Function that returns a flag on whether the weights are reshaped or not.</div><div class="ttdef"><b>Definition:</b> <a href="_i_transform_weights_8h_source.xhtml#l00116">ITransformWeights.h:116</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_8bc26130589aa16388b5a02f17abf2c2.xhtml">runtime</a></li><li class="navelem"><a class="el" href="_i_transform_weights_8h.xhtml">ITransformWeights.h</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
