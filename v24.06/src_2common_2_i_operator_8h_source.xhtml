<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/common/IOperator.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('src_2common_2_i_operator_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IOperator.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="src_2common_2_i_operator_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef SRC_COMMON_IOPERATOR_H_</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define SRC_COMMON_IOPERATOR_H_</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_context_8h.xhtml">src/common/IContext.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_queue_8h.xhtml">src/common/IQueue.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// TODO: Remove when all functions have been ported</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2experimental_2_types_8h.xhtml">arm_compute/core/experimental/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2runtime_2_i_operator_8h.xhtml">arm_compute/runtime/IOperator.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2common_2utils_2_validate_8h.xhtml">src/common/utils/Validate.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="struct_acl_operator__.xhtml">   38</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_acl_operator__.xhtml">AclOperator_</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="struct_acl_operator__.xhtml#a04dbd08173d990bff2b3400bffe377eb">   40</a></span>&#160;    <a class="code" href="structarm__compute_1_1detail_1_1_header.xhtml">arm_compute::detail::Header</a> <a class="code" href="struct_acl_operator__.xhtml#a04dbd08173d990bff2b3400bffe377eb">header</a>{<a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">arm_compute::detail::ObjectType::Operator</a>, <span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="struct_acl_operator__.xhtml">AclOperator_</a>()  = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    ~<a class="code" href="struct_acl_operator__.xhtml">AclOperator_</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;};</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">// Forward declarations</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">class </span>ITensorPack;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">class </span>IOperator;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#ac6101731de6263a00ac29b35cf1a929d">   56</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a> = <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">/** Base class specifying the operator interface */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_operator.xhtml">   59</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> : <span class="keyword">public</span> <a class="code" href="struct_acl_operator__.xhtml">AclOperator_</a></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /** Explict Operator Constructor</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param[in] ctx Context to be used by the operator</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a>(<a class="code" href="classarm__compute_1_1_i_context.xhtml">IContext</a> *ctx);<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Destructor */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">~IOperator</a>();<span class="comment"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    /** Checks if an operator is valid</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @return True if successful otherwise false</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">is_valid</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /** Run the kernels contained in the function</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * @param[in] queue   Queue to use</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     * @param[in] tensors Vector that contains the tensors to operate on</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">run</a>(<a class="code" href="classarm__compute_1_1_i_queue.xhtml">IQueue</a> &amp;queue, <a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors);<span class="comment"></span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /** Run the kernels contained in the function</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * @param[in] tensors Vector that contains the tensors to operate on</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors);<span class="comment"></span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">    /** Prepare the operator for execution</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     * Any one off pre-processing step required by the function is handled here</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * @param[in] tensors Vector that contains the preparation tensors.</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @note Prepare stage might not need all the function&#39;s buffers&#39; backing memory to be available in order to execute</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors);<span class="comment"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /** Return the memory requirements required by the workspace</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">MemoryRequirements</a> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">workspace</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_i_operator.xhtml#a71099fb3a17ab633908bd65c366921d9">   98</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_i_operator.xhtml#a71099fb3a17ab633908bd65c366921d9">set_internal_operator</a>(std::unique_ptr&lt;experimental::IOperator&gt; op)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        _op = std::move(op);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::unique_ptr&lt;experimental::IOperator&gt; _op{<span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">/** Extract internal representation of an Operator</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"> * @param[in] op Opaque operator pointer</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"> * @return The internal representation as an IOperator</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="namespacearm__compute.xhtml#a39b4bce1b01af39c5449ba4e482fc03d">  113</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> *<a class="code" href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">get_internal</a>(<a class="code" href="struct_acl_operator__.xhtml">AclOperator</a> op)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> *<span class="keyword">&gt;</span>(op);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">namespace </span>detail</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">/** Check if an internal operator is valid</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"> * @param[in] op Internal operator to check</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"> * @return A status code</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">  126</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">StatusCode</a> <a class="code" href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">validate_internal_operator</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">IOperator</a> *op)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">if</span> (op == <span class="keyword">nullptr</span> || !op-&gt;is_valid())</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(<span class="stringliteral">&quot;[IOperator]: Invalid operator object&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a253ca7dd096ee0956cccee4d376cab8b">StatusCode::InvalidArgument</a>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">StatusCode::Success</a>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;} <span class="comment">// namespace detail</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SRC_COMMON_IOPERATOR_H_ */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00123">Types.h:123</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_operator_xhtml_a8d7312410ad7314fa75c29b1ff0f17f0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">arm_compute::experimental::IOperator::run</a></div><div class="ttdeci">virtual void run(ITensorPack &amp;tensors)=0</div><div class="ttdoc">Run the kernels contained in the function.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_operator_xhtml_a490892d69716b3d4a4aa83c5dd113f0c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a490892d69716b3d4a4aa83c5dd113f0c">arm_compute::experimental::IOperator::prepare</a></div><div class="ttdeci">virtual void prepare(ITensorPack &amp;constants)=0</div><div class="ttdoc">Prepare the function for executing.</div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a505a83f220c02df2f85c3810cd9ceb38">arm_compute::StatusCode::Success</a></div><div class="ttdeci">@ Success</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_queue_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_queue.xhtml">arm_compute::IQueue</a></div><div class="ttdoc">Base class specifying the queue interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_queue_8h_source.xhtml#l00041">IQueue.h:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_operator_xhtml_a71099fb3a17ab633908bd65c366921d9"><div class="ttname"><a href="classarm__compute_1_1_i_operator.xhtml#a71099fb3a17ab633908bd65c366921d9">arm_compute::IOperator::set_internal_operator</a></div><div class="ttdeci">void set_internal_operator(std::unique_ptr&lt; experimental::IOperator &gt; op)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_i_operator_8h_source.xhtml#l00098">IOperator.h:98</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7b1d0df736739f38994ed29f54cffdf3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7b1d0df736739f38994ed29f54cffdf3">arm_compute::test::validation::is_valid</a></div><div class="ttdeci">bool is_valid</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00173">DirectConv2d.cpp:173</a></div></div>
<div class="ttc" id="astruct_acl_operator___xhtml"><div class="ttname"><a href="struct_acl_operator__.xhtml">AclOperator_</a></div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_i_operator_8h_source.xhtml#l00038">IOperator.h:38</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_context.xhtml">arm_compute::IContext</a></div><div class="ttdoc">Context interface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00051">IContext.h:51</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_ae48d6a6f3c6fbe0b8c9a1541a3c23c82"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#ae48d6a6f3c6fbe0b8c9a1541a3c23c82">arm_compute::detail::validate_internal_operator</a></div><div class="ttdeci">StatusCode validate_internal_operator(const IOperator *op)</div><div class="ttdoc">Check if an internal operator is valid.</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_i_operator_8h_source.xhtml#l00126">IOperator.h:126</a></div></div>
<div class="ttc" id="aarm__compute_2core_2experimental_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2experimental_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113">arm_compute::StatusCode</a></div><div class="ttdeci">StatusCode</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_types_8h_source.xhtml#l00032">Types.h:32</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_validate_8h_xhtml"><div class="ttname"><a href="src_2common_2utils_2_validate_8h.xhtml">Validate.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ae98a46f4ea1a43ca48acaf15d2eb7113a253ca7dd096ee0956cccee4d376cab8b"><div class="ttname"><a href="namespacearm__compute.xhtml#ae98a46f4ea1a43ca48acaf15d2eb7113a253ca7dd096ee0956cccee4d376cab8b">arm_compute::StatusCode::InvalidArgument</a></div><div class="ttdeci">@ InvalidArgument</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_operator_xhtml_a3da3a4cfa91daf144e828fa521760ed5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a3da3a4cfa91daf144e828fa521760ed5">arm_compute::experimental::IOperator::~IOperator</a></div><div class="ttdeci">virtual ~IOperator()=default</div><div class="ttdoc">Destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_operator_xhtml_a8ef96ccfabfca0faf4c3914c85bc4786"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml#a8ef96ccfabfca0faf4c3914c85bc4786">arm_compute::experimental::IOperator::workspace</a></div><div class="ttdeci">virtual MemoryRequirements workspace() const =0</div><div class="ttdoc">Return the memory requirements required by the workspace.</div></div>
<div class="ttc" id="astructarm__compute_1_1detail_1_1_header_xhtml"><div class="ttname"><a href="structarm__compute_1_1detail_1_1_header.xhtml">arm_compute::detail::Header</a></div><div class="ttdef"><b>Definition:</b> <a href="_object_8h_source.xhtml#l00048">Object.h:48</a></div></div>
<div class="ttc" id="a_i_context_8h_xhtml"><div class="ttname"><a href="_i_context_8h.xhtml">IContext.h</a></div></div>
<div class="ttc" id="astruct_acl_operator___xhtml_a04dbd08173d990bff2b3400bffe377eb"><div class="ttname"><a href="struct_acl_operator__.xhtml#a04dbd08173d990bff2b3400bffe377eb">AclOperator_::header</a></div><div class="ttdeci">arm_compute::detail::Header header</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2_i_operator_8h_source.xhtml#l00040">IOperator.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_af6916ea927eec95c074b917eafc5a667"><div class="ttname"><a href="namespacearm__compute.xhtml#af6916ea927eec95c074b917eafc5a667">arm_compute::get_internal</a></div><div class="ttdeci">IContext * get_internal(AclContext ctx)</div><div class="ttdoc">Extract internal representation of a Context.</div><div class="ttdef"><b>Definition:</b> <a href="_i_context_8h_source.xhtml#l00127">IContext.h:127</a></div></div>
<div class="ttc" id="a_i_queue_8h_xhtml"><div class="ttname"><a href="_i_queue_8h.xhtml">IQueue.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_operator.xhtml">arm_compute::experimental::IOperator</a></div><div class="ttdoc">Base class for all async functions.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2runtime_2_i_operator_8h_source.xhtml#l00037">IOperator.h:37</a></div></div>
<div class="ttc" id="aarm__compute_2runtime_2_i_operator_8h_xhtml"><div class="ttname"><a href="arm__compute_2runtime_2_i_operator_8h.xhtml">IOperator.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4ae1b3ec89ead7f83a9245ed5c9cacfdbf">arm_compute::detail::ObjectType::Operator</a></div><div class="ttdeci">@ Operator</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fdedb0aba14d44ce9d99bc100e026e6a.xhtml">common</a></li><li class="navelem"><a class="el" href="src_2common_2_i_operator_8h.xhtml">IOperator.h</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
