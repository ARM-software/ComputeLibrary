<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLBufferMemoryRegion Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_buffer_memory_region.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLBufferMemoryRegion Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>OpenCL buffer memory region implementation.  
 <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CLBufferMemoryRegion:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1_c_l_buffer_memory_region__coll__graph.svg" width="187" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">CLBufferMemoryRegion</a> (cl_mem_flags flags, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">More...</a><br /></td></tr>
<tr class="separator:ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7c7937af50d414b7aa85c97f188fdf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a2f7c7937af50d414b7aa85c97f188fdf">CLBufferMemoryRegion</a> (const cl::Buffer &amp;<a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>)</td></tr>
<tr class="memdesc:a2f7c7937af50d414b7aa85c97f188fdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a2f7c7937af50d414b7aa85c97f188fdf">More...</a><br /></td></tr>
<tr class="separator:a2f7c7937af50d414b7aa85c97f188fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95a318ceefc8e9ec4057343e31fc29e9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a95a318ceefc8e9ec4057343e31fc29e9">~CLBufferMemoryRegion</a> () override</td></tr>
<tr class="separator:a95a318ceefc8e9ec4057343e31fc29e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567fad71aedc47306dbf7b0c020257d8"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">ptr</a> () final</td></tr>
<tr class="memdesc:a567fad71aedc47306dbf7b0c020257d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Host/SVM pointer accessor.  <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a567fad71aedc47306dbf7b0c020257d8">More...</a><br /></td></tr>
<tr class="separator:a567fad71aedc47306dbf7b0c020257d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518b9e7c59ddb616c098499d7c50f378"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">map</a> (cl::CommandQueue &amp;q, bool blocking) final</td></tr>
<tr class="memdesc:a518b9e7c59ddb616c098499d7c50f378"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue a map operation of the allocated buffer on the given queue.  <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a518b9e7c59ddb616c098499d7c50f378">More...</a><br /></td></tr>
<tr class="separator:a518b9e7c59ddb616c098499d7c50f378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c7c495a1add2aec81bc886462efe89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">unmap</a> (cl::CommandQueue &amp;q) final</td></tr>
<tr class="memdesc:a14c7c495a1add2aec81bc886462efe89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enqueue an unmap operation of the allocated buffer on the given queue.  <a href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml#a14c7c495a1add2aec81bc886462efe89">More...</a><br /></td></tr>
<tr class="separator:a14c7c495a1add2aec81bc886462efe89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_l_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a></td></tr>
<tr class="memitem:a0a9140a4eab3cacf1ccd4f0ea82d51a7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a0a9140a4eab3cacf1ccd4f0ea82d51a7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">More...</a><br /></td></tr>
<tr class="separator:a0a9140a4eab3cacf1ccd4f0ea82d51a7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a04ae87317614a2332dea02ad30eaced5">~ICLMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Destructor.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a04ae87317614a2332dea02ad30eaced5">More...</a><br /></td></tr>
<tr class="separator:a04ae87317614a2332dea02ad30eaced5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#af1759d36be2abbe1002a68ddc2255fad">ICLMemoryRegion</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#af1759d36be2abbe1002a68ddc2255fad">More...</a><br /></td></tr>
<tr class="separator:af1759d36be2abbe1002a68ddc2255fad inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a4e5aaebd133c159b70f757d6ba7c4dc5">ICLMemoryRegion</a> (<a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move constructor.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a4e5aaebd133c159b70f757d6ba7c4dc5">More...</a><br /></td></tr>
<tr class="separator:a4e5aaebd133c159b70f757d6ba7c4dc5 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">operator=</a> (const <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;)=delete</td></tr>
<tr class="memdesc:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied (As this class contains pointers)  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#aba791ecf7c921e9a1c8d84baa7dd270e">More...</a><br /></td></tr>
<tr class="separator:aba791ecf7c921e9a1c8d84baa7dd270e inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ad09657054c2f981a19b9ac7e4b95bd30">operator=</a> (<a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml">ICLMemoryRegion</a> &amp;&amp;)=default</td></tr>
<tr class="memdesc:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default move assignment operator.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ad09657054c2f981a19b9ac7e4b95bd30">More...</a><br /></td></tr>
<tr class="separator:ad09657054c2f981a19b9ac7e4b95bd30 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7e247b94ceae35db2a172961ab83df9 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">const cl::Buffer &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">cl_data</a> () const</td></tr>
<tr class="memdesc:ac7e247b94ceae35db2a172961ab83df9 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying CL buffer.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ac7e247b94ceae35db2a172961ab83df9">More...</a><br /></td></tr>
<tr class="separator:ac7e247b94ceae35db2a172961ab83df9 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a490c935b104197bbd29bd1f917f1ed47 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a> () override</td></tr>
<tr class="memdesc:a490c935b104197bbd29bd1f917f1ed47 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">More...</a><br /></td></tr>
<tr class="separator:a490c935b104197bbd29bd1f917f1ed47 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c6c4d965ee99bc88c021b58dbad145 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a72c6c4d965ee99bc88c021b58dbad145">buffer</a> () const override</td></tr>
<tr class="memdesc:a72c6c4d965ee99bc88c021b58dbad145 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the allocated data.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a72c6c4d965ee99bc88c021b58dbad145">More...</a><br /></td></tr>
<tr class="separator:a72c6c4d965ee99bc88c021b58dbad145 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a000cbaa76e2cb0ae0aeee0b95b6470b7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">extract_subregion</a> (size_t <a class="el" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>, size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>) override</td></tr>
<tr class="memdesc:a000cbaa76e2cb0ae0aeee0b95b6470b7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract a sub-region from the memory.  <a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a000cbaa76e2cb0ae0aeee0b95b6470b7">More...</a><br /></td></tr>
<tr class="separator:a000cbaa76e2cb0ae0aeee0b95b6470b7 inherit pub_methods_classarm__compute_1_1_i_c_l_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_memory_region"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_memory_region')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml">IMemoryRegion</a></td></tr>
<tr class="memitem:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">IMemoryRegion</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a92ee6f66a47e8ba4bd3d01579ad4ef42">More...</a><br /></td></tr>
<tr class="separator:a92ee6f66a47e8ba4bd3d01579ad4ef42 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">~IMemoryRegion</a> ()=default</td></tr>
<tr class="memdesc:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual Destructor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#aaa097212d2b66253335ff2dca6385b13">More...</a><br /></td></tr>
<tr class="separator:aaa097212d2b66253335ff2dca6385b13 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="memdesc:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> region size accessor.  <a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">More...</a><br /></td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">set_size</a> (size_t <a class="el" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</td></tr>
<tr class="memdesc:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets size of region.  <a href="classarm__compute_1_1_i_memory_region.xhtml#ab5c159b7d0cdca9f543019f4f47ec288">More...</a><br /></td></tr>
<tr class="separator:ab5c159b7d0cdca9f543019f4f47ec288 inherit pub_methods_classarm__compute_1_1_i_memory_region"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>OpenCL buffer memory region implementation. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8h_source.xhtml#l00094">94</a> of file <a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac03fa96c3b5ec1bc9e3d64bf12bcb1b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac03fa96c3b5ec1bc9e3d64bf12bcb1b3">&#9670;&nbsp;</a></span>CLBufferMemoryRegion() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">cl_mem_flags&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td><a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object.">Memory</a> flags </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>Region size </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                                          : <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a>)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (_size != 0)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        _mem = cl::Buffer(<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">context</a>(), flags, _size);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>.</p>

</div>
</div>
<a id="a2f7c7937af50d414b7aa85c97f188fdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7c7937af50d414b7aa85c97f188fdf">&#9670;&nbsp;</a></span>CLBufferMemoryRegion() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramtype">const cl::Buffer &amp;&#160;</td>
          <td class="paramname"><em>buffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buffer</td><td>Buffer to be used as a memory region </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                                                 : <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">ICLMemoryRegion</a>(<a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>.getInfo&lt;CL_MEM_SIZE&gt;())</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    _mem = <a class="code" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">buffer</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00043">ICLMemoryRegion::buffer()</a>.</p>

</div>
</div>
<a id="a95a318ceefc8e9ec4057343e31fc29e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95a318ceefc8e9ec4057343e31fc29e9">&#9670;&nbsp;</a></span>~CLBufferMemoryRegion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Flush the command queue to ensure all commands that may use this memory buffer are scheduled to be finished before</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// this buffer is freed</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment">// Do not call finish as it is a blocking call which affects the performance</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">CLScheduler::get</a>().<a class="code" href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">queue</a>().flush();</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception &amp;e)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a>(e.what());</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="src_2common_2utils_2_log_8h_source.xhtml#l00032">ARM_COMPUTE_LOG_ERROR_ACL</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler::get()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler::queue()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a518b9e7c59ddb616c098499d7c50f378"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a518b9e7c59ddb616c098499d7c50f378">&#9670;&nbsp;</a></span>map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * map </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue a map operation of the allocated buffer on the given queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blocking</td><td>If true, then the mapping will be ready to use by the time this method returns, else it is the caller's responsibility to flush the queue and wait for the mapping operation to have completed before using the returned mapping pointer.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The mapping address. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a929af627a6a0430539998d12024d6c69">ICLMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mem.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    _mapping = q.enqueueMapBuffer(_mem, blocking ? CL_TRUE : CL_FALSE, CL_MAP_READ | CL_MAP_WRITE, 0, _size);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> _mapping;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<a id="a567fad71aedc47306dbf7b0c020257d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a567fad71aedc47306dbf7b0c020257d8">&#9670;&nbsp;</a></span>ptr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Host/SVM pointer accessor. </p>
<dl class="section return"><dt>Returns</dt><dd>Host/SVM pointer base </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#ab8777d03065e8c7146157148a5355dd1">ICLMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a14c7c495a1add2aec81bc886462efe89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14c7c495a1add2aec81bc886462efe89">&#9670;&nbsp;</a></span>unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void unmap </td>
          <td>(</td>
          <td class="paramtype">cl::CommandQueue &amp;&#160;</td>
          <td class="paramname"><em>q</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">final</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enqueue an unmap operation of the allocated buffer on the given queue. </p>
<dl class="section note"><dt>Note</dt><dd>This method simply enqueue the unmap operation, it is the caller's responsibility to flush the queue and make sure the unmap is finished before the memory is accessed by the device.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">q</td><td>The CL command queue to use for the mapping operation. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0ee6b952accaff0f7e8e61bda7889102">ICLMemoryRegion</a>.</p>

<p class="definition">Definition at line <a class="el" href="_c_l_memory_region_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_mem.get() == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    q.enqueueUnmapMemObject(_mem, _mapping);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _mapping = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/runtime/CL/<a class="el" href="_c_l_memory_region_8h_source.xhtml">CLMemoryRegion.h</a></li>
<li>src/runtime/CL/<a class="el" href="_c_l_memory_region_8cpp_source.xhtml">CLMemoryRegion.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_i_memory_region_xhtml_a259cb5a711406a8c3e5d937eb9350cca"><div class="ttname"><a href="classarm__compute_1_1_i_memory_region.xhtml#a259cb5a711406a8c3e5d937eb9350cca">arm_compute::IMemoryRegion::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">Memory region size accessor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_region_8h_source.xhtml#l00072">IMemoryRegion.h:72</a></div></div>
<div class="ttc" id="asrc_2common_2utils_2_log_8h_xhtml_ada668c5c47184c0667c0b029d92d3b4f"><div class="ttname"><a href="src_2common_2utils_2_log_8h.xhtml#ada668c5c47184c0667c0b029d92d3b4f">ARM_COMPUTE_LOG_ERROR_ACL</a></div><div class="ttdeci">#define ARM_COMPUTE_LOG_ERROR_ACL(msg)</div><div class="ttdef"><b>Definition:</b> <a href="src_2common_2utils_2_log_8h_source.xhtml#l00032">Log.h:32</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a0a9140a4eab3cacf1ccd4f0ea82d51a7"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a0a9140a4eab3cacf1ccd4f0ea82d51a7">arm_compute::ICLMemoryRegion::ICLMemoryRegion</a></div><div class="ttdeci">ICLMemoryRegion(size_t size)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00033">CLMemoryRegion.cpp:33</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adf0dd2db07cdbb966d6e385d3cd2605c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adf0dd2db07cdbb966d6e385d3cd2605c">arm_compute::test::validation::context</a></div><div class="ttdeci">auto context</div><div class="ttdef"><b>Definition:</b> <a href="_direct_conv2d_8cpp_source.xhtml#l00167">DirectConv2d.cpp:167</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a9b58d0eb9a2af8e6d7908695e1557d6c"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a9b58d0eb9a2af8e6d7908695e1557d6c">arm_compute::CLScheduler::get</a></div><div class="ttdeci">static CLScheduler &amp; get()</div><div class="ttdoc">Access the scheduler singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00112">CLScheduler.cpp:112</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_memory_region_xhtml_a490c935b104197bbd29bd1f917f1ed47"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_memory_region.xhtml#a490c935b104197bbd29bd1f917f1ed47">arm_compute::ICLMemoryRegion::buffer</a></div><div class="ttdeci">void * buffer() override</div><div class="ttdoc">Returns the pointer to the allocated data.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_memory_region_8cpp_source.xhtml#l00043">CLMemoryRegion.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_scheduler_xhtml_a398a2582c746d28fc125487a44c9ed74"><div class="ttname"><a href="classarm__compute_1_1_c_l_scheduler.xhtml#a398a2582c746d28fc125487a44c9ed74">arm_compute::CLScheduler::queue</a></div><div class="ttdeci">cl::CommandQueue &amp; queue()</div><div class="ttdoc">Accessor for the associated CL command queue.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_scheduler_8cpp_source.xhtml#l00040">CLScheduler.cpp:40</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_buffer_memory_region.xhtml">CLBufferMemoryRegion</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:27 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
