<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/dynamic_fusion/runtime/gpu/cl/ClKernelRuntime.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_kernel_runtime_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClKernelRuntime.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_kernel_runtime_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2022-2024 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_kernel_runtime_8h.xhtml">ClKernelRuntime.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_c_l_tensor_8h.xhtml">arm_compute/core/CL/ICLTensor.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_utils_8h.xhtml">src/core/CL/CLUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_ckw_kernel_arguments_helpers_8h.xhtml">src/dynamic_fusion/runtime/gpu/cl/ckw_driver/GpuCkwKernelArgumentsHelpers.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gpu_kernel_source_code_8h.xhtml">src/dynamic_fusion/sketch/gpu/GpuKernelSourceCode.h</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2gpu_2cl_2_c_l_kernel_library_8h.xhtml">src/gpu/cl/ClKernelLibrary.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">support/Cast.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>dynamic_fusion</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a4e2894b049a1d4b0249012c4f207733a">   42</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a4e2894b049a1d4b0249012c4f207733a">ClKernelRuntime::configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml">ClCompileContext</a> &amp;compile_ctx, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml">GpuKernelSourceCode</a> &amp;code)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// Create kernel from kernel source string</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">opencl::ClKernelLibrary</a> &amp;klib = <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    _kernel                       = <span class="keyword">static_cast&lt;</span>cl::Kernel<span class="keyword">&gt;</span>(compile_ctx.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">create_kernel</a>(</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                              code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a33c6ae241cda2f39ad2bd1ab9d59bdd7">name</a>(),</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                              code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a33c6ae241cda2f39ad2bd1ab9d59bdd7">name</a>(), <span class="comment">// program name has to be provided to differentiate between different unfusable components&#39; kernels.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                              <span class="comment">// Each program contains exactly one kernel</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                              code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a51638867037ac46b689d20153f124f35">code</a>(), klib.<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a>() <span class="comment">/* Kernel path: Used in cases of embedded kernels */</span>,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                              code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a467263d7529e2b044b80737fc3580c73">build_options</a>().options(), <span class="keyword">false</span> <span class="comment">/* Is source binary */</span>));</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// Configure execution window</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    IClKernel::configure_internal(code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#aece3195a7c52acfbb54557e09071d9e7">window</a>());</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// Set config id for lws tuning</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    _config_id = code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a60ccc96cad44e15e10bdf689aed79864">config_id</a>();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// Set kernel arguments</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _arguments = code.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#af347f4d304e8438f3396f6380feccc88">arguments</a>();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> ClKernelRuntime::add_kernel_argument(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                   &amp;idx,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml">GpuKernelArgumentBinding</a> &amp;arg,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">ICLTensor</a>                *<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                                 std::vector&lt;cl::Image2D&gt;       &amp;cl_images)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">switch</span> (arg.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#adf4a6727c689e0038cf2cdd158d5ed2c">type</a>())</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a532fdb47187a0d41d4d837074705c18aa4aa92f098ff650eb0129b010c3f94489">GpuKernelArgumentBinding::Type::TensorStorage</a>:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">switch</span> (arg.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#ae2246fd69cc7fed7aba44f6be5c7fa30">tensor_storage_type</a>())</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95daf368a9df1a9e1958e6b9784f42e8ab3c">TensorStorageType::ClBufferUint8Ptr</a>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abc5a464154fab3b146898c6be4224c2d">cl_add_buffer_argument</a>(_kernel, idx, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;cl_buffer());</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95da5e5df97fcf18f69b21caabba47034419">TensorStorageType::ClImage2dReadOnly</a>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    cl::Image2D tensor_image2d = <a class="code" href="namespacearm__compute.xhtml#abedaa5482ac9390bc612c6f4891c4d80">create_image2d_from_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="code" href="namespacearm__compute.xhtml#a41a1889b2fdf01056017b9f8b58dda6ea131fb182a881796e7606ed6da27f1197">CLImage2DType::ReadOnly</a>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    cl_images.push_back(tensor_image2d);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a5b754bc23e9853931746766d3aeb6a9d">cl_add_texture_argument</a>(_kernel, idx, tensor_image2d);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95dafea9b17c253f9e05d20b10b878f4ce93">TensorStorageType::ClImage2dWriteOnly</a>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    cl::Image2D tensor_image2d = <a class="code" href="namespacearm__compute.xhtml#abedaa5482ac9390bc612c6f4891c4d80">create_image2d_from_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <a class="code" href="namespacearm__compute.xhtml#a41a1889b2fdf01056017b9f8b58dda6ea53dfe5089ae9e65887cb0215cb0098f5">CLImage2DType::WriteOnly</a>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    cl_images.push_back(tensor_image2d);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a5b754bc23e9853931746766d3aeb6a9d">cl_add_texture_argument</a>(_kernel, idx, tensor_image2d);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Do not accept other TensorStorageType&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a532fdb47187a0d41d4d837074705c18aa26b8c8ee4ec7c38f1bf7cef9fba4f3a1">GpuKernelArgumentBinding::Type::TensorComponent</a>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a5e44619cc49fc50ee746e6dece3897f4">cl_add_tensor_component_argument</a>(_kernel, idx, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, arg.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#ad94df09482d881f2bd5f27a2576fba77">tensor_component_type</a>());</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Do not accept other types of kernel arguments&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a2563bcc3dcf9406cbf572d206a99d801">  114</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a2563bcc3dcf9406cbf572d206a99d801">ClKernelRuntime::run_op</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;window, cl::CommandQueue &amp;queue)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">ICLKernel::window</a>(), window);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarm__compute_1_1_window.xhtml">Window</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a> = window.<a class="code" href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">first_slice_window_3D</a>();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /// NOTE: Parameters extracted from old kernels. So far they seem to be constant</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    /// but we may need to make them into another configuration passed from GpuWorkloadSourceCode if needed in the future</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span>    constexpr <span class="keywordtype">bool</span> skip_sliding_window  = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    constexpr <span class="keywordtype">bool</span> use_dummy_work_items = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> idx = 0;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// Set kernel arguments</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// CLImages created from tensor arguments. Need to be retained until enqueue</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        std::vector&lt;cl::Image2D&gt; cl_images;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;arg : _arguments)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keyword">auto</span> <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a> = utils::cast::polymorphic_downcast&lt;ICLTensor *&gt;(tensors.<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">get_tensor</a>(arg.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a370bcd54ccd7afe8eedb3be0c47bd689">id</a>()));</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>-&gt;info());</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            add_kernel_argument(idx, arg, <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, cl_images);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">// Dispatch kernel</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">enqueue</a>(queue, *<span class="keyword">this</span>, <a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>, lws_hint(), use_dummy_work_items);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    } <span class="keywordflow">while</span> (skip_sliding_window &amp;&amp; window.<a class="code" href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">slide_window_slice_3D</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">slice</a>));</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;} <span class="comment">// namespace dynamic_fusion</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;} <span class="comment">// namespace experimental</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_gpu_ckw_kernel_arguments_helpers_8h_xhtml"><div class="ttname"><a href="_gpu_ckw_kernel_arguments_helpers_8h.xhtml">GpuCkwKernelArgumentsHelpers.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_ae2246fd69cc7fed7aba44f6be5c7fa30"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#ae2246fd69cc7fed7aba44f6be5c7fa30">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::tensor_storage_type</a></div><div class="ttdeci">TensorStorageType tensor_storage_type() const</div><div class="ttdoc">Storage type of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00121">GpuKernelArgument.h:121</a></div></div>
<div class="ttc" id="a_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="a_i_c_l_tensor_8h_xhtml"><div class="ttname"><a href="_i_c_l_tensor_8h.xhtml">ICLTensor.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml">arm_compute::opencl::ClKernelLibrary</a></div><div class="ttdoc">ClKernelLibrary contains all the OpenCL kernels that are used throughout the library.</div><div class="ttdef"><b>Definition:</b> <a href="src_2gpu_2cl_2_c_l_kernel_library_8h_source.xhtml#l00041">ClKernelLibrary.h:41</a></div></div>
<div class="ttc" id="a_gpu_kernel_source_code_8h_xhtml"><div class="ttname"><a href="_gpu_kernel_source_code_8h.xhtml">GpuKernelSourceCode.h</a></div></div>
<div class="ttc" id="a_cl_kernel_runtime_8h_xhtml"><div class="ttname"><a href="_cl_kernel_runtime_8h.xhtml">ClKernelRuntime.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_abedaa5482ac9390bc612c6f4891c4d80"><div class="ttname"><a href="namespacearm__compute.xhtml#abedaa5482ac9390bc612c6f4891c4d80">arm_compute::create_image2d_from_tensor</a></div><div class="ttdeci">cl::Image2D create_image2d_from_tensor(const ICLTensor *tensor, CLImage2DType image_type)</div><div class="ttdoc">Create a cl::Image2D object from a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_utils_8cpp_source.xhtml#l00037">CLUtils.cpp:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_a467263d7529e2b044b80737fc3580c73"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a467263d7529e2b044b80737fc3580c73">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::build_options</a></div><div class="ttdeci">GpuKernelSourceCode &amp; build_options(const CLBuildOptions &amp;b_options)</div><div class="ttdoc">Set kernel build options.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00068">GpuKernelSourceCode.h:68</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a5b754bc23e9853931746766d3aeb6a9d"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a5b754bc23e9853931746766d3aeb6a9d">arm_compute::experimental::dynamic_fusion::cl_add_texture_argument</a></div><div class="ttdeci">void cl_add_texture_argument(cl::Kernel &amp;kernel, unsigned int &amp;idx, const cl::Image &amp;image)</div><div class="ttdoc">Add an OpenCL image object to the kernel's arguments at the specified index idx.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_kernel_arguments_helpers_8cpp_source.xhtml#l00098">GpuCkwKernelArgumentsHelpers.cpp:98</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a41a1889b2fdf01056017b9f8b58dda6ea53dfe5089ae9e65887cb0215cb0098f5"><div class="ttname"><a href="namespacearm__compute.xhtml#a41a1889b2fdf01056017b9f8b58dda6ea53dfe5089ae9e65887cb0215cb0098f5">arm_compute::CLImage2DType::WriteOnly</a></div><div class="ttdeci">@ WriteOnly</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l01079">Validate.h:1079</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_ad94df09482d881f2bd5f27a2576fba77"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#ad94df09482d881f2bd5f27a2576fba77">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::tensor_component_type</a></div><div class="ttdeci">TensorComponentType tensor_component_type() const</div><div class="ttdoc">Component of the tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00128">GpuKernelArgument.h:128</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00041">ICLTensor.h:41</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00354">Error.h:354</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1opencl_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1opencl.xhtml">arm_compute::opencl</a></div><div class="ttdoc">Interface to convert the 2D Fully Connected weights from NCHW to NHWC or vice versa.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_l_s_t_m_layer_8h_source.xhtml#l00049">CLLSTMLayer.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml_a341a4c8a24d190d39504656989573d91"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml#a341a4c8a24d190d39504656989573d91">arm_compute::ITensorPack::get_tensor</a></div><div class="ttdeci">ITensor * get_tensor(int id)</div><div class="ttdoc">Get tensor of a given id from the pac.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8cpp_source.xhtml#l00063">ITensorPack.cpp:63</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding</a></div><div class="ttdoc">Describe how to extract information from a runtime Gpu tensor, and set it as an argument to a gpu ker...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00101">GpuKernelArgument.h:101</a></div></div>
<div class="ttc" id="a_c_l_utils_8h_xhtml"><div class="ttname"><a href="_c_l_utils_8h.xhtml">CLUtils.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode</a></div><div class="ttdoc">Container of kernel code to be compiled and run in a GpuUnitWorkload.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00046">GpuKernelSourceCode.h:46</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00159">Validate.h:159</a></div></div>
<div class="ttc" id="asrc_2gpu_2cl_2_c_l_kernel_library_8h_xhtml"><div class="ttname"><a href="src_2gpu_2cl_2_c_l_kernel_library_8h.xhtml">ClKernelLibrary.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a75c170cf528423bcef54834f6abad95daf368a9df1a9e1958e6b9784f42e8ab3c"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95daf368a9df1a9e1958e6b9784f42e8ab3c">arm_compute::experimental::dynamic_fusion::TensorStorageType::ClBufferUint8Ptr</a></div><div class="ttdeci">@ ClBufferUint8Ptr</div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml">arm_compute::CLCompileContext</a></div><div class="ttdoc">CLCompileContext class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_c_l_2_c_l_compile_context_8h_source.xhtml#l00204">CLCompileContext.h:204</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a41a1889b2fdf01056017b9f8b58dda6ea131fb182a881796e7606ed6da27f1197"><div class="ttname"><a href="namespacearm__compute.xhtml#a41a1889b2fdf01056017b9f8b58dda6ea131fb182a881796e7606ed6da27f1197">arm_compute::CLImage2DType::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_a60ccc96cad44e15e10bdf689aed79864"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a60ccc96cad44e15e10bdf689aed79864">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::config_id</a></div><div class="ttdeci">GpuKernelSourceCode &amp; config_id(const std::string &amp;c_id)</div><div class="ttdoc">Set kernel config id string.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00062">GpuKernelSourceCode.h:62</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00203">Validate.h:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a9496f99209434a5fe2c79069220168da"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">arm_compute::opencl::ClKernelLibrary::get</a></div><div class="ttdeci">static ClKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00975">ClKernelLibrary.cpp:975</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aac792e3a11bc73bafafc4f4284c7f215"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aac792e3a11bc73bafafc4f4284c7f215">arm_compute::Window::slide_window_slice_3D</a></div><div class="ttdeci">bool slide_window_slice_3D(Window &amp;slice) const</div><div class="ttdoc">Slide the passed 3D window slice.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00350">Window.h:350</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a3dd891a07efcd9a5ae685f834973666d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">arm_compute::CLCompileContext::create_kernel</a></div><div class="ttdeci">Kernel create_kernel(const std::string &amp;kernel_name, const std::string &amp;program_name, const std::string &amp;program_source, const std::string &amp;kernel_path, const StringSet &amp;build_options_set, bool is_binary) const</div><div class="ttdoc">Creates an OpenCL kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00166">CLCompileContext.cpp:166</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_abc5a464154fab3b146898c6be4224c2d"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#abc5a464154fab3b146898c6be4224c2d">arm_compute::experimental::dynamic_fusion::cl_add_buffer_argument</a></div><div class="ttdeci">void cl_add_buffer_argument(cl::Kernel &amp;kernel, unsigned int &amp;idx, const cl::Buffer &amp;buffer)</div><div class="ttdoc">Add an OpenCL buffer object to the kernel's arguments at the specified index idx.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_kernel_arguments_helpers_8cpp_source.xhtml#l00093">GpuCkwKernelArgumentsHelpers.cpp:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_adf4a6727c689e0038cf2cdd158d5ed2c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#adf4a6727c689e0038cf2cdd158d5ed2c">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::type</a></div><div class="ttdeci">Type type() const</div><div class="ttdoc">Type of the kernel argument.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00141">GpuKernelArgument.h:141</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime_xhtml_a2563bcc3dcf9406cbf572d206a99d801"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a2563bcc3dcf9406cbf572d206a99d801">arm_compute::experimental::dynamic_fusion::ClKernelRuntime::run_op</a></div><div class="ttdeci">virtual void run_op(ITensorPack &amp;tensors, const Window &amp;window, cl::CommandQueue &amp;queue) override</div><div class="ttdoc">Run the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_runtime_8cpp_source.xhtml#l00114">ClKernelRuntime.cpp:114</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_a33c6ae241cda2f39ad2bd1ab9d59bdd7"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a33c6ae241cda2f39ad2bd1ab9d59bdd7">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::name</a></div><div class="ttdeci">GpuKernelSourceCode &amp; name(const std::string &amp;n)</div><div class="ttdoc">Set kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00050">GpuKernelSourceCode.h:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime_xhtml_a4e2894b049a1d4b0249012c4f207733a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_kernel_runtime.xhtml#a4e2894b049a1d4b0249012c4f207733a">arm_compute::experimental::dynamic_fusion::ClKernelRuntime::configure</a></div><div class="ttdeci">void configure(const opencl::ClCompileContext &amp;compile_ctx, const GpuKernelSourceCode &amp;code)</div><div class="ttdoc">Configure the kernel runtime.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_kernel_runtime_8cpp_source.xhtml#l00042">ClKernelRuntime.cpp:42</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a30ca5bdbb60ee281d7f1ab34f7a4ee40"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a30ca5bdbb60ee281d7f1ab34f7a4ee40">arm_compute::Window::first_slice_window_3D</a></div><div class="ttdeci">Window first_slice_window_3D() const</div><div class="ttdoc">First 3D slice of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00306">Window.h:306</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a5728371dec76ff8493cfe926700ba37d"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">arm_compute::opencl::ClKernelLibrary::kernel_path</a></div><div class="ttdeci">const std::string &amp; kernel_path() const</div><div class="ttdoc">Gets the path that the kernels reside in.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01002">ClKernelLibrary.cpp:1002</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a5e44619cc49fc50ee746e6dece3897f4"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a5e44619cc49fc50ee746e6dece3897f4">arm_compute::experimental::dynamic_fusion::cl_add_tensor_component_argument</a></div><div class="ttdeci">void cl_add_tensor_component_argument(cl::Kernel &amp;kernel, unsigned int &amp;idx, const ICLTensor *tensor, TensorComponentType component)</div><div class="ttdoc">Select a Compute Kernel Writer tensor component from a tensor and add to the kernel's arguments at th...</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_ckw_kernel_arguments_helpers_8cpp_source.xhtml#l00033">GpuCkwKernelArgumentsHelpers.cpp:33</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml">arm_compute::Window</a></div><div class="ttdoc">Describe a multidimensional execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00039">Window.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a75c170cf528423bcef54834f6abad95da5e5df97fcf18f69b21caabba47034419"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95da5e5df97fcf18f69b21caabba47034419">arm_compute::experimental::dynamic_fusion::TensorStorageType::ClImage2dReadOnly</a></div><div class="ttdeci">@ ClImage2dReadOnly</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_a532fdb47187a0d41d4d837074705c18aa26b8c8ee4ec7c38f1bf7cef9fba4f3a1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a532fdb47187a0d41d4d837074705c18aa26b8c8ee4ec7c38f1bf7cef9fba4f3a1">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::Type::TensorComponent</a></div><div class="ttdeci">@ TensorComponent</div><div class="ttdoc">TensorStorageType</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_aece3195a7c52acfbb54557e09071d9e7"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#aece3195a7c52acfbb54557e09071d9e7">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::window</a></div><div class="ttdeci">GpuKernelSourceCode &amp; window(const Window &amp;window)</div><div class="ttdoc">Set kernel execution window.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00074">GpuKernelSourceCode.h:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_a51638867037ac46b689d20153f124f35"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#a51638867037ac46b689d20153f124f35">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::code</a></div><div class="ttdeci">GpuKernelSourceCode &amp; code(const std::string &amp;c)</div><div class="ttdoc">Set kernel code.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00056">GpuKernelSourceCode.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code_xhtml_af347f4d304e8438f3396f6380feccc88"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_source_code.xhtml#af347f4d304e8438f3396f6380feccc88">arm_compute::experimental::dynamic_fusion::GpuKernelSourceCode::arguments</a></div><div class="ttdeci">GpuKernelSourceCode &amp; arguments(const GpuKernelArgumentList &amp;arguments)</div><div class="ttdoc">Set kernel argument list.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_source_code_8h_source.xhtml#l00080">GpuKernelSourceCode.h:80</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a75c170cf528423bcef54834f6abad95dafea9b17c253f9e05d20b10b878f4ce93"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a75c170cf528423bcef54834f6abad95dafea9b17c253f9e05d20b10b878f4ce93">arm_compute::experimental::dynamic_fusion::TensorStorageType::ClImage2dWriteOnly</a></div><div class="ttdeci">@ ClImage2dWriteOnly</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_a532fdb47187a0d41d4d837074705c18aa4aa92f098ff650eb0129b010c3f94489"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a532fdb47187a0d41d4d837074705c18aa4aa92f098ff650eb0129b010c3f94489">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::Type::TensorStorage</a></div><div class="ttdeci">@ TensorStorage</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding_xhtml_a370bcd54ccd7afe8eedb3be0c47bd689"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_binding.xhtml#a370bcd54ccd7afe8eedb3be0c47bd689">arm_compute::experimental::dynamic_fusion::GpuKernelArgumentBinding::id</a></div><div class="ttdeci">ITensorInfo::Id id() const</div><div class="ttdoc">Id of the tensor this kernel argument belongs to.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_argument_8h_source.xhtml#l00135">GpuKernelArgument.h:135</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_1_1reference_xhtml_a548131b3d37da47a2e9d32111c88dfe1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a548131b3d37da47a2e9d32111c88dfe1">arm_compute::test::validation::reference::slice</a></div><div class="ttdeci">SimpleTensor&lt; T &gt; slice(const SimpleTensor&lt; T &gt; &amp;src, Coordinates starts, Coordinates ends)</div><div class="ttdef"><b>Definition:</b> <a href="_slice_operations_8cpp_source.xhtml#l00038">SliceOperations.cpp:38</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6e51ab3789678d3e0b0b72178dd6c4c6"><div class="ttname"><a href="namespacearm__compute.xhtml#a6e51ab3789678d3e0b0b72178dd6c4c6">arm_compute::enqueue</a></div><div class="ttdeci">void enqueue(cl::CommandQueue &amp;queue, ICLKernel &amp;kernel, const Window &amp;window, const cl::NDRange &amp;lws_hint=CLKernelLibrary::get().default_ndrange(), bool use_dummy_work_items=false)</div><div class="ttdoc">Add the kernel to the command queue with the given window.</div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_kernel_8cpp_source.xhtml#l00033">ICLKernel.cpp:33</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_5ff8356557e4f59c6a20c3735e8d2267.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="dir_eaf4b15cb81d70a78c44ed9b3a3ab41e.xhtml">runtime</a></li><li class="navelem"><a class="el" href="dir_084dc2df57e7ed7ac176c18ca580848e.xhtml">gpu</a></li><li class="navelem"><a class="el" href="dir_19295c3848cb9fbcf1155f42ab5752ba.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_kernel_runtime_8cpp.xhtml">ClKernelRuntime.cpp</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
