<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuWorkloadSketch::Implementation Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuWorkloadSketch::Implementation Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Internal implementation of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a>.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf94eb610fe8006b99837d880e4e7ac5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">Implementation</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>)</td></tr>
<tr class="memdesc:acf94eb610fe8006b99837d880e4e7ac5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">More...</a><br /></td></tr>
<tr class="separator:acf94eb610fe8006b99837d880e4e7ac5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef21b4830ba8e69ca71f43f00748730"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#afef21b4830ba8e69ca71f43f00748730">Implementation</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl)=delete</td></tr>
<tr class="memdesc:afef21b4830ba8e69ca71f43f00748730"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#afef21b4830ba8e69ca71f43f00748730">More...</a><br /></td></tr>
<tr class="separator:afef21b4830ba8e69ca71f43f00748730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf80439a5c87912150e770e20d2c7d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl)=delete</td></tr>
<tr class="memdesc:aeaf80439a5c87912150e770e20d2c7d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">More...</a><br /></td></tr>
<tr class="separator:aeaf80439a5c87912150e770e20d2c7d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8346261a7f98cf2e9c7794996f5f96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7f8346261a7f98cf2e9c7794996f5f96">Implementation</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl)=default</td></tr>
<tr class="memdesc:a7f8346261a7f98cf2e9c7794996f5f96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7f8346261a7f98cf2e9c7794996f5f96">More...</a><br /></td></tr>
<tr class="separator:a7f8346261a7f98cf2e9c7794996f5f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab486961b3c3a47b1247b179403e7e707"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab486961b3c3a47b1247b179403e7e707">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl)=default</td></tr>
<tr class="memdesc:ab486961b3c3a47b1247b179403e7e707"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab486961b3c3a47b1247b179403e7e707">More...</a><br /></td></tr>
<tr class="separator:ab486961b3c3a47b1247b179403e7e707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d6e63adc08ff38e747e2884d4f4cef"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a> () const</td></tr>
<tr class="memdesc:af5d6e63adc08ff38e747e2884d4f4cef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get workload context.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">More...</a><br /></td></tr>
<tr class="separator:af5d6e63adc08ff38e747e2884d4f4cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07403f4f40ea9ba4138664cb78d42278"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a07403f4f40ea9ba4138664cb78d42278">context</a> ()</td></tr>
<tr class="memdesc:a07403f4f40ea9ba4138664cb78d42278"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get workload context.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a07403f4f40ea9ba4138664cb78d42278">More...</a><br /></td></tr>
<tr class="separator:a07403f4f40ea9ba4138664cb78d42278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a99846286646c8e36726c50407b5c3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a> () const</td></tr>
<tr class="memdesc:a53a99846286646c8e36726c50407b5c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component graph.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">More...</a><br /></td></tr>
<tr class="separator:a53a99846286646c8e36726c50407b5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b2d6961c405c49f005fbc77aba3733a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">component_graph</a> ()</td></tr>
<tr class="memdesc:a7b2d6961c405c49f005fbc77aba3733a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component graph.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">More...</a><br /></td></tr>
<tr class="separator:a7b2d6961c405c49f005fbc77aba3733a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca25ed142be5cb241f375c6f79638e0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a> () const</td></tr>
<tr class="memdesc:aeca25ed142be5cb241f375c6f79638e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get operator group.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">More...</a><br /></td></tr>
<tr class="separator:aeca25ed142be5cb241f375c6f79638e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab05bc2988232ebd54d7a2f66526469fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">operator_group</a> ()</td></tr>
<tr class="memdesc:ab05bc2988232ebd54d7a2f66526469fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get operator group.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">More...</a><br /></td></tr>
<tr class="separator:ab05bc2988232ebd54d7a2f66526469fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a503d1467801eeb14035d6421c39e74f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">generate_source_code</a> () const</td></tr>
<tr class="memdesc:a503d1467801eeb14035d6421c39e74f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> from the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">More...</a><br /></td></tr>
<tr class="separator:a503d1467801eeb14035d6421c39e74f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57128473b45c636d96d321805f217e79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">create_virtual_tensor</a> ()</td></tr>
<tr class="memdesc:a57128473b45c636d96d321805f217e79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">More...</a><br /></td></tr>
<tr class="separator:a57128473b45c636d96d321805f217e79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa91b668c6dca5294415d9d270f500c25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aa91b668c6dca5294415d9d270f500c25">create_auxiliary_tensor</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</td></tr>
<tr class="memdesc:aa91b668c6dca5294415d9d270f500c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aa91b668c6dca5294415d9d270f500c25">More...</a><br /></td></tr>
<tr class="separator:aa91b668c6dca5294415d9d270f500c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab58c4b70f889ad1891d314abb1ca9766"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab58c4b70f889ad1891d314abb1ca9766">get_tensor_info</a> (<a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a> id)</td></tr>
<tr class="separator:ab58c4b70f889ad1891d314abb1ca9766"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Internal implementation of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a>. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="acf94eb610fe8006b99837d880e4e7ac5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf94eb610fe8006b99837d880e4e7ac5">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>global workload creation context </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00049">49</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        : _context{<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>}, _comp_services{}, _component_graph{_context, &amp;_comp_services}, _operator_group{}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketch::Implementation::context()</a>.</p>

</div>
</div>
<a id="afef21b4830ba8e69ca71f43f00748730"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afef21b4830ba8e69ca71f43f00748730">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a7f8346261a7f98cf2e9c7794996f5f96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8346261a7f98cf2e9c7794996f5f96">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7b2d6961c405c49f005fbc77aba3733a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b2d6961c405c49f005fbc77aba3733a">&#9670;&nbsp;</a></span>component_graph() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; component_graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get component graph. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00077">77</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a53a99846286646c8e36726c50407b5c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53a99846286646c8e36726c50407b5c3">&#9670;&nbsp;</a></span>component_graph() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; component_graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get component graph. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">72</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_output_8cpp_source.xhtml#l00088">GpuOutput::create_op()</a>, <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00113">GpuSigmoid::create_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00112">GpuTanh::create_op()</a>, <a class="el" href="_gpu_reshape_8cpp_source.xhtml#l00113">GpuReshape::create_op()</a>, <a class="el" href="_gpu_softmax_8cpp_source.xhtml#l00133">GpuSoftmax::create_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00119">GpuClamp::create_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00192">GpuDepthwiseConv2d::create_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00143">GpuResize::create_op()</a>, <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00119">GpuCast::create_op()</a>, <a class="el" href="_gpu_conv2d_8cpp_source.xhtml#l00189">GpuConv2d::create_op()</a>, <a class="el" href="_gpu_pool2d_8cpp_source.xhtml#l00150">GpuPool2d::create_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, <a class="el" href="_gpu_mat_mul_8cpp_source.xhtml#l00191">GpuMatMul::create_op()</a>, and <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00096">GpuWorkloadSketch::Implementation::generate_source_code()</a>.</p>

</div>
</div>
<a id="a07403f4f40ea9ba4138664cb78d42278"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07403f4f40ea9ba4138664cb78d42278">&#9670;&nbsp;</a></span>context() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a>* context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get workload context. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00067">67</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> _context;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="af5d6e63adc08ff38e747e2884d4f4cef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d6e63adc08ff38e747e2884d4f4cef">&#9670;&nbsp;</a></span>context() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a>* context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get workload context. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">62</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> _context;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_output_8cpp_source.xhtml#l00088">GpuOutput::create_op()</a>, <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00113">GpuSigmoid::create_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00112">GpuTanh::create_op()</a>, <a class="el" href="_gpu_reshape_8cpp_source.xhtml#l00113">GpuReshape::create_op()</a>, <a class="el" href="_gpu_softmax_8cpp_source.xhtml#l00133">GpuSoftmax::create_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00119">GpuClamp::create_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00192">GpuDepthwiseConv2d::create_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00143">GpuResize::create_op()</a>, <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00119">GpuCast::create_op()</a>, <a class="el" href="_gpu_conv2d_8cpp_source.xhtml#l00189">GpuConv2d::create_op()</a>, <a class="el" href="_gpu_pool2d_8cpp_source.xhtml#l00150">GpuPool2d::create_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, <a class="el" href="_gpu_mat_mul_8cpp_source.xhtml#l00191">GpuMatMul::create_op()</a>, and <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00049">GpuWorkloadSketch::Implementation::Implementation()</a>.</p>

</div>
</div>
<a id="aa91b668c6dca5294415d9d270f500c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa91b668c6dca5294415d9d270f500c25">&#9670;&nbsp;</a></span>create_auxiliary_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* create_auxiliary_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_info</td><td><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> to copy from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created auxiliary tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00115">115</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> _context-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a931e371e7da575cc41d7a41882ce8335">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#af1c8057ae41bdb9a0f4805b4e2b2de6a">create_auxiliary_tensor</a>(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00125">GpuWorkloadContext::Impl::create_auxiliary_tensor()</a>, <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00068">GpuWorkloadContext::implementation()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00068">tensor_info</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_softmax_8cpp_source.xhtml#l00133">GpuSoftmax::create_op()</a>.</p>

</div>
</div>
<a id="a57128473b45c636d96d321805f217e79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57128473b45c636d96d321805f217e79">&#9670;&nbsp;</a></span>create_virtual_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* create_virtual_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created virtual tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00105">105</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">return</span> _context-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a931e371e7da575cc41d7a41882ce8335">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#aa0a58cb48d418781cc30f3888b94faa5">create_virtual_tensor</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00115">GpuWorkloadContext::Impl::create_virtual_tensor()</a>, and <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00068">GpuWorkloadContext::implementation()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00113">GpuSigmoid::create_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00112">GpuTanh::create_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00119">GpuClamp::create_op()</a>, <a class="el" href="_gpu_reshape_8cpp_source.xhtml#l00113">GpuReshape::create_op()</a>, <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00119">GpuCast::create_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00143">GpuResize::create_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00192">GpuDepthwiseConv2d::create_op()</a>, <a class="el" href="_gpu_conv2d_8cpp_source.xhtml#l00189">GpuConv2d::create_op()</a>, <a class="el" href="_gpu_pool2d_8cpp_source.xhtml#l00150">GpuPool2d::create_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, and <a class="el" href="_gpu_mat_mul_8cpp_source.xhtml#l00191">GpuMatMul::create_op()</a>.</p>

</div>
</div>
<a id="a503d1467801eeb14035d6421c39e74f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a503d1467801eeb14035d6421c39e74f1">&#9670;&nbsp;</a></span>generate_source_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> generate_source_code </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> from the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>The sketch must be valid. Any error encountered during the building of the code will be thrown.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml" title="Hold the generated kernel source code and other information required to compile and run the workload.">GpuWorkloadSourceCode</a> The generated workload code </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00096">96</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keyword">const</span> <span class="keyword">auto</span> mem_map = _context-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a931e371e7da575cc41d7a41882ce8335">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a5d139f57a5611bce4b04bbd85e24d81e">mem_map</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">fuse</a>(mem_map).<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">write_workload_code</a>();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">GpuWorkloadSketch::Implementation::component_graph()</a>, <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00048">GpuKernelComponentGraph::fuse()</a>, <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00068">GpuWorkloadContext::implementation()</a>, <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00097">GpuWorkloadContext::Impl::mem_map()</a>, and <a class="el" href="_gpu_kernel_component_stream_8cpp_source.xhtml#l00043">GpuKernelComponentStream::write_workload_code()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00296">ClWorkloadRuntime::configure()</a>.</p>

</div>
</div>
<a id="ab58c4b70f889ad1891d314abb1ca9766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab58c4b70f889ad1891d314abb1ca9766">&#9670;&nbsp;</a></span>get_tensor_info()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* get_tensor_info </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00120">120</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> _context-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a931e371e7da575cc41d7a41882ce8335">implementation</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ac3691b3f274db1d7e8d2c3d8f8443cf1">get_tensor_info</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00135">GpuWorkloadContext::Impl::get_tensor_info()</a>, and <a class="el" href="_gpu_workload_context_8cpp_source.xhtml#l00068">GpuWorkloadContext::implementation()</a>.</p>

</div>
</div>
<a id="aeaf80439a5c87912150e770e20d2c7d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaf80439a5c87912150e770e20d2c7d6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ab486961b3c3a47b1247b179403e7e707"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab486961b3c3a47b1247b179403e7e707">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ab05bc2988232ebd54d7a2f66526469fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab05bc2988232ebd54d7a2f66526469fa">&#9670;&nbsp;</a></span>operator_group() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a>&amp; operator_group </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get operator group. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00087">87</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeca25ed142be5cb241f375c6f79638e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca25ed142be5cb241f375c6f79638e0">&#9670;&nbsp;</a></span>operator_group() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a>&amp; operator_group </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get operator group. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00082">82</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_output_8cpp_source.xhtml#l00088">GpuOutput::create_op()</a>, <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00113">GpuSigmoid::create_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00112">GpuTanh::create_op()</a>, <a class="el" href="_gpu_reshape_8cpp_source.xhtml#l00113">GpuReshape::create_op()</a>, <a class="el" href="_gpu_softmax_8cpp_source.xhtml#l00133">GpuSoftmax::create_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00119">GpuClamp::create_op()</a>, <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00119">GpuCast::create_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00192">GpuDepthwiseConv2d::create_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00143">GpuResize::create_op()</a>, <a class="el" href="_gpu_conv2d_8cpp_source.xhtml#l00189">GpuConv2d::create_op()</a>, <a class="el" href="_gpu_pool2d_8cpp_source.xhtml#l00150">GpuPool2d::create_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00143">GpuElementwiseBinaryCommon::create_op()</a>, <a class="el" href="_gpu_mat_mul_8cpp_source.xhtml#l00191">GpuMatMul::create_op()</a>, <a class="el" href="_gpu_output_8cpp_source.xhtml#l00060">GpuOutput::validate_op()</a>, <a class="el" href="_gpu_tanh_8cpp_source.xhtml#l00087">GpuTanh::validate_op()</a>, <a class="el" href="_gpu_sigmoid_8cpp_source.xhtml#l00088">GpuSigmoid::validate_op()</a>, <a class="el" href="_gpu_reshape_8cpp_source.xhtml#l00089">GpuReshape::validate_op()</a>, <a class="el" href="_gpu_cast_8cpp_source.xhtml#l00095">GpuCast::validate_op()</a>, <a class="el" href="_gpu_resize_8cpp_source.xhtml#l00118">GpuResize::validate_op()</a>, <a class="el" href="_gpu_clamp_8cpp_source.xhtml#l00094">GpuClamp::validate_op()</a>, <a class="el" href="_gpu_softmax_8cpp_source.xhtml#l00100">GpuSoftmax::validate_op()</a>, <a class="el" href="_gpu_conv2d_8cpp_source.xhtml#l00149">GpuConv2d::validate_op()</a>, <a class="el" href="_gpu_depthwise_conv2d_8cpp_source.xhtml#l00154">GpuDepthwiseConv2d::validate_op()</a>, <a class="el" href="_gpu_pool2d_8cpp_source.xhtml#l00080">GpuPool2d::validate_op()</a>, <a class="el" href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00115">GpuElementwiseBinaryCommon::validate_op()</a>, and <a class="el" href="_gpu_mat_mul_8cpp_source.xhtml#l00160">GpuMatMul::validate_op()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl_xhtml_a5d139f57a5611bce4b04bbd85e24d81e"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#a5d139f57a5611bce4b04bbd85e24d81e">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::Impl::mem_map</a></div><div class="ttdeci">const MemoryDescriptorMap &amp; mem_map() const</div><div class="ttdoc">Get memory descriptor registry.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00097">GpuWorkloadContext.cpp:97</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl_xhtml_af1c8057ae41bdb9a0f4805b4e2b2de6a"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#af1c8057ae41bdb9a0f4805b4e2b2de6a">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::Impl::create_auxiliary_tensor</a></div><div class="ttdeci">ITensorInfo * create_auxiliary_tensor(const ITensorInfo &amp;tensor_info)</div><div class="ttdoc">Create an auxiliary (see MemoryType) tensor info and save it.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00125">GpuWorkloadContext.cpp:125</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph_xhtml_a2e5d7338d083afa4107e92da04a768b0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGraph::fuse</a></div><div class="ttdeci">GpuKernelComponentStream fuse(const MemoryDescriptorMap &amp;mem_map) const</div><div class="ttdoc">Perform component fusion and serialize the graph into a stream of component groups.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00048">GpuKernelComponentGraph.cpp:48</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream_xhtml_a402c56e36acaa4905e85616bda2f287f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">arm_compute::experimental::dynamic_fusion::GpuKernelComponentStream::write_workload_code</a></div><div class="ttdeci">GpuWorkloadSourceCode write_workload_code()</div><div class="ttdoc">Generate and assemble GpuWorkloadSourceCode from the stream.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_stream_8cpp_source.xhtml#l00043">GpuKernelComponentStream.cpp:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl_xhtml_aa0a58cb48d418781cc30f3888b94faa5"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#aa0a58cb48d418781cc30f3888b94faa5">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::Impl::create_virtual_tensor</a></div><div class="ttdeci">ITensorInfo * create_virtual_tensor()</div><div class="ttdoc">Create a virtual (see MemoryType) tensor info and save it.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00115">GpuWorkloadContext.cpp:115</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_xhtml_a931e371e7da575cc41d7a41882ce8335"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context.xhtml#a931e371e7da575cc41d7a41882ce8335">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::implementation</a></div><div class="ttdeci">Impl &amp; implementation()</div><div class="ttdoc">Get the internal implementation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00068">GpuWorkloadContext.cpp:68</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00072">GpuWorkloadSketchImpl.h:72</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00062">GpuWorkloadSketchImpl.h:62</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl_xhtml_ac3691b3f274db1d7e8d2c3d8f8443cf1"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_context_1_1_impl.xhtml#ac3691b3f274db1d7e8d2c3d8f8443cf1">arm_compute::experimental::dynamic_fusion::GpuWorkloadContext::Impl::get_tensor_info</a></div><div class="ttdeci">ITensorInfo * get_tensor_info(ITensorInfo::Id id)</div><div class="ttdoc">Get tensor info created by this context, from id.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_context_8cpp_source.xhtml#l00135">GpuWorkloadContext.cpp:135</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00068">ClWorkloadRuntime.cpp:68</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:31 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
