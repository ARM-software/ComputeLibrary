<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLKernelLibrary Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_kernel_library.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLKernelLibrary Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> class.  
 <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9f976367edcd9ab787375373e050b94b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">init</a> (std::string kernel_path, cl::Context <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>, cl::Device device)</td></tr>
<tr class="memdesc:a9f976367edcd9ab787375373e050b94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialises the kernel library.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">More...</a><br /></td></tr>
<tr class="separator:a9f976367edcd9ab787375373e050b94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">set_kernel_path</a> (const std::string &amp;kernel_path)</td></tr>
<tr class="memdesc:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path that the kernels reside in.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">More...</a><br /></td></tr>
<tr class="separator:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7395c158d8e31b9af211b9bc1f65a08"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">get_kernel_path</a> ()</td></tr>
<tr class="memdesc:ad7395c158d8e31b9af211b9bc1f65a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path that the kernels reside in.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">More...</a><br /></td></tr>
<tr class="separator:ad7395c158d8e31b9af211b9bc1f65a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545c28170311fa375be5684ba6f271bc"><td class="memItemLeft" align="right" valign="top">std::pair&lt; std::string, bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">get_program</a> (const std::string &amp;program_name) const</td></tr>
<tr class="memdesc:a545c28170311fa375be5684ba6f271bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the source of the selected program.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a545c28170311fa375be5684ba6f271bc">More...</a><br /></td></tr>
<tr class="separator:a545c28170311fa375be5684ba6f271bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86409f541991c3ac377c2a6b7d1f832d"><td class="memItemLeft" align="right" valign="top">cl::Context &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a> ()</td></tr>
<tr class="memdesc:a86409f541991c3ac377c2a6b7d1f832d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the associated CL context.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">More...</a><br /></td></tr>
<tr class="separator:a86409f541991c3ac377c2a6b7d1f832d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b3919fb1e9372257947abe01e74e3d4"><td class="memItemLeft" align="right" valign="top">const cl::Device &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">get_device</a> ()</td></tr>
<tr class="memdesc:a1b3919fb1e9372257947abe01e74e3d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the CL device for which the programs are created.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1b3919fb1e9372257947abe01e74e3d4">More...</a><br /></td></tr>
<tr class="separator:a1b3919fb1e9372257947abe01e74e3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">set_device</a> (cl::Device device)</td></tr>
<tr class="memdesc:a5a6865d04c8d3348860f3cb8100fdb97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL device for which the programs are created.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">More...</a><br /></td></tr>
<tr class="separator:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef78b2e57b5203f8a184465e2da020ef"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">get_device_version</a> ()</td></tr>
<tr class="memdesc:aef78b2e57b5203f8a184465e2da020ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the device version.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">More...</a><br /></td></tr>
<tr class="separator:aef78b2e57b5203f8a184465e2da020ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70696e3d56dcbcdc1f493dec744bc581"><td class="memItemLeft" align="right" valign="top">cl_uint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a70696e3d56dcbcdc1f493dec744bc581">get_num_compute_units</a> ()</td></tr>
<tr class="memdesc:a70696e3d56dcbcdc1f493dec744bc581"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum number of compute units in the device.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a70696e3d56dcbcdc1f493dec744bc581">More...</a><br /></td></tr>
<tr class="separator:a70696e3d56dcbcdc1f493dec744bc581"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb732d747d949ff2113f19d6d70d8ecb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#afb732d747d949ff2113f19d6d70d8ecb">create_kernel</a> (const std::string &amp;<a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, const std::set&lt; std::string &gt; &amp;build_options_set={}) const</td></tr>
<tr class="memdesc:afb732d747d949ff2113f19d6d70d8ecb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a kernel from the kernel library.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#afb732d747d949ff2113f19d6d70d8ecb">More...</a><br /></td></tr>
<tr class="separator:afb732d747d949ff2113f19d6d70d8ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeda307cc2131afa8a4764e38373f94e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">max_local_workgroup_size</a> (const cl::Kernel &amp;kernel) const</td></tr>
<tr class="memdesc:aaeda307cc2131afa8a4764e38373f94e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the maximum number of local work items in a workgroup can be supported for the kernel.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">More...</a><br /></td></tr>
<tr class="separator:aaeda307cc2131afa8a4764e38373f94e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memItemLeft" align="right" valign="top">cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">default_ndrange</a> () const</td></tr>
<tr class="memdesc:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the default NDRange for the device.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">More...</a><br /></td></tr>
<tr class="separator:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a> ()</td></tr>
<tr class="memdesc:a0ad613086cc79a2e32d5b87bcefc7488"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the library's cache of binary programs.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">More...</a><br /></td></tr>
<tr class="separator:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54bb195c770b747d87af7506c2032aa4"><td class="memItemLeft" align="right" valign="top">const std::map&lt; std::string, cl::Program &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54bb195c770b747d87af7506c2032aa4">get_built_programs</a> () const</td></tr>
<tr class="memdesc:a54bb195c770b747d87af7506c2032aa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the cache of built OpenCL programs.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54bb195c770b747d87af7506c2032aa4">More...</a><br /></td></tr>
<tr class="separator:a54bb195c770b747d87af7506c2032aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6726708fe8f69a84845af570a6cadc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1e6726708fe8f69a84845af570a6cadc">add_built_program</a> (const std::string &amp;built_program_name, const cl::Program &amp;program)</td></tr>
<tr class="memdesc:a1e6726708fe8f69a84845af570a6cadc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new built program to the cache.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a1e6726708fe8f69a84845af570a6cadc">More...</a><br /></td></tr>
<tr class="separator:a1e6726708fe8f69a84845af570a6cadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f51d241825bd6710fe81b581068ba1e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a> () const</td></tr>
<tr class="memdesc:a4f51d241825bd6710fe81b581068ba1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if FP16 is supported by the CL device.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">More...</a><br /></td></tr>
<tr class="separator:a4f51d241825bd6710fe81b581068ba1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">int64_base_atomics_supported</a> () const</td></tr>
<tr class="memdesc:a7406f704be6891f5a9a1c6dbc3e882df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if int64_base_atomics extension is supported by the CL device.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">More...</a><br /></td></tr>
<tr class="separator:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a697a3f93a94d06390e777fd6e5cb7024"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a697a3f93a94d06390e777fd6e5cb7024">get_program_name</a> (const std::string &amp;<a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>) const</td></tr>
<tr class="memdesc:a697a3f93a94d06390e777fd6e5cb7024"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the program name given a kernel name.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a697a3f93a94d06390e777fd6e5cb7024">More...</a><br /></td></tr>
<tr class="separator:a697a3f93a94d06390e777fd6e5cb7024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a543610db0a6e5120dfb943e12a62909b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a543610db0a6e5120dfb943e12a62909b">is_wbsm_supported</a> ()</td></tr>
<tr class="separator:a543610db0a6e5120dfb943e12a62909b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293edc1bbcbddffb7228ac97917ed107"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a> (cl::Context <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>)</td></tr>
<tr class="memdesc:a293edc1bbcbddffb7228ac97917ed107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL context used to create programs.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">More...</a><br /></td></tr>
<tr class="separator:a293edc1bbcbddffb7228ac97917ed107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a0137545ce1771423fbde2ce494a81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">get_compile_context</a> ()</td></tr>
<tr class="memdesc:a10a0137545ce1771423fbde2ce494a81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the compile context used.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a10a0137545ce1771423fbde2ce494a81">More...</a><br /></td></tr>
<tr class="separator:a10a0137545ce1771423fbde2ce494a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acba005f5ce2c62cbf3f94d074d9007aa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">get</a> ()</td></tr>
<tr class="memdesc:acba005f5ce2c62cbf3f94d074d9007aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the KernelLibrary singleton.  <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">More...</a><br /></td></tr>
<tr class="separator:acba005f5ce2c62cbf3f94d074d9007aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> class. </p>

<p class="definition">Definition at line <a class="el" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_source.xhtml#l00038">38</a> of file <a class="el" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a1e6726708fe8f69a84845af570a6cadc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6726708fe8f69a84845af570a6cadc">&#9670;&nbsp;</a></span>add_built_program()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_built_program </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>built_program_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const cl::Program &amp;&#160;</td>
          <td class="paramname"><em>program</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a new built program to the cache. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">built_program_name</td><td>Name of the program </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">program</td><td>Built program to add to the cache </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">add_built_program</a>(built_program_name, program);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00035">arm_compute::restore_program_cache_from_file()</a>.</p>

</div>
</div>
<a id="a0ad613086cc79a2e32d5b87bcefc7488"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ad613086cc79a2e32d5b87bcefc7488">&#9670;&nbsp;</a></span>clear_programs_cache()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void clear_programs_cache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the library's cache of binary programs. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_framework_8cpp_source.xhtml#l00546">Framework::run()</a>.</p>

</div>
</div>
<a id="a86409f541991c3ac377c2a6b7d1f832d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86409f541991c3ac377c2a6b7d1f832d">&#9670;&nbsp;</a></span>context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl::Context &amp; context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Accessor for the associated CL context. </p>
<dl class="section return"><dt>Returns</dt><dd>A CL context. </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_context_8cpp_source.xhtml#l00052">ClContext::ClContext()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00033">CLScheduler::context()</a>, and <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00037">arm_compute::create_image2d_from_tensor()</a>.</p>

</div>
</div>
<a id="afb732d747d949ff2113f19d6d70d8ecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb732d747d949ff2113f19d6d70d8ecb">&#9670;&nbsp;</a></span>create_kernel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a> create_kernel </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::set&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>build_options_set</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a kernel from the kernel library. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_name</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">build_options_set</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> build options as a set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created kernel. </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> opencl::ClKernelLibrary &amp;klib         = <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">const</span> std::string              program_name = klib.program_name(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">auto</span>                           program      = klib.program(program_name);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">const</span> std::string             &amp;kernel_path  = <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">CLKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">get_kernel_path</a>();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">create_kernel</a>(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>, program_name, program.program, kernel_path, build_options_set,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                          program.is_binary);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">kernel_name</a>, <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01007">ClKernelLibrary::program()</a>, and <a class="el" href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00981">ClKernelLibrary::program_name()</a>.</p>

</div>
</div>
<a id="adb48a1da7dc6b6f3c1a424d21e1ac1f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb48a1da7dc6b6f3c1a424d21e1ac1f8">&#9670;&nbsp;</a></span>default_ndrange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl::NDRange default_ndrange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the default NDRange for the device. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">default_ndrange</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_default_l_w_s_heuristics_8cpp_source.xhtml#l00097">arm_compute::get_default_lws_for_type()</a>.</p>

</div>
</div>
<a id="a4f51d241825bd6710fe81b581068ba1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f51d241825bd6710fe81b581068ba1e">&#9670;&nbsp;</a></span>fp16_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fp16_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if FP16 is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports FP16 </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a>();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="acba005f5ce2c62cbf3f94d074d9007aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acba005f5ce2c62cbf3f94d074d9007aa">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the KernelLibrary singleton. </p>
<p>This method has been deprecated and will be removed in future releases </p><dl class="section return"><dt>Returns</dt><dd>The KernelLibrary instance. </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">static</span> CLKernelLibrary _kernel_library;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> _kernel_library;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_context_8cpp_source.xhtml#l00052">ClContext::ClContext()</a>, <a class="el" href="_c_l_runtime_context_8cpp_source.xhtml#l00032">CLRuntimeContext::CLRuntimeContext()</a>, <a class="el" href="_c_l_tile_8cpp_source.xhtml#l00031">CLTile::configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00054">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyReshapedOnlyRhsKernel &gt;::configure()</a>, <a class="el" href="_c_l_bitwise_not_8cpp_source.xhtml#l00033">CLBitwiseNot::configure()</a>, <a class="el" href="_c_l_reverse_8cpp_source.xhtml#l00033">CLReverse::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00115">CLChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_8cpp_source.xhtml#l00033">CLDepthToSpaceLayer::configure()</a>, <a class="el" href="_c_l_gather_8cpp_source.xhtml#l00033">CLGather::configure()</a>, <a class="el" href="_c_l_select_8cpp_source.xhtml#l00036">CLSelect::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00075">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_c_l_bitwise_and_8cpp_source.xhtml#l00033">CLBitwiseAnd::configure()</a>, <a class="el" href="_c_l_bitwise_or_8cpp_source.xhtml#l00033">CLBitwiseOr::configure()</a>, <a class="el" href="_c_l_bitwise_xor_8cpp_source.xhtml#l00033">CLBitwiseXor::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00142">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_to_space_layer_kernel_8cpp_source.xhtml#l00074">CLDepthToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_normalization_kernel_8cpp_source.xhtml#l00154">CLQLSTMLayerNormalizationKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00073">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_kernel_8cpp_source.xhtml#l00073">CLSpaceToDepthLayerKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00063">CLTileKernel::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_layer_8cpp_source.xhtml#l00033">CLMeanStdDevNormalizationLayer::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00078">CLReorgLayerKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_8cpp_source.xhtml#l00038">CLReorgLayer::configure()</a>, <a class="el" href="_c_l_f_f_t_scale_kernel_8cpp_source.xhtml#l00063">CLFFTScaleKernel::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00100">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00086">CLGatherKernel::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00035">CLComparison::configure()</a>, <a class="el" href="_c_l_mean_std_dev_normalization_kernel_8cpp_source.xhtml#l00068">CLMeanStdDevNormalizationKernel::configure()</a>, <a class="el" href="_c_l_pad_layer_kernel_8cpp_source.xhtml#l00078">CLPadLayerKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_native_kernel_8cpp_source.xhtml#l00183">ClGemmLowpMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00093">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00093">CLComparisonKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00095">CLNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00115">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_8cpp_source.xhtml#l00043">CLPriorBoxLayer::configure()</a>, <a class="el" href="_c_l_f_f_t_digit_reverse_kernel_8cpp_source.xhtml#l00084">CLFFTDigitReverseKernel::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_8cpp_source.xhtml#l00033">CLChannelShuffleLayer::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00087">CLReductionOperationKernel::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00095">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00077">CLRangeKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00073">CLReverseKernel::configure()</a>, <a class="el" href="_c_l_f_f_t_radix_stage_kernel_8cpp_source.xhtml#l00086">CLFFTRadixStageKernel::configure()</a>, <a class="el" href="_cl_gemm_matrix_multiply_native_kernel_8cpp_source.xhtml#l00225">ClGemmMatrixMultiplyNativeKernel::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00083">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00080">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_unstack_8cpp_source.xhtml#l00065">CLUnstack::configure()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00087">CLStackLayerKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00091">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00126">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_8cpp_source.xhtml#l00034">CLNormalizePlanarYUVLayer::configure()</a>, <a class="el" href="_c_l_reduce_mean_8cpp_source.xhtml#l00128">CLReduceMean::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_kernel_8cpp_source.xhtml#l00074">CLArgMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_range_8cpp_source.xhtml#l00036">CLRange::configure()</a>, <a class="el" href="_c_l_reshape_layer_8cpp_source.xhtml#l00052">CLReshapeLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_transpose_8cpp_source.xhtml#l00047">CLTranspose::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_8cpp_source.xhtml#l00031">CLBoundingBoxTransform::configure()</a>, <a class="el" href="_c_l_flatten_layer_8cpp_source.xhtml#l00052">CLFlattenLayer::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00133">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00158">ClGemmLowpMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_floor_8cpp_source.xhtml#l00050">CLFloor::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00049">CLRsqrtLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_copy_8cpp_source.xhtml#l00053">CLCopy::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_fill_8cpp_source.xhtml#l00052">CLFill::configure()</a>, <a class="el" href="_c_l_deconvolution_reshape_output_kernel_8cpp_source.xhtml#l00137">CLDeconvolutionReshapeOutputKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_8cpp_source.xhtml#l00041">CLROIPoolingLayer::configure()</a>, <a class="el" href="_c_l_space_to_depth_layer_8cpp_source.xhtml#l00044">CLSpaceToDepthLayer::configure()</a>, <a class="el" href="_c_l_logical_and_8cpp_source.xhtml#l00074">CLLogicalAnd::configure()</a>, <a class="el" href="_c_l_logical_or_8cpp_source.xhtml#l00074">CLLogicalOr::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_logical_not_8cpp_source.xhtml#l00048">CLLogicalNot::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_permute_8cpp_source.xhtml#l00050">CLPermute::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_convert_fully_connected_weights_8cpp_source.xhtml#l00048">CLConvertFullyConnectedWeights::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_8cpp_source.xhtml#l00044">CLROIAlignLayer::configure()</a>, <a class="el" href="_c_l_r_n_n_layer_8cpp_source.xhtml#l00091">CLRNNLayer::configure()</a>, <a class="el" href="_c_l_p_relu_layer_8cpp_source.xhtml#l00051">CLPReluLayer::configure()</a>, <a class="el" href="_c_l_slice_8cpp_source.xhtml#l00094">CLSlice::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_8cpp_source.xhtml#l00044">CLBatchToSpaceLayer::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00059">CLFillBorderKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_8cpp_source.xhtml#l00061">CLDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_dequantization_layer_8cpp_source.xhtml#l00048">CLDequantizationLayer::configure()</a>, <a class="el" href="_c_l_f_f_t2_d_8cpp_source.xhtml#l00047">CLFFT2D::configure()</a>, <a class="el" href="_c_l_softmax_layer_8cpp_source.xhtml#l00064">CLSoftmaxLayerGeneric&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_cl_gemm_lowp_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00317">ClGemmLowpMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_crop_8cpp_source.xhtml#l00053">CLCrop::configure()</a>, <a class="el" href="_c_l_pooling3d_layer_8cpp_source.xhtml#l00047">CLPooling3dLayer::configure()</a>, <a class="el" href="_c_l_f_f_t1_d_8cpp_source.xhtml#l00052">CLFFT1D::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_8cpp_source.xhtml#l00052">CLDepthConvertLayer::configure()</a>, <a class="el" href="_c_l_stack_layer_8cpp_source.xhtml#l00048">CLStackLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_scale_8cpp_source.xhtml#l00047">CLScale::configure()</a>, <a class="el" href="_c_l_strided_slice_8cpp_source.xhtml#l00082">CLStridedSlice::configure()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00190">ClGemmMatrixMultiplyReshapedOnlyRhsKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_8cpp_source.xhtml#l00049">CLDeconvolutionLayerUpsample::configure()</a>, <a class="el" href="_c_l_pooling_layer_8cpp_source.xhtml#l00047">CLPoolingLayer::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_8cpp_source.xhtml#l00045">CLSpaceToBatchLayer::configure()</a>, <a class="el" href="_c_l_indirect_convolution_layer_8cpp_source.xhtml#l00051">CLIndirectConvolutionLayer::configure()</a>, <a class="el" href="_c_l_quantization_layer_8cpp_source.xhtml#l00046">CLQuantizationLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_cast_8cpp_source.xhtml#l00052">CLCast::configure()</a>, <a class="el" href="_c_l_pad_layer_8cpp_source.xhtml#l00037">CLPadLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_scatter_8cpp_source.xhtml#l00048">CLScatter::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_8cpp_source.xhtml#l00044">CLFuseBatchNormalization::configure()</a>, <a class="el" href="_c_l_max_unpooling_layer_8cpp_source.xhtml#l00043">CLMaxUnpoolingLayer::configure()</a>, <a class="el" href="_c_l_normalization_layer_8cpp_source.xhtml#l00048">CLNormalizationLayer::configure()</a>, <a class="el" href="_cl_gemm_lowp_reduction_kernel_8cpp_source.xhtml#l00084">ClGemmLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_c_l_activation_layer_8cpp_source.xhtml#l00053">CLActivationLayer::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_8cpp_source.xhtml#l00054">CLDirectConvolutionLayer::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_8cpp_source.xhtml#l00055">CLL2NormalizeLayer::configure()</a>, <a class="el" href="_c_l_reduction_operation_8cpp_source.xhtml#l00115">CLReductionOperation::configure()</a>, <a class="el" href="_c_l_crop_resize_8cpp_source.xhtml#l00111">CLCropResize::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00052">CLArithmeticAddition::configure()</a>, <a class="el" href="_c_l_arg_min_max_layer_8cpp_source.xhtml#l00092">CLArgMinMaxLayer::configure()</a>, <a class="el" href="_c_l_concatenate_layer_8cpp_source.xhtml#l00053">CLConcatenateLayer::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_8cpp_source.xhtml#l00045">CLBatchNormalizationLayer::configure()</a>, <a class="el" href="_c_l_instance_normalization_layer_8cpp_source.xhtml#l00046">CLInstanceNormalizationLayer::configure()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00191">ClGemmMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00051">CLPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_winograd_convolution_layer_8cpp_source.xhtml#l00058">CLWinogradConvolutionLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_output_stage_8cpp_source.xhtml#l00057">CLGEMMLowpOutputStage::configure()</a>, <a class="el" href="_c_l_conv3_d_8cpp_source.xhtml#l00049">CLConv3D::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00193">CLDepthwiseConvolutionLayerNativeKernel::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_lowp_matrix_multiply_core_8cpp_source.xhtml#l00066">CLGEMMLowpMatrixMultiplyCore::configure()</a>, <a class="el" href="_c_l_fully_connected_layer_8cpp_source.xhtml#l00063">CLFullyConnectedLayer::configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00096">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;::configure()</a>, <a class="el" href="_c_l_f_f_t_convolution_layer_8cpp_source.xhtml#l00107">CLFFTConvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_convolution_layer_8cpp_source.xhtml#l00072">CLGEMMConvolutionLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00111">CLLSTMLayerQuantized::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_8cpp_source.xhtml#l00074">CLGenerateProposalsLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_mat_mul_8cpp_source.xhtml#l00046">CLMatMul::configure()</a>, <a class="el" href="_c_l_comparison_8cpp_source.xhtml#l00072">CLComparisonStatic&lt; COP &gt;::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00066">CLDepthwiseConvolutionLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_gemm_8cpp_source.xhtml#l00064">CLGEMM::configure()</a>, <a class="el" href="_c_l_direct_deconvolution_layer_8cpp_source.xhtml#l00128">CLDirectDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_g_e_m_m_deconvolution_layer_8cpp_source.xhtml#l00253">CLGEMMDeconvolutionLayer::configure()</a>, <a class="el" href="_c_l_l_s_t_m_layer_8cpp_source.xhtml#l00132">CLLSTMLayer::configure()</a>, <a class="el" href="_c_l_convolution_layer_8cpp_source.xhtml#l00061">CLConvolutionLayer::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00090">CLExpLayer::configure()</a>, <a class="el" href="_c_l_q_l_s_t_m_layer_8cpp_source.xhtml#l00170">CLQLSTMLayer::configure()</a>, <a class="el" href="arm__compute_2runtime_2_c_l_2functions_2_c_l_convert_fully_connected_weights_8h_source.xhtml#l00146">CLConvertFullyConnectedWeightsManaged::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_8cpp_source.xhtml#l00117">CLComplexPixelWiseMultiplication::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00131">CLNegLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00106">CLArithmeticSubtraction::configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00233">ClSynthetizeOperatorWithBorder&lt; K &gt;::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00171">CLSinLayer::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00251">CLLogLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00163">CLArithmeticDivision::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00211">CLAbsLayer::configure()</a>, <a class="el" href="_c_l_elementwise_unary_layer_8cpp_source.xhtml#l00291">CLRoundLayer::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00217">CLElementwiseMax::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00271">CLElementwiseMin::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00325">CLElementwiseSquaredDiff::configure()</a>, <a class="el" href="runtime_2_c_l_2functions_2_cl_elementwise_operations_8cpp_source.xhtml#l00379">CLElementwisePower::configure()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00033">CLScheduler::context()</a>, <a class="el" href="_c_l_command_buffer_8cpp_source.xhtml#l00036">CLCommandBuffer::create()</a>, <a class="el" href="_cl_activation_8cpp_source.xhtml#l00058">ClContext::create_activation()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00062">arm_compute::create_image2d_from_buffer()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00037">arm_compute::create_image2d_from_tensor()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler::default_init()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00119">CLScheduler::default_init_with_context()</a>, <a class="el" href="_c_l_validate_8h_source.xhtml#l00049">arm_compute::error_on_unsupported_int64_base_atomics()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00449">arm_compute::export_to_cl_image()</a>, <a class="el" href="_default_l_w_s_heuristics_8cpp_source.xhtml#l00097">arm_compute::get_default_lws_for_type()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00185">ICLKernel::get_max_workgroup_size()</a>, <a class="el" href="_c_l_runtime_context_8cpp_source.xhtml#l00049">CLRuntimeContext::kernel_library()</a>, <a class="el" href="main_8cpp_source.xhtml#l00097">main()</a>, <a class="el" href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00035">arm_compute::restore_program_cache_from_file()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_native_kernel_8cpp_source.xhtml#l00412">CLDepthwiseConvolutionLayerNativeKernel::run()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00546">Framework::run()</a>, <a class="el" href="_cl_mat_mul_native_kernel_8cpp_source.xhtml#l00238">ClMatMulNativeKernel::run_op()</a>, <a class="el" href="_cl_indirect_conv2d_kernel_8cpp_source.xhtml#l00284">ClIndirectConv2dKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_m_m_u_l_kernel_8cpp_source.xhtml#l00339">ClGemmMatrixMultiplyReshapedOnlyRhsMMULKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_only_rhs_kernel_8cpp_source.xhtml#l00350">ClGemmMatrixMultiplyReshapedOnlyRhsKernel::run_op()</a>, <a class="el" href="_cl_gemm_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00340">ClGemmMatrixMultiplyReshapedKernel::run_op()</a>, <a class="el" href="src_2runtime_2_c_l_2_utils_8cpp_source.xhtml#l00073">arm_compute::save_program_cache_to_file()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00160">CLScheduler::set_context()</a>, <a class="el" href="tests_2validation_2_c_l_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00212">arm_compute::test::validation::TEST_CASE()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00185">OpenCLMemoryUsage::test_measurements()</a>, <a class="el" href="_gemm_tuner_helpers_8h_source.xhtml#l00034">examples::gemm_tuner_helpers::update_padding_for_cl_image()</a>, <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00100">arm_compute::opencl::kernels::gemm::update_padding_for_cl_image()</a>, <a class="el" href="_cl_mat_mul_lowp_native_m_m_u_l_kernel_8cpp_source.xhtml#l00092">ClMatMulLowpNativeMMULKernel::validate()</a>, <a class="el" href="_cl_mat_mul_native_m_m_u_l_kernel_8cpp_source.xhtml#l00086">ClMatMulNativeMMULKernel::validate()</a>, and <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00121">arm_compute::opencl::kernels::gemm::validate_image2d_support_on_rhs()</a>.</p>

</div>
</div>
<a id="a54bb195c770b747d87af7506c2032aa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54bb195c770b747d87af7506c2032aa4">&#9670;&nbsp;</a></span>get_built_programs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt; std::string, cl::Program &gt; &amp; get_built_programs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access the cache of built OpenCL programs. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">get_built_programs</a>();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00185">OpenCLMemoryUsage::test_measurements()</a>.</p>

</div>
</div>
<a id="a10a0137545ce1771423fbde2ce494a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10a0137545ce1771423fbde2ce494a81">&#9670;&nbsp;</a></span>get_compile_context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_compile_context.xhtml">CLCompileContext</a> &amp; get_compile_context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the compile context used. </p>
<dl class="section return"><dt>Returns</dt><dd>The used compile context </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> _compile_context;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00096">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;::configure()</a>, and <a class="el" href="_resize_8cpp_source.xhtml#l00147">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a1b3919fb1e9372257947abe01e74e3d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b3919fb1e9372257947abe01e74e3d4">&#9670;&nbsp;</a></span>get_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const cl::Device &amp; get_device </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the CL device for which the programs are created. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">get_device</a>();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cl_context_8cpp_source.xhtml#l00052">ClContext::ClContext()</a>, <a class="el" href="_c_l_command_buffer_8cpp_source.xhtml#l00036">CLCommandBuffer::create()</a>, <a class="el" href="_c_l_utils_8cpp_source.xhtml#l00037">arm_compute::create_image2d_from_tensor()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00449">arm_compute::export_to_cl_image()</a>, <a class="el" href="tests_2validation_2_c_l_2_u_n_i_t_2_tensor_allocator_8cpp_source.xhtml#l00212">arm_compute::test::validation::TEST_CASE()</a>, and <a class="el" href="_cl_gemm_helpers_8cpp_source.xhtml#l00121">arm_compute::opencl::kernels::gemm::validate_image2d_support_on_rhs()</a>.</p>

</div>
</div>
<a id="aef78b2e57b5203f8a184465e2da020ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef78b2e57b5203f8a184465e2da020ef">&#9670;&nbsp;</a></span>get_device_version()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_device_version </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the device version. </p>
<dl class="section return"><dt>Returns</dt><dd>The content of CL_DEVICE_VERSION </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00126">126</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">get_device_version</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad7395c158d8e31b9af211b9bc1f65a08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7395c158d8e31b9af211b9bc1f65a08">&#9670;&nbsp;</a></span>get_kernel_path()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_kernel_path </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path that the kernels reside in. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">kernel_path</a>();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_compile_context_8cpp_source.xhtml#l00042">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a70696e3d56dcbcdc1f493dec744bc581"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70696e3d56dcbcdc1f493dec744bc581">&#9670;&nbsp;</a></span>get_num_compute_units()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl_uint get_num_compute_units </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum number of compute units in the device. </p>
<dl class="section return"><dt>Returns</dt><dd>The content of CL_DEVICE_MAX_COMPUTE_UNITS </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">get_num_compute_units</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a545c28170311fa375be5684ba6f271bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a545c28170311fa375be5684ba6f271bc">&#9670;&nbsp;</a></span>get_program()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; std::string, bool &gt; get_program </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>program_name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the source of the selected program. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">program_name</td><td><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A pair with the source (false) or the binary (true), of the selected program. </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00113">113</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> program_info = <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">program</a>(program_name);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> std::make_pair(std::move(program_info.program), program_info.is_binary);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_compile_context_8cpp_source.xhtml#l00042">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a697a3f93a94d06390e777fd6e5cb7024"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a697a3f93a94d06390e777fd6e5cb7024">&#9670;&nbsp;</a></span>get_program_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_program_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the program name given a kernel name. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">program_name</a>(<a class="code" href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">kernel_name</a>.</p>

<p class="reference">Referenced by <a class="el" href="_compile_context_8cpp_source.xhtml#l00042">arm_compute::test::validation::TEST_CASE()</a>.</p>

</div>
</div>
<a id="a9f976367edcd9ab787375373e050b94b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f976367edcd9ab787375373e050b94b">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>kernel_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::Device&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialises the kernel library. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>Path of the directory from which kernel sources are loaded. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>CL context used to create programs. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>CL device for which the programs are created. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    _compile_context = CLCompileContext(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>, device);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">set_kernel_path</a>(kernel_path);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_runtime_context_8cpp_source.xhtml#l00032">CLRuntimeContext::CLRuntimeContext()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00134">CLScheduler::default_init()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00119">CLScheduler::default_init_with_context()</a>.</p>

</div>
</div>
<a id="a7406f704be6891f5a9a1c6dbc3e882df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7406f704be6891f5a9a1c6dbc3e882df">&#9670;&nbsp;</a></span>int64_base_atomics_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool int64_base_atomics_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if int64_base_atomics extension is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports int64_base_atomics extension </dd></dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00105">105</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">int64_base_atomics_supported</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a543610db0a6e5120dfb943e12a62909b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a543610db0a6e5120dfb943e12a62909b">&#9670;&nbsp;</a></span>is_wbsm_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool is_wbsm_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#aab68e2f6c9f06a4db5bb7ceec9185615">is_wbsm_supported</a>();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaeda307cc2131afa8a4764e38373f94e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeda307cc2131afa8a4764e38373f94e">&#9670;&nbsp;</a></span>max_local_workgroup_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t max_local_workgroup_size </td>
          <td>(</td>
          <td class="paramtype">const cl::Kernel &amp;&#160;</td>
          <td class="paramname"><em>kernel</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find the maximum number of local work items in a workgroup can be supported for the kernel. </p>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00118">118</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">max_local_workgroup_size</a>(kernel);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00185">ICLKernel::get_max_workgroup_size()</a>.</p>

</div>
</div>
<a id="a293edc1bbcbddffb7228ac97917ed107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a293edc1bbcbddffb7228ac97917ed107">&#9670;&nbsp;</a></span>set_context()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_context </td>
          <td>(</td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the CL context used to create programs. </p>
<dl class="section note"><dt>Note</dt><dd>Setting the context also resets the device to the first one available in the new context.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>A CL context. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">context</a>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_direct_conv2d_8cpp_source.xhtml#l00167">arm_compute::test::validation::context</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00160">CLScheduler::set_context()</a>.</p>

</div>
</div>
<a id="a5a6865d04c8d3348860f3cb8100fdb97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a6865d04c8d3348860f3cb8100fdb97">&#9670;&nbsp;</a></span>set_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_device </td>
          <td>(</td>
          <td class="paramtype">cl::Device&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the CL device for which the programs are created. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>A CL device. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    _compile_context.<a class="code" href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">set_device</a>(device);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a66a558a56f5d0dcd6305c405ebc38cc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a558a56f5d0dcd6305c405ebc38cc2">&#9670;&nbsp;</a></span>set_kernel_path()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_kernel_path </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the path that the kernels reside in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>Path of the kernel. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00065">65</a> of file <a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">opencl::ClKernelLibrary::get</a>().<a class="code" href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">set_kernel_path</a>(kernel_path);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="arm__compute_2core_2_c_l_2_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a></li>
<li>src/core/CL/<a class="el" href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLKernelLibrary::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00069">CLKernelLibrary.cpp:69</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a4f51d241825bd6710fe81b581068ba1e"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a4f51d241825bd6710fe81b581068ba1e">arm_compute::CLCompileContext::fp16_supported</a></div><div class="ttdeci">bool fp16_supported() const</div><div class="ttdoc">Returns true if FP16 is supported by the CL device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00297">CLCompileContext.cpp:297</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_adb48a1da7dc6b6f3c1a424d21e1ac1f8"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">arm_compute::CLCompileContext::default_ndrange</a></div><div class="ttdeci">cl::NDRange default_ndrange() const</div><div class="ttdoc">Return the default NDRange for the device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00352">CLCompileContext.cpp:352</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a86409f541991c3ac377c2a6b7d1f832d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a86409f541991c3ac377c2a6b7d1f832d">arm_compute::CLCompileContext::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00336">CLCompileContext.cpp:336</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a1b1f019faeec045aa2bb8dcf7cfa95c0"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a1b1f019faeec045aa2bb8dcf7cfa95c0">arm_compute::opencl::ClKernelLibrary::program</a></div><div class="ttdeci">ClProgramInfo program(const std::string &amp;program_name) const</div><div class="ttdoc">Gets the source of the selected program.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01007">ClKernelLibrary.cpp:1007</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_aaeda307cc2131afa8a4764e38373f94e"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#aaeda307cc2131afa8a4764e38373f94e">arm_compute::CLCompileContext::max_local_workgroup_size</a></div><div class="ttdeci">size_t max_local_workgroup_size(const cl::Kernel &amp;kernel) const</div><div class="ttdoc">Find the maximum number of local work items in a workgroup can be supported for the kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00382">CLCompileContext.cpp:382</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_aab68e2f6c9f06a4db5bb7ceec9185615"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#aab68e2f6c9f06a4db5bb7ceec9185615">arm_compute::CLCompileContext::is_wbsm_supported</a></div><div class="ttdeci">bool is_wbsm_supported() const</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00377">CLCompileContext.cpp:377</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a7406f704be6891f5a9a1c6dbc3e882df"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">arm_compute::CLCompileContext::int64_base_atomics_supported</a></div><div class="ttdeci">bool int64_base_atomics_supported() const</div><div class="ttdoc">Returns true if int64_base_atomics extension is supported by the CL device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00372">CLCompileContext.cpp:372</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a7ead2f03c59c553788947ea8a29b38f3"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a7ead2f03c59c553788947ea8a29b38f3">arm_compute::CLCompileContext::get_num_compute_units</a></div><div class="ttdeci">cl_uint get_num_compute_units() const</div><div class="ttdoc">Return the maximum number of compute units in the device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00399">CLCompileContext.cpp:399</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_ae9f578f0e7a9fa45b61090426913b08e"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ae9f578f0e7a9fa45b61090426913b08e">arm_compute::opencl::ClKernelLibrary::set_kernel_path</a></div><div class="ttdeci">void set_kernel_path(std::string kernel_path)</div><div class="ttdoc">Sets the path that the kernels reside in.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00996">ClKernelLibrary.cpp:996</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_acba005f5ce2c62cbf3f94d074d9007aa"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">arm_compute::CLKernelLibrary::get</a></div><div class="ttdeci">static CLKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00041">CLKernelLibrary.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a293edc1bbcbddffb7228ac97917ed107"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a293edc1bbcbddffb7228ac97917ed107">arm_compute::CLCompileContext::set_context</a></div><div class="ttdeci">void set_context(cl::Context context)</div><div class="ttdoc">Sets the CL context used to create programs.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00231">CLCompileContext.cpp:231</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_ab28520b0811ac22a5bc07050bf40e483"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#ab28520b0811ac22a5bc07050bf40e483">arm_compute::opencl::ClKernelLibrary::program_name</a></div><div class="ttdeci">std::string program_name(const std::string &amp;kernel_name) const</div><div class="ttdoc">Returns the program name given a kernel name.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00981">ClKernelLibrary.cpp:981</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a8da9f7c295b65104343fac358924fc2c"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a8da9f7c295b65104343fac358924fc2c">arm_compute::CLCompileContext::get_device</a></div><div class="ttdeci">const cl::Device &amp; get_device() const</div><div class="ttdoc">Gets the CL device for which the programs are created.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00341">CLCompileContext.cpp:341</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a0ad613086cc79a2e32d5b87bcefc7488"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">arm_compute::CLCompileContext::clear_programs_cache</a></div><div class="ttdeci">void clear_programs_cache()</div><div class="ttdoc">Clear the library's cache of binary programs.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00325">CLCompileContext.cpp:325</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a5a6865d04c8d3348860f3cb8100fdb97"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">arm_compute::CLCompileContext::set_device</a></div><div class="ttdeci">void set_device(cl::Device device)</div><div class="ttdoc">Sets the CL device for which the programs are created.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00346">CLCompileContext.cpp:346</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a1d4cf09994ef5a094eed69cd37ca26ba"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a1d4cf09994ef5a094eed69cd37ca26ba">arm_compute::CLCompileContext::get_device_version</a></div><div class="ttdeci">std::string get_device_version() const</div><div class="ttdoc">Return the device version.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00394">CLCompileContext.cpp:394</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a9496f99209434a5fe2c79069220168da"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a9496f99209434a5fe2c79069220168da">arm_compute::opencl::ClKernelLibrary::get</a></div><div class="ttdeci">static ClKernelLibrary &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l00975">ClKernelLibrary.cpp:975</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a3dd891a07efcd9a5ae685f834973666d"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a3dd891a07efcd9a5ae685f834973666d">arm_compute::CLCompileContext::create_kernel</a></div><div class="ttdeci">Kernel create_kernel(const std::string &amp;kernel_name, const std::string &amp;program_name, const std::string &amp;program_source, const std::string &amp;kernel_path, const StringSet &amp;build_options_set, bool is_binary) const</div><div class="ttdoc">Creates an OpenCL kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00166">CLCompileContext.cpp:166</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1opencl_1_1_cl_kernel_library_xhtml_a5728371dec76ff8493cfe926700ba37d"><div class="ttname"><a href="classarm__compute_1_1opencl_1_1_cl_kernel_library.xhtml#a5728371dec76ff8493cfe926700ba37d">arm_compute::opencl::ClKernelLibrary::kernel_path</a></div><div class="ttdeci">const std::string &amp; kernel_path() const</div><div class="ttdoc">Gets the path that the kernels reside in.</div><div class="ttdef"><b>Definition:</b> <a href="gpu_2cl_2_c_l_kernel_library_8cpp_source.xhtml#l01002">ClKernelLibrary.cpp:1002</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a54bb195c770b747d87af7506c2032aa4"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a54bb195c770b747d87af7506c2032aa4">arm_compute::CLCompileContext::get_built_programs</a></div><div class="ttdeci">const std::map&lt; std::string, cl::Program &gt; &amp; get_built_programs() const</div><div class="ttdoc">Access the cache of built OpenCL programs.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00331">CLCompileContext.cpp:331</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_kernel_library_xhtml_ad7395c158d8e31b9af211b9bc1f65a08"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">arm_compute::CLKernelLibrary::get_kernel_path</a></div><div class="ttdeci">std::string get_kernel_path()</div><div class="ttdoc">Gets the path that the kernels reside in.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_kernel_library_8cpp_source.xhtml#l00085">CLKernelLibrary.cpp:85</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_l_compile_context_xhtml_a251e0ce50dc147c782cad51f4bee32ea"><div class="ttname"><a href="classarm__compute_1_1_c_l_compile_context.xhtml#a251e0ce50dc147c782cad51f4bee32ea">arm_compute::CLCompileContext::add_built_program</a></div><div class="ttdeci">void add_built_program(const std::string &amp;built_program_name, const cl::Program &amp;program) const</div><div class="ttdoc">Add a new built program to the cache.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_compile_context_8cpp_source.xhtml#l00320">CLCompileContext.cpp:320</a></div></div>
<div class="ttc" id="a_cl_im2_col_kernel_8cpp_xhtml_a624a24e6d361fe7b8b8b2f6b375683a4"><div class="ttname"><a href="_cl_im2_col_kernel_8cpp.xhtml#a624a24e6d361fe7b8b8b2f6b375683a4">kernel_name</a></div><div class="ttdeci">std::string kernel_name</div><div class="ttdef"><b>Definition:</b> <a href="_cl_im2_col_kernel_8cpp_source.xhtml#l00058">ClIm2ColKernel.cpp:58</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
