<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/operators/CpuConv2d.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">24.06</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_conv2d_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuConv2d.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_conv2d_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2021, 2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_activation_layer_info_8h.xhtml">arm_compute/function_info/ActivationLayerInfo.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2common_2_macros_8h.xhtml">src/core/common/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cpu_operator_8h.xhtml">src/cpu/ICpuOperator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/** Basic function to simulate a convolution layer. This function calls one of the following functions:</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"> * -# @ref CpuGemm     (executed only in case GEMM is required for the operation)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"> * -# @ref CpuWinogradConv2d (executed only in case Winograd is required for the operation)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * -# @ref CpuDirectConv2d   (executed only in case Direct Convolution is required for the operation)</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * The function selects one of the algorithms mentioned above based on:</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> *      - The size of the kernel</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *      - Number of input/output feature maps</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *      - Amount of memory needed</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * Generally GEMM-based convolution is executed when neither Winograd nor FFT nor Direct convolution can be performed.</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> * FP32 Algorithm| Filter Size                                        |   Input/Output feature maps               |</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"> * --------------|----------------------------------------------------|-------------------------------------------|</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"> * Winograd      | 3x3 1x3 3x1 5x1 1x5 5x5(fast maths) 7x1 1x7        |  Input channels is greater than 3         |</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * FFT           | Squared kernels and greater than 9x9               |  Input feature maps &gt; Output feature maps |</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> * DirectConv    | 9x9                                                |                                           |</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> * GEMM          | Any size                                           |                                           |</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"> * Winograd 5x5 requires fast maths enabled.</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"> * FP16 Algorithm| Filter Size      |</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"> * --------------|------------------|</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * Winograd      | Not supported    |</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * FFT           | Not supported    |</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * DirectConv    | 9x9              |</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> * GEMM          | Any size         |</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml">   64</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml">CpuConv2d</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">ICpuOperator</a></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Constructor */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#ad974da2320018eed131b2f97bd7b224f">CpuConv2d</a>();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aec02a3c89a0a54b72da37bcdf47afae6">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml">CpuConv2d</a>);<span class="comment"></span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    /** Default destructor */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a8d772d8b9b533dcb45282bbb40f6e154">~CpuConv2d</a>();<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /** Set the input and output tensors.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * Valid data layouts:</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * - NHWC</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * - NCHW</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * Valid data type configurations:</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * |src0           |src1               |src2   |dst            |</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * |:--------------|:------------------|:------|:--------------|</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * |F16            |F16                |F16    |F16            |</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * |F32            |F32                |F32    |F32            |</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * |QASYMM8        |QASYMM8            |S32    |QASYMM8        |</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * |QASYMM8        |QSYMM8_PER_CHANNEL |S32    |QASYMM8        |</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * |QASYMM8_SIGNED |QASYMM8_SIGNED     |S32    |QASYMM8_SIGNED |</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * |QASYMM8_SIGNED |QSYMM8_PER_CHANNEL |S32    |QASYMM8_SIGNED |</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @param[in]  src              Source tensor info. 3 lower dimensions represent a single input [width, height, IFM],</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *                              while every optional dimension from 4 and above represent a batch of inputs.</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *                              Data types supported: QASYMM8/QASYMM8_SIGNED/F16/F32.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @param[in]  weights          Weights tensor info. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM].</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     *                              Data type supported: Same as @p src, also could be QSYMM8_PER_CHANNEL if input is QASYMM8/QASYMM8_SIGNED.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * @param[in]  biases           Biases tensor info. Shared biases supported. Biases are 1D tensor with dimensions [OFM].</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     *                              Data type supported: Same as @p src, except for input of QASYMM8/QASYMM8_SIGNED type where biases should be of S32 type.</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     * @param[out] dst              Destination tensor info. 3 lower dimensions represent a single output [width, height, OFM], while the rest represent batch of outputs.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *                              Data types supported: Same as @p src.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @param[in]  conv_info        Contains padding and stride information described in @ref PadStrideInfo.</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     * @param[in]  weights_info     Specifies if the weights tensor has been reshaped with NEWeightsReshapeKernel. If this is not part of the fully connected layer the weights</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     *                              tensor has also been transposed with cpu::kernels::CpuGemmTranspose1xWKernel. Data type supported: Same as @p input.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     * @param[in]  dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @param[in]  act_info         (Optional) Activation layer information in case of a fused activation. Only RELU, BOUNDED_RELU and LU_BOUNDED_RELU supported.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @param[in]  enable_fast_math (Optional) Enable fast math computation. In case this flag were set, the function could dispatch the fastest implementation</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     *                              available which may introduce a drop of accuracy as well. Default is false</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * @param[in]  num_groups       (Optional) Number of groups when performing a grouped convolution. num_groups != 1 is not supported</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a1302bdb38d607a850793afb096610e98">configure</a>(<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                   <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *weights,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *biases,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                   <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>               *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>       &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>         &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>     = <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>(),</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>              &amp;dilation         = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>),</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>         = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(),</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                   <span class="keywordtype">bool</span>                       enable_fast_math = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">num_groups</a>       = 1);<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /** Static function to check if given info will lead to a valid configuration of @ref CpuConv2d</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * Similar to CpuConv2d::configure()</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @return a status</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a6d4a3d570df9ced155edcbeef4cf865c">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *weights,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *biases,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *output,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>       &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>         &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>     = <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>(),</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>              &amp;dilation         = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>         = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(),</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                           <span class="keywordtype">bool</span>                       enable_fast_math = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                           <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>               <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">num_groups</a>       = 1);<span class="comment"></span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">    /** Static function to check if given info will return the convolution called by @ref CpuConv2d</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * @param[in] src              Source tensor info. 3 lower dimensions represent a single input [width, height, IFM],</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     *                             while every optional dimension from 4 and above represent a batch of inputs.</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     *                             Data types supported: QASYMM8/QASYMM8_SIGNED/F16/F32.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     * @param[in] weights          Weights tensor info. Weights are 4D tensor with dimensions [kernel_x, kernel_y, IFM, OFM].</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     *                             Data type supported:Same as @p src, also could be QSYMM8_PER_CHANNEL if input is QASYMM8/QASYMM8_SIGNED.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     * @param[in] dst              Destination tensor info. 3 lower dimensions represent a single output [width, height, OFM], while the rest represent batch of outputs.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     *                             Data types supported: Same as @p src.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @param[in] conv_info        Contains padding and stride information described in @ref PadStrideInfo.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param[in] weights_info     Specifies if the weights tensor has been reshaped with NEWeightsReshapeKernel. If this is not part of the fully connected layer the weights</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     *                             tensor has also been transposed with cpu::kernels::CpuGemmTranspose1xWKernel. Data type supported: Same as @p input.</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     * @param[in] dilation         (Optional) Dilation, in elements, across x and y. Defaults to (1, 1).</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @param[in] act_info         (Optional) Activation layer information in case of a fused activation.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * @param[in] enable_fast_math (Optional) Enable fast math computation. In case this flag were set, the function could dispatch the fastest implementation</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     *                             available which may introduce a drop of accuracy as well. Default is false</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @return the Convolution Method Hint</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a66b48a8957ee2cbf1677d267a75f6635">get_convolution_method</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *weights,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>         *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>       &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">conv_info</a>,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>         &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a>     = <a class="code" href="classarm__compute_1_1_weights_info.xhtml">WeightsInfo</a>(),</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>              &amp;dilation         = <a class="code" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>(1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>),</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">act_info</a>         = <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>(),</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                                    <span class="keywordtype">bool</span>                       enable_fast_math = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">void</span>                             <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">void</span>                             <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;constants) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::unique_ptr&lt;ICpuOperator&gt;    _function;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> _aux_mem{};</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;};</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00123">Types.h:123</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_weights_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_weights_info.xhtml">arm_compute::WeightsInfo</a></div><div class="ttdoc">Convolution Layer Weights Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01670">Types.h:1670</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a7cb842ebfe255726066039853a4322f0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">arm_compute::test::validation::weights_info</a></div><div class="ttdeci">weights_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00165">BatchNormalizationLayer.cpp:165</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="a_activation_layer_info_8h_xhtml"><div class="ttname"><a href="_activation_layer_info_8h.xhtml">ActivationLayerInfo.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_size2_d_xhtml"><div class="ttname"><a href="classarm__compute_1_1_size2_d.xhtml">arm_compute::Size2D</a></div><div class="ttdoc">Class for specifying the size of an image or rectangle.</div><div class="ttdef"><b>Definition:</b> <a href="_size2_d_8h_source.xhtml#l00034">Size2D.h:34</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_ad974da2320018eed131b2f97bd7b224f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#ad974da2320018eed131b2f97bd7b224f">arm_compute::cpu::CpuConv2d::CpuConv2d</a></div><div class="ttdeci">CpuConv2d()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00040">CpuConv2d.cpp:40</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::cpu::CpuConv2d::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00293">CpuConv2d.cpp:293</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517d"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517d">arm_compute::ConvolutionMethod</a></div><div class="ttdeci">ConvolutionMethod</div><div class="ttdoc">Available ConvolutionMethod.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00091">Types.h:91</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="_activation_layer_info_8h_source.xhtml#l00061">ActivationLayerInfo.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1f8aca235c095df227e7444f6b237eb1"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1f8aca235c095df227e7444f6b237eb1">arm_compute::test::validation::act_info</a></div><div class="ttdeci">act_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a1302bdb38d607a850793afb096610e98"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a1302bdb38d607a850793afb096610e98">arm_compute::cpu::CpuConv2d::configure</a></div><div class="ttdeci">void configure(ITensorInfo *src, ITensorInfo *weights, const ITensorInfo *biases, ITensorInfo *dst, const PadStrideInfo &amp;conv_info, const WeightsInfo &amp;weights_info=WeightsInfo(), const Size2D &amp;dilation=Size2D(1U, 1U), const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), bool enable_fast_math=false, unsigned int num_groups=1)</div><div class="ttdoc">Set the input and output tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00046">CpuConv2d.cpp:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00065">SaturateCast.h:65</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a66b48a8957ee2cbf1677d267a75f6635"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a66b48a8957ee2cbf1677d267a75f6635">arm_compute::cpu::CpuConv2d::get_convolution_method</a></div><div class="ttdeci">static ConvolutionMethod get_convolution_method(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info, const WeightsInfo &amp;weights_info=WeightsInfo(), const Size2D &amp;dilation=Size2D(1U, 1U), const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), bool enable_fast_math=false)</div><div class="ttdoc">Static function to check if given info will return the convolution called by CpuConv2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00145">CpuConv2d.cpp:145</a></div></div>
<div class="ttc" id="a_i_cpu_operator_8h_xhtml"><div class="ttname"><a href="_i_cpu_operator_8h.xhtml">ICpuOperator.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml">arm_compute::cpu::CpuConv2d</a></div><div class="ttdoc">Basic function to simulate a convolution layer.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8h_source.xhtml#l00064">CpuConv2d.h:64</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_aff8f5e4223fd2a3020c8b252c8982d3a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aff8f5e4223fd2a3020c8b252c8982d3a">arm_compute::cpu::CpuConv2d::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;constants) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00299">CpuConv2d.cpp:299</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_n_e_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">arm_compute::experimental::INEOperator</a></div><div class="ttdoc">Basic interface for functions which have a single async CPU kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_i_n_e_operator_8h_source.xhtml#l00043">INEOperator.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_core_types_8h_source.xhtml#l00139">CoreTypes.h:139</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a2270b3e1d20651d2d8341c858c890830"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a2270b3e1d20651d2d8341c858c890830">arm_compute::test::validation::num_groups</a></div><div class="ttdeci">const unsigned int num_groups</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_im2_col_8cpp_source.xhtml#l00153">Im2Col.cpp:153</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2024 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a00525ff582f16038a1d3819aa44a23a3"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a00525ff582f16038a1d3819aa44a23a3">arm_compute::test::validation::conv_info</a></div><div class="ttdeci">conv_info</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_direct_convolution_layer_8cpp_source.xhtml#l00547">DirectConvolutionLayer.cpp:547</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_aec02a3c89a0a54b72da37bcdf47afae6"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#aec02a3c89a0a54b72da37bcdf47afae6">arm_compute::cpu::CpuConv2d::ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a></div><div class="ttdeci">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE(CpuConv2d)</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a74ae0d6e96f38fecd38471431786b870"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a74ae0d6e96f38fecd38471431786b870">arm_compute::cpu::CpuConv2d::workspace</a></div><div class="ttdeci">experimental::MemoryRequirements workspace() const override</div><div class="ttdoc">Return the memory requirements required by the workspace.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00304">CpuConv2d.cpp:304</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a8d772d8b9b533dcb45282bbb40f6e154"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a8d772d8b9b533dcb45282bbb40f6e154">arm_compute::cpu::CpuConv2d::~CpuConv2d</a></div><div class="ttdeci">~CpuConv2d()</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00044">ITensorInfo.h:44</a></div></div>
<div class="ttc" id="asrc_2core_2common_2_macros_8h_xhtml"><div class="ttname"><a href="src_2core_2common_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_conv2d_xhtml_a6d4a3d570df9ced155edcbeef4cf865c"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_conv2d.xhtml#a6d4a3d570df9ced155edcbeef4cf865c">arm_compute::cpu::CpuConv2d::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *biases, const ITensorInfo *output, const PadStrideInfo &amp;conv_info, const WeightsInfo &amp;weights_info=WeightsInfo(), const Size2D &amp;dilation=Size2D(1U, 1U), const ActivationLayerInfo &amp;act_info=ActivationLayerInfo(), bool enable_fast_math=false, unsigned int num_groups=1)</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of CpuConv2d.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_conv2d_8cpp_source.xhtml#l00106">CpuConv2d.cpp:106</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_e639157fd988cab7c102f16994a5c7d6.xhtml">operators</a></li><li class="navelem"><a class="el" href="_cpu_conv2d_8h.xhtml">CpuConv2d.h</a></li>
    <li class="footer">Generated on Mon Jun 17 2024 15:11:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
