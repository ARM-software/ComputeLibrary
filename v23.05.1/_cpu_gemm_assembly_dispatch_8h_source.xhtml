<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/cpu/operators/internal/CpuGemmAssemblyDispatch.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cpu_gemm_assembly_dispatch_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CpuGemmAssemblyDispatch.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cpu_gemm_assembly_dispatch_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018-2023 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_CPU_INTERNAL_CPU_GEMM_ASSEMBLY_DISPATCH_H</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_CPU_INTERNAL_CPU_GEMM_ASSEMBLY_DISPATCH_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="src_2core_2common_2_macros_8h.xhtml">src/core/common/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_cpu_operator_8h.xhtml">src/cpu/ICpuOperator.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>cpu</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">/* Convolution method supported by the assembly gemm interface */</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710">   35</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710">AsmConvMethod</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a2666155960777a08cf2552d554f1da34">Im2Col</a>,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c">Indirect</a>,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef">Conv</a></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">   42</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0cbb6ae220a0fc33e557441771cf75a6">   44</a></span>&#160;    <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710">AsmConvMethod</a>             <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0cbb6ae220a0fc33e557441771cf75a6">method</a>{ <a class="code" href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a2666155960777a08cf2552d554f1da34">AsmConvMethod::Im2Col</a> };</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a6b92c61f3e367fe998db0fc33fe6b3b9">   45</a></span>&#160;    <a class="code" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>             <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a6b92c61f3e367fe998db0fc33fe6b3b9">ps_info</a>{};</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">   46</a></span>&#160;    <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>       <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">activation_info</a>{};</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">   47</a></span>&#160;    <a class="code" href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">GEMMLowpOutputStageInfo</a>   <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">output_stage</a>{};</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aa1e14959c5017dd8b7d945e24f366757">   48</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aa1e14959c5017dd8b7d945e24f366757">negated_offsets</a>{ <span class="keyword">true</span> };</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aba258627772f6f76f644911b027cbab5">   49</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aba258627772f6f76f644911b027cbab5">reinterpret_input_as_3d</a>{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a85c61a83d182e1aab4f2176250934857">   50</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a85c61a83d182e1aab4f2176250934857">depth_output_gemm3d</a>{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0b43a7c0dfa50b241f1bb3215f05dce7">   51</a></span>&#160;    int64_t                   <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0b43a7c0dfa50b241f1bb3215f05dce7">padding_top</a>{ 0 };</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8437e73cc2c21cfd03b1738950c1d8e1">   52</a></span>&#160;    int64_t                   <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8437e73cc2c21cfd03b1738950c1d8e1">padding_left</a>{ 0 };</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8b128a7a5d25feae4c00527985c75006">   53</a></span>&#160;    <span class="keywordtype">float</span>                     <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8b128a7a5d25feae4c00527985c75006">padding_value</a>{ 0.f };</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ab562a17bf232cdbe7aaaed2ca4ab7d0a">   54</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ab562a17bf232cdbe7aaaed2ca4ab7d0a">fast_mode</a>{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#af09a906dc166b5cc0eff7fa11fd92ca9">   55</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#af09a906dc166b5cc0eff7fa11fd92ca9">fixed_format</a>{ <span class="keyword">false</span> };</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a440c3faa85c2766ec4681807a906bf53">   56</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a440c3faa85c2766ec4681807a906bf53">weight_format</a>{ <a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a> };</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a4e5b42582f93c7e7d4be4e027f863319">   57</a></span>&#160;    <span class="keywordtype">bool</span>                      <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a4e5b42582f93c7e7d4be4e027f863319">reshape_b_only_on_first_run</a>{ <span class="keyword">true</span> };</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;};</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">/** Assembly kernel glue */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">   61</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">CpuGemmAssemblyDispatch</a> : <span class="keyword">public</span> <a class="code" href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">ICpuOperator</a></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /** Constructor */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a527ebcdee3c94fd6f80842ede72ef99a">CpuGemmAssemblyDispatch</a>();<span class="comment"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /** Defautl destructor */</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4a83ce051d78630db7e8c33a4c061d2">~CpuGemmAssemblyDispatch</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a5b5fd325b2498d7285fe214a6dbe6a1d">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a>(<a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">CpuGemmAssemblyDispatch</a>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml">   71</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml">IFallback</a></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)                              = 0;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a1f191a1d71b1c29be53f46d61232f396">prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors)                          = 0;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#ad741ef935c3200a9c6137e3257f65466">workspace</a>() <span class="keyword">const</span>          = 0;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span>                             <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a959cc06df096abd4449c1b9afd0ffc2f">is_configured</a>() <span class="keyword">const</span>      = 0;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span>                             <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a05da929cb341ebbe9e65621b08359e67">isVarWeightsKernel</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a6f8ab7ea60418ed56df810befee4c34a">~IFallback</a>()                                                = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    };</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /** If supported create a Compute Library function else fallback to the arm_gemm function.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @note Configuring &quot;batches&quot;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * The shapes of @p a @p b and @p d are arranged as follows:</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *     Lowest dimension &lt;-&gt; Highest dimension</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * a: [K, M, Batch, Multi]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * b: [N, K, Multi]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     * d: [N, M, Batch, Multi]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     * The &quot;Batch&quot; refers to where &quot;Batch&quot; number of MxK slices of tensor a multiplies with a single KxN slice of b</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * The &quot;Multi&quot; refers to where &quot;Multi&quot; number of individual multiplication of a with b</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     * E.g. the following are some example input shape configurations</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * (1) Normal 2D gemm</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     * a: [K=3, M=4]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * b: [N=5, K=3]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     * d: [N=5, M=4]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * (2) Batches of a sharing b (e.g. gemm-based batched convolution where b is the shared )</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * a: [K=3, M=4, Batch=9]</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * b: [N=5, K=3]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * d: [N=5, M=4, Batch=9]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * (3) &quot;Batches&quot; of independent gemm (e.g. batched matmul)</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * a: [K=3, M=4, Batch=1, Multi=7]</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     * b: [N=5, K=3, Multi=7]</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * d: [N=5, M=4, Batch=1, Multi=7]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     * (4) &quot;Batches&quot; of independent gemm where b is also shared</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * a: [K=3, M=4, Batch=4, Multi=7]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * b: [N=5, K=3, Multi=7]</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * d: [N=5, M=4, Batch=4, Multi=7]</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @param[in]  a    Input tensor (Matrix A)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @param[in]  b    Input tensor (Matrix B)</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     * @param[in]  c    Input tensor (Matrix C) used to pass the bias for quantized calculations</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * @param[out] d    Output tensor to store the result of matrix multiplication. Data type supported: same as @p input0.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     * @param[in]  info GEMM meta-data</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a1c90377b949c122fd2bd4e932668de78">configure</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    /** Indicates whether or not this function can be used to process the given parameters.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     * @param[in] a    Input tensor info (Matrix A)</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     * @param[in] b    Input tensor info (Matrix B)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     * @param[in] c    Input tensor info (Matrix C) used to pass the bias for quantized calculations</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * @param[in] d    Output tensor to store the result of matrix multiplication. Data type supported: same as @p input0.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     * @param[in] info GEMM meta-data</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @return a status.</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">validate</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /** Indicates whether or not there is an optimal assembly implementation that can be used to process the given parameters.</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     * This method has the same use of @ref</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * NEGEMMConvolutionLayer::has_opt_impl, with the only caveat that</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * the value of arm_compute::WeightFormat need to be passed via the</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * parameter info.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     * @return a status.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_status.xhtml">Status</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a5148a10005b9dd2e63269b4028b36191">has_opt_impl</a>(<a class="code" href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a> &amp;weight_format, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *a, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">b</a>, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *c, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *d, <span class="keyword">const</span> <a class="code" href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">AsmGemmInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);<span class="comment"></span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">    /** Checks if activation is supported by the gemm assembly dispatcher</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @param[in] activation Activation to check</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @return True if activation is supported else false</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a15eae37f4cc172cf75bf9bc64b840ce5">is_activation_supported</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> &amp;activation);<span class="comment"></span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    /** Was the function successfully configured ?</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     * @return True if the function is configured and ready to run</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ab7c16a89cb470f3fa85818ee85e1e1dd">is_configured</a>() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">    /** Indicates if the convolution executes in variable weights mode.</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     * Similar to @ref CpuGemm::isVarWeightsKernel</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a71d873f2499a8e8ff73674cc0ce54a08">  163</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a71d873f2499a8e8ff73674cc0ce54a08">isVarWeightsKernel</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> _arm_gemm &amp;&amp; _arm_gemm-&gt;isVarWeightsKernel();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// Inherited methods overridden:</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">prepare</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">run</a>(<a class="code" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">experimental::MemoryRequirements</a> <a class="code" href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">workspace</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    std::unique_ptr&lt;IFallback&gt; _arm_gemm; <span class="comment">/**&lt; Interface for the arm_gemm fallback */</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;};</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;} <span class="comment">// namespace cpu</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_CPU_INTERNAL_CPU_GEMM_ASSEMBLY_DISPATCH_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_xhtml_aa93a4d93eb22ef5445cd567ef22ca67c"><div class="ttname"><a href="namespacearm__compute_1_1experimental.xhtml#aa93a4d93eb22ef5445cd567ef22ca67c">arm_compute::experimental::MemoryRequirements</a></div><div class="ttdeci">std::vector&lt; MemoryInfo &gt; MemoryRequirements</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00134">Types.h:134</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_aa1e14959c5017dd8b7d945e24f366757"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aa1e14959c5017dd8b7d945e24f366757">arm_compute::cpu::AsmGemmInfo::negated_offsets</a></div><div class="ttdeci">bool negated_offsets</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00048">CpuGemmAssemblyDispatch.h:48</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a8b128a7a5d25feae4c00527985c75006"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8b128a7a5d25feae4c00527985c75006">arm_compute::cpu::AsmGemmInfo::padding_value</a></div><div class="ttdeci">float padding_value</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00053">CpuGemmAssemblyDispatch.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_ab7c16a89cb470f3fa85818ee85e1e1dd"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ab7c16a89cb470f3fa85818ee85e1e1dd">arm_compute::cpu::CpuGemmAssemblyDispatch::is_configured</a></div><div class="ttdeci">bool is_configured() const</div><div class="ttdoc">Was the function successfully configured ?</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00877">CpuGemmAssemblyDispatch.cpp:877</a></div></div>
<div class="ttc" id="astructarm__compute_1_1_g_e_m_m_lowp_output_stage_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1_g_e_m_m_lowp_output_stage_info.xhtml">arm_compute::GEMMLowpOutputStageInfo</a></div><div class="ttdoc">GEMMLowp output stage info.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02307">Types.h:2307</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a5148a10005b9dd2e63269b4028b36191"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a5148a10005b9dd2e63269b4028b36191">arm_compute::cpu::CpuGemmAssemblyDispatch::has_opt_impl</a></div><div class="ttdeci">static Status has_opt_impl(arm_compute::WeightFormat &amp;weight_format, const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, const AsmGemmInfo &amp;info)</div><div class="ttdoc">Indicates whether or not there is an optimal assembly implementation that can be used to process the ...</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00692">CpuGemmAssemblyDispatch.cpp:692</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_a05da929cb341ebbe9e65621b08359e67"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a05da929cb341ebbe9e65621b08359e67">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::isVarWeightsKernel</a></div><div class="ttdeci">virtual bool isVarWeightsKernel() const =0</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_af4d2c35e9fbc329b2e1b2acb864265aa"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4d2c35e9fbc329b2e1b2acb864265aa">arm_compute::cpu::CpuGemmAssemblyDispatch::prepare</a></div><div class="ttdeci">void prepare(ITensorPack &amp;tensors) override</div><div class="ttdoc">Prepare the function for executing.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00871">CpuGemmAssemblyDispatch.cpp:871</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_aba258627772f6f76f644911b027cbab5"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#aba258627772f6f76f644911b027cbab5">arm_compute::cpu::AsmGemmInfo::reinterpret_input_as_3d</a></div><div class="ttdeci">bool reinterpret_input_as_3d</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00049">CpuGemmAssemblyDispatch.h:49</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a0b43a7c0dfa50b241f1bb3215f05dce7"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0b43a7c0dfa50b241f1bb3215f05dce7">arm_compute::cpu::AsmGemmInfo::padding_top</a></div><div class="ttdeci">int64_t padding_top</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00051">CpuGemmAssemblyDispatch.h:51</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a71d873f2499a8e8ff73674cc0ce54a08"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a71d873f2499a8e8ff73674cc0ce54a08">arm_compute::cpu::CpuGemmAssemblyDispatch::isVarWeightsKernel</a></div><div class="ttdeci">bool isVarWeightsKernel() const</div><div class="ttdoc">Indicates if the convolution executes in variable weights mode.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00163">CpuGemmAssemblyDispatch.h:163</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml">arm_compute::cpu::AsmGemmInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00042">CpuGemmAssemblyDispatch.h:42</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a8437e73cc2c21cfd03b1738950c1d8e1"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a8437e73cc2c21cfd03b1738950c1d8e1">arm_compute::cpu::AsmGemmInfo::padding_left</a></div><div class="ttdeci">int64_t padding_left</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00052">CpuGemmAssemblyDispatch.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_a1f191a1d71b1c29be53f46d61232f396"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a1f191a1d71b1c29be53f46d61232f396">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::prepare</a></div><div class="ttdeci">virtual void prepare(ITensorPack &amp;tensors)=0</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a1c90377b949c122fd2bd4e932668de78"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a1c90377b949c122fd2bd4e932668de78">arm_compute::cpu::CpuGemmAssemblyDispatch::configure</a></div><div class="ttdeci">void configure(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, ITensorInfo *d, const AsmGemmInfo &amp;info)</div><div class="ttdoc">If supported create a Compute Library function else fallback to the arm_gemm function.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00816">CpuGemmAssemblyDispatch.cpp:816</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_activation_layer_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_activation_layer_info.xhtml">arm_compute::ActivationLayerInfo</a></div><div class="ttdoc">Activation Layer Information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l01659">Types.h:1659</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_a6f8ab7ea60418ed56df810befee4c34a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a6f8ab7ea60418ed56df810befee4c34a">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::~IFallback</a></div><div class="ttdeci">virtual ~IFallback()=default</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback</a></div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00071">CpuGemmAssemblyDispatch.h:71</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5">arm_compute::WeightFormat</a></div><div class="ttdeci">WeightFormat</div><div class="ttdoc">Memory layouts for the weights tensor.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l02035">Types.h:2035</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_af4a83ce051d78630db7e8c33a4c061d2"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#af4a83ce051d78630db7e8c33a4c061d2">arm_compute::cpu::CpuGemmAssemblyDispatch::~CpuGemmAssemblyDispatch</a></div><div class="ttdeci">~CpuGemmAssemblyDispatch()=default</div><div class="ttdoc">Defautl destructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_pack_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_pack.xhtml">arm_compute::ITensorPack</a></div><div class="ttdoc">Tensor packing service.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_pack_8h_source.xhtml#l00039">ITensorPack.h:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a527ebcdee3c94fd6f80842ede72ef99a"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a527ebcdee3c94fd6f80842ede72ef99a">arm_compute::cpu::CpuGemmAssemblyDispatch::CpuGemmAssemblyDispatch</a></div><div class="ttdeci">CpuGemmAssemblyDispatch()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00687">CpuGemmAssemblyDispatch.cpp:687</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a6b92c61f3e367fe998db0fc33fe6b3b9"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a6b92c61f3e367fe998db0fc33fe6b3b9">arm_compute::cpu::AsmGemmInfo::ps_info</a></div><div class="ttdeci">PadStrideInfo ps_info</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00045">CpuGemmAssemblyDispatch.h:45</a></div></div>
<div class="ttc" id="a_i_cpu_operator_8h_xhtml"><div class="ttname"><a href="_i_cpu_operator_8h.xhtml">ICpuOperator.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_status_xhtml"><div class="ttname"><a href="classarm__compute_1_1_status.xhtml">arm_compute::Status</a></div><div class="ttdoc">Status class.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00052">Error.h:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a5b5fd325b2498d7285fe214a6dbe6a1d"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a5b5fd325b2498d7285fe214a6dbe6a1d">arm_compute::cpu::CpuGemmAssemblyDispatch::ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a></div><div class="ttdeci">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE(CpuGemmAssemblyDispatch)</div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml">arm_compute::cpu::CpuGemmAssemblyDispatch</a></div><div class="ttdoc">Assembly kernel glue.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00061">CpuGemmAssemblyDispatch.h:61</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710a2666155960777a08cf2552d554f1da34"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a2666155960777a08cf2552d554f1da34">arm_compute::cpu::AsmConvMethod::Im2Col</a></div><div class="ttdeci">@ Im2Col</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a0cbb6ae220a0fc33e557441771cf75a6"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a0cbb6ae220a0fc33e557441771cf75a6">arm_compute::cpu::AsmGemmInfo::method</a></div><div class="ttdeci">AsmConvMethod method</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00044">CpuGemmAssemblyDispatch.h:44</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1_i_n_e_operator_xhtml"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1_i_n_e_operator.xhtml">arm_compute::experimental::INEOperator</a></div><div class="ttdoc">Basic interface for functions which have a single async CPU kernel.</div><div class="ttdef"><b>Definition:</b> <a href="_i_n_e_operator_8h_source.xhtml#l00043">INEOperator.h:43</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pad_stride_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_pad_stride_info.xhtml">arm_compute::PadStrideInfo</a></div><div class="ttdoc">Padding and stride information class.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00671">Types.h:671</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_ab562a17bf232cdbe7aaaed2ca4ab7d0a"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ab562a17bf232cdbe7aaaed2ca4ab7d0a">arm_compute::cpu::AsmGemmInfo::fast_mode</a></div><div class="ttdeci">bool fast_mode</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00054">CpuGemmAssemblyDispatch.h:54</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a684a54d1fb1634a348a585c6b5e76df0"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a684a54d1fb1634a348a585c6b5e76df0">arm_compute::cpu::CpuGemmAssemblyDispatch::run</a></div><div class="ttdeci">void run(ITensorPack &amp;tensors) override</div><div class="ttdoc">Run the kernels contained in the function.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00882">CpuGemmAssemblyDispatch.cpp:882</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute.xhtml#a23ab0e5c6b5d13e084628686c4f282d5a1c04cc3823d476c3017238679a0fdf52">arm_compute::WeightFormat::UNSPECIFIED</a></div><div class="ttdeci">@ UNSPECIFIED</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_af09a906dc166b5cc0eff7fa11fd92ca9"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#af09a906dc166b5cc0eff7fa11fd92ca9">arm_compute::cpu::AsmGemmInfo::fixed_format</a></div><div class="ttdeci">bool fixed_format</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00055">CpuGemmAssemblyDispatch.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710a0b5ca9d0c6dbcbb3e299361cd4e4a79c">arm_compute::cpu::AsmConvMethod::Indirect</a></div><div class="ttdeci">@ Indirect</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a85c61a83d182e1aab4f2176250934857"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a85c61a83d182e1aab4f2176250934857">arm_compute::cpu::AsmGemmInfo::depth_output_gemm3d</a></div><div class="ttdeci">bool depth_output_gemm3d</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00050">CpuGemmAssemblyDispatch.h:50</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_a8d7312410ad7314fa75c29b1ff0f17f0"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a8d7312410ad7314fa75c29b1ff0f17f0">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::run</a></div><div class="ttdeci">virtual void run(ITensorPack &amp;tensors)=0</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_ad5f55d98fbe268b4eb6225aca14a2403"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#ad5f55d98fbe268b4eb6225aca14a2403">arm_compute::cpu::AsmGemmInfo::activation_info</a></div><div class="ttdeci">ActivationLayerInfo activation_info</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00046">CpuGemmAssemblyDispatch.h:46</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aa76b4a6e74940dabc5b7fc6b2dab3545"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aa76b4a6e74940dabc5b7fc6b2dab3545">arm_compute::test::validation::b</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; b</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00157">DFT.cpp:157</a></div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a4e5b42582f93c7e7d4be4e027f863319"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a4e5b42582f93c7e7d4be4e027f863319">arm_compute::cpu::AsmGemmInfo::reshape_b_only_on_first_run</a></div><div class="ttdeci">bool reshape_b_only_on_first_run</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00057">CpuGemmAssemblyDispatch.h:57</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a74ae0d6e96f38fecd38471431786b870"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a74ae0d6e96f38fecd38471431786b870">arm_compute::cpu::CpuGemmAssemblyDispatch::workspace</a></div><div class="ttdeci">experimental::MemoryRequirements workspace() const override</div><div class="ttdoc">Return the memory requirements required by the workspace.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00888">CpuGemmAssemblyDispatch.cpp:888</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_a15eae37f4cc172cf75bf9bc64b840ce5"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#a15eae37f4cc172cf75bf9bc64b840ce5">arm_compute::cpu::CpuGemmAssemblyDispatch::is_activation_supported</a></div><div class="ttdeci">static bool is_activation_supported(const ActivationLayerInfo &amp;activation)</div><div class="ttdoc">Checks if activation is supported by the gemm assembly dispatcher.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00810">CpuGemmAssemblyDispatch.cpp:810</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_ad741ef935c3200a9c6137e3257f65466"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#ad741ef935c3200a9c6137e3257f65466">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::workspace</a></div><div class="ttdeci">virtual experimental::MemoryRequirements workspace() const =0</div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710">arm_compute::cpu::AsmConvMethod</a></div><div class="ttdeci">AsmConvMethod</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00035">CpuGemmAssemblyDispatch.h:35</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_xhtml_a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef"><div class="ttname"><a href="namespacearm__compute_1_1cpu.xhtml#a3c378cf8ee66b2333bdf4868eeba2710acc31a669f6d086f816852dda3290a3ef">arm_compute::cpu::AsmConvMethod::Conv</a></div><div class="ttdeci">@ Conv</div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml">arm_compute::ITensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_i_tensor_info_8h_source.xhtml#l00043">ITensorInfo.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a65360a0526d791c7a9ff52a36fa059a8"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a65360a0526d791c7a9ff52a36fa059a8">arm_compute::cpu::AsmGemmInfo::output_stage</a></div><div class="ttdeci">GEMMLowpOutputStageInfo output_stage</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00047">CpuGemmAssemblyDispatch.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_xhtml_ad1ae76c1f4f99aca4e9678c1322497e5"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch.xhtml#ad1ae76c1f4f99aca4e9678c1322497e5">arm_compute::cpu::CpuGemmAssemblyDispatch::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *a, const ITensorInfo *b, const ITensorInfo *c, const ITensorInfo *d, const AsmGemmInfo &amp;info)</div><div class="ttdoc">Indicates whether or not this function can be used to process the given parameters.</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00762">CpuGemmAssemblyDispatch.cpp:762</a></div></div>
<div class="ttc" id="asrc_2core_2common_2_macros_8h_xhtml"><div class="ttname"><a href="src_2core_2common_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback_xhtml_a959cc06df096abd4449c1b9afd0ffc2f"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_cpu_gemm_assembly_dispatch_1_1_i_fallback.xhtml#a959cc06df096abd4449c1b9afd0ffc2f">arm_compute::cpu::CpuGemmAssemblyDispatch::IFallback::is_configured</a></div><div class="ttdeci">virtual bool is_configured() const =0</div></div>
<div class="ttc" id="astructarm__compute_1_1cpu_1_1_asm_gemm_info_xhtml_a440c3faa85c2766ec4681807a906bf53"><div class="ttname"><a href="structarm__compute_1_1cpu_1_1_asm_gemm_info.xhtml#a440c3faa85c2766ec4681807a906bf53">arm_compute::cpu::AsmGemmInfo::weight_format</a></div><div class="ttdeci">arm_compute::WeightFormat weight_format</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_gemm_assembly_dispatch_8h_source.xhtml#l00056">CpuGemmAssemblyDispatch.h:56</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2c61f424fd391396db977702a2beee9a.xhtml">cpu</a></li><li class="navelem"><a class="el" href="dir_e639157fd988cab7c102f16994a5c7d6.xhtml">operators</a></li><li class="navelem"><a class="el" href="dir_7516d7e27ad2852cb8e3a5961ec5f65b.xhtml">internal</a></li><li class="navelem"><a class="el" href="_cpu_gemm_assembly_dispatch_8h.xhtml">CpuGemmAssemblyDispatch.h</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:15 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
