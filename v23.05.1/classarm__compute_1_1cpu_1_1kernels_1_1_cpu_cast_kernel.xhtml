<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CpuCastKernel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CpuCastKernel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Casts a given tensor to a new type.  
 <a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_cpu_cast_kernel_8h_source.xhtml">CpuCastKernel.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CpuCastKernel:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel__coll__graph.svg" width="310" height="355"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel_1_1_cast_kernel.xhtml">CastKernel</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a658d8a8de4a62335e989306bd9a12413"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a658d8a8de4a62335e989306bd9a12413">CpuCastKernel</a> ()=default</td></tr>
<tr class="separator:a658d8a8de4a62335e989306bd9a12413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0923e7f2dc780ce70d142c9bfc939ccf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a0923e7f2dc780ce70d142c9bfc939ccf">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE</a> (<a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">CpuCastKernel</a>)</td></tr>
<tr class="separator:a0923e7f2dc780ce70d142c9bfc939ccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f37596bff5fa6d2dcb4754c5f2c63a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a5f37596bff5fa6d2dcb4754c5f2c63a6">configure</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</td></tr>
<tr class="memdesc:a5f37596bff5fa6d2dcb4754c5f2c63a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the src and dst of the kernel.  <a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a5f37596bff5fa6d2dcb4754c5f2c63a6">More...</a><br /></td></tr>
<tr class="separator:a5f37596bff5fa6d2dcb4754c5f2c63a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a883429dd6cf828bfdd64b255afc458da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">run_op</a> (<a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;tensors, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info) override</td></tr>
<tr class="memdesc:a883429dd6cf828bfdd64b255afc458da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a883429dd6cf828bfdd64b255afc458da">More...</a><br /></td></tr>
<tr class="separator:a883429dd6cf828bfdd64b255afc458da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1a10d4d6422ca58d53d8414d5954bd"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">name</a> () const override</td></tr>
<tr class="memdesc:aef1a10d4d6422ca58d53d8414d5954bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the kernel.  <a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#aef1a10d4d6422ca58d53d8414d5954bd">More...</a><br /></td></tr>
<tr class="separator:aef1a10d4d6422ca58d53d8414d5954bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">~ICPPKernel</a> ()=default</td></tr>
<tr class="memdesc:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a033d17a97e07cea7fe83eefcf23540f6">More...</a><br /></td></tr>
<tr class="separator:a033d17a97e07cea7fe83eefcf23540f6 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6586f7a2dd64942f59b8c408643a0ea">run</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info)</td></tr>
<tr class="memdesc:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute the kernel on the passed window.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6586f7a2dd64942f59b8c408643a0ea">More...</a><br /></td></tr>
<tr class="separator:ad6586f7a2dd64942f59b8c408643a0ea inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a92fc66203d7affe26cbe70194a154895">run_nd</a> (const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;<a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>, const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;info, const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;thread_locator)</td></tr>
<tr class="memdesc:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">legacy compatibility layer for implemantions which do not support thread_locator In these cases we simply narrow the interface down the legacy version  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a92fc66203d7affe26cbe70194a154895">More...</a><br /></td></tr>
<tr class="separator:a92fc66203d7affe26cbe70194a154895 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">virtual size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a3aa853ba2ae719bcb7ed1ccbe3c33286">get_mws</a> (const <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;platform, size_t thread_count) const</td></tr>
<tr class="memdesc:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return minimum workload size of the relevant kernel.  <a href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a3aa853ba2ae719bcb7ed1ccbe3c33286">More...</a><br /></td></tr>
<tr class="separator:a3aa853ba2ae719bcb7ed1ccbe3c33286 inherit pub_methods_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1_i_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1_i_kernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1_i_kernel.xhtml">IKernel</a></td></tr>
<tr class="memitem:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">IKernel</a> ()</td></tr>
<tr class="memdesc:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a7250cb8cbaa4104a93a2d77155085507">More...</a><br /></td></tr>
<tr class="separator:a7250cb8cbaa4104a93a2d77155085507 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">~IKernel</a> ()=default</td></tr>
<tr class="memdesc:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1_i_kernel.xhtml#a341b60d15a5e12a5b8f3825194dd3b12">More...</a><br /></td></tr>
<tr class="separator:a341b60d15a5e12a5b8f3825194dd3b12 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">is_parallelisable</a> () const</td></tr>
<tr class="memdesc:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates whether or not the kernel is parallelisable.  <a href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b">More...</a><br /></td></tr>
<tr class="separator:a0466ee6ce6552c87595f0e88e73eeb1b inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structarm__compute_1_1_border_size.xhtml">BorderSize</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">border_size</a> () const</td></tr>
<tr class="memdesc:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the border for that kernel.  <a href="classarm__compute_1_1_i_kernel.xhtml#a4b3a97ba5dded504a2f2261c078493dd">More...</a><br /></td></tr>
<tr class="separator:a4b3a97ba5dded504a2f2261c078493dd inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> () const</td></tr>
<tr class="memdesc:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum window the kernel can be executed on.  <a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">More...</a><br /></td></tr>
<tr class="separator:ad34a46f53686c12a5c5e717cc9617fb6 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a32ab3ad0302912c7da52204042727a44">is_window_configured</a> () const</td></tr>
<tr class="memdesc:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to check if the embedded window of this kernel has been configured.  <a href="classarm__compute_1_1_i_kernel.xhtml#a32ab3ad0302912c7da52204042727a44">More...</a><br /></td></tr>
<tr class="separator:a32ab3ad0302912c7da52204042727a44 inherit pub_methods_classarm__compute_1_1_i_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a99ee9eafa97c4a2c2ddefa4055acbfeb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a99ee9eafa97c4a2c2ddefa4055acbfeb">validate</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *src, const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *dst, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a> policy)</td></tr>
<tr class="memdesc:a99ee9eafa97c4a2c2ddefa4055acbfeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function to check if given info will lead to a valid configuration.  <a href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a99ee9eafa97c4a2c2ddefa4055acbfeb">More...</a><br /></td></tr>
<tr class="separator:a99ee9eafa97c4a2c2ddefa4055acbfeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a995eb70b39374652bd21d5a8515e8322"><td class="memItemLeft" align="right" valign="top">static const std::vector&lt; <a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel_1_1_cast_kernel.xhtml">CastKernel</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a995eb70b39374652bd21d5a8515e8322">get_available_kernels</a> ()</td></tr>
<tr class="separator:a995eb70b39374652bd21d5a8515e8322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_kernel')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml">ICpuKernel&lt; CpuCastKernel &gt;</a></td></tr>
<tr class="memitem:a1c57e942b23eab1974697c3378bee0d8 inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_kernel"><td class="memItemLeft" align="right" valign="top">static const auto *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">get_implementation</a> (const SelectorType &amp;selector, <a class="el" href="namespacearm__compute_1_1cpu.xhtml#afa3ebf7e0ea95c0c9cadb30c62bad67a">KernelSelectionType</a> selection_type=KernelSelectionType::Supported)</td></tr>
<tr class="memdesc:a1c57e942b23eab1974697c3378bee0d8 inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_kernel"><td class="mdescLeft">&#160;</td><td class="mdescRight">Micro-kernel selector.  <a href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">More...</a><br /></td></tr>
<tr class="separator:a1c57e942b23eab1974697c3378bee0d8 inherit pub_static_methods_classarm__compute_1_1cpu_1_1_i_cpu_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml">ICPPKernel</a></td></tr>
<tr class="memitem:ad6dda2ca87714e265e1521607c2fa7d0 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#ad6dda2ca87714e265e1521607c2fa7d0">default_mws</a> = 1</td></tr>
<tr class="separator:ad6dda2ca87714e265e1521607c2fa7d0 inherit pub_static_attribs_classarm__compute_1_1_i_c_p_p_kernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Casts a given tensor to a new type. </p>
<dl class="section note"><dt>Note</dt><dd>When casting between quantized types the scale and zeroPoint are ignored </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8h_source.xhtml#l00040">40</a> of file <a class="el" href="_cpu_cast_kernel_8h_source.xhtml">CpuCastKernel.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a658d8a8de4a62335e989306bd9a12413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a658d8a8de4a62335e989306bd9a12413">&#9670;&nbsp;</a></span>CpuCastKernel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">CpuCastKernel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0923e7f2dc780ce70d142c9bfc939ccf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0923e7f2dc780ce70d142c9bfc939ccf">&#9670;&nbsp;</a></span>ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARM_COMPUTE_DISALLOW_COPY_ALLOW_MOVE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">CpuCastKernel</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f37596bff5fa6d2dcb4754c5f2c63a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f37596bff5fa6d2dcb4754c5f2c63a6">&#9670;&nbsp;</a></span>configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void configure </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>&#160;</td>
          <td class="paramname"><em>policy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the src and dst of the kernel. </p>
<p>Valid conversions src -&gt; dst :</p>
<ul>
<li>QASYMM8_SIGNED -&gt; S16, S32, F32, F16</li>
<li>QASYMM8 -&gt; U16, S16, S32, F32, F16</li>
<li>U8 -&gt; U16, S16, S32, F32, F16</li>
<li>U16 -&gt; U8, U32</li>
<li>S16 -&gt; QASYMM8_SIGNED, U8, S32</li>
<li>BFLOAT16 -&gt; F32</li>
<li>F16 -&gt; QASYMM8_SIGNED, QASYMM8, F32, S32, U8</li>
<li>S32 -&gt; QASYMM8_SIGNED, QASYMM8, F16, F32, U8</li>
<li>F32 -&gt; QASYMM8_SIGNED, QASYMM8, BFLOAT16, F16, S32, U8</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>The src tensor to convert. Data types supported: QASYMM8_SIGNED/QASYMM8/U8/U16/S16/BFLOAT16/F16/F32. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>The dst tensor. Data types supported: QASYMM8_SIGNED/QASYMM8/U8/U16/S16/U32/S32/BFLOAT16/F16/F32. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">policy</td><td>Conversion policy.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000012">Deprecated:</a></b></dt><dd>Support for BFLOAT16 will be removed in 23.05 release </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// Auto initialize dst shape if not initialized (We can only auto-configure the shape, datatype must be given)</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">set_shape_if_empty</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>-&gt;tensor_shape());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    _policy = policy;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, policy));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Configure kernel window</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    Window win = <a class="code" href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">calculate_max_window</a>(*<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, Steps());</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    ICPPKernel::configure(win);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="_error_8h_source.xhtml#l00455">ARM_COMPUTE_ERROR_THROW_ON</a>, <a class="el" href="_window_helpers_8cpp_source.xhtml#l00028">arm_compute::calculate_max_window()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_auto_configuration_8h_source.xhtml#l00093">arm_compute::set_shape_if_empty()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, and <a class="el" href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00060">arm_compute::cpu::kernels::validate_arguments()</a>.</p>

</div>
</div>
<a id="a995eb70b39374652bd21d5a8515e8322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a995eb70b39374652bd21d5a8515e8322">&#9670;&nbsp;</a></span>get_available_kernels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; <a class="el" href="structarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel_1_1_cast_kernel.xhtml">CpuCastKernel::CastKernel</a> &gt; &amp; get_available_kernels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l01110">1110</a> of file <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;{</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="keywordflow">return</span> available_kernels;</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aef1a10d4d6422ca58d53d8414d5954bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef1a10d4d6422ca58d53d8414d5954bd">&#9670;&nbsp;</a></span>name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name of the kernel. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a1a30ad8f276a2310571c36239554831a">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l01105">1105</a> of file <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;{</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;CpuCastKernel.cpp&quot;</span>;</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a883429dd6cf828bfdd64b255afc458da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a883429dd6cf828bfdd64b255afc458da">&#9670;&nbsp;</a></span>run_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run_op </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_i_tensor_pack.xhtml">ITensorPack</a> &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_thread_info.xhtml">ThreadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Execute the kernel on the passed window. </p>
<dl class="section warning"><dt>Warning</dt><dd>If <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#a0466ee6ce6552c87595f0e88e73eeb1b" title="Indicates whether or not the kernel is parallelisable.">is_parallelisable()</a> returns false then the passed window must be equal to <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a></dd></dl>
<dl class="section note"><dt>Note</dt><dd>The window has to be a region within the window returned by the <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a> method</dd>
<dd>
The width of the window has to be a multiple of <a class="el" href="_cl_im2_col_kernel_8cpp.xhtml#a4e45c1f5e4280813a78a77dda71d8799">num_elems_processed_per_iteration()</a>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td>A vector containing the tensors to operate on. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">window</td><td>Region on which to execute the kernel. (Must be a region of the window returned by <a class="el" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6" title="The maximum window the kernel can be executed on.">window()</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Info about executing thread and CPU. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1_i_c_p_p_kernel.xhtml#a6b8ef149ef3b6ca5e548473916f95cd6">ICPPKernel</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">IKernel::window</a>(), <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> window_start_x = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">start</a>());</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> window_end_x   = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>.<a class="code" href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">x</a>().<a class="code" href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">end</a>());</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span>  window_step_x  = 16;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">const</span> ITensor *_src = tensors.get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">TensorType::ACL_SRC</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    ITensor       *_dst = tensors.get_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">TensorType::ACL_DST</a>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_src == _dst);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_src, _dst);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    Window win{ <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a> };</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    win.<a class="code" href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">set</a>(<a class="code" href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">Window::DimX</a>, Window::Dimension(0, 1, 1));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>(_src, win);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    Iterator <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>(_dst, win);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">/*ukernel runs only when using fp16/bfloat16, so we validate it isn&#39;t a nullptr only before using it */</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> *uk = <a class="code" href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">CpuCastKernel::get_implementation</a>(CastDataTypeISASelectorData{ _src-&gt;info()-&gt;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>(), _dst-&gt;info()-&gt;data_type(), <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">CPUInfo::get</a>().<a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a>() });</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">switch</span>(_src-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>:</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    <span class="comment">/* Up-conversion QASYMM8_SIGNED -&gt; S16 */</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        <span class="keywordtype">int</span>        x       = window_start_x;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                            <span class="keyword">const</span> int8x16_t texels_s8 = vld1q_s8(src_ptr + x);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                            {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                    vmovl_s8(vget_low_s8(texels_s8)),</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                    vmovl_s8(vget_high_s8(texels_s8))</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                            };</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                            vst1q_s16(dst_ptr + x, texels.val[0]);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                            vst1q_s16(dst_ptr + x + 8, texels.val[1]);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int16_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    },</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                    <span class="comment">/* Up-conversion QASYMM8_SIGNED -&gt; S32 */</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                        <span class="keywordtype">int</span>        x       = window_start_x;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                        {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                            <span class="keyword">const</span> int8x16_t texels_s8 = vld1q_s8(src_ptr + x);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                            {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                    vmovl_s8(vget_low_s8(texels_s8)),</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                    vmovl_s8(vget_high_s8(texels_s8))</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                            };</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                            vst1q_s32(dst_ptr + x, vmovl_s16(vget_low_s16(texels.val[0])));</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                            vst1q_s32(dst_ptr + x + 4, vmovl_s16(vget_high_s16(texels.val[0])));</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                            vst1q_s32(dst_ptr + x + 8, vmovl_s16(vget_low_s16(texels.val[1])));</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            vst1q_s32(dst_ptr + x + 12, vmovl_s16(vget_high_s16(texels.val[1])));</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    },</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                    <span class="comment">/* Up-conversion QASYMM8_SIGNED -&gt; F32 */</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                        {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                            <span class="keyword">const</span> int8x16_t texels_s8 = vld1q_s8(src_ptr + x);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                            {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                    vmovl_s8(vget_low_s8(texels_s8)),</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                    vmovl_s8(vget_high_s8(texels_s8))</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                            };</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                            vst1q_f32(dst_ptr + x, vcvtq_f32_s32(vmovl_s16(vget_low_s16(texels.val[0]))));</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                            vst1q_f32(dst_ptr + x + 4, vcvtq_f32_s32(vmovl_s16(vget_high_s16(texels.val[0]))));</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                            vst1q_f32(dst_ptr + x + 8, vcvtq_f32_s32(vmovl_s16(vget_low_s16(texels.val[1]))));</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                            vst1q_f32(dst_ptr + x + 12, vcvtq_f32_s32(vmovl_s16(vget_high_s16(texels.val[1]))));</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                        {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                        }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    },</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    <span class="comment">/* Up-conversion QASYMM8_SIGNED -&gt; F16 */</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>:</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                    <span class="comment">/* Up-conversion U8 -&gt; S16 */</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                    {</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                        {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                            <span class="keyword">const</span> uint8x16_t texels_u8 = vld1q_u8(src_ptr + x);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                            {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                {</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_low_u8(texels_u8))),</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_high_u8(texels_u8)))</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                                }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                            };</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                            vst1q_s16(dst_ptr + x, texels.val[0]);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                            vst1q_s16(dst_ptr + x + 8, texels.val[1]);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                        {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                        }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                    },</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                    <span class="comment">/* Up-conversion U8 -&gt; S32 */</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                        {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                            <span class="keyword">const</span> uint8x16_t texels_u8 = vld1q_u8(src_ptr + x);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                            {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_low_u8(texels_u8))),</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_high_u8(texels_u8)))</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                }</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                            };</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                            vst1q_s32(dst_ptr + x, vmovl_s16(vget_low_s16(texels.val[0])));</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                            vst1q_s32(dst_ptr + x + 4, vmovl_s16(vget_high_s16(texels.val[0])));</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                            vst1q_s32(dst_ptr + x + 8, vmovl_s16(vget_low_s16(texels.val[1])));</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                            vst1q_s32(dst_ptr + x + 12, vmovl_s16(vget_high_s16(texels.val[1])));</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                        }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160; </div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                        {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                        }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    },</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                    <span class="comment">/* Up-conversion U8 -&gt; F32 */</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160; </div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                        {</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                            <span class="keyword">const</span> uint8x16_t texels_u8 = vld1q_u8(src_ptr + x);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                            {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                                {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_low_u8(texels_u8))),</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                    vreinterpretq_s16_u16(vmovl_u8(vget_high_u8(texels_u8)))</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                }</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                            };</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                            vst1q_f32(dst_ptr + x, vcvtq_f32_s32(vmovl_s16(vget_low_s16(texels.val[0]))));</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                            vst1q_f32(dst_ptr + x + 4, vcvtq_f32_s32(vmovl_s16(vget_high_s16(texels.val[0]))));</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                            vst1q_f32(dst_ptr + x + 8, vcvtq_f32_s32(vmovl_s16(vget_low_s16(texels.val[1]))));</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                            vst1q_f32(dst_ptr + x + 12, vcvtq_f32_s32(vmovl_s16(vget_high_s16(texels.val[1]))));</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                        }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                        {</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                        }</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    },</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                }</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                {</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                    <span class="comment">/* Up-conversion U8 -&gt; FP16 */</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                    uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">DataType::U16</a>:</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                {</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                    <span class="comment">/* Up-conversion U8 -&gt; U16 */</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    {</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                            <span class="keyword">const</span> uint8x16_t texels_u8 = vld1q_u8(src_ptr + x);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                            <span class="keyword">const</span> uint16x8x2_t texels =</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                            {</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                {</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                    vmovl_u8(vget_low_u8(texels_u8)),</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                                    vmovl_u8(vget_high_u8(texels_u8))</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                }</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                            };</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160; </div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                            vst1q_u16(dst_ptr + x, texels.val[0]);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                            vst1q_u16(dst_ptr + x + 8, texels.val[1]);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160; </div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                        }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    },</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            }</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">DataType::S16</a>:</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        {</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            {</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                    <span class="comment">/* Down-conversion S16 -&gt; QASYMM8_SIGNED */</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a> == _policy)</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                        {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                            {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                                {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                    {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                                        vld1q_s16(src_ptr + x),</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                                        vld1q_s16(src_ptr + x + 8)</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                                    }</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                                };</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                vst1q_s8(dst_ptr + x, vcombine_s8(vqmovn_s16(texels.val[0]), vqmovn_s16(texels.val[1])));</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                            }</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160; </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                            {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                *(dst_ptr + x) = utils::cast::saturate_cast&lt;int8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                            }</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                        },</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                    {</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                        {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                            {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                {</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                    {</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                                        vld1q_s16(src_ptr + x),</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                        vld1q_s16(src_ptr + x + 8)</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                    }</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                };</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160; </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                vst1q_s8(dst_ptr + x, vcombine_s8(vmovn_s16(texels.val[0]), vmovn_s16(texels.val[1])));</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                            }</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160; </div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                            {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int8_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                            }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                        },</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                    }</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                }</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                    <span class="comment">/* Down-conversion S16 -&gt; U8 */</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a> == _policy)</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    {</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                        {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                            {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                                {</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                    {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                                        vld1q_s16(src_ptr + x),</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                        vld1q_s16(src_ptr + x + 8)</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                    }</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                                };</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160; </div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                                vst1q_u8(dst_ptr + x, vcombine_u8(vqmovun_s16(texels.val[0]), vqmovun_s16(texels.val[1])));</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                            }</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160; </div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                            {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                                *(dst_ptr + x) = utils::cast::saturate_cast&lt;uint8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                            }</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        },</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                    }</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    {</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                        {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160; </div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                            {</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                                {</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                                    {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                                        vld1q_s16(src_ptr + x),</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                        vld1q_s16(src_ptr + x + 8)</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                                    }</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                                };</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160; </div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                                vst1q_u8(dst_ptr + x, vcombine_u8(vmovn_u16(vreinterpretq_u16_s16(texels.val[0])),</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                                                                  vmovn_u16(vreinterpretq_u16_s16(texels.val[1]))));</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                            }</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160; </div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                            {</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                                *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                            }</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                        },</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                    }</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                }</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                {</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                    <span class="comment">/* Up-conversion S16 -&gt; S32 */</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    {</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160; </div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                        {</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                            <span class="keyword">const</span> int16x8x2_t texels =</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                            {</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                                {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                    vld1q_s16(src_ptr + x),</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                                    vld1q_s16(src_ptr + x + 8)</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                                }</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                            };</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160; </div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                            <span class="keyword">const</span> int32x4x4_t texels_s32 =</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                            {</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                                {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                                    vmovl_s16(vget_low_s16(texels.val[0])),</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                                    vmovl_s16(vget_high_s16(texels.val[0])),</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                                    vmovl_s16(vget_low_s16(texels.val[1])),</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                                    vmovl_s16(vget_high_s16(texels.val[1]))</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                                }</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                            };</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160; </div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                            vst1q_s32(dst_ptr + x, texels_s32.val[0]);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                            vst1q_s32(dst_ptr + x + 4, texels_s32.val[1]);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                            vst1q_s32(dst_ptr + x + 8, texels_s32.val[2]);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                            vst1q_s32(dst_ptr + x + 12, texels_s32.val[3]);</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                        }</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160; </div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                        {</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                        }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                    },</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                }</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        }</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160; </div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">DataType::U16</a>:</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        {</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            {</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                {</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                    <span class="comment">/* Down-conversion U16 -&gt; U8 */</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a> == _policy)</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                    {</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                        {</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160; </div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                            {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                <span class="keyword">const</span> uint16x8x2_t texels =</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                {</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                                    {</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                                        vld1q_u16(src_ptr + x),</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                                        vld1q_u16(src_ptr + x + 8)</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                                    }</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                                };</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160; </div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                                vst1q_u8(dst_ptr + x, vcombine_u8(vqmovn_u16(texels.val[0]), vqmovn_u16(texels.val[1])));</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                            }</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160; </div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                            {</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                *(dst_ptr + x) = utils::cast::saturate_cast&lt;uint8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                            }</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                        },</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                    }</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                    {</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                        {</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160; </div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                            {</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                                <span class="keyword">const</span> uint16x8x2_t texels =</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                                {</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                                    {</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                                        vld1q_u16(src_ptr + x),</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                                        vld1q_u16(src_ptr + x + 8)</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                                    }</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                                };</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160; </div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                                vst1q_u8(dst_ptr + x, vcombine_u8(vmovn_u16(texels.val[0]), vmovn_u16(texels.val[1])));</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                            }</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160; </div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                            {</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                                *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                            }</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160; </div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                        },</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                    }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                }</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">DataType::U32</a>:</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                {</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                    <span class="comment">/* Up-conversion U16 -&gt; U32 */</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                    {</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint16_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160; </div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                        {</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                            <span class="keyword">const</span> uint16x8x2_t texels =</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                            {</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                                {</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                                    vld1q_u16(src_ptr + x),</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                                    vld1q_u16(src_ptr + x + 8)</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                                }</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                            };</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160; </div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                            vst1q_u32(dst_ptr + x, vmovl_u16(vget_low_u16(texels.val[0])));</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                            vst1q_u32(dst_ptr + x + 4, vmovl_u16(vget_high_u16(texels.val[0])));</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                            vst1q_u32(dst_ptr + x + 8, vmovl_u16(vget_low_u16(texels.val[1])));</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                            vst1q_u32(dst_ptr + x + 12, vmovl_u16(vget_high_u16(texels.val[1])));</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                        }</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                        {</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                        }</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160; </div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                    },</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                }</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            }</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>:</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        {</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            <span class="comment">/* Up-conversion BFLOAT16 -&gt; F32 */</span></div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;            uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        }</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        {</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            <span class="comment">/* conversion F16 -&gt; any data type */</span></div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        }</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;            {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                {</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                    <span class="comment">/* Down-conversion F32 -&gt; F16 */</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                    uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                }</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">DataType::BFLOAT16</a>:</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;                {</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                    <span class="comment">/* Down-conversion F32 -&gt; BFLOAT16 */</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                    uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                }</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                {</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                    <span class="comment">/* Conversion F32 -&gt; S32 */</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                    {</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160; </div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                        {</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                            <span class="keyword">const</span> float32x4x4_t texels =</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                            {</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                                {</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                                    vld1q_f32(src_ptr + x),</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                                    vld1q_f32(src_ptr + x + 4),</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                                    vld1q_f32(src_ptr + x + 8),</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;                                    vld1q_f32(src_ptr + x + 12),</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                                }</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                            };</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160; </div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                            vst1q_s32(dst_ptr + x, vcvtq_s32_f32(texels.val[0]));</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                            vst1q_s32(dst_ptr + x + 4, vcvtq_s32_f32(texels.val[1]));</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                            vst1q_s32(dst_ptr + x + 8, vcvtq_s32_f32(texels.val[2]));</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;                            vst1q_s32(dst_ptr + x + 12, vcvtq_s32_f32(texels.val[3]));</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                        }</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160; </div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                        {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;                        }</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                    },</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                }</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                {</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                    <span class="comment">/* Down-conversion F32 -&gt; U8 */</span></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                    {</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160; </div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                        {</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                            <span class="keyword">const</span> float32x4x4_t texels =</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                            {</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                                {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                                    vld1q_f32(src_ptr + x),</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                                    vld1q_f32(src_ptr + x + 4),</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                                    vld1q_f32(src_ptr + x + 8),</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                                    vld1q_f32(src_ptr + x + 12),</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                                }</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                            };</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160; </div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                            vst1_u8(dst_ptr + x, vqmovn_u16(vcombine_u16(vqmovun_s32(vcvtq_s32_f32(texels.val[0])), vqmovun_s32(vcvtq_s32_f32(texels.val[1])))));</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;                            vst1_u8(dst_ptr + x + 8, vqmovn_u16(vcombine_u16(vqmovun_s32(vcvtq_s32_f32(texels.val[2])), vqmovun_s32(vcvtq_s32_f32(texels.val[3])))));</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                        }</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160; </div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                        {</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                            *(dst_ptr + x) = utils::cast::saturate_cast&lt;uint8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                        }</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                    },</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                }</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                    <span class="comment">/* Down-conversion F32 -&gt; QASYMM8_SIGNED */</span></div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                    {</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160; </div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                        {</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                            <span class="keyword">const</span> float32x4x4_t texels =</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                            {</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                                {</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;                                    vld1q_f32(src_ptr + x),</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                                    vld1q_f32(src_ptr + x + 4),</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                                    vld1q_f32(src_ptr + x + 8),</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;                                    vld1q_f32(src_ptr + x + 12),</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;                                }</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                            };</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160; </div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                            vst1_s8(dst_ptr + x, vqmovn_s16(vcombine_s16(vqmovn_s32(vcvtq_s32_f32(texels.val[0])), vqmovn_s32(vcvtq_s32_f32(texels.val[1])))));</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                            vst1_s8(dst_ptr + x + 8, vqmovn_s16(vcombine_s16(vqmovn_s32(vcvtq_s32_f32(texels.val[2])), vqmovn_s32(vcvtq_s32_f32(texels.val[3])))));</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;                        }</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;                        {</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                            *(dst_ptr + x) = utils::cast::saturate_cast&lt;int8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                        }</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                    },</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                }</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160; </div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;            }</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160; </div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">DataType::S32</a>:</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;            <span class="keywordflow">switch</span>(_dst-&gt;info()-&gt;data_type())</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;            {</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">DataType::F16</a>:</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;                {</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;                    <span class="comment">/* Down-conversion S32 -&gt; F16 */</span></div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(uk-&gt;ukernel == <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                    uk-&gt;ukernel(_src, _dst, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, _policy, <a class="code" href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">window</a>);</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;                }</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>:</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                {</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                    <span class="comment">/* Conversion S32 -&gt; F32 */</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                    <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                    {</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                        <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">float</span> *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160; </div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;                        <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;                        <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;                        {</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                            <span class="keyword">const</span> int32x4x4_t texels =</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                            {</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                                {</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                    vld1q_s32(src_ptr + x),</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                                    vld1q_s32(src_ptr + x + 4),</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                                    vld1q_s32(src_ptr + x + 8),</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                                    vld1q_s32(src_ptr + x + 12),</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                                }</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                            };</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160; </div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                            vst1q_f32(dst_ptr + x, vcvtq_f32_s32(texels.val[0]));</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;                            vst1q_f32(dst_ptr + x + 4, vcvtq_f32_s32(texels.val[1]));</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;                            vst1q_f32(dst_ptr + x + 8, vcvtq_f32_s32(texels.val[2]));</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                            vst1q_f32(dst_ptr + x + 12, vcvtq_f32_s32(texels.val[3]));</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;                        }</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160; </div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;                        <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                        <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;                        {</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;                            *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                        }</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;                    },</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;                }</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">DataType::QASYMM8_SIGNED</a>:</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;                {</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;                    <span class="comment">/* Down-conversion S32 -&gt; QASYMM8_SIGNED */</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a> == _policy)</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;                    {</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                        {</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160; </div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                            {</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                                <span class="keyword">const</span> int32x4x4_t texels =</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                                {</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;                                    {</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;                                        vld1q_s32(src_ptr + x),</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;                                        vld1q_s32(src_ptr + x + 4),</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                                        vld1q_s32(src_ptr + x + 8),</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;                                        vld1q_s32(src_ptr + x + 12),</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;                                    }</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;                                };</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;                                vst1_s8(dst_ptr + x, vqmovn_s16(vcombine_s16(vqmovn_s32(texels.val[0]), vqmovn_s32(texels.val[1]))));</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                                vst1_s8(dst_ptr + x + 8, vqmovn_s16(vcombine_s16(vqmovn_s32(texels.val[2]), vqmovn_s32(texels.val[3]))));</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                            }</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160; </div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;                            {</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;                                *(dst_ptr + x) = utils::cast::saturate_cast&lt;int8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;                            }</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;                        },</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;                    }</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;                    {</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;                        {</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>int8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160; </div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;                            {</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                                <span class="keyword">const</span> int32x4x4_t texels =</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                                {</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                                    {</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;                                        vld1q_s32(src_ptr + x),</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;                                        vld1q_s32(src_ptr + x + 4),</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                                        vld1q_s32(src_ptr + x + 8),</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;                                        vld1q_s32(src_ptr + x + 12)</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;                                    }</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                                };</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160; </div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                                vst1_s8(dst_ptr + x, vmovn_s16(vcombine_s16(vmovn_s32(texels.val[0]), vmovn_s32(texels.val[1]))));</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                                vst1_s8(dst_ptr + x + 8, vmovn_s16(vcombine_s16(vmovn_s32(texels.val[2]), vmovn_s32(texels.val[3]))));</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                            }</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160; </div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;                            {</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;                                *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>int8_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;                            }</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;                        },</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                    }</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                }</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>:</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">DataType::U8</a>:</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;                {</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;                    <span class="comment">/* Down-conversion S32 -&gt; U8 */</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;                    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">ConvertPolicy::SATURATE</a> == _policy)</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;                    {</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                        {</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160; </div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                            {</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                                <span class="keyword">const</span> int32x4x4_t texels =</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                                {</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                                    {</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                                        vld1q_s32(src_ptr + x),</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                                        vld1q_s32(src_ptr + x + 4),</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;                                        vld1q_s32(src_ptr + x + 8),</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;                                        vld1q_s32(src_ptr + x + 12)</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;                                    }</div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;                                };</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                                vst1_u8(dst_ptr + x, vqmovn_u16(vcombine_u16(vqmovun_s32(texels.val[0]), vqmovun_s32(texels.val[1]))));</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;                                vst1_u8(dst_ptr + x + 8, vqmovn_u16(vcombine_u16(vqmovun_s32(texels.val[2]), vqmovun_s32(texels.val[3]))));</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;                            }</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160; </div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;                            {</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;                                *(dst_ptr + x) = utils::cast::saturate_cast&lt;uint8_t&gt;(*(src_ptr + x));</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;                            }</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;                        },</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;                    }</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;                    {</div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;                        <a class="code" href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">execute_window_loop</a>(win, [&amp;](<span class="keyword">const</span> Coordinates &amp;)</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                        {</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> src_ptr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>int32_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>.ptr());</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                            <span class="keyword">const</span> <span class="keyword">auto</span> dst_ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>.ptr());</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160; </div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                            <span class="keywordtype">int</span> x = window_start_x;</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                            <span class="keywordflow">for</span>(; x &lt;= (window_end_x - window_step_x); x += window_step_x)</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                            {</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                                <span class="keyword">const</span> int32x4x4_t texels =</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;                                {</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                                    {</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                                        vld1q_s32(src_ptr + x),</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;                                        vld1q_s32(src_ptr + x + 4),</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                                        vld1q_s32(src_ptr + x + 8),</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                                        vld1q_s32(src_ptr + x + 12)</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                                    }</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                                };</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160; </div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;                                vst1_u8(dst_ptr + x, vmovn_u16(vcombine_u16(vmovn_u32(vreinterpretq_u32_s32(texels.val[0])), vmovn_u32(vreinterpretq_u32_s32(texels.val[1])))));</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;                                vst1_u8(dst_ptr + x + 8, vmovn_u16(vcombine_u16(vmovn_u32(vreinterpretq_u32_s32(texels.val[2])), vmovn_u32(vreinterpretq_u32_s32(texels.val[3])))));</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;                            }</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160; </div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;                            <span class="comment">// Compute left-over elements</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                            <span class="keywordflow">for</span>(; x &lt; window_end_x; ++x)</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;                            {</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;                                *(dst_ptr + x) = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(*(src_ptr + x));</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;                            }</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                        },</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;                        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>);</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                    }</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                }</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                    <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;dst data type not supported&quot;</span>);</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;            }</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Not supported&quot;</span>);</div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    }</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">arm_compute::ACL_DST</a>, <a class="el" href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">arm_compute::ACL_SRC</a>, <a class="el" href="_error_8h_source.xhtml#l00352">ARM_COMPUTE_ERROR</a>, <a class="el" href="_error_8h_source.xhtml#l00466">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00201">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">ARM_COMPUTE_ERROR_ON_NULLPTR</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a>, <a class="el" href="_error_8h_source.xhtml#l00152">ARM_COMPUTE_UNUSED</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">arm_compute::BFLOAT16</a>, <a class="el" href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">arm_compute::test::validation::data_type</a>, <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">ITensorInfo::data_type()</a>, <a class="el" href="_window_8h_source.xhtml#l00043">Window::DimX</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_window_8h_source.xhtml#l00102">Window::Dimension::end()</a>, <a class="el" href="_helpers_8inl_source.xhtml#l00077">arm_compute::execute_window_loop()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::F16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::F32</a>, <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00040">CPUInfo::get()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00054">ITensorPack::get_const_tensor()</a>, <a class="el" href="_i_cpu_kernel_8h_source.xhtml#l00053">ICpuKernel&lt; CpuCastKernel &gt;::get_implementation()</a>, <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00124">CPUInfo::get_isa()</a>, <a class="el" href="_i_tensor_pack_8cpp_source.xhtml#l00064">ITensorPack::get_tensor()</a>, <a class="el" href="classarm__compute_1_1_i_tensor.xhtml#a0e95dc1e53c361348314873b168ae237">ITensor::info()</a>, <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::QASYMM8</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::QASYMM8_SIGNED</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::S16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::S32</a>, <a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::SATURATE</a>, <a class="el" href="_window_8inl_source.xhtml#l00049">Window::set()</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, <a class="el" href="_window_8h_source.xhtml#l00097">Window::Dimension::start()</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::U16</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::U32</a>, <a class="el" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::U8</a>, <a class="el" href="_i_kernel_8cpp_source.xhtml#l00028">IKernel::window()</a>, and <a class="el" href="_window_8h_source.xhtml#l00159">Window::x()</a>.</p>

</div>
</div>
<a id="a99ee9eafa97c4a2c2ddefa4055acbfeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99ee9eafa97c4a2c2ddefa4055acbfeb">&#9670;&nbsp;</a></span>validate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6f">ConvertPolicy</a>&#160;</td>
          <td class="paramname"><em>policy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Static function to check if given info will lead to a valid configuration. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml#a5f37596bff5fa6d2dcb4754c5f2c63a6">CpuCastKernel::configure()</a></p>
<dl class="section return"><dt>Returns</dt><dd>a status </dd></dl>

<p class="definition">Definition at line <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a>(<a class="code" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">validate_arguments</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">src</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>, policy));</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> Status{};</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00204">ARM_COMPUTE_RETURN_ON_ERROR</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">arm_compute::test::validation::dst</a>, <a class="el" href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">arm_compute::test::validation::src</a>, and <a class="el" href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00060">arm_compute::cpu::kernels::validate_arguments()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cpu_cast_8cpp_source.xhtml#l00042">CpuCast::validate()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/cpu/kernels/<a class="el" href="_cpu_cast_kernel_8h_source.xhtml">CpuCastKernel.h</a></li>
<li>src/cpu/kernels/<a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml">CpuCastKernel.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml_ab24e31d1a4830bf79564ee902ec6c060"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#ab24e31d1a4830bf79564ee902ec6c060">arm_compute::Window::Dimension::start</a></div><div class="ttdeci">constexpr int start() const</div><div class="ttdoc">Return the start of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00097">Window.h:97</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a70879f7be69f6738d9f76339725c9532"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a70879f7be69f6738d9f76339725c9532">arm_compute::test::validation::src</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; src</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00155">DFT.cpp:155</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa4b19a06b5361a32b32759aa26ffdbab">arm_compute::DataType::BFLOAT16</a></div><div class="ttdeci">@ BFLOAT16</div><div class="ttdoc">16-bit brain floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_aa84c2eae36ca4b68fa36c226df6f94e7"><div class="ttname"><a href="namespacearm__compute.xhtml#aa84c2eae36ca4b68fa36c226df6f94e7">arm_compute::calculate_max_window</a></div><div class="ttdeci">Window calculate_max_window(const ValidRegion &amp;valid_region, const Steps &amp;steps, bool skip_border, BorderSize border_size)</div><div class="ttdef"><b>Definition:</b> <a href="_window_helpers_8cpp_source.xhtml#l00028">WindowHelpers.cpp:28</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aef9ef3ebca4d2b64b6ec83808bafa5f2">arm_compute::DataType::U16</a></div><div class="ttdeci">@ U16</div><div class="ttdoc">unsigned 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1cpu_1_1kernels_xhtml_acf9ea6633274730cd08b8b8fab3a6fe6"><div class="ttname"><a href="namespacearm__compute_1_1cpu_1_1kernels.xhtml#acf9ea6633274730cd08b8b8fab3a6fe6">arm_compute::cpu::kernels::validate_arguments</a></div><div class="ttdeci">Status validate_arguments(const ITensorInfo *src, const ITensorInfo *weights, const ITensorInfo *dst, const PadStrideInfo &amp;conv_info)</div><div class="ttdef"><b>Definition:</b> <a href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00060">CpuDirectConv2dKernel.cpp:60</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a1b35b0d258183cf9ef36adf684d0b88c"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a1b35b0d258183cf9ef36adf684d0b88c">ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_UNCONFIGURED_KERNEL(k)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00915">Validate.h:915</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_aa96e81276ee4f87ab386cd05a5539a7d"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d">arm_compute::Window::DimX</a></div><div class="ttdeci">static constexpr size_t DimX</div><div class="ttdoc">Alias for dimension 0 also known as X dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00043">Window.h:43</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_a2a42a2a0b91dce5401678766c088dfa7"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">arm_compute::CPUInfo::get</a></div><div class="ttdeci">static CPUInfo &amp; get()</div><div class="ttdoc">Access the KernelLibrary singleton.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00040">CPPTypes.cpp:40</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a8a1e1c105f0bdaf37db408c7cfcb77a4"><div class="ttname"><a href="_error_8h.xhtml#a8a1e1c105f0bdaf37db408c7cfcb77a4">ARM_COMPUTE_RETURN_ON_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ON_ERROR(status)</div><div class="ttdoc">Checks if a status contains an error and returns it.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00204">Error.h:204</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a938dcd406ce611ef5345ad2531cdb948"><div class="ttname"><a href="_error_8h.xhtml#a938dcd406ce611ef5345ad2531cdb948">ARM_COMPUTE_ERROR_THROW_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_THROW_ON(status)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00455">Error.h:455</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ac8bd5bedff8ef192d39a962afc0e19ee">arm_compute::DataType::U32</a></div><div class="ttdeci">@ U32</div><div class="ttdoc">unsigned 32-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a6f62ab7395c218e03e9d2942309c13a2">arm_compute::ACL_DST</a></div><div class="ttdeci">@ ACL_DST</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00055">Types.h:55</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6669348b484e3008dca2bfa8e85e40b5">arm_compute::DataType::U8</a></div><div class="ttdeci">@ U8</div><div class="ttdoc">unsigned 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a6e0b0886efb94aec797f6b830329b72c">arm_compute::DataType::S16</a></div><div class="ttdeci">@ S16</div><div class="ttdoc">signed 16-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a329f5d0c4b0c80e3474951d2c4435dd9">arm_compute::DataType::QASYMM8_SIGNED</a></div><div class="ttdeci">@ QASYMM8_SIGNED</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number signed</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a6eb9ce82815fe429250189da7592ba75"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a6eb9ce82815fe429250189da7592ba75">ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_INVALID_SUBWINDOW(f, s)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00201">Validate.h:201</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86"><div class="ttname"><a href="namespacearm__compute.xhtml#a82b8ac759c804bc1fb4e2d21e178fb6fa4729d95f983955f0d93a30179deb2b86">arm_compute::ConvertPolicy::SATURATE</a></div><div class="ttdeci">@ SATURATE</div><div class="ttdoc">Saturate.</div></div>
<div class="ttc" id="a_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00152">Error.h:152</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1cpu_1_1_i_cpu_kernel_xhtml_a1c57e942b23eab1974697c3378bee0d8"><div class="ttname"><a href="classarm__compute_1_1cpu_1_1_i_cpu_kernel.xhtml#a1c57e942b23eab1974697c3378bee0d8">arm_compute::cpu::ICpuKernel&lt; CpuCastKernel &gt;::get_implementation</a></div><div class="ttdeci">static const auto * get_implementation(const SelectorType &amp;selector, KernelSelectionType selection_type=KernelSelectionType::Supported)</div><div class="ttdoc">Micro-kernel selector.</div><div class="ttdef"><b>Definition:</b> <a href="_i_cpu_kernel_8h_source.xhtml#l00053">ICpuKernel.h:53</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml_ad7d3ca5154cbb01b5c5a24df54efd348"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">arm_compute::CPUInfo::get_isa</a></div><div class="ttdeci">cpuinfo::CpuIsaInfo get_isa() const</div><div class="ttdoc">Gets the current cpu's ISA information.</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8cpp_source.xhtml#l00124">CPPTypes.cpp:124</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_acd3d2bba51cb84d34dd7656ad2375a6e"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#acd3d2bba51cb84d34dd7656ad2375a6e">arm_compute::Window::set</a></div><div class="ttdeci">void set(size_t dimension, const Dimension &amp;dim)</div><div class="ttdoc">Set the values of a given dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8inl_source.xhtml#l00049">Window.inl:49</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_kernel_xhtml_ad34a46f53686c12a5c5e717cc9617fb6"><div class="ttname"><a href="classarm__compute_1_1_i_kernel.xhtml#ad34a46f53686c12a5c5e717cc9617fb6">arm_compute::IKernel::window</a></div><div class="ttdeci">const Window &amp; window() const</div><div class="ttdoc">The maximum window the kernel can be executed on.</div><div class="ttdef"><b>Definition:</b> <a href="_i_kernel_8cpp_source.xhtml#l00028">IKernel.cpp:28</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a6bd175f94838df9aed06d32452df92d3"><div class="ttname"><a href="namespacearm__compute.xhtml#a6bd175f94838df9aed06d32452df92d3">arm_compute::set_shape_if_empty</a></div><div class="ttdeci">bool set_shape_if_empty(ITensorInfo &amp;info, const TensorShape &amp;shape)</div><div class="ttdoc">Set the shape to the specified value if the current assignment is empty.</div><div class="ttdef"><b>Definition:</b> <a href="_auto_configuration_8h_source.xhtml#l00093">AutoConfiguration.h:93</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a56d8353718e6fdc78b8d69078a2cdb94">arm_compute::DataType::F16</a></div><div class="ttdeci">@ F16</div><div class="ttdoc">16-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aa1e28eee0339658d39a8b4d325b56e9c">arm_compute::DataType::S32</a></div><div class="ttdeci">@ S32</div><div class="ttdoc">signed 32-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828ae1a1ae3e3415cb95b96aa11edbdbbb69">arm_compute::ACL_SRC</a></div><div class="ttdeci">@ ACL_SRC</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00044">Types.h:44</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a5002bf7ec46d52971f9526e94172cfee"><div class="ttname"><a href="namespacearm__compute.xhtml#a5002bf7ec46d52971f9526e94172cfee">arm_compute::execute_window_loop</a></div><div class="ttdeci">void execute_window_loop(const Window &amp;w, L &amp;&amp;lambda_function, Ts &amp;&amp;... iterators)</div><div class="ttdoc">Iterate through the passed window, automatically adjusting the iterators and calling the lambda_funct...</div><div class="ttdef"><b>Definition:</b> <a href="_helpers_8inl_source.xhtml#l00077">Helpers.inl:77</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_1_1_dimension_xhtml_a0f590bfcf19110f44efc502e7b5c1d9e"><div class="ttname"><a href="classarm__compute_1_1_window_1_1_dimension.xhtml#a0f590bfcf19110f44efc502e7b5c1d9e">arm_compute::Window::Dimension::end</a></div><div class="ttdeci">constexpr int end() const</div><div class="ttdoc">Return the end of the dimension.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00102">Window.h:102</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_window_xhtml_a273fd2ecdd45169b2f702f01a7e5e382"><div class="ttname"><a href="classarm__compute_1_1_window.xhtml#a273fd2ecdd45169b2f702f01a7e5e382">arm_compute::Window::x</a></div><div class="ttdeci">constexpr const Dimension &amp; x() const</div><div class="ttdoc">Alias to access the first dimension of the window.</div><div class="ttdef"><b>Definition:</b> <a href="_window_8h_source.xhtml#l00159">Window.h:159</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpu.xhtml">cpu</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1cpu_1_1kernels.xhtml">kernels</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1cpu_1_1kernels_1_1_cpu_cast_kernel.xhtml">CpuCastKernel</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:28 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
