<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CPUInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_p_u_info.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CPUInfo Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acc961f0ecd4caff71e1f2be1c4c8406e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#acc961f0ecd4caff71e1f2be1c4c8406e">CPUInfo</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> const &amp;)=delete</td></tr>
<tr class="separator:acc961f0ecd4caff71e1f2be1c4c8406e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed95171bae9b2939e23ab9621e1ee2e7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aed95171bae9b2939e23ab9621e1ee2e7">CPUInfo</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:aed95171bae9b2939e23ab9621e1ee2e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab70d897225cc1fed8fd979192e2d0a60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ab70d897225cc1fed8fd979192e2d0a60">operator=</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> const &amp;)=delete</td></tr>
<tr class="separator:ab70d897225cc1fed8fd979192e2d0a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad20fb92fa336230cdd68e82e377c1518"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ad20fb92fa336230cdd68e82e377c1518">operator=</a> (<a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:ad20fb92fa336230cdd68e82e377c1518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">has_fp16</a> () const</td></tr>
<tr class="memdesc:a0647761f309e3b3edb5a5501b3ff38d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports fp16.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a0647761f309e3b3edb5a5501b3ff38d2">More...</a><br /></td></tr>
<tr class="separator:a0647761f309e3b3edb5a5501b3ff38d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a44e5d711e5707a9d974d085bcccdd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">has_bf16</a> () const</td></tr>
<tr class="memdesc:ae3a44e5d711e5707a9d974d085bcccdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports bf16.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#ae3a44e5d711e5707a9d974d085bcccdd">More...</a><br /></td></tr>
<tr class="separator:ae3a44e5d711e5707a9d974d085bcccdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c6d2e5ffdac1eb191c637584b63e9f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">has_svebf16</a> () const</td></tr>
<tr class="memdesc:a77c6d2e5ffdac1eb191c637584b63e9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports bf16.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a77c6d2e5ffdac1eb191c637584b63e9f">More...</a><br /></td></tr>
<tr class="separator:a77c6d2e5ffdac1eb191c637584b63e9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">has_dotprod</a> () const</td></tr>
<tr class="memdesc:a8d31247d25bfe0a0b669d367aa801c2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports dot product.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a8d31247d25bfe0a0b669d367aa801c2d">More...</a><br /></td></tr>
<tr class="separator:a8d31247d25bfe0a0b669d367aa801c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa12d6e2d28e061e8dec5a29b0a0817d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">has_svef32mm</a> () const</td></tr>
<tr class="memdesc:aaa12d6e2d28e061e8dec5a29b0a0817d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports floating-point matrix multiplication.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#aaa12d6e2d28e061e8dec5a29b0a0817d">More...</a><br /></td></tr>
<tr class="separator:aaa12d6e2d28e061e8dec5a29b0a0817d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b945f4077c1c4e623fd8d13b0cac29c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">has_i8mm</a> () const</td></tr>
<tr class="memdesc:a7b945f4077c1c4e623fd8d13b0cac29c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports integer matrix multiplication.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a7b945f4077c1c4e623fd8d13b0cac29c">More...</a><br /></td></tr>
<tr class="separator:a7b945f4077c1c4e623fd8d13b0cac29c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ce2bff23b934048c003ac612e9abd83"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">has_svei8mm</a> () const</td></tr>
<tr class="memdesc:a2ce2bff23b934048c003ac612e9abd83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports integer matrix multiplication.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a2ce2bff23b934048c003ac612e9abd83">More...</a><br /></td></tr>
<tr class="separator:a2ce2bff23b934048c003ac612e9abd83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7dae768d45b1c3781748808f1c16a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">has_sve</a> () const</td></tr>
<tr class="memdesc:a2f7dae768d45b1c3781748808f1c16a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports sve.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a2f7dae768d45b1c3781748808f1c16a4">More...</a><br /></td></tr>
<tr class="separator:a2f7dae768d45b1c3781748808f1c16a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81409e78339a5ed0dfb97d152111b568"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">has_sve2</a> () const</td></tr>
<tr class="memdesc:a81409e78339a5ed0dfb97d152111b568"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports sve2.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a81409e78339a5ed0dfb97d152111b568">More...</a><br /></td></tr>
<tr class="separator:a81409e78339a5ed0dfb97d152111b568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a934b3b3a24b2f25bde992b6883caf3f0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">has_sme</a> () const</td></tr>
<tr class="memdesc:a934b3b3a24b2f25bde992b6883caf3f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports sme.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a934b3b3a24b2f25bde992b6883caf3f0">More...</a><br /></td></tr>
<tr class="separator:a934b3b3a24b2f25bde992b6883caf3f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a629b7f8097121022b5fae83ed4b1581f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">has_sme2</a> () const</td></tr>
<tr class="memdesc:a629b7f8097121022b5fae83ed4b1581f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the cpu model supports sme2.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a629b7f8097121022b5fae83ed4b1581f">More...</a><br /></td></tr>
<tr class="separator:a629b7f8097121022b5fae83ed4b1581f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d1a4992ced850f18f97b27492bbb081"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">get_cpu_model</a> (unsigned int cpuid) const</td></tr>
<tr class="memdesc:a1d1a4992ced850f18f97b27492bbb081"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cpu model for a given cpuid.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a1d1a4992ced850f18f97b27492bbb081">More...</a><br /></td></tr>
<tr class="separator:a1d1a4992ced850f18f97b27492bbb081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa382062453f40443af73d726fe75340b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">get_cpu_model</a> () const</td></tr>
<tr class="memdesc:aa382062453f40443af73d726fe75340b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current thread's cpu model.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#aa382062453f40443af73d726fe75340b">More...</a><br /></td></tr>
<tr class="separator:aa382062453f40443af73d726fe75340b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7d3ca5154cbb01b5c5a24df54efd348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">cpuinfo::CpuIsaInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">get_isa</a> () const</td></tr>
<tr class="memdesc:ad7d3ca5154cbb01b5c5a24df54efd348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current cpu's ISA information.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#ad7d3ca5154cbb01b5c5a24df54efd348">More...</a><br /></td></tr>
<tr class="separator:ad7d3ca5154cbb01b5c5a24df54efd348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61970c81ba14081e613c12d0e85af761"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a61970c81ba14081e613c12d0e85af761">get_L1_cache_size</a> () const</td></tr>
<tr class="memdesc:a61970c81ba14081e613c12d0e85af761"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L1 cache size.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a61970c81ba14081e613c12d0e85af761">More...</a><br /></td></tr>
<tr class="separator:a61970c81ba14081e613c12d0e85af761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3152ff6ceec3d31c02feb4e91812f040"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3152ff6ceec3d31c02feb4e91812f040">get_L2_cache_size</a> () const</td></tr>
<tr class="memdesc:a3152ff6ceec3d31c02feb4e91812f040"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the L2 cache size.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a3152ff6ceec3d31c02feb4e91812f040">More...</a><br /></td></tr>
<tr class="separator:a3152ff6ceec3d31c02feb4e91812f040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">get_cpu_num</a> () const</td></tr>
<tr class="memdesc:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum number of CPUs present.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a3828c0e892d45f2b4af6dc5d34c377b7">More...</a><br /></td></tr>
<tr class="separator:a3828c0e892d45f2b4af6dc5d34c377b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2a42a2a0b91dce5401678766c088dfa7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">get</a> ()</td></tr>
<tr class="memdesc:a2a42a2a0b91dce5401678766c088dfa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the KernelLibrary singleton.  <a href="classarm__compute_1_1_c_p_u_info.xhtml#a2a42a2a0b91dce5401678766c088dfa7">More...</a><br /></td></tr>
<tr class="separator:a2a42a2a0b91dce5401678766c088dfa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8h_source.xhtml#l00066">66</a> of file <a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="acc961f0ecd4caff71e1f2be1c4c8406e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc961f0ecd4caff71e1f2be1c4c8406e">&#9670;&nbsp;</a></span>CPUInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> const &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aed95171bae9b2939e23ab9621e1ee2e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed95171bae9b2939e23ab9621e1ee2e7">&#9670;&nbsp;</a></span>CPUInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2a42a2a0b91dce5401678766c088dfa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a42a2a0b91dce5401678766c088dfa7">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the KernelLibrary singleton. </p>
<p>This method has been deprecated and will be removed in future releases </p><dl class="section return"><dt>Returns</dt><dd>The KernelLibrary instance. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00040">40</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> _cpuinfo;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> _cpuinfo;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_floor_kernel_8cpp_source.xhtml#l00077">CpuFloorKernel::configure()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00113">CpuLogits1DMaxKernel::configure()</a>, <a class="el" href="_cpu_activation_kernel_8cpp_source.xhtml#l00189">CpuActivationKernel::configure()</a>, <a class="el" href="_cpu_pool2d_kernel_8cpp_source.xhtml#l00275">CpuPool2dKernel::configure()</a>, <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00211">CpuElementwiseUnaryKernel::configure()</a>, <a class="el" href="_cpu_add_mul_add_kernel_8cpp_source.xhtml#l00127">CpuAddMulAddKernel::configure()</a>, <a class="el" href="_cpu_max_unpooling_layer_kernel_8cpp_source.xhtml#l00100">CpuMaxUnpoolingLayerKernel::configure()</a>, <a class="el" href="_cpu_pool3d_kernel_8cpp_source.xhtml#l00121">CpuPool3dKernel::configure()</a>, <a class="el" href="_cpu_scale_kernel_8cpp_source.xhtml#l00185">CpuScaleKernel::configure()</a>, <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00138">CpuSubKernel::configure()</a>, <a class="el" href="_cpu_depthwise_conv2d_native_kernel_8cpp_source.xhtml#l00146">CpuDepthwiseConv2dNativeKernel::configure()</a>, <a class="el" href="_cpu_gemm_matrix_addition_kernel_8cpp_source.xhtml#l00065">CpuGemmMatrixAdditionKernel::configure()</a>, <a class="el" href="_cpu_direct_conv3d_kernel_8cpp_source.xhtml#l00128">CpuDirectConv3dKernel::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00220">NEFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_cpu_gemm_matrix_multiply_kernel_8cpp_source.xhtml#l00128">CpuGemmMatrixMultiplyKernel::configure()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00213">CpuAddKernel::configure()</a>, <a class="el" href="_cpu_softmax_kernel_8cpp_source.xhtml#l00252">CpuLogits1DSoftmaxKernel&lt; IS_LOG &gt;::configure()</a>, <a class="el" href="_i_scheduler_8cpp_source.xhtml#l00041">IScheduler::cpu_info()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00064">arm_compute::error_on_unsupported_cpu_bf16()</a>, <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00041">arm_compute::error_on_unsupported_cpu_fp16()</a>, <a class="el" href="_scale_utils_8cpp_source.xhtml#l00043">arm_compute::scale_utils::is_precomputation_required()</a>, <a class="el" href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00377">NEBatchNormalizationLayerKernel::run()</a>, <a class="el" href="_cpu_direct_conv2d_kernel_8cpp_source.xhtml#l00142">CpuDirectConv2dKernel::run_op()</a>, <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00178">CpuCastKernel::run_op()</a>, and <a class="el" href="_cpu_elementwise_unary_kernel_8cpp_source.xhtml#l00237">CpuElementwiseUnaryKernel::validate()</a>.</p>

</div>
</div>
<a id="aa382062453f40443af73d726fe75340b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa382062453f40443af73d726fe75340b">&#9670;&nbsp;</a></span>get_cpu_model() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current thread's cpu model. </p>
<dl class="section return"><dt>Returns</dt><dd>Current thread's <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.cpu_model();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1d1a4992ced850f18f97b27492bbb081"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1a4992ced850f18f97b27492bbb081">&#9670;&nbsp;</a></span>get_cpu_model() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> get_cpu_model </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>cpuid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cpu model for a given cpuid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cpuid</td><td>the id of the cpu core to be retrieved,</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="namespacearm__compute.xhtml#aa41d7415a5386798147cccae2333d5d4">CPUModel</a> of the cpuid queiried. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.cpu_model(cpuid);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_sub_kernel_8cpp_source.xhtml#l00165">CpuSubKernel::get_mws()</a>, <a class="el" href="_cpu_add_kernel_8cpp_source.xhtml#l00275">CpuAddKernel::get_mws()</a>, <a class="el" href="_cpu_mul_kernel_8cpp_source.xhtml#l01920">CpuMulKernel::get_mws()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00414">CpuArithmeticKernel::get_mws()</a>, <a class="el" href="_cpu_elementwise_kernel_8cpp_source.xhtml#l00465">CpuDivisionKernel::get_mws()</a>, and <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a3828c0e892d45f2b4af6dc5d34c377b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3828c0e892d45f2b4af6dc5d34c377b7">&#9670;&nbsp;</a></span>get_cpu_num()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_cpu_num </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum number of CPUs present. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of CPUs </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00054">54</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.num_cpus();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="ad7d3ca5154cbb01b5c5a24df54efd348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7d3ca5154cbb01b5c5a24df54efd348">&#9670;&nbsp;</a></span>get_isa()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1cpuinfo_1_1_cpu_isa_info.xhtml">cpuinfo::CpuIsaInfo</a> get_isa </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current cpu's ISA information. </p>
<dl class="section return"><dt>Returns</dt><dd>Current cpu's ISA information </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.isa();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_cpu_pool2d_kernel_8cpp_source.xhtml#l00275">CpuPool2dKernel::configure()</a>, <a class="el" href="_cpu_depthwise_conv2d_native_kernel_8cpp_source.xhtml#l00146">CpuDepthwiseConv2dNativeKernel::configure()</a>, <a class="el" href="_n_e_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00220">NEFuseBatchNormalizationKernel::configure()</a>, and <a class="el" href="_cpu_cast_kernel_8cpp_source.xhtml#l00178">CpuCastKernel::run_op()</a>.</p>

</div>
</div>
<a id="a61970c81ba14081e613c12d0e85af761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61970c81ba14081e613c12d0e85af761">&#9670;&nbsp;</a></span>get_L1_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L1_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L1 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00129">129</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;L1_cache_size;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3152ff6ceec3d31c02feb4e91812f040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3152ff6ceec3d31c02feb4e91812f040">&#9670;&nbsp;</a></span>get_L2_cache_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_L2_cache_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the L2 cache size. </p>
<dl class="section return"><dt>Returns</dt><dd>the size of the L1 cache </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;L2_cache_size;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="gemm__interleaved__pretransposed__2d_8hpp_source.xhtml#l00341">GemmInterleavedPretransposed2d&lt; strategy, To, Tr &gt;::GemmInterleavedPretransposed2d()</a>.</p>

</div>
</div>
<a id="ae3a44e5d711e5707a9d974d085bcccdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3a44e5d711e5707a9d974d085bcccdd">&#9670;&nbsp;</a></span>has_bf16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_bf16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports bf16. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports bf16, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_bf16();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00064">arm_compute::error_on_unsupported_cpu_bf16()</a>, and <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a8d31247d25bfe0a0b669d367aa801c2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d31247d25bfe0a0b669d367aa801c2d">&#9670;&nbsp;</a></span>has_dotprod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_dotprod </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports dot product. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports dot product, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_dotprod();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a0647761f309e3b3edb5a5501b3ff38d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0647761f309e3b3edb5a5501b3ff38d2">&#9670;&nbsp;</a></span>has_fp16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_fp16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports fp16. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports fp16, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_fp16();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="src_2core_2_c_p_p_2_validate_8h_source.xhtml#l00041">arm_compute::error_on_unsupported_cpu_fp16()</a>, and <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a7b945f4077c1c4e623fd8d13b0cac29c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b945f4077c1c4e623fd8d13b0cac29c">&#9670;&nbsp;</a></span>has_i8mm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_i8mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports integer matrix multiplication. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports integer matrix multiplication, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_i8mm();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a934b3b3a24b2f25bde992b6883caf3f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a934b3b3a24b2f25bde992b6883caf3f0">&#9670;&nbsp;</a></span>has_sme()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sme </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports sme. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports sme, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00104">104</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_sme();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a629b7f8097121022b5fae83ed4b1581f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a629b7f8097121022b5fae83ed4b1581f">&#9670;&nbsp;</a></span>has_sme2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sme2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports sme2. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports sme2, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_sme2();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a2f7dae768d45b1c3781748808f1c16a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7dae768d45b1c3781748808f1c16a4">&#9670;&nbsp;</a></span>has_sve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sve </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports sve. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports sve, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00094">94</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_sve();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a81409e78339a5ed0dfb97d152111b568"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81409e78339a5ed0dfb97d152111b568">&#9670;&nbsp;</a></span>has_sve2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_sve2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports sve2. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports sve2, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_sve2();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a77c6d2e5ffdac1eb191c637584b63e9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77c6d2e5ffdac1eb191c637584b63e9f">&#9670;&nbsp;</a></span>has_svebf16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svebf16 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports bf16. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports bf16, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_svebf16();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="aaa12d6e2d28e061e8dec5a29b0a0817d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa12d6e2d28e061e8dec5a29b0a0817d">&#9670;&nbsp;</a></span>has_svef32mm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svef32mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports floating-point matrix multiplication. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports floating-point matrix multiplication, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_svef32mm();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="a2ce2bff23b934048c003ac612e9abd83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ce2bff23b934048c003ac612e9abd83">&#9670;&nbsp;</a></span>has_svei8mm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool has_svei8mm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if the cpu model supports integer matrix multiplication. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the cpu supports integer matrix multiplication, false otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_p_p_types_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> _impl-&gt;info.has_svei8mm();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>.</p>

</div>
</div>
<a id="ad20fb92fa336230cdd68e82e377c1518"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad20fb92fa336230cdd68e82e377c1518">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab70d897225cc1fed8fd979192e2d0a60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab70d897225cc1fed8fd979192e2d0a60">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a> const &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CPP/<a class="el" href="_c_p_p_types_8h_source.xhtml">CPPTypes.h</a></li>
<li>src/core/CPP/<a class="el" href="_c_p_p_types_8cpp_source.xhtml">CPPTypes.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1_c_p_u_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_p_u_info.xhtml">arm_compute::CPUInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_types_8h_source.xhtml#l00066">CPPTypes.h:66</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_p_u_info.xhtml">CPUInfo</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:25 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
