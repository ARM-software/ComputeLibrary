<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/framework/printers/Printer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_printer_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Printer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_printer_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018,2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef ARM_COMPUTE_TEST_PRINTER</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define ARM_COMPUTE_TEST_PRINTER</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_profiler_8h.xhtml">tests/framework/Profiler.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>framework</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">struct </span>TestInfo;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/** Abstract printer class used by the @ref Framework to present output. */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">    /** Default constructor.</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * Prints values to std::cout.</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     * */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">Printer</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /** Construct printer with given output stream.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     * @param[out] stream Output stream.</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">Printer</a>(std::ostream &amp;stream);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">    /** Prevent instances of this class from being copy constructed */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">Printer</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /** Prevent instances of this class from being copied */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab85933c994519feb7bc7e12ea3db127f">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;) = <span class="keyword">delete</span>;<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /** Allow instances of this class to be move constructed */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">Printer</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&amp;) = <span class="keywordflow">default</span>;<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /** Allow instances of this class to be moved */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab85933c994519feb7bc7e12ea3db127f">operator=</a>(<a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">Printer</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /** Default destructor. */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aaa62e7eb81a5dcf350ab8b677ddd8f60">~Printer</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">    /** Print given string.</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * @param[in] str String.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4d2a8186429cb8b469e21c03dc4c8e33">print</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">str</a>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /** Print an entry consisting of a (name, value) pair.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * @param[in] name  Description of the value.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * @param[in] value Value.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#adac997f56174b23d4e4ec5adccf1d836">print_entry</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a>, <span class="keyword">const</span> std::string &amp;value) = 0;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /** Print global header. */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ad15771962ae4349ff5fe189ba04f4139">print_global_header</a>() = 0;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /** Print global footer. */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4386bf1fd7f7e7b3b83b4dea9edbba58">print_global_footer</a>() = 0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">    /** Print header before running all tests. */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">print_run_header</a>() = 0;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /** Print footer after running all tests. */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">print_run_footer</a>() = 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">    /** Print header before a test.</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @param[in] info Test info.</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">print_test_header</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">TestInfo</a> &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">    /** Print footer after a test. */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">print_test_footer</a>() = 0;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /** Print header before errors. */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab7cc3070c9af8540e5805f5df8b0214f">print_errors_header</a>() = 0;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">    /** Print footer after errors. */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a0aa25e682d18e48c986ed28cca43ad77">print_errors_footer</a>() = 0;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">    /** Print the list of all the tests</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     * @param[in] infos List of tests to print</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a32ea6575b559a96e1972a9bbe8fe1252">print_list_tests</a>(<span class="keyword">const</span> std::vector&lt;TestInfo&gt; &amp;infos) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /** Print test error.</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @param[in] error    Description of the error.</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * @param[in] expected Whether the error was expected or not.</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">print_error</a>(<span class="keyword">const</span> std::exception &amp;error, <span class="keywordtype">bool</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>) = 0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">    /** Print test log info.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * @param[in] info Description of the log.</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">print_info</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>) = 0;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">    /** Print header data.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * @param[in] header_data JSON formmated header data.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a02125d92756170feb5ffa1fda589f0e5">print_profiler_header</a>(<span class="keyword">const</span> std::string &amp;header_data) = 0;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">    /** Print measurements for a test.</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     * @param[in] measurements Measurements as collected by a @ref Profiler.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">print_measurements</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a06c89e23a39ce6f2e8e8a1de5bb7002a">Profiler::MeasurementsMap</a> &amp;measurements) = 0;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">    /** Set the output stream.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param[out] stream Output stream.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4c42c24c66df12502377695d5e54ffa7">set_stream</a>(std::ostream &amp;stream);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    std::ostream *_stream{ &amp;std::cout };</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;};</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;} <span class="comment">// namespace framework</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* ARM_COMPUTE_TEST_PRINTER */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a24f328af2266d153ab2ddd1ada7b02e2"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a24f328af2266d153ab2ddd1ada7b02e2">arm_compute::test::framework::Printer::print_info</a></div><div class="ttdeci">virtual void print_info(const std::string &amp;info)=0</div><div class="ttdoc">Print test log info.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a32ea6575b559a96e1972a9bbe8fe1252"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a32ea6575b559a96e1972a9bbe8fe1252">arm_compute::test::framework::Printer::print_list_tests</a></div><div class="ttdeci">virtual void print_list_tests(const std::vector&lt; TestInfo &gt; &amp;infos)=0</div><div class="ttdoc">Print the list of all the tests.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a93693778c8458ce21b0fc41b85467dd6"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a93693778c8458ce21b0fc41b85467dd6">arm_compute::test::framework::Printer::print_measurements</a></div><div class="ttdeci">virtual void print_measurements(const Profiler::MeasurementsMap &amp;measurements)=0</div><div class="ttdoc">Print measurements for a test.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a4d2a8186429cb8b469e21c03dc4c8e33"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4d2a8186429cb8b469e21c03dc4c8e33">arm_compute::test::framework::Printer::print</a></div><div class="ttdeci">void print(const std::string &amp;str)</div><div class="ttdoc">Print given string.</div><div class="ttdef"><b>Definition:</b> <a href="_printer_8cpp_source.xhtml#l00037">Printer.cpp:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a2551b01adb00e6af451202a3aa2fe30a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a2551b01adb00e6af451202a3aa2fe30a">arm_compute::test::framework::Printer::print_run_footer</a></div><div class="ttdeci">virtual void print_run_footer()=0</div><div class="ttdoc">Print footer after running all tests.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a4c42c24c66df12502377695d5e54ffa7"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4c42c24c66df12502377695d5e54ffa7">arm_compute::test::framework::Printer::set_stream</a></div><div class="ttdeci">void set_stream(std::ostream &amp;stream)</div><div class="ttdoc">Set the output stream.</div><div class="ttdef"><b>Definition:</b> <a href="_printer_8cpp_source.xhtml#l00042">Printer.cpp:42</a></div></div>
<div class="ttc" id="anamespacecaffe__mnist__image__extractor_xhtml_a4b99ff73a8a869319570237b5c57ab03"><div class="ttname"><a href="namespacecaffe__mnist__image__extractor.xhtml#a4b99ff73a8a869319570237b5c57ab03">caffe_mnist_image_extractor.str</a></div><div class="ttdeci">str</div><div class="ttdef"><b>Definition:</b> <a href="caffe__mnist__image__extractor_8py_source.xhtml#l00021">caffe_mnist_image_extractor.py:21</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_ab85933c994519feb7bc7e12ea3db127f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab85933c994519feb7bc7e12ea3db127f">arm_compute::test::framework::Printer::operator=</a></div><div class="ttdeci">Printer &amp; operator=(const Printer &amp;)=delete</div><div class="ttdoc">Prevent instances of this class from being copied.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_aa8974e876a9d2e4ed49aeab9b0a18a96"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aa8974e876a9d2e4ed49aeab9b0a18a96">arm_compute::test::framework::Printer::print_run_header</a></div><div class="ttdeci">virtual void print_run_header()=0</div><div class="ttdoc">Print header before running all tests.</div></div>
<div class="ttc" id="a_profiler_8h_xhtml"><div class="ttname"><a href="_profiler_8h.xhtml">Profiler.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_ac2f08469bc84751d553b626f319730bf"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ac2f08469bc84751d553b626f319730bf">arm_compute::test::framework::Printer::Printer</a></div><div class="ttdeci">Printer()=default</div><div class="ttdoc">Default constructor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_ad15771962ae4349ff5fe189ba04f4139"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ad15771962ae4349ff5fe189ba04f4139">arm_compute::test::framework::Printer::print_global_header</a></div><div class="ttdeci">virtual void print_global_header()=0</div><div class="ttdoc">Print global header.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_profiler_xhtml_a06c89e23a39ce6f2e8e8a1de5bb7002a"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_profiler.xhtml#a06c89e23a39ce6f2e8e8a1de5bb7002a">arm_compute::test::framework::Profiler::MeasurementsMap</a></div><div class="ttdeci">std::map&lt; std::string, std::vector&lt; Measurement &gt; &gt; MeasurementsMap</div><div class="ttdoc">Mapping from instrument ids to their measurements.</div><div class="ttdef"><b>Definition:</b> <a href="_profiler_8h_source.xhtml#l00049">Profiler.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml">arm_compute::test::framework::Printer</a></div><div class="ttdoc">Abstract printer class used by the Framework to present output.</div><div class="ttdef"><b>Definition:</b> <a href="_printer_8h_source.xhtml#l00043">Printer.h:43</a></div></div>
<div class="ttc" id="a_n_e_batch_normalization_layer_kernel_8cpp_xhtml_a8f8f80d37794cde9472343e4487ba3eb"><div class="ttname"><a href="_n_e_batch_normalization_layer_kernel_8cpp.xhtml#a8f8f80d37794cde9472343e4487ba3eb">name</a></div><div class="ttdeci">const char * name</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_batch_normalization_layer_kernel_8cpp_source.xhtml#l00060">NEBatchNormalizationLayerKernel.cpp:60</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_adac997f56174b23d4e4ec5adccf1d836"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#adac997f56174b23d4e4ec5adccf1d836">arm_compute::test::framework::Printer::print_entry</a></div><div class="ttdeci">virtual void print_entry(const std::string &amp;name, const std::string &amp;value)=0</div><div class="ttdoc">Print an entry consisting of a (name, value) pair.</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a0aa25e682d18e48c986ed28cca43ad77"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a0aa25e682d18e48c986ed28cca43ad77">arm_compute::test::framework::Printer::print_errors_footer</a></div><div class="ttdeci">virtual void print_errors_footer()=0</div><div class="ttdoc">Print footer after errors.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a8b879125822f4f7e70d563c4f1672942"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a8b879125822f4f7e70d563c4f1672942">arm_compute::test::framework::Printer::print_error</a></div><div class="ttdeci">virtual void print_error(const std::exception &amp;error, bool expected)=0</div><div class="ttdoc">Print test error.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_aaa62e7eb81a5dcf350ab8b677ddd8f60"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#aaa62e7eb81a5dcf350ab8b677ddd8f60">arm_compute::test::framework::Printer::~Printer</a></div><div class="ttdeci">virtual ~Printer()=default</div><div class="ttdoc">Default destructor.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b69631535313e83809cd7746027cc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">arm_compute::test::validation::expected</a></div><div class="ttdeci">expected</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00166">BatchNormalizationLayer.cpp:166</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="astructarm__compute_1_1test_1_1framework_1_1_test_info_xhtml"><div class="ttname"><a href="structarm__compute_1_1test_1_1framework_1_1_test_info.xhtml">arm_compute::test::framework::TestInfo</a></div><div class="ttdoc">Information about a test case.</div><div class="ttdef"><b>Definition:</b> <a href="_framework_8h_source.xhtml#l00078">Framework.h:78</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a983ccd98b01612e3415a74981ec7d8ab"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a983ccd98b01612e3415a74981ec7d8ab">arm_compute::test::framework::Printer::print_test_footer</a></div><div class="ttdeci">virtual void print_test_footer()=0</div><div class="ttdoc">Print footer after a test.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a4386bf1fd7f7e7b3b83b4dea9edbba58"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a4386bf1fd7f7e7b3b83b4dea9edbba58">arm_compute::test::framework::Printer::print_global_footer</a></div><div class="ttdeci">virtual void print_global_footer()=0</div><div class="ttdoc">Print global footer.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a02125d92756170feb5ffa1fda589f0e5"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a02125d92756170feb5ffa1fda589f0e5">arm_compute::test::framework::Printer::print_profiler_header</a></div><div class="ttdeci">virtual void print_profiler_header(const std::string &amp;header_data)=0</div><div class="ttdoc">Print header data.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_a5c0a4b9fd162ee32e0e6231947b6e9b0"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#a5c0a4b9fd162ee32e0e6231947b6e9b0">arm_compute::test::framework::Printer::print_test_header</a></div><div class="ttdeci">virtual void print_test_header(const TestInfo &amp;info)=0</div><div class="ttdoc">Print header before a test.</div></div>
<div class="ttc" id="aclassarm__compute_1_1test_1_1framework_1_1_printer_xhtml_ab7cc3070c9af8540e5805f5df8b0214f"><div class="ttname"><a href="classarm__compute_1_1test_1_1framework_1_1_printer.xhtml#ab7cc3070c9af8540e5805f5df8b0214f">arm_compute::test::framework::Printer::print_errors_header</a></div><div class="ttdeci">virtual void print_errors_header()=0</div><div class="ttdoc">Print header before errors.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_9e71e2da941d3cafc4d98a9f6ae3de4f.xhtml">framework</a></li><li class="navelem"><a class="el" href="dir_68cb0bded1cc5601c88ddaacbb31e482.xhtml">printers</a></li><li class="navelem"><a class="el" href="_printer_8h.xhtml">Printer.h</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
