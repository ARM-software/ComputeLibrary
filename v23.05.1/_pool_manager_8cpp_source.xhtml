<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/runtime/PoolManager.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_pool_manager_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PoolManager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_pool_manager_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2020 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pool_manager_8h.xhtml">arm_compute/runtime/PoolManager.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_error_8h.xhtml">arm_compute/core/Error.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_memory_pool_8h.xhtml">arm_compute/runtime/IMemoryPool.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#a7e937d0097fa10265e28278ce435d0c7">   34</a></span>&#160;<a class="code" href="classarm__compute_1_1_pool_manager.xhtml#a7e937d0097fa10265e28278ce435d0c7">PoolManager::PoolManager</a>()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : _free_pools(), _occupied_pools(), _sem(), _mtx()</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#a8c9b1303494f430941f09e2ad47f9055">   39</a></span>&#160;<a class="code" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a> *<a class="code" href="classarm__compute_1_1_pool_manager.xhtml#a8c9b1303494f430941f09e2ad47f9055">PoolManager::lock_pool</a>()</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_free_pools.empty() &amp;&amp; _occupied_pools.empty(), <span class="stringliteral">&quot;Haven&#39;t setup any pools!&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    _sem-&gt;wait();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_free_pools.empty(), <span class="stringliteral">&quot;Empty pool must exist as semaphore has been signalled&quot;</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    _occupied_pools.splice(std::begin(_occupied_pools), _free_pools, std::begin(_free_pools));</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> _occupied_pools.front().get();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#a7520a565247b2aa3c13dcc4d9332cc4a">   50</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pool_manager.xhtml#a7520a565247b2aa3c13dcc4d9332cc4a">PoolManager::unlock_pool</a>(<a class="code" href="classarm__compute_1_1_i_memory_pool.xhtml">IMemoryPool</a> *pool)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(_free_pools.empty() &amp;&amp; _occupied_pools.empty(), <span class="stringliteral">&quot;Haven&#39;t setup any pools!&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">auto</span> it = std::find_if(std::begin(_occupied_pools), <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_pools), [pool](<span class="keyword">const</span> std::unique_ptr&lt;IMemoryPool&gt; &amp;pool_it)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> pool_it.get() == pool;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    });</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(it == <a class="code" href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">std::end</a>(_occupied_pools), <span class="stringliteral">&quot;Pool to be unlocked couldn&#39;t be found!&quot;</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    _free_pools.splice(std::begin(_free_pools), _occupied_pools, it);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    _sem-&gt;signal();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#a40713b55ad2d6ddb4ccead1f9e535a05">   64</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pool_manager.xhtml#a40713b55ad2d6ddb4ccead1f9e535a05">PoolManager::register_pool</a>(std::unique_ptr&lt;IMemoryPool&gt; pool)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(!_occupied_pools.empty(), <span class="stringliteral">&quot;All pools should be free in order to register a new one!&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// Set pool</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    _free_pools.push_front(std::move(pool));</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Update semaphore</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    _sem = std::make_unique&lt;arm_compute::Semaphore&gt;(_free_pools.size());</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#ab8959b1c8bd6265ff3d39623db34505b">   76</a></span>&#160;std::unique_ptr&lt;IMemoryPool&gt; <a class="code" href="classarm__compute_1_1_pool_manager.xhtml#ab8959b1c8bd6265ff3d39623db34505b">PoolManager::release_pool</a>()</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(!_occupied_pools.empty(), <span class="stringliteral">&quot;All pools should be free in order to release one!&quot;</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span>(!_free_pools.empty())</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        std::unique_ptr&lt;IMemoryPool&gt; pool = std::move(_free_pools.front());</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_free_pools.front() != <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        _free_pools.pop_front();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// Update semaphore</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        _sem = std::make_unique&lt;arm_compute::Semaphore&gt;(_free_pools.size());</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> pool;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#ad6a508a16df2ff6a9881f612f562b766">   96</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_pool_manager.xhtml#ad6a508a16df2ff6a9881f612f562b766">PoolManager::clear_pools</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a>(!_occupied_pools.empty(), <span class="stringliteral">&quot;All pools should be free in order to clear the PoolManager!&quot;</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _free_pools.clear();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// Update semaphore</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    _sem = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_pool_manager.xhtml#ae6779aff1846cda85a356089ee5e45f6">  106</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_pool_manager.xhtml#ae6779aff1846cda85a356089ee5e45f6">PoolManager::num_pools</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard&lt;arm_compute::Mutex&gt;</a> lock(_mtx);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> _free_pools.size() + _occupied_pools.size();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_xhtml_a18809773edf57d061fc2826abf0dab5e"><div class="ttname"><a href="namespacearm__compute.xhtml#a18809773edf57d061fc2826abf0dab5e">arm_compute::lock_guard</a></div><div class="ttdeci">std::lock_guard&lt; Mutex &gt; lock_guard</div><div class="ttdoc">Wrapper of lock_guard data-object.</div><div class="ttdef"><b>Definition:</b> <a href="_mutex_8h_source.xhtml#l00037">Mutex.h:37</a></div></div>
<div class="ttc" id="a_i_memory_pool_8h_xhtml"><div class="ttname"><a href="_i_memory_pool_8h.xhtml">IMemoryPool.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_a8c9b1303494f430941f09e2ad47f9055"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#a8c9b1303494f430941f09e2ad47f9055">arm_compute::PoolManager::lock_pool</a></div><div class="ttdeci">IMemoryPool * lock_pool() override</div><div class="ttdoc">Locks a pool for execution.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00039">PoolManager.cpp:39</a></div></div>
<div class="ttc" id="a_pool_manager_8h_xhtml"><div class="ttname"><a href="_pool_manager_8h.xhtml">PoolManager.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_a40713b55ad2d6ddb4ccead1f9e535a05"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#a40713b55ad2d6ddb4ccead1f9e535a05">arm_compute::PoolManager::register_pool</a></div><div class="ttdeci">void register_pool(std::unique_ptr&lt; IMemoryPool &gt; pool) override</div><div class="ttdoc">Register pool to be managed by the pool.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00064">PoolManager.cpp:64</a></div></div>
<div class="ttc" id="a_error_8h_xhtml"><div class="ttname"><a href="_error_8h.xhtml">Error.h</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_ab8959b1c8bd6265ff3d39623db34505b"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#ab8959b1c8bd6265ff3d39623db34505b">arm_compute::PoolManager::release_pool</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryPool &gt; release_pool() override</div><div class="ttdoc">Releases a free pool from the managed pools.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00076">PoolManager.cpp:76</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_ad6a508a16df2ff6a9881f612f562b766"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#ad6a508a16df2ff6a9881f612f562b766">arm_compute::PoolManager::clear_pools</a></div><div class="ttdeci">void clear_pools() override</div><div class="ttdoc">Clears all pools managed by the pool manager.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00096">PoolManager.cpp:96</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a0b0eb3235749a2909dc5a101afe59a1b"><div class="ttname"><a href="_error_8h.xhtml#a0b0eb3235749a2909dc5a101afe59a1b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond, msg)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00456">Error.h:456</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_a7e937d0097fa10265e28278ce435d0c7"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#a7e937d0097fa10265e28278ce435d0c7">arm_compute::PoolManager::PoolManager</a></div><div class="ttdeci">PoolManager()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00034">PoolManager.cpp:34</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_ae6779aff1846cda85a356089ee5e45f6"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#ae6779aff1846cda85a356089ee5e45f6">arm_compute::PoolManager::num_pools</a></div><div class="ttdeci">size_t num_pools() const override</div><div class="ttdoc">Returns the total number of pools managed by the pool manager.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00106">PoolManager.cpp:106</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1mlgo_1_1parser_xhtml_a9fe67a1da3e2628bade473115ecbb5be"><div class="ttname"><a href="namespacearm__compute_1_1mlgo_1_1parser.xhtml#a9fe67a1da3e2628bade473115ecbb5be">arm_compute::mlgo::parser::end</a></div><div class="ttdeci">void end(TokenStream &amp;in, bool &amp;valid)</div><div class="ttdef"><b>Definition:</b> <a href="_m_l_g_o_parser_8cpp_source.xhtml#l00290">MLGOParser.cpp:290</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_memory_pool_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_memory_pool.xhtml">arm_compute::IMemoryPool</a></div><div class="ttdoc">Memory Pool Inteface.</div><div class="ttdef"><b>Definition:</b> <a href="_i_memory_pool_8h_source.xhtml#l00037">IMemoryPool.h:37</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_pool_manager_xhtml_a7520a565247b2aa3c13dcc4d9332cc4a"><div class="ttname"><a href="classarm__compute_1_1_pool_manager.xhtml#a7520a565247b2aa3c13dcc4d9332cc4a">arm_compute::PoolManager::unlock_pool</a></div><div class="ttdeci">void unlock_pool(IMemoryPool *pool) override</div><div class="ttdoc">Releases memory pool.</div><div class="ttdef"><b>Definition:</b> <a href="_pool_manager_8cpp_source.xhtml#l00050">PoolManager.cpp:50</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bf9f26469d00835ba20ff8d80ee5a804.xhtml">runtime</a></li><li class="navelem"><a class="el" href="_pool_manager_8cpp.xhtml">PoolManager.cpp</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:18 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
