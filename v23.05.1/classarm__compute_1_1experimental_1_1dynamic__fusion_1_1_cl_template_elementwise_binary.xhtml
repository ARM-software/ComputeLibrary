<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: ClTemplateElementwiseBinary Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClTemplateElementwiseBinary Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml">ClTemplateElementwiseBinary.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ClTemplateElementwiseBinary:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary__coll__graph.svg" width="238" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aeb79086feeab3de5ecfccd70abdf7fa7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aeb79086feeab3de5ecfccd70abdf7fa7">Attributes</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_elementwise_binary.xhtml#a2205f97faa59edbb8623510dc2b2448b">ClComponentElementwiseBinary::Attributes</a></td></tr>
<tr class="separator:aeb79086feeab3de5ecfccd70abdf7fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> = <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_group.xhtml">GpuKernelComponentGroup</a></td></tr>
<tr class="separator:a6cda2a0c50524467fbfba048298303ed inherit pub_types_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1bd665c9ac17e17663fd444246eb1b34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a1bd665c9ac17e17663fd444246eb1b34">ClTemplateElementwiseBinary</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aeb79086feeab3de5ecfccd70abdf7fa7">Attributes</a> &amp;attributes)</td></tr>
<tr class="memdesc:a1bd665c9ac17e17663fd444246eb1b34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a1bd665c9ac17e17663fd444246eb1b34">More...</a><br /></td></tr>
<tr class="separator:a1bd665c9ac17e17663fd444246eb1b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23c07b64f4d325de3325b73f3fb2107"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ac23c07b64f4d325de3325b73f3fb2107">ClTemplateElementwiseBinary</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;elementwise)=delete</td></tr>
<tr class="memdesc:ac23c07b64f4d325de3325b73f3fb2107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ac23c07b64f4d325de3325b73f3fb2107">More...</a><br /></td></tr>
<tr class="separator:ac23c07b64f4d325de3325b73f3fb2107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64fe90a50e627d5becea633c751fb13b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a64fe90a50e627d5becea633c751fb13b">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;elementwise)=delete</td></tr>
<tr class="memdesc:a64fe90a50e627d5becea633c751fb13b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a64fe90a50e627d5becea633c751fb13b">More...</a><br /></td></tr>
<tr class="separator:a64fe90a50e627d5becea633c751fb13b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b351d98524f2b7733929e8d0b1b1b64"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a5b351d98524f2b7733929e8d0b1b1b64">ClTemplateElementwiseBinary</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&amp;elementwise)=default</td></tr>
<tr class="memdesc:a5b351d98524f2b7733929e8d0b1b1b64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a5b351d98524f2b7733929e8d0b1b1b64">More...</a><br /></td></tr>
<tr class="separator:a5b351d98524f2b7733929e8d0b1b1b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2548d49b7ca977c9e54dc5a89cd954d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ae2548d49b7ca977c9e54dc5a89cd954d">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&amp;elementwise)=default</td></tr>
<tr class="memdesc:ae2548d49b7ca977c9e54dc5a89cd954d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ae2548d49b7ca977c9e54dc5a89cd954d">More...</a><br /></td></tr>
<tr class="separator:ae2548d49b7ca977c9e54dc5a89cd954d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">get_name</a> () const override</td></tr>
<tr class="memdesc:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component name.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aea9b04d36ad2b9a4e1c166589ecb0326">More...</a><br /></td></tr>
<tr class="separator:aea9b04d36ad2b9a4e1c166589ecb0326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7812833059e15b739d8dafe7c462df48"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a7812833059e15b739d8dafe7c462df48">get_component_code</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a7812833059e15b739d8dafe7c462df48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate kernel component code template.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a7812833059e15b739d8dafe7c462df48">More...</a><br /></td></tr>
<tr class="separator:a7812833059e15b739d8dafe7c462df48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24095ca4db22e95bd86cd88a8ff28615"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a24095ca4db22e95bd86cd88a8ff28615">declare_variables</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:a24095ca4db22e95bd86cd88a8ff28615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declare all variables used by the component in the <code>vtable</code>.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a24095ca4db22e95bd86cd88a8ff28615">More...</a><br /></td></tr>
<tr class="separator:a24095ca4db22e95bd86cd88a8ff28615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add98b8afc43f270c3195a39f47eca5a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#add98b8afc43f270c3195a39f47eca5a7">get_tag_lut</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;vtable, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:add98b8afc43f270c3195a39f47eca5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the tag look-up table used to instantiate the component code.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#add98b8afc43f270c3195a39f47eca5a7">More...</a><br /></td></tr>
<tr class="separator:add98b8afc43f270c3195a39f47eca5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">get_build_options</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group) const override</td></tr>
<tr class="memdesc:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the build options used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">More...</a><br /></td></tr>
<tr class="separator:acd5efd9e0abf91fc8eb0afdbd5cebff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c20dda39067d96aa659c5729ccebf34"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a9c20dda39067d96aa659c5729ccebf34">get_config_id</a> () const override</td></tr>
<tr class="memdesc:a9c20dda39067d96aa659c5729ccebf34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the component config id string used for tuning.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a9c20dda39067d96aa659c5729ccebf34">More...</a><br /></td></tr>
<tr class="separator:a9c20dda39067d96aa659c5729ccebf34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283deece00423ed5bd0c9486f305a6f4"><td class="memItemLeft" align="right" valign="top">std::set&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a283deece00423ed5bd0c9486f305a6f4">get_headers_list</a> () const override</td></tr>
<tr class="memdesc:a283deece00423ed5bd0c9486f305a6f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the header list used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#a283deece00423ed5bd0c9486f305a6f4">More...</a><br /></td></tr>
<tr class="separator:a283deece00423ed5bd0c9486f305a6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">get_window</a> () const override</td></tr>
<tr class="memdesc:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the execution window for the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#ae744fb5fb66aa1ce9db14ba93eab24e3">More...</a><br /></td></tr>
<tr class="separator:ae744fb5fb66aa1ce9db14ba93eab24e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a> (<a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a> <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>)</td></tr>
<tr class="memdesc:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">More...</a><br /></td></tr>
<tr class="separator:aad5a9787ce3cca66f6155f1f2cf14a66 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">~IGpuTemplateComponentWriter</a> ()</td></tr>
<tr class="memdesc:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ae1e3a095916f4fe37604c82eca7341c2">More...</a><br /></td></tr>
<tr class="separator:ae1e3a095916f4fe37604c82eca7341c2 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">get_additional_macros</a> () const</td></tr>
<tr class="memdesc:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate additional macros used in the component.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a65020719815c0344b43b296cc50b10ff">More...</a><br /></td></tr>
<tr class="separator:a65020719815c0344b43b296cc50b10ff inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> () const</td></tr>
<tr class="memdesc:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get tensor arguments.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">More...</a><br /></td></tr>
<tr class="separator:a6c87c6e19567bc42bc52d166728c4461 inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a> () const</td></tr>
<tr class="memdesc:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component id.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">More...</a><br /></td></tr>
<tr class="separator:a2b1fb10e2eeb3bcea23a8bd60296ca7c inherit pub_methods_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml">IGpuTemplateComponentWriter</a></td></tr>
<tr class="memitem:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1d">GpuKernelArgumentInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a> = <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_argument_info.xhtml#a17016d41439c2e42399cc92d8a95ad1daa735f986cc40b7d5c4fd2d5a7ba883fd">GpuKernelArgumentInfo::Type::Tensor_4D_t_Buffer</a></td></tr>
<tr class="memdesc:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="mdescLeft">&#160;</td><td class="mdescRight">For now all kernel intermeditate/destination tensors are expected to be of type Tensor_4D_t_Buffer.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">More...</a><br /></td></tr>
<tr class="separator:a2b489e3eb9e7156def886030fd588e42 inherit pub_static_attribs_classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml">ClTemplateElementwiseBinary.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aeb79086feeab3de5ecfccd70abdf7fa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb79086feeab3de5ecfccd70abdf7fa7">&#9670;&nbsp;</a></span>Attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aeb79086feeab3de5ecfccd70abdf7fa7">Attributes</a> =  <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_elementwise_binary.xhtml#a2205f97faa59edbb8623510dc2b2448b">ClComponentElementwiseBinary::Attributes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml">ClTemplateElementwiseBinary.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1bd665c9ac17e17663fd444246eb1b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bd665c9ac17e17663fd444246eb1b34">&#9670;&nbsp;</a></span>ClTemplateElementwiseBinary() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afff13da4ff0bb0cd14e24f19743c8225">ComponentId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_argument_pack.xhtml">ArgumentPack</a>&lt; <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#aeb79086feeab3de5ecfccd70abdf7fa7">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attributes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Similar to <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_component_elementwise_binary.xhtml#a89bfe8e48e9d10046ca0cc20559db00a">ClComponentElementwiseBinary::validate()</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Component id </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tensors</td><td><a class="el" href="classarm__compute_1_1_tensor.xhtml" title="Basic implementation of the tensor interface.">Tensor</a> arguments to the components </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">attributes</td><td>Component attributes </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    : <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">IGpuTemplateComponentWriter</a>{ <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>, <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a> },</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      _lhs{},</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      _rhs{},</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      _dst{},</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      _attributes{ attributes }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    _lhs = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">TensorType::ACL_SRC_0</a>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    _rhs = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">TensorType::ACL_SRC_1</a>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    _dst = this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">tensors</a>().get_const_tensor(<a class="code" href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">TensorType::ACL_DST_0</a>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a>(_lhs, _rhs, _dst);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, and <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter::tensors()</a>.</p>

</div>
</div>
<a id="ac23c07b64f4d325de3325b73f3fb2107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac23c07b64f4d325de3325b73f3fb2107">&#9670;&nbsp;</a></span>ClTemplateElementwiseBinary() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&#160;</td>
          <td class="paramname"><em>elementwise</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a5b351d98524f2b7733929e8d0b1b1b64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b351d98524f2b7733929e8d0b1b1b64">&#9670;&nbsp;</a></span>ClTemplateElementwiseBinary() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>elementwise</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a24095ca4db22e95bd86cd88a8ff28615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24095ca4db22e95bd86cd88a8ff28615">&#9670;&nbsp;</a></span>declare_variables()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void declare_variables </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Declare all variables used by the component in the <code>vtable</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ab4ca142dbeec40d6a4ab2a0b14b6f72f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                  {{BROADCAST_OP}}{{ELTWISE_OP}}({{DATA_TYPE}}, M0, N0, {{lhs}}, {{rhs}}, {{<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>}});</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;)_<span class="stringliteral">&quot;;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">    if(is_root)</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">        // Calculate the destination indirect Y</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">        code +=</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">R&quot;</span>_(</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a>(<span class="keywordtype">int</span>, i, 0, 1, M0,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            g_dst_indirect_y[i].v = (uint)min(g_ind_1 + i, (<span class="keywordtype">int</span>)({{arg_dst}}_w * {{arg_dst}}_h) - 1);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            g_dst_indirect_y[i].v += g_ind_2 * (int)({{arg_dst}}_w * {{arg_dst}}_h);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        })</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;)_<span class="stringliteral">&quot;;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">    code +=</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">R&quot;</span>_(</div>
</div><!-- fragment -->
</div>
</div>
<a id="acd5efd9e0abf91fc8eb0afdbd5cebff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd5efd9e0abf91fc8eb0afdbd5cebff2">&#9670;&nbsp;</a></span>get_build_options()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml">CLBuildOptions</a> get_build_options </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the build options used in the component. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1_c_l_build_options.xhtml" title="Build options.">CLBuildOptions</a> Build options </dd></dl>
<p>NOTE: For now tile sizes (n0, m0) are set by the execution window. This may change in the future</p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a0a8d4ac3734eec83ef8ba51d632dd659">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00209">209</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                                     : <span class="stringliteral">&quot;N0&quot;</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    lut[<span class="stringliteral">&quot;lhs_start_ind_0&quot;</span>] = (lhs_broadcast_x) ? <span class="stringliteral">&quot;0&quot;</span> : <span class="stringliteral">&quot;g_ind_0&quot;</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    lut[<span class="stringliteral">&quot;rhs_n0&quot;</span>]          = (rhs_broadcast_x) ? <span class="stringliteral">&quot;1&quot;</span> : <span class="stringliteral">&quot;N0&quot;</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    lut[<span class="stringliteral">&quot;rhs_start_ind_0&quot;</span>] = (rhs_broadcast_x) ? <span class="stringliteral">&quot;0&quot;</span> : <span class="stringliteral">&quot;g_ind_0&quot;</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    lut[<span class="stringliteral">&quot;lhs_m0&quot;</span>]          = (lhs_broadcast_yz) ? <span class="stringliteral">&quot;1&quot;</span> : <span class="stringliteral">&quot;M0&quot;</span>;</div>
</div><!-- fragment -->
</div>
</div>
<a id="a7812833059e15b739d8dafe7c462df48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7812833059e15b739d8dafe7c462df48">&#9670;&nbsp;</a></span>get_component_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_component_code </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component code template. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::string Component code </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad06f63230f584c0cb20ffbff6779c5e">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::string code;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_root      = (comp_group.get_root_component()-&gt;id() == this-&gt;<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_lhs_input = comp_group.is_input_tensor(_lhs);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>  is_rhs_input = comp_group.is_input_tensor(_rhs);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    code =</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">    //------------------ START KERNEL {{meta_kernel_id}} {{ELTWISE_OP}} ---------------------</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(is_root)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        code +=</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">    TILE(uint, M0, 1, g_dst_indirect_y);</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(is_lhs_input)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        code +=</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    TILE({{DATA_TYPE}}, {{lhs_m0}}, N0, {{lhs}});</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(is_rhs_input)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        code +=</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">    TILE({{DATA_TYPE}}, {{rhs_m0}}, N0, {{rhs}});</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">    code +=</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">R</span><span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    {</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(is_lhs_input)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        code +=</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">        {{lhs}}_offset_first_element_in_bytes += g_ind_2 * {{lhs}}_stride_w;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">        T_LOAD({{DATA_TYPE}}, {{lhs_m0}}, {{lhs_n0}}, BUFFER, {{lhs}}, {{lhs_start_ind_0}}, {{lhs_start_ind_1}}, 1, {{lhs}}_stride_y, {{lhs}});</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    }</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral"></span> </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">    </span><span class="keywordflow">if</span>(is_rhs_input)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        code +=</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;R<span class="stringliteral">&quot;_(</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">        {{rhs}}_offset_first_element_in_bytes += g_ind_2 * {{rhs}}_stride_w;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">        T_LOAD({{DATA_TYPE}}, {{rhs_m0}}, {{rhs_n0}}, BUFFER, {{rhs}}, {{rhs_start_ind_0}}, {{rhs_start_ind_1}}, 1, {{rhs}}_stride_y, {{rhs}});</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">)_&quot;;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">    }</span></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00305">GpuKernelComponentGroup::get_root_component()</a>, <a class="el" href="_i_gpu_kernel_component_8h_source.xhtml#l00092">IGpuKernelComponent::id()</a>, <a class="el" href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter::id()</a>, and <a class="el" href="_gpu_kernel_component_group_8cpp_source.xhtml#l00320">GpuKernelComponentGroup::is_input_tensor()</a>.</p>

</div>
</div>
<a id="a9c20dda39067d96aa659c5729ccebf34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c20dda39067d96aa659c5729ccebf34">&#9670;&nbsp;</a></span>get_config_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_config_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the component config id string used for tuning. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a3acb4e6418931303bfda3962e4d78288">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                                      : <span class="stringliteral">&quot;M0&quot;</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    lut[<span class="stringliteral">&quot;rhs_start_ind_1&quot;</span>] = (rhs_broadcast_yz) ? <span class="stringliteral">&quot;0&quot;</span> : <span class="stringliteral">&quot;g_ind_1&quot;</span>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    lut[<span class="stringliteral">&quot;BROADCAST_OP&quot;</span>] = (lhs_broadcast_yz) ? <span class="stringliteral">&quot;BROADCAST_LHS_X_&quot;</span> :</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                          (rhs_broadcast_yz) ? <span class="stringliteral">&quot;BROADCAST_RHS_X_&quot;</span> :</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                               <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> lut;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;CLBuildOptions <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">ClTemplateElementwiseBinary::get_build_options</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    CLBuildOptions build_opts{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a283deece00423ed5bd0c9486f305a6f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283deece00423ed5bd0c9486f305a6f4">&#9670;&nbsp;</a></span>get_headers_list()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::set&lt; std::string &gt; get_headers_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the header list used in the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#ad7a3eb170866dfc737d0a8842fe47fd1">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00240">240</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>

</div>
</div>
<a id="aea9b04d36ad2b9a4e1c166589ecb0326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9b04d36ad2b9a4e1c166589ecb0326">&#9670;&nbsp;</a></span>get_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate kernel component name. </p>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a9752bfc9dd39aab02fc9487067abf9a9">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;elementwise_binary&quot;</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="add98b8afc43f270c3195a39f47eca5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add98b8afc43f270c3195a39f47eca5a7">&#9670;&nbsp;</a></span>get_tag_lut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> get_tag_lut </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_variable_table.xhtml">GpuKernelVariableTable</a> &amp;&#160;</td>
          <td class="paramname"><em>vtable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;&#160;</td>
          <td class="paramname"><em>comp_group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the tag look-up table used to instantiate the component code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vtable</td><td>Variable table </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">comp_group</td><td>Component group of which the component is a part of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TagLUT Tag lookup table </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aead1fdded337d81d7f18473d4dd7fbb3">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00142">142</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        comp_group,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        _lhs,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        GpuKernelArgumentInfo(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a>),</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="stringliteral">&quot;lhs&quot;</span>);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        comp_group,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        _rhs,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        GpuKernelArgumentInfo(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a>),</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="stringliteral">&quot;rhs&quot;</span>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    vtable.declare_variable(</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        comp_group,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        _dst,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        GpuKernelArgumentInfo(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">common_tensor_type</a>),</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="stringliteral">&quot;dst&quot;</span>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#add98b8afc43f270c3195a39f47eca5a7">ClTemplateElementwiseBinary::get_tag_lut</a>(<span class="keyword">const</span> GpuKernelVariableTable &amp;vtable, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">ComponentGroup</a> &amp;comp_group)<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">TagLUT</a> lut{};</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// Local build options</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    lut[<span class="stringliteral">&quot;meta_kernel_id&quot;</span>] = <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">id</a>();</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    lut[<span class="stringliteral">&quot;DATA_TYPE&quot;</span>]      = <a class="code" href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">get_cl_type_from_data_type</a>(_lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>());</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">// Arguments and global shared variables</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    lut[<span class="stringliteral">&quot;lhs&quot;</span>]     = vtable.get_variable(_lhs);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    lut[<span class="stringliteral">&quot;rhs&quot;</span>]     = vtable.get_variable(_rhs);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    lut[<span class="stringliteral">&quot;dst&quot;</span>]     = vtable.get_variable(_dst);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    lut[<span class="stringliteral">&quot;arg_dst&quot;</span>] = vtable.get_variable(comp_group.get_any_dst_tensor());</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">switch</span>(_attributes.<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#ab048d8f5d915a55c8170f9418b0f5268">operation</a>())</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1aec211f7c20af43e742bf2570c3cb84f9">Attributes::ElementwiseOp::Add</a>:</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            lut[<span class="stringliteral">&quot;ELTWISE_OP&quot;</span>] = <span class="stringliteral">&quot;ADD&quot;</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">Attributes::ElementwiseOp::Sub</a>:</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            lut[<span class="stringliteral">&quot;ELTWISE_OP&quot;</span>] = <span class="stringliteral">&quot;SUB&quot;</span>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1a62b6d55816cf737bfc6f42e60df1a3f2">Attributes::ElementwiseOp::Mul</a>:</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            lut[<span class="stringliteral">&quot;ELTWISE_OP&quot;</span>] = <span class="stringliteral">&quot;MUL&quot;</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <a class="code" href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Arithmetic Operation not supported&quot;</span>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        comp_group.is_intermediate_tensor(_lhs) &amp;&amp; <a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(_lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 0));</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        comp_group.is_intermediate_tensor(_rhs) &amp;&amp; <a class="code" href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">detail::have_different_dimensions</a>(_rhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>(), 0));</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">// Set broadcast parameters</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment">// PRE: All tensors are broadcast-compatible</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;lhs_dims = _lhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;rhs_dims = _rhs-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> &amp;dst_dims = _dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">tensor_shape</a>();</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae744fb5fb66aa1ce9db14ba93eab24e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae744fb5fb66aa1ce9db14ba93eab24e3">&#9670;&nbsp;</a></span>get_window()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_window.xhtml">Window</a> get_window </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the execution window for the component. </p>

<p>Reimplemented from <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a66df3fbb8781a4dfa011885356e1495f">IGpuTemplateComponentWriter</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00245">245</a> of file <a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    std::string config_id{};</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    config_id += <a class="code" href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">lower_string</a>(<a class="code" href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">string_from_data_type</a>(_dst-&gt;<a class="code" href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">data_type</a>()));</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    config_id += <span class="stringliteral">&quot;_&quot;</span>;</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae2548d49b7ca977c9e54dc5a89cd954d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2548d49b7ca977c9e54dc5a89cd954d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>elementwise</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="a64fe90a50e627d5becea633c751fb13b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64fe90a50e627d5becea633c751fb13b">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a> &amp;&#160;</td>
          <td class="paramname"><em>elementwise</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_elementwise_binary_8h_source.xhtml">ClTemplateElementwiseBinary.h</a></li>
<li>src/dynamic_fusion/sketch/gpu/template_writer/cl/<a class="el" href="_cl_template_elementwise_binary_8cpp_source.xhtml">ClTemplateElementwiseBinary.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a6cda2a0c50524467fbfba048298303ed"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6cda2a0c50524467fbfba048298303ed">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::ComponentGroup</a></div><div class="ttdeci">GpuKernelComponentGroup ComponentGroup</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00049">IGpuTemplateComponentWriter.h:49</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7c66505457d00ece3aa4b34cab80757d"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7c66505457d00ece3aa4b34cab80757d">arm_compute::ITensorInfo::tensor_shape</a></div><div class="ttdeci">virtual const TensorShape &amp; tensor_shape() const =0</div><div class="ttdoc">Size for each dimension of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes_xhtml_a62f68d1b8c7ffe90f85b3a7a7a677dd1aec211f7c20af43e742bf2570c3cb84f9"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1aec211f7c20af43e742bf2570c3cb84f9">arm_compute::experimental::dynamic_fusion::ElementwiseBinaryCommonAttributes::ElementwiseOp::Add</a></div><div class="ttdeci">@ Add</div><div class="ttdoc">(x + y)</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b489e3eb9e7156def886030fd588e42"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b489e3eb9e7156def886030fd588e42">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::common_tensor_type</a></div><div class="ttdeci">static constexpr GpuKernelArgumentInfo::Type common_tensor_type</div><div class="ttdoc">For now all kernel intermeditate/destination tensors are expected to be of type Tensor_4D_t_Buffer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00052">IGpuTemplateComponentWriter.h:52</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_afacfec8193ed701f3646c22bc2d35455"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#afacfec8193ed701f3646c22bc2d35455">arm_compute::experimental::dynamic_fusion::TagLUT</a></div><div class="ttdeci">std::unordered_map&lt; Tag, TagVal &gt; TagLUT</div><div class="ttdoc">Tag lookup table.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_variable_table_8h_source.xhtml#l00126">GpuKernelVariableTable.h:126</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">auto dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_p_p_2_d_f_t_8cpp_source.xhtml#l00170">DFT.cpp:170</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a0a7bb17a0a0414a7162f635776a02eb5"><div class="ttname"><a href="namespacearm__compute.xhtml#a0a7bb17a0a0414a7162f635776a02eb5">arm_compute::lower_string</a></div><div class="ttdeci">std::string lower_string(const std::string &amp;val)</div><div class="ttdoc">Lower a given string.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00353">Utils.cpp:353</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary_xhtml_add98b8afc43f270c3195a39f47eca5a7"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#add98b8afc43f270c3195a39f47eca5a7">arm_compute::experimental::dynamic_fusion::ClTemplateElementwiseBinary::get_tag_lut</a></div><div class="ttdeci">TagLUT get_tag_lut(const GpuKernelVariableTable &amp;vtable, const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the tag look-up table used to instantiate the component code.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00142">ClTemplateElementwiseBinary.cpp:142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_aad5a9787ce3cca66f6155f1f2cf14a66"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#aad5a9787ce3cca66f6155f1f2cf14a66">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::IGpuTemplateComponentWriter</a></div><div class="ttdeci">IGpuTemplateComponentWriter(ComponentId id, const ArgumentPack&lt; ITensorInfo &gt; &amp;tensors)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00060">IGpuTemplateComponentWriter.h:60</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a7cf8d8b669b8f7b05680230be30d60f4"><div class="ttname"><a href="_error_8h.xhtml#a7cf8d8b669b8f7b05680230be30d60f4">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(msg)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00352">Error.h:352</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes_xhtml_ab048d8f5d915a55c8170f9418b0f5268"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#ab048d8f5d915a55c8170f9418b0f5268">arm_compute::experimental::dynamic_fusion::ElementwiseBinaryCommonAttributes::operation</a></div><div class="ttdeci">ElementwiseBinaryCommonAttributes &amp; operation(const ElementwiseBinaryCommonAttributes::ElementwiseOp &amp;operation)</div><div class="ttdoc">Set operation.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_elementwise_binary_common_8cpp_source.xhtml#l00093">GpuElementwiseBinaryCommon.cpp:93</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a142b55a483cadf4e1068a1a09a55e8e9"><div class="ttname"><a href="namespacearm__compute.xhtml#a142b55a483cadf4e1068a1a09a55e8e9">arm_compute::string_from_data_type</a></div><div class="ttdeci">const std::string &amp; string_from_data_type(DataType dt)</div><div class="ttdoc">Convert a data type identity into a string.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_utils_8cpp_source.xhtml#l00135">Utils.cpp:135</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a135adba4335f0b231907ea8f61f9aff5">arm_compute::ACL_SRC_0</a></div><div class="ttdeci">@ ACL_SRC_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00045">Types.h:45</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a33d31c31e7afde56ed0070133d4568a0">arm_compute::ACL_SRC_1</a></div><div class="ttdeci">@ ACL_SRC_1</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00046">Types.h:46</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes_xhtml_a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1ae80155eceb940c89e2de63ad05868db2">arm_compute::experimental::dynamic_fusion::ElementwiseBinaryCommonAttributes::ElementwiseOp::Sub</a></div><div class="ttdeci">@ Sub</div><div class="ttdoc">(x - y)</div></div>
<div class="ttc" id="aarm__compute_2core_2_validate_8h_xhtml_a921b705e9e3e0fe928928447869e62a5"><div class="ttname"><a href="arm__compute_2core_2_validate_8h.xhtml#a921b705e9e3e0fe928928447869e62a5">ARM_COMPUTE_ERROR_ON_NULLPTR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_NULLPTR(...)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00157">Validate.h:157</a></div></div>
<div class="ttc" id="a_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00466">Error.h:466</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724"><div class="ttname"><a href="namespacearm__compute.xhtml#a08e287b5f0197ce8c7c84dde6db24828a540ce448c4606321a9e07595de6e4724">arm_compute::ACL_DST_0</a></div><div class="ttdeci">@ ACL_DST_0</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2experimental_2_types_8h_source.xhtml#l00056">Types.h:56</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a6c87c6e19567bc42bc52d166728c4461"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a6c87c6e19567bc42bc52d166728c4461">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::tensors</a></div><div class="ttdeci">ArgumentPack&lt; ITensorInfo &gt; tensors() const</div><div class="ttdoc">Get tensor arguments.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00123">IGpuTemplateComponentWriter.h:123</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a45d610a8bc262f7007c934293361e888"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a45d610a8bc262f7007c934293361e888">arm_compute::detail::have_different_dimensions</a></div><div class="ttdeci">bool have_different_dimensions(const Dimensions&lt; T &gt; &amp;dim1, const Dimensions&lt; T &gt; &amp;dim2, unsigned int upper_dim)</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_validate_8h_source.xhtml#l00047">Validate.h:47</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1_i_tensor_info_xhtml_a7cfb31af63202568efef5214acfbf3ba"><div class="ttname"><a href="classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba">arm_compute::ITensorInfo::data_type</a></div><div class="ttdeci">virtual DataType data_type() const =0</div><div class="ttdoc">Data type used for each element of the tensor.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer_xhtml_a2b1fb10e2eeb3bcea23a8bd60296ca7c"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_i_gpu_template_component_writer.xhtml#a2b1fb10e2eeb3bcea23a8bd60296ca7c">arm_compute::experimental::dynamic_fusion::IGpuTemplateComponentWriter::id</a></div><div class="ttdeci">ComponentId id() const</div><div class="ttdoc">Get component id.</div><div class="ttdef"><b>Definition:</b> <a href="_i_gpu_template_component_writer_8h_source.xhtml#l00128">IGpuTemplateComponentWriter.h:128</a></div></div>
<div class="ttc" id="atile__helpers_8h_xhtml_af5e0dc11a939b317bb77a58beb291fe7"><div class="ttname"><a href="tile__helpers_8h.xhtml#af5e0dc11a939b317bb77a58beb291fe7">LOOP_UNROLLING</a></div><div class="ttdeci">#define LOOP_UNROLLING(type, idx, start, step, num, macro)</div><div class="ttdef"><b>Definition:</b> <a href="tile__helpers_8h_source.xhtml#l00340">tile_helpers.h:340</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary_xhtml_acd5efd9e0abf91fc8eb0afdbd5cebff2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml#acd5efd9e0abf91fc8eb0afdbd5cebff2">arm_compute::experimental::dynamic_fusion::ClTemplateElementwiseBinary::get_build_options</a></div><div class="ttdeci">CLBuildOptions get_build_options(const ComponentGroup &amp;comp_group) const override</div><div class="ttdoc">Generate the build options used in the component.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_template_elementwise_binary_8cpp_source.xhtml#l00209">ClTemplateElementwiseBinary.cpp:209</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_a545eeda2eaa3f5a54345ce8169e21184"><div class="ttname"><a href="namespacearm__compute.xhtml#a545eeda2eaa3f5a54345ce8169e21184">arm_compute::get_cl_type_from_data_type</a></div><div class="ttdeci">std::string get_cl_type_from_data_type(const DataType &amp;dt)</div><div class="ttdoc">Translates a tensor data type to the appropriate OpenCL type.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00039">CLHelpers.cpp:39</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes_xhtml_a62f68d1b8c7ffe90f85b3a7a7a677dd1a62b6d55816cf737bfc6f42e60df1a3f2"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_elementwise_binary_common_attributes.xhtml#a62f68d1b8c7ffe90f85b3a7a7a677dd1a62b6d55816cf737bfc6f42e60df1a3f2">arm_compute::experimental::dynamic_fusion::ElementwiseBinaryCommonAttributes::ElementwiseOp::Mul</a></div><div class="ttdeci">@ Mul</div><div class="ttdoc">(x * y)</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_cl_template_elementwise_binary.xhtml">ClTemplateElementwiseBinary</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
