<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GemmTuner Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespace_gemm_tuner.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">GemmTuner Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_benchmark_result_recorder.xhtml">GEMMBenchmarkResultRecorder</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_config_distribution.xhtml">GEMMConfigDistribution</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_g_e_m_m_param.xhtml">GEMMParam</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_measurement.xhtml">Measurement</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_native_g_e_m_m_config.xhtml">NativeGEMMConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_reshaped_g_e_m_m_config.xhtml">ReshapedGEMMConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gemm_tuner_1_1_reshaped_only_r_h_s_g_e_m_m_config.xhtml">ReshapedOnlyRHSGEMMConfig</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae93eefdf5d69cd7bbd361324c613dff3"><td class="memItemLeft" align="right" valign="top">Dict[str, str]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#ae93eefdf5d69cd7bbd361324c613dff3">parse_benchmark_commandline</a> (str commandline)</td></tr>
<tr class="memdesc:ae93eefdf5d69cd7bbd361324c613dff3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functions.  <a href="namespace_gemm_tuner.xhtml#ae93eefdf5d69cd7bbd361324c613dff3">More...</a><br /></td></tr>
<tr class="separator:ae93eefdf5d69cd7bbd361324c613dff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a635fc68bfeadd9692faead4d667a90a9"><td class="memItemLeft" align="right" valign="top">Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a635fc68bfeadd9692faead4d667a90a9">extract_benchmark_results</a> (Dict json_results, measurement_method=&quot;avg&quot;)</td></tr>
<tr class="separator:a635fc68bfeadd9692faead4d667a90a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9bf6647cc58e534561aa91a422229e4"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#ab9bf6647cc58e534561aa91a422229e4">parse_json</a> (dir_name)</td></tr>
<tr class="separator:ab9bf6647cc58e534561aa91a422229e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a118d1a9756d5cb110204180506ed8c99"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">check_out_path</a> (out_path)</td></tr>
<tr class="separator:a118d1a9756d5cb110204180506ed8c99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70ce377ea8b5202ced8079196c6841ed"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">dump_json</a> (out_path, dict)</td></tr>
<tr class="separator:a70ce377ea8b5202ced8079196c6841ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b19960927373ea2b5afd6a4ccb654ac"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a2b19960927373ea2b5afd6a4ccb654ac">main</a> (<a class="el" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a>)</td></tr>
<tr class="memdesc:a2b19960927373ea2b5afd6a4ccb654ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main.  <a href="namespace_gemm_tuner.xhtml#a2b19960927373ea2b5afd6a4ccb654ac">More...</a><br /></td></tr>
<tr class="separator:a2b19960927373ea2b5afd6a4ccb654ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:acf7192c608527efb8f8dedf0a3f2e706"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#acf7192c608527efb8f8dedf0a3f2e706">Strategy</a> = Enum(&quot;Strategy&quot;, [&quot;Native&quot;, &quot;ReshapedOnlyRHS&quot;, &quot;Reshaped&quot;])</td></tr>
<tr class="memdesc:acf7192c608527efb8f8dedf0a3f2e706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Types.  <a href="namespace_gemm_tuner.xhtml#acf7192c608527efb8f8dedf0a3f2e706">More...</a><br /></td></tr>
<tr class="separator:acf7192c608527efb8f8dedf0a3f2e706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a696b6940cef01d03e1fc064d8be3727b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a696b6940cef01d03e1fc064d8be3727b">GEMMConfigT</a></td></tr>
<tr class="separator:a696b6940cef01d03e1fc064d8be3727b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c0f164b66e196f940f4b9e206d586d5"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a3c0f164b66e196f940f4b9e206d586d5">GEMM_CONFIG_FACTORY</a></td></tr>
<tr class="separator:a3c0f164b66e196f940f4b9e206d586d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8424a0c14384f40c0a9c89289e90262"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#ae8424a0c14384f40c0a9c89289e90262">EXAMPLE_FILE_2_STRATEGY</a></td></tr>
<tr class="separator:ae8424a0c14384f40c0a9c89289e90262"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd6c8b5e818f3a2a5dac6717b853018"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#abfd6c8b5e818f3a2a5dac6717b853018">GEMM_EXAMPLE_ARGS_FACTORY</a></td></tr>
<tr class="separator:abfd6c8b5e818f3a2a5dac6717b853018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f8b815490a02d3feccad7c5472ba4e2"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a2f8b815490a02d3feccad7c5472ba4e2">BENCHMARK_RESULT_JSON_EXTENSION</a> = &quot;gemmtuner_benchmark&quot;</td></tr>
<tr class="separator:a2f8b815490a02d3feccad7c5472ba4e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90eee7a4677ca8b1ed116364a24367f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a90eee7a4677ca8b1ed116364a24367f9">parser</a> = argparse.ArgumentParser(description=&quot;CL GEMM Tuner&quot;)</td></tr>
<tr class="separator:a90eee7a4677ca8b1ed116364a24367f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0bede79c5f4cbed9c2cd932a0ace201"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#ab0bede79c5f4cbed9c2cd932a0ace201">dest</a></td></tr>
<tr class="separator:ab0bede79c5f4cbed9c2cd932a0ace201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8a64ff78fc562acbd80da81ed531b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a6d8a64ff78fc562acbd80da81ed531b2">metavar</a></td></tr>
<tr class="separator:a6d8a64ff78fc562acbd80da81ed531b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4ab7bf743142dae2e459aa18f9f1d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a2f4ab7bf743142dae2e459aa18f9f1d4">action</a></td></tr>
<tr class="separator:a2f4ab7bf743142dae2e459aa18f9f1d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aead736a07eaf25623ad7bfa1f0ee2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a7aead736a07eaf25623ad7bfa1f0ee2d">type</a></td></tr>
<tr class="separator:a7aead736a07eaf25623ad7bfa1f0ee2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ae9faedaa69e3e28e2960a0548df8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a81ae9faedaa69e3e28e2960a0548df8d">help</a></td></tr>
<tr class="separator:a81ae9faedaa69e3e28e2960a0548df8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81948490ddf54e80a22593640178350"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#ae81948490ddf54e80a22593640178350">required</a></td></tr>
<tr class="separator:ae81948490ddf54e80a22593640178350"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affb1327b18bf08a379d19eef89cf1ed1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#affb1327b18bf08a379d19eef89cf1ed1">default</a></td></tr>
<tr class="separator:affb1327b18bf08a379d19eef89cf1ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8187411843a6284ffb964ef3fb9fcab3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a8187411843a6284ffb964ef3fb9fcab3">args</a> = parser.parse_args()</td></tr>
<tr class="separator:a8187411843a6284ffb964ef3fb9fcab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b240734aa0ab5756d163cc6b03d6e1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#a05b240734aa0ab5756d163cc6b03d6e1">logging_level</a> = logging.DEBUG if args.debug else logging.INFO</td></tr>
<tr class="separator:a05b240734aa0ab5756d163cc6b03d6e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afde8e18a788ccc92fc61cab298bca7e3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_gemm_tuner.xhtml#afde8e18a788ccc92fc61cab298bca7e3">level</a></td></tr>
<tr class="separator:afde8e18a788ccc92fc61cab298bca7e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a118d1a9756d5cb110204180506ed8c99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a118d1a9756d5cb110204180506ed8c99">&#9670;&nbsp;</a></span>check_out_path()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def GemmTuner.check_out_path </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>out_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00566">566</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">check_out_path</a>(out_path):</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="keywordflow">if</span> os.path.exists(out_path):</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        overwrite = (</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">input</a>(</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                <span class="stringliteral">&quot;Output JSON {} already exists. Overwrite? [Y/N]: &quot;</span>.format(</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                    out_path)</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            ).lower()</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            == <span class="stringliteral">&quot;y&quot;</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        )</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> overwrite:</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            logging.info(<span class="stringliteral">&quot;Skipping {}&quot;</span>.format(out_path))</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">False</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    logging.info(<span class="stringliteral">&quot;Saving JSON file to {}&quot;</span>.format(out_path))</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">True</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; </div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">arm_compute::test::validation.input</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">GEMMBenchmarkResultRecorder.save_to_jsons()</a>.</p>

</div>
</div>
<a id="a70ce377ea8b5202ced8079196c6841ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70ce377ea8b5202ced8079196c6841ed">&#9670;&nbsp;</a></span>dump_json()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def GemmTuner.dump_json </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>out_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>dict</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00582">582</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">dump_json</a>(out_path, dict):</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keyword">with</span> open(out_path, <span class="stringliteral">&quot;w&quot;</span>) <span class="keyword">as</span> f:</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        json.dump(dict, f)</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    logging.info(<span class="stringliteral">&quot;Saved&quot;</span>)</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160; </div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00303">GEMMBenchmarkResultRecorder.save_to_jsons()</a>.</p>

</div>
</div>
<a id="a635fc68bfeadd9692faead4d667a90a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a635fc68bfeadd9692faead4d667a90a9">&#9670;&nbsp;</a></span>extract_benchmark_results()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"> Generator[<a class="el" href="class_gemm_tuner_1_1_benchmark_result.xhtml">BenchmarkResult</a>, None, None] GemmTuner.extract_benchmark_results </td>
          <td>(</td>
          <td class="paramtype">Dict&#160;</td>
          <td class="paramname"><em>json_results</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>measurement_method</em> = <code>&quot;avg&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Parse the benchmark result and extract relevant information, namely:
    GEMM param,
    Strategy,
    GEMM config,
    Measurements
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00488">488</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#a635fc68bfeadd9692faead4d667a90a9">extract_benchmark_results</a>(</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    json_results: Dict, measurement_method=<span class="stringliteral">&quot;avg&quot;</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;) -&gt; Generator[BenchmarkResult, <span class="keywordtype">None</span>, <span class="keywordtype">None</span>]:</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Parse the benchmark result and extract relevant information, namely:</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="stringliteral">        GEMM param,</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="stringliteral">        Strategy,</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="stringliteral">        GEMM config,</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="stringliteral">        Measurements</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">for</span> json_res <span class="keywordflow">in</span> json_results:</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="comment"># Get example test and test data.</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment"># There should only be 1 test per run</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        example_tests = list(json_res[<span class="stringliteral">&quot;tests&quot;</span>].items())</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        <span class="keyword">assert</span> len(example_tests) == 1</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        example_fn, example_test_data = example_tests[0]</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160; </div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="comment"># Process example file name</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        example_fn = example_fn.split(os.path.sep)[-1]</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160; </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="comment"># Get strategy</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        strategy = EXAMPLE_FILE_2_STRATEGY[example_fn]</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160; </div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="comment"># Get gemm params + gemm configs from example args</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        benchmark_args = <a class="code" href="namespace_gemm_tuner.xhtml#ae93eefdf5d69cd7bbd361324c613dff3">parse_benchmark_commandline</a>(json_res[<span class="stringliteral">&quot;CommandLine&quot;</span>])</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        Gemm_Example_Args_T = GEMM_EXAMPLE_ARGS_FACTORY[strategy]</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        example_args = Gemm_Example_Args_T(</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            *(benchmark_args[<span class="stringliteral">&quot;example_args&quot;</span>].split(<span class="stringliteral">&quot;,&quot;</span>)))</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="comment"># Gemm_Example_Arg consists of GEMMParam first and then GEMMConfig (in that order)</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="comment"># However data type option is parsed separately from end of options, hence -1 is applied to fields length</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        gemm_param_fields_len = len(GEMMParam._fields) - 1</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        gemm_param = GEMMParam.parse_from_strs(</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            *example_args[:gemm_param_fields_len],</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            data_type = benchmark_args[<span class="stringliteral">&quot;type&quot;</span>])</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        GEMMConfig = GEMM_CONFIG_FACTORY[strategy]</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        gemm_config = GEMMConfig.parse_from_strs(</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            *example_args[gemm_param_fields_len:])</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="comment"># Get OpenCL_Time_Ms stats</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        measurements = list(example_test_data[<span class="stringliteral">&quot;measurements&quot;</span>].items())</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="comment"># For reshaped RHS only we have two measurements (one also for the reshape kernel)</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="comment"># Hence we must parse and sum them</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        measurement_ms_reshape = 0</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        measurement_ms_kernel = 0</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">for</span> single_measurement <span class="keywordflow">in</span> measurements:</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            measurement_instrument, data = single_measurement</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <span class="comment"># Get instrument name and assert that it is the one we expect</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            measurement_instrument_name = measurement_instrument.split(<span class="stringliteral">&quot;/&quot;</span>)[0]</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="keyword">assert</span> measurement_instrument_name == <span class="stringliteral">&quot;OpenCLTimer&quot;</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="comment"># Take either the minimum or the average of the raw data as the measurement value</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">if</span> measurement_method == <span class="stringliteral">&quot;min&quot;</span>:</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                measurement_val = min(data[<span class="stringliteral">&quot;raw&quot;</span>])</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <span class="keywordflow">elif</span> measurement_method == <span class="stringliteral">&quot;avg&quot;</span>:</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                measurement_val = sum(data[<span class="stringliteral">&quot;raw&quot;</span>]) / len(data[<span class="stringliteral">&quot;raw&quot;</span>])</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="keywordflow">raise</span> ValueError(</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                    <span class="stringliteral">&quot;Invalid measurement method: {}&quot;</span>.format(measurement_method)</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                )</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            measurement_type = measurement_instrument.split(<span class="stringliteral">&quot;/&quot;</span>)[1]</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&quot;reshape&quot;</span> <span class="keywordflow">in</span> measurement_type.split(<span class="stringliteral">&quot;_&quot;</span>):</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                measurement_ms_reshape = measurement_val</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                measurement_ms_kernel = measurement_val</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160; </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        measurement = Measurement(</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            measurement_ms_reshape, measurement_ms_kernel)</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160; </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="keywordflow">yield</span> BenchmarkResult(gemm_param, strategy, gemm_config, measurement)</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; </div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00468">parse_benchmark_commandline()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00593">main()</a>.</p>

</div>
</div>
<a id="a2b19960927373ea2b5afd6a4ccb654ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b19960927373ea2b5afd6a4ccb654ac">&#9670;&nbsp;</a></span>main()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def GemmTuner.main </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Main. </p>

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00593">593</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#a2b19960927373ea2b5afd6a4ccb654ac">main</a>(args):</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    logging.info(</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="stringliteral">&quot;Searching best gemm configurations from {}&quot;</span>.format(</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            args.benchmark_results_dir)</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    )</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160; </div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    benchmark_results = <a class="code" href="namespace_gemm_tuner.xhtml#a635fc68bfeadd9692faead4d667a90a9">extract_benchmark_results</a>(</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <a class="code" href="namespace_gemm_tuner.xhtml#ab9bf6647cc58e534561aa91a422229e4">parse_json</a>(args.benchmark_results_dir)</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    )</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160; </div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="comment"># Add all benchmark results to the recorder</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    benchmark_result_recorder = GEMMBenchmarkResultRecorder(tol=args.tolerance)</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordflow">for</span> benchmark_result <span class="keywordflow">in</span> benchmark_results:</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        benchmark_result_recorder.add(benchmark_result)</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160; </div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">if</span> args.debug:</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        recorder_sum_level = GEMMBenchmarkResultRecorder.SummaryLevel.Detailed</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        recorder_sum_level = GEMMBenchmarkResultRecorder.SummaryLevel.Short</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160; </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="comment"># Print overall summary of the recorded results</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    logging.info(benchmark_result_recorder.summary(</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        sum_level=recorder_sum_level))</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160; </div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="comment"># Get GEMM configuration distributions for each strategy</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    all_config_dists = benchmark_result_recorder.get_config_distributions()</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    logging.info(<span class="stringliteral">&quot;=== Result ===&quot;</span>)</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keywordflow">for</span> strategy, config_dist <span class="keywordflow">in</span> all_config_dists.items():</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        logging.info(<span class="stringliteral">&quot;Strategy: {}&quot;</span>.format(strategy.name))</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        logging.debug(<span class="stringliteral">&quot;GEMM Config, Votes&quot;</span>)</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordflow">for</span> config, freq <span class="keywordflow">in</span> config_dist.frequency():</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            logging.debug(<span class="stringliteral">&quot;{}, {}&quot;</span>.format(config, freq))</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        logging.info(</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            <span class="stringliteral">&quot;Best GEMM Config: {} with std: {}&quot;</span>.format(</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                config_dist.best_config(), config_dist.std()</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            )</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        )</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160; </div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="comment"># Save the recorded results to JSON files in output directory</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keywordflow">if</span> args.output_dir <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        benchmark_result_recorder.save_to_jsons(</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            args.output_dir, only_best_config=(<span class="keywordflow">not</span> args.debug)</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        )</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160; </div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gemm_tuner_8py_source.xhtml#l00488">extract_benchmark_results()</a>, and <a class="el" href="_gemm_tuner_8py_source.xhtml#l00558">parse_json()</a>.</p>

</div>
</div>
<a id="ae93eefdf5d69cd7bbd361324c613dff3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae93eefdf5d69cd7bbd361324c613dff3">&#9670;&nbsp;</a></span>parse_benchmark_commandline()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"> Dict[str, str] GemmTuner.parse_benchmark_commandline </td>
          <td>(</td>
          <td class="paramtype">str&#160;</td>
          <td class="paramname"><em>commandline</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Functions. </p>
<pre class="fragment">Parse the benchmark example command-line string into a dictionary of command-line arguments
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00468">468</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#ae93eefdf5d69cd7bbd361324c613dff3">parse_benchmark_commandline</a>(commandline: str) -&gt; Dict[str, str]:</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Parse the benchmark example command-line string into a dictionary of command-line arguments</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="comment"># Separate the data type option from the example_args portion of the string</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    commandline = commandline.replace(<span class="stringliteral">&quot;,--type=&quot;</span>, <span class="stringliteral">&quot; --type=&quot;</span>)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    args = commandline.split()</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="comment"># Discard program name</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    args = args[1:]</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="comment"># Split into a list of (argument name, argument value)</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    args = <a class="code" href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">map</a>(<span class="keyword">lambda</span> arg: arg.split(<span class="stringliteral">&quot;=&quot;</span>), args)</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160; </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keyword">def </span>transform(_name):</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="comment"># Strip &#39;-&#39;/&quot;--&quot; if it exists</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        _name = _name.lstrip(<span class="stringliteral">&quot;-&quot;</span>)</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keywordflow">return</span> _name</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160; </div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">return</span> {transform(name): val <span class="keywordflow">for</span> name, val <span class="keywordflow">in</span> args}</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utils_2_utils_8h_source.xhtml#l00212">arm_compute::utils.map()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00488">extract_benchmark_results()</a>.</p>

</div>
</div>
<a id="ab9bf6647cc58e534561aa91a422229e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9bf6647cc58e534561aa91a422229e4">&#9670;&nbsp;</a></span>parse_json()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def GemmTuner.parse_json </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>dir_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<pre class="fragment">Glob all benchmark result json files and parse them into json objects (dicts).
</pre> 
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00558">558</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">def </span><a class="code" href="namespace_gemm_tuner.xhtml#ab9bf6647cc58e534561aa91a422229e4">parse_json</a>(dir_name):</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Glob all benchmark result json files and parse them into json objects (dicts).</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">for</span> res_fn <span class="keywordflow">in</span> Path(dir_name).rglob(<span class="stringliteral">&quot;*.{}&quot;</span>.format(BENCHMARK_RESULT_JSON_EXTENSION)):</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keyword">with</span> open(res_fn) <span class="keyword">as</span> res_fp:</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            <span class="keywordflow">yield</span> json.load(res_fp)</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160; </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160; </div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gemm_tuner_8py_source.xhtml#l00593">main()</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a2f4ab7bf743142dae2e459aa18f9f1d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f4ab7bf743142dae2e459aa18f9f1d4">&#9670;&nbsp;</a></span>action</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">action</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00646">646</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a8187411843a6284ffb964ef3fb9fcab3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8187411843a6284ffb964ef3fb9fcab3">&#9670;&nbsp;</a></span>args</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">args = parser.parse_args()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00679">679</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_kernel_component_graph_8h_source.xhtml#l00072">GpuKernelComponentGraph.add_new_component()</a>, <a class="el" href="graph_2_graph_8h_source.xhtml#l00235">Graph.add_node()</a>, <a class="el" href="_command_line_parser_8h_source.xhtml#l00104">CommandLineParser.add_option()</a>, <a class="el" href="_command_line_parser_8h_source.xhtml#l00111">CommandLineParser.add_positional_option()</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00079">arm_compute::test.apply()</a>, <a class="el" href="tests_2framework_2_utils_8h_source.xhtml#l00072">arm_compute::test::framework.apply_impl()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00527">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;.compute_tile_padded()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00054">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyReshapedOnlyRhsKernel &gt;.configure()</a>, <a class="el" href="_n_e_o_n_2_helper_8h_source.xhtml#l00067">NESynthetizeFunction&lt; K &gt;.configure()</a>, <a class="el" href="_n_e_o_n_2_helper_8h_source.xhtml#l00095">NESynthetizeFunctionWithZeroConstantBorder&lt; K, bordersize &gt;.configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00096">CLSynthetizeOperatorInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;.configure()</a>, <a class="el" href="_n_e_o_n_2_helper_8h_source.xhtml#l00118">NESynthetizeFunctionWithZeroConstantKernelBorder&lt; K &gt;.configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00134">CLSynthetizeFunction&lt; K &gt;.configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00175">CLSynthetizeFunctionWithZeroConstantBorder&lt; K, bordersize &gt;.configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00196">CLSynthetizeFunctionInitOutputWithZeroAndWithZeroConstantBorder&lt; K, bordersize &gt;.configure()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00233">ClSynthetizeOperatorWithBorder&lt; K &gt;.configure()</a>, <a class="el" href="_gpu_kernel_component_factory_8h_source.xhtml#l00052">GpuKernelComponentFactory.create()</a>, <a class="el" href="arm__compute_2graph_2backends_2_utils_8h_source.xhtml#l00045">arm_compute::graph::backends.create_named_function()</a>, <a class="el" href="arm__compute_2graph_2backends_2_utils_8h_source.xhtml#l00061">arm_compute::graph::backends.create_named_memory_managed_function()</a>, <a class="el" href="_gpu_workload_sketch_8h_source.xhtml#l00070">GpuWorkloadSketch.create_tensor_info()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00140">arm_conv::depthwise.depthwise()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00075">GemmImplementation&lt; Top, Tret, OutputStage &gt;.do_cycle_estimate()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00159">GemmImplementation&lt; Top, Tret, Nothing &gt;.do_cycle_estimate()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00083">GemmImplementation&lt; Top, Tret, OutputStage &gt;.do_instantiate()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00167">GemmImplementation&lt; Top, Tret, Nothing &gt;.do_instantiate()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00047">GemmImplementation&lt; Top, Tret, OutputStage &gt;.do_is_supported()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00131">GemmImplementation&lt; Top, Tret, Nothing &gt;.do_is_supported()</a>, <a class="el" href="gemm__hybrid_8hpp_source.xhtml#l00253">GemmHybrid&lt; strategy, To, Tr &gt;.estimate_cycles()</a>, <a class="el" href="gemm__interleaved__pretransposed__2d_8hpp_source.xhtml#l00511">GemmInterleavedPretransposed2d&lt; strategy, To, Tr &gt;.estimate_cycles()</a>, <a class="el" href="gemm__interleaved_8hpp_source.xhtml#l01184">GemmInterleaved&lt; strategy, To, Tr, OutputStage, MergeStep, FixedFormat, ForceThreadColumns, ForceFloatAccumulate &gt;.estimate_cycles()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00333">StrategyType&lt; IsGeneric, TInput, TWeight, TOutput, TAccum, OutputStage &gt;.execute()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00354">StrategyType&lt; true, TInput, TWeight, TOutput, TAccum, OutputStage &gt;.execute()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00377">StrategyType&lt; false, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;.execute()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00398">StrategyType&lt; true, TInput, TWeight, TOutput, int32_t, arm_gemm::Requantize32 &gt;.execute()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00448">PrepareInputSample&lt; true &gt;.execute()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00067">arm_conv::pooling.find_implementation()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00071">arm_conv::depthwise.find_implementation()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00236">arm_gemm.find_implementation()</a>, <a class="el" href="_utility_8h_source.xhtml#l00122">arm_compute::utility.for_each()</a>, <a class="el" href="arm__compute_2core_2_validate_8h_source.xhtml#l00110">arm_compute::detail.for_each_error()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00318">arm_gemm.gemm()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00104">GemmImplementation&lt; Top, Tret, OutputStage &gt;.GemmImplementation()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00200">GemmImplementation&lt; Top, Tret, Nothing &gt;.GemmImplementation()</a>, <a class="el" href="gemm__interleaved__pretransposed__2d_8hpp_source.xhtml#l00341">GemmInterleavedPretransposed2d&lt; strategy, To, Tr &gt;.GemmInterleavedPretransposed2d()</a>, <a class="el" href="gemv__batched_8hpp_source.xhtml#l00039">GemvBatched&lt; To, Tr &gt;.GemvBatched()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00114">arm_conv::depthwise.get_compatible_kernels()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00286">arm_gemm.get_compatible_kernels()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00049">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;.get_cycle_estimate()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00051">DepthwiseImplementation&lt; TInput, TWeight, TOutput, OutputStage &gt;.get_cycle_estimate()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00186">GenericInputArrayElement&lt; T &gt;.get_element_size()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00202">InputArrayElement&lt; T &gt;.get_element_size()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00262">InputPatchElement&lt; T, IsGeneric, OutputStage &gt;.get_element_size()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00329">arm_gemm.get_gemm_method()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00054">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;.get_instance()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00056">DepthwiseImplementation&lt; TInput, TWeight, TOutput, OutputStage &gt;.get_instance()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00044">PoolingImplementation&lt; TInput, TOutput, OutputStage &gt;.get_is_supported()</a>, <a class="el" href="depthwise__implementation_8hpp_source.xhtml#l00046">DepthwiseImplementation&lt; TInput, TWeight, TOutput, OutputStage &gt;.get_is_supported()</a>, <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00033">arm_conv::depthwise::interleaves::quantized.get_storage_size()</a>, <a class="el" href="depthwise__strategies__common_8hpp_source.xhtml#l00064">DepthfirstStrategy&lt; __fp16, __fp16, __fp16, __fp16, typename DefaultOutputStage&lt; __fp16 &gt;::Type &gt;.get_storage_size()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00068">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;.get_storage_size()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00098">GenericDepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.get_storage_size()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00100">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;.get_storage_size()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00139">DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;.get_storage_size()</a>, <a class="el" href="depthwise__planar_8hpp_source.xhtml#l00176">PlanarStrategy&lt; uint8_t, int8_t &gt;.get_storage_size()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00229">GenericDepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.get_storage_size()</a>, <a class="el" href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00045">arm_conv::depthwise::interleaves.get_storage_size_generic()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00235">DepthwiseDepthfirstGeneric&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.get_working_size_per_thread()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00350">DepthwiseDepthfirst&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.get_working_size_per_thread()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00513">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;.get_working_size_per_thread()</a>, <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00309">arm_gemm.has_opt_gemm()</a>, <a class="el" href="_cpu_gemm_assembly_dispatch_8cpp_source.xhtml#l00692">CpuGemmAssemblyDispatch.has_opt_impl()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00193">GenericInputArrayElement&lt; T &gt;.initialise()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00208">InputArrayElement&lt; T &gt;.initialise()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00268">InputPatchElement&lt; T, IsGeneric, OutputStage &gt;.initialise()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00242">DepthwiseDepthfirstGeneric&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.initialise_working_space()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00359">DepthwiseDepthfirst&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.initialise_working_space()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00520">DepthwiseDepthfirstMultiplier&lt; TInput, TWeight, TOutput, TAccum, is_generic, OutputStage &gt;.initialise_working_space()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00106">arm_conv::pooling.is_supported()</a>, <a class="el" href="core_2utils_2logging_2_logger_8h_source.xhtml#l00162">Logger.log()</a>, <a class="el" href="_deep_copy_8h_source.xhtml#l00191">arm_compute::utils::memory.make_deep_unique()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00104">arm_compute.operator&lt;&lt;()</a>, <a class="el" href="generic__quantized__dot__product_8cpp_source.xhtml#l00056">arm_conv::depthwise::interleaves::quantized.pack_parameters()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00073">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum &gt;.pack_parameters()</a>, <a class="el" href="depthwise__strategies__common_8hpp_source.xhtml#l00076">DepthfirstStrategy&lt; __fp16, __fp16, __fp16, __fp16, typename DefaultOutputStage&lt; __fp16 &gt;::Type &gt;.pack_parameters()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00105">DepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;.pack_parameters()</a>, <a class="el" href="depthwise__depthfirst__generic_8hpp_source.xhtml#l00110">GenericDepthfirstStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.pack_parameters()</a>, <a class="el" href="depthwise__depthfirst_8hpp_source.xhtml#l00144">DepthwiseDepthfirstStrategy&lt; TInput, TWeight, TOutput, int32_t &gt;.pack_parameters()</a>, <a class="el" href="depthwise__planar_8hpp_source.xhtml#l00181">PlanarStrategy&lt; uint8_t, int8_t &gt;.pack_parameters()</a>, <a class="el" href="depthwise__depthfirst__multiplier_8hpp_source.xhtml#l00234">GenericDepthfirstMultiplierStrategy&lt; TInput, TWeight, TOutput, TAccum, OutputStage &gt;.pack_parameters()</a>, <a class="el" href="arm__conv_2depthwise_2interleaves_2generic_8cpp_source.xhtml#l00067">arm_conv::depthwise::interleaves.pack_parameters_generic()</a>, <a class="el" href="pooling__implementation_8hpp_source.xhtml#l00098">arm_conv::pooling.pooling()</a>, <a class="el" href="_i_post_op_8h_source.xhtml#l00144">PostOpList&lt; arm_compute::ITensorInfo * &gt;.push_back_op()</a>, <a class="el" href="quantize__wrapper_8hpp_source.xhtml#l00112">QuantizeWrapper&lt; To, Tr, Tgemm &gt;.QuantizeWrapper()</a>, <a class="el" href="_toolchain_support_8h_source.xhtml#l00269">arm_compute::support::cpp11.snprintf()</a>, <a class="el" href="_string_support_8h_source.xhtml#l00189">arm_compute::support::cpp11.stof()</a>, <a class="el" href="arm__compute_2core_2utils_2logging_2_helpers_8h_source.xhtml#l00048">arm_compute::logging.string_with_format()</a>, <a class="el" href="utils_2_type_printer_8h_source.xhtml#l00142">arm_compute.to_string()</a>, <a class="el" href="_n_e_o_n_2_helper_8h_source.xhtml#l00078">NESynthetizeFunction&lt; K &gt;.validate()</a>, <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00078">CLSynthetizeOperator&lt; ClGemmMatrixMultiplyReshapedOnlyRhsKernel &gt;.validate()</a>, and <a class="el" href="_c_l_2_helper_8h_source.xhtml#l00158">CLSynthetizeFunction&lt; K &gt;.validate()</a>.</p>

</div>
</div>
<a id="a2f8b815490a02d3feccad7c5472ba4e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f8b815490a02d3feccad7c5472ba4e2">&#9670;&nbsp;</a></span>BENCHMARK_RESULT_JSON_EXTENSION</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string BENCHMARK_RESULT_JSON_EXTENSION = &quot;gemmtuner_benchmark&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00461">461</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="affb1327b18bf08a379d19eef89cf1ed1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affb1327b18bf08a379d19eef89cf1ed1">&#9670;&nbsp;</a></span>default</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">default</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00668">668</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="ab0bede79c5f4cbed9c2cd932a0ace201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0bede79c5f4cbed9c2cd932a0ace201">&#9670;&nbsp;</a></span>dest</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dest</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00644">644</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="addressing_8cpp_source.xhtml#l00258">arm_conv::addressing.fill_patch_array_generic_kernel()</a>, <a class="el" href="addressing_8cpp_source.xhtml#l00032">arm_conv::addressing.fill_pointer_array()</a>, and <a class="el" href="addressing_8cpp_source.xhtml#l00088">arm_conv::addressing.fill_pointer_array_generic_kernel()</a>.</p>

</div>
</div>
<a id="ae8424a0c14384f40c0a9c89289e90262"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8424a0c14384f40c0a9c89289e90262">&#9670;&nbsp;</a></span>EXAMPLE_FILE_2_STRATEGY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary EXAMPLE_FILE_2_STRATEGY</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;=  {</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    <span class="stringliteral">&quot;benchmark_cl_gemm_native&quot;</span>: Strategy.Native,</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    <span class="stringliteral">&quot;benchmark_cl_gemm_reshaped_rhs_only&quot;</span>: Strategy.ReshapedOnlyRHS,</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    <span class="stringliteral">&quot;benchmark_cl_gemm_reshaped&quot;</span>: Strategy.Reshaped,</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00434">434</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a3c0f164b66e196f940f4b9e206d586d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c0f164b66e196f940f4b9e206d586d5">&#9670;&nbsp;</a></span>GEMM_CONFIG_FACTORY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary GEMM_CONFIG_FACTORY</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;=  {</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    Strategy.Native: NativeGEMMConfig,</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    Strategy.ReshapedOnlyRHS: ReshapedOnlyRHSGEMMConfig,</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    Strategy.Reshaped: ReshapedGEMMConfig,</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00426">426</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="abfd6c8b5e818f3a2a5dac6717b853018"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfd6c8b5e818f3a2a5dac6717b853018">&#9670;&nbsp;</a></span>GEMM_EXAMPLE_ARGS_FACTORY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary GEMM_EXAMPLE_ARGS_FACTORY</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;=  {</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    <span class="comment"># We ignore the data type field from GEMMParam as that is extracted separately</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    strategy: namedtuple(</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;        <span class="stringliteral">&quot;{}_Gemm_Example_Args&quot;</span>.format(strategy_name),</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;        GEMMParam._fields[:-1] + GEMM_CONFIG_FACTORY[strategy]._fields,</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    )</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    <span class="keywordflow">for</span> strategy_name, strategy <span class="keywordflow">in</span> Strategy.__members__.items()</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    <span class="keywordflow">if</span> strategy_name == strategy.name</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00450">450</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a696b6940cef01d03e1fc064d8be3727b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a696b6940cef01d03e1fc064d8be3727b">&#9670;&nbsp;</a></span>GEMMConfigT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">GEMMConfigT</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;=  Union[NativeGEMMConfig,</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;                    ReshapedOnlyRHSGEMMConfig, ReshapedGEMMConfig]</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00189">189</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a81ae9faedaa69e3e28e2960a0548df8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81ae9faedaa69e3e28e2960a0548df8d">&#9670;&nbsp;</a></span>help</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">help</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00648">648</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="_option_8h_source.xhtml#l00125">Option.set_help()</a>.</p>

</div>
</div>
<a id="afde8e18a788ccc92fc61cab298bca7e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afde8e18a788ccc92fc61cab298bca7e3">&#9670;&nbsp;</a></span>level</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">level</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00681">681</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="_exceptions_8cpp_source.xhtml#l00068">arm_compute::test::framework.operator&lt;&lt;()</a>, <a class="el" href="_exceptions_8cpp_source.xhtml#l00060">arm_compute::test::framework.operator&gt;&gt;()</a>, and <a class="el" href="_exceptions_8cpp_source.xhtml#l00100">arm_compute::test::framework.to_string()</a>.</p>

</div>
</div>
<a id="a05b240734aa0ab5756d163cc6b03d6e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05b240734aa0ab5756d163cc6b03d6e1">&#9670;&nbsp;</a></span>logging_level</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">logging_level = logging.DEBUG if args.debug else logging.INFO</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00680">680</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a6d8a64ff78fc562acbd80da81ed531b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8a64ff78fc562acbd80da81ed531b2">&#9670;&nbsp;</a></span>metavar</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">metavar</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00645">645</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a90eee7a4677ca8b1ed116364a24367f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90eee7a4677ca8b1ed116364a24367f9">&#9670;&nbsp;</a></span>parser</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">parser = argparse.ArgumentParser(description=&quot;CL GEMM Tuner&quot;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00640">640</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="_common_gemm_example_options_8cpp_source.xhtml#l00042">CommonGemmExampleOptions.CommonGemmExampleOptions()</a>, <a class="el" href="_common_graph_options_8cpp_source.xhtml#l00117">CommonGraphOptions.CommonGraphOptions()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00230">CommonGraphValidateOptions.CommonGraphValidateOptions()</a>, <a class="el" href="_common_options_8cpp_source.xhtml#l00040">CommonOptions.CommonOptions()</a>, <a class="el" href="graph__validate__utils_8h_source.xhtml#l00626">GraphValidateExample&lt; DepthwiseConvolutionLayer, DepthConvolutionOptions, DepthConvolutionVerifyAccessor &gt;.do_setup()</a>, <a class="el" href="main_8cpp_source.xhtml#l00096">main()</a>, and <a class="el" href="benchmark__examples_2_run_example_8cpp_source.xhtml#l00094">arm_compute::utils.run_example()</a>.</p>

</div>
</div>
<a id="ae81948490ddf54e80a22593640178350"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae81948490ddf54e80a22593640178350">&#9670;&nbsp;</a></span>required</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">required</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00652">652</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_access_window_8h_source.xhtml#l00047">arm_compute.adjust_down()</a>, and <a class="el" href="_i_access_window_8h_source.xhtml#l00063">arm_compute.adjust_up()</a>.</p>

</div>
</div>
<a id="acf7192c608527efb8f8dedf0a3f2e706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf7192c608527efb8f8dedf0a3f2e706">&#9670;&nbsp;</a></span>Strategy</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Strategy = Enum(&quot;Strategy&quot;, [&quot;Native&quot;, &quot;ReshapedOnlyRHS&quot;, &quot;Reshaped&quot;])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Types. </p>

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00041">41</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
<a id="a7aead736a07eaf25623ad7bfa1f0ee2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aead736a07eaf25623ad7bfa1f0ee2d">&#9670;&nbsp;</a></span>type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gemm_tuner_8py_source.xhtml#l00647">647</a> of file <a class="el" href="_gemm_tuner_8py_source.xhtml">GemmTuner.py</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a2b19960927373ea2b5afd6a4ccb654ac"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a2b19960927373ea2b5afd6a4ccb654ac">GemmTuner.main</a></div><div class="ttdeci">def main(args)</div><div class="ttdoc">Main.</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00593">GemmTuner.py:593</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a635fc68bfeadd9692faead4d667a90a9"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a635fc68bfeadd9692faead4d667a90a9">GemmTuner.extract_benchmark_results</a></div><div class="ttdeci">Generator[BenchmarkResult, None, None] extract_benchmark_results(Dict json_results, measurement_method=&quot;avg&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00488">GemmTuner.py:488</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_ab9bf6647cc58e534561aa91a422229e4"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#ab9bf6647cc58e534561aa91a422229e4">GemmTuner.parse_json</a></div><div class="ttdeci">def parse_json(dir_name)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00558">GemmTuner.py:558</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_ae93eefdf5d69cd7bbd361324c613dff3"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#ae93eefdf5d69cd7bbd361324c613dff3">GemmTuner.parse_benchmark_commandline</a></div><div class="ttdeci">Dict[str, str] parse_benchmark_commandline(str commandline)</div><div class="ttdoc">Functions.</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00468">GemmTuner.py:468</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_xhtml_a9c3303817ba653b5d1e78efb88d02bcf"><div class="ttname"><a href="namespacearm__compute_1_1utils.xhtml#a9c3303817ba653b5d1e78efb88d02bcf">arm_compute::utils::map</a></div><div class="ttdeci">void map(T &amp;tensor, bool blocking)</div><div class="ttdoc">Maps a tensor if needed.</div><div class="ttdef"><b>Definition:</b> <a href="utils_2_utils_8h_source.xhtml#l00212">Utils.h:212</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a70ce377ea8b5202ced8079196c6841ed"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a70ce377ea8b5202ced8079196c6841ed">GemmTuner.dump_json</a></div><div class="ttdeci">def dump_json(out_path, dict)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00582">GemmTuner.py:582</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a8fcf2ddd9a1d58b1b280f5c0aed71845"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a8fcf2ddd9a1d58b1b280f5c0aed71845">arm_compute::test::validation::input</a></div><div class="ttdeci">auto input</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_l_s_t_m_layer_quantized_8cpp_source.xhtml#l00486">LSTMLayerQuantized.cpp:486</a></div></div>
<div class="ttc" id="anamespace_gemm_tuner_xhtml_a118d1a9756d5cb110204180506ed8c99"><div class="ttname"><a href="namespace_gemm_tuner.xhtml#a118d1a9756d5cb110204180506ed8c99">GemmTuner.check_out_path</a></div><div class="ttdeci">def check_out_path(out_path)</div><div class="ttdef"><b>Definition:</b> <a href="_gemm_tuner_8py_source.xhtml#l00566">GemmTuner.py:566</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_gemm_tuner.xhtml">GemmTuner</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:34 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
