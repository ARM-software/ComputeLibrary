<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/NEON/DetectionPostProcessLayer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_n_e_o_n_2_detection_post_process_layer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DetectionPostProcessLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_e_o_n_2_detection_post_process_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2019-2021 Arm Limited.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_n_e_detection_post_process_layer_8h.xhtml">arm_compute/runtime/NEON/functions/NEDetectionPostProcessLayer.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="runtime_2_tensor_8h.xhtml">arm_compute/runtime/Tensor.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_allocator_8h.xhtml">arm_compute/runtime/TensorAllocator.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_accessor_8h.xhtml">tests/NEON/Accessor.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_padding_calculator_8h.xhtml">tests/PaddingCalculator.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;tests/datasets/ShapeDatasets.h&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_asserts_8h.xhtml">tests/framework/Asserts.h</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tests_2framework_2_macros_8h.xhtml">tests/framework/Macros.h</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_datasets_8h.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_validation_8h.xhtml">tests/validation/Validation.h</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>test</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>validation</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> U, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(U &amp;&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keyword">const</span> std::vector&lt;T&gt; &amp;v)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::memcpy(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.data(), v.data(), <span class="keyword">sizeof</span>(T) * v.size());</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> U, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> quantize_and_fill_tensor(U &amp;&amp;<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>, <span class="keyword">const</span> std::vector&lt;T&gt; &amp;v)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    QuantizationInfo     qi = <a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.quantization_info();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    std::vector&lt;uint8_t&gt; quantized;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    quantized.reserve(v.size());</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">auto</span> elem : v)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        quantized.emplace_back(<a class="code" href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">quantize_qasymm8</a>(elem, qi));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    std::memcpy(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a>.data(), quantized.data(), <span class="keyword">sizeof</span>(uint8_t) * quantized.size());</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">inline</span> QuantizationInfo qinfo_scaleoffset_from_minmax(<span class="keyword">const</span> <span class="keywordtype">float</span> min, <span class="keyword">const</span> <span class="keywordtype">float</span> max)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">int</span>           <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = 0;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">float</span>         <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>  = 0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> uint8_t qmin   = std::numeric_limits&lt;uint8_t&gt;::min();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">const</span> uint8_t qmax   = std::numeric_limits&lt;uint8_t&gt;::max();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>   f_qmin = qmin;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span>   f_qmax = qmax;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Continue only if [min,max] is a valid range and not a point</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span>(min != max)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>                       = (max - min) / (f_qmax - f_qmin);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> offset_from_min = f_qmin - min / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> offset_from_max = f_qmax - max / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> offset_from_min_error = std::abs(f_qmin) + std::abs(min / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> offset_from_max_error = std::abs(f_qmax) + std::abs(max / <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">float</span> f_offset              = offset_from_min_error &lt; offset_from_max_error ? offset_from_min : offset_from_max;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        uint8_t uint8_offset = 0;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">if</span>(f_offset &lt; f_qmin)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            uint8_offset = qmin;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(f_offset &gt; f_qmax)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            uint8_offset = qmax;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            uint8_offset = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(<a class="code" href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">support::cpp11::round</a>(f_offset));</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a> = uint8_offset;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> QuantizationInfo(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">scale</a>, <a class="code" href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, <span class="keyword">const</span> SimpleTensor&lt;float&gt; &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           <span class="keyword">const</span> SimpleTensor&lt;float&gt; &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <span class="keyword">const</span> SimpleTensor&lt;float&gt; &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <span class="keyword">const</span> SimpleTensor&lt;float&gt; &amp;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                           AbsoluteTolerance&lt;float&gt; tolerance_boxes = AbsoluteTolerance&lt;float&gt;(0.1f), AbsoluteTolerance&lt;float&gt; tolerance_others = AbsoluteTolerance&lt;float&gt;(0.1f))</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> box_encoding     = create_tensor&lt;Tensor&gt;(TensorShape(4U, 6U, 1U), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, qinfo_scaleoffset_from_minmax(-1.0f, 1.0f));</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> class_prediction = create_tensor&lt;Tensor&gt;(TensorShape(3U, 6U, 1U), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, qinfo_scaleoffset_from_minmax(0.0f, 1.0f));</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a> anchors          = create_tensor&lt;Tensor&gt;(TensorShape(4U, 6U), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a>, 1, qinfo_scaleoffset_from_minmax(0.0f, 100.5f));</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    box_encoding.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    class_prediction.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    anchors.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    std::vector&lt;float&gt; box_encoding_vector =</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        0.0f, 1.0f, 0.0f, 0.0f,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        0.0f, -1.0f, 0.0f, 0.0f,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        0.0f, 0.0f, 0.0f, 0.0f,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        0.0f, 0.0f, 0.0f, 0.0f,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        0.0f, 1.0f, 0.0f, 0.0f,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        0.0f, 0.0f, 0.0f, 0.0f</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    };</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    std::vector&lt;float&gt; class_prediction_vector =</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        0.0f, 0.7f, 0.68f,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        0.0f, 0.6f, 0.5f,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        0.0f, 0.9f, 0.83f,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        0.0f, 0.91f, 0.97f,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        0.0f, 0.5f, 0.4f,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        0.0f, 0.31f, 0.22f</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    };</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::vector&lt;float&gt; anchors_vector =</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        0.4f, 0.4f, 1.1f, 1.1f,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        0.4f, 0.4f, 1.1f, 1.1f,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        0.4f, 0.4f, 1.1f, 1.1f,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        0.4f, 10.4f, 1.1f, 1.1f,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        0.4f, 10.4f, 1.1f, 1.1f,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        0.4f, 100.4f, 1.1f, 1.1f</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    };</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Fill the tensors with random pre-generated values</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">data_type</a> == <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(Accessor(box_encoding), box_encoding_vector);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(Accessor(class_prediction), class_prediction_vector);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(Accessor(anchors), anchors_vector);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        quantize_and_fill_tensor(Accessor(box_encoding), box_encoding_vector);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        quantize_and_fill_tensor(Accessor(class_prediction), class_prediction_vector);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        quantize_and_fill_tensor(Accessor(anchors), anchors_vector);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// Determine the output through the Compute Library operator</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a>                      output_boxes;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a>                      output_classes;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a>                      output_scores;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">Tensor</a>                      num_detection;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    NEDetectionPostProcessLayer detection;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    detection.configure(&amp;box_encoding, &amp;class_prediction, &amp;anchors, &amp;output_boxes, &amp;output_classes, &amp;output_scores, &amp;num_detection, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    output_boxes.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    output_classes.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    output_scores.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    num_detection.allocator()-&gt;allocate();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Run the kernel</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    detection.run();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// Validate against the expected output</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">// Validate output boxes</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(Accessor(output_boxes), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, tolerance_boxes);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">// Validate detection classes</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(Accessor(output_classes), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, tolerance_others);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Validate detection scores</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(Accessor(output_scores), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, tolerance_others);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">// Validate num detections</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">validate</a>(Accessor(num_detection), <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, tolerance_others);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab83a154582d05c0a0428018a5788c920">TEST_SUITE</a>(NEON)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab83a154582d05c0a0428018a5788c920">TEST_SUITE</a>(DetectionPostProcessLayer)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">// *INDENT-OFF*</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">// clang-format off</span></div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9319d62cd0f2627f92929d302d685f38">  186</a></span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">DATA_TEST_CASE</a>(Validate, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">zip</a>(</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        framework::dataset::<a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">make</a>(&quot;BoxEncodingsInfo&quot;, { <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 3<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),  <span class="comment">// Mismatching batch_size</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>), <span class="comment">// Unsupported data type</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>), <span class="comment">// Wrong Detection Info</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>), <span class="comment">// Wrong boxes dimensions</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 10<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>, 1<a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">U</a>), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>)}), <span class="comment">// Wrong score dimension</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;ClassPredsInfo&quot;</span>,{ <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(3U ,10U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>)})),</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;AnchorsInfo&quot;</span>,{ <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                                <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>(4U, 10U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>)})),</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;OutputBoxInfo&quot;</span>, { TensorInfo(TensorShape(4U, 3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                                TensorInfo(TensorShape(4U, 3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                                TensorInfo(TensorShape(4U, 3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">DataType::S8</a>),</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                                TensorInfo(TensorShape(4U, 3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                                TensorInfo(TensorShape(1U, 5U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                                TensorInfo(TensorShape(4U, 3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)})),</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;OuputClassesInfo&quot;</span>,{ TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                                TensorInfo(TensorShape(6U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)})),</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;OutputScoresInfo&quot;</span>,{ TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                                TensorInfo(TensorShape(3U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                TensorInfo(TensorShape(6U, 1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)})),</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;NumDetectionsInfo&quot;</span>,{ TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                                TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                                TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                                TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>),</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                                TensorInfo(TensorShape(1U), 1, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>)})),</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;DetectionPostProcessLayerInfo&quot;</span>,{ DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f,0.1f,0.1f,0.1f}),</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                                DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f,0.1f,0.1f,0.1f}),</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                                DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f,0.1f,0.1f,0.1f}),</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                                DetectionPostProcessLayerInfo(3, 1, 0.0f, 1.5f, 2, {0.0f,0.1f,0.1f,0.1f}),</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                                DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f,0.1f,0.1f,0.1f}),</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                                DetectionPostProcessLayerInfo(3, 1, 0.0f, 0.5f, 2, {0.1f,0.1f,0.1f,0.1f})})),</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <a class="code" href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">framework::dataset::make</a>(<span class="stringliteral">&quot;Expected&quot;</span>, {<span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span> })),</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        box_encodings_info, classes_info, anchors_info, output_boxes_info, output_classes_info,output_scores_info, num_detection_info, detect_info, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>)</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">const</span> Status status = <a class="code" href="classarm__compute_1_1_n_e_detection_post_process_layer.xhtml#a08744faa3f68379fa82bcbd96bbec691">NEDetectionPostProcessLayer::validate</a>(&amp;box_encodings_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            &amp;classes_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            &amp;anchors_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            &amp;output_boxes_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            &amp;output_classes_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>),</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            &amp;output_scores_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>), &amp;num_detection_info.clone()-&gt;set_is_resizable(<span class="keyword">false</span>), detect_info);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">ARM_COMPUTE_EXPECT</a>(<span class="keywordtype">bool</span>(status) == <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">expected</a>, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">framework::LogLevel::ERRORS</a>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">// clang-format on</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">// *INDENT-ON*</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab83a154582d05c0a0428018a5788c920">TEST_SUITE</a>(F32)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Float_general, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, -0.15, 0.95, 0.95, -0.15, 99.85, 0.95, 100.95 });</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.97f, 0.95f, 0.31f });</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 3.f });</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="comment">// Run base test</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Float_fast, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>,</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                                                       <span class="keyword">false</span> <span class="comment">/*use_regular_nms*/</span>, 1 <span class="comment">/*detections_per_class*/</span>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, -0.15, 0.95, 0.95, -0.15, 99.85, 0.95, 100.95 });</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.97f, 0.95f, 0.31f });</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 3.f });</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="comment">// Run base test</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Float_regular, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;{</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>,</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                                                       <span class="keyword">true</span> <span class="comment">/*use_regular_nms*/</span>, 1 <span class="comment">/*detections_per_class*/</span>);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, 9.85, 0.95, 10.95, 0.0f, 0.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.97f, 0.91f, 0.0f });</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 2.f });</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="comment">// Run test</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// F32</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab83a154582d05c0a0428018a5788c920">TEST_SUITE</a>(QASYMM8)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Quantized_general, framework::<a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">DatasetMode</a>::ALL)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, -0.15, 0.95, 0.95, -0.15, 99.85, 0.95, 100.95 });</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.97f, 0.95f, 0.31f });</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 3.f });</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">// Run test</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, AbsoluteTolerance&lt;float&gt;(0.3f));</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Quantized_fast, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>,</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                                                       <span class="keyword">false</span> <span class="comment">/*use_regular_nms*/</span>, 1 <span class="comment">/*detections_per_class*/</span>);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, -0.15, 0.95, 0.95, -0.15, 99.85, 0.95, 100.95 });</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.97f, 0.95f, 0.31f });</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 3.f });</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="comment">// Run base test</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, AbsoluteTolerance&lt;float&gt;(0.3f));</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">TEST_CASE</a>(Quantized_regular, <a class="code" href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">framework::DatasetMode::ALL</a>)</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;{</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    DetectionPostProcessLayerInfo <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a> = DetectionPostProcessLayerInfo(3 <span class="comment">/*max_detections*/</span>, 1 <span class="comment">/*max_classes_per_detection*/</span>, 0.0 <span class="comment">/*nms_score_threshold*/</span>,</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                                                       0.5 <span class="comment">/*nms_iou_threshold*/</span>, 2 <span class="comment">/*num_classes*/</span>, { 11.0, 11.0, 6.0, 6.0 } <span class="comment">/*scale*/</span>,</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                                                       <span class="keyword">true</span> <span class="comment">/*use_regular_nms*/</span>, 1 <span class="comment">/*detections_per_class*/</span>);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="comment">// Fill expected detection boxes</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>(TensorShape(4U, 3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, std::vector&lt;float&gt; { -0.15, 9.85, 0.95, 10.95, -0.15, 9.85, 0.95, 10.95, 0.0f, 0.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="comment">// Fill expected detection classes</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, std::vector&lt;float&gt; { 1.0f, 0.0f, 0.0f });</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="comment">// Fill expected detection scores</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>(TensorShape(3U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, std::vector&lt;float&gt; { 0.95f, 0.91f, 0.0f });</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="comment">// Fill expected num detections</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    SimpleTensor&lt;float&gt; <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>(TensorShape(1U), <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">DataType::F32</a>);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">fill_tensor</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, std::vector&lt;float&gt; { 2.f });</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">// Run test</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">base_test_case</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">DataType::QASYMM8</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">expected_output_boxes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">expected_output_classes</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">expected_output_scores</a>, <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">expected_num_detection</a>, AbsoluteTolerance&lt;float&gt;(0.3f));</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// QASYMM8</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// DetectionPostProcessLayer</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">TEST_SUITE_END</a>() <span class="comment">// Neon</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;} <span class="comment">// namespace validation</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;} <span class="comment">// namespace test</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;} <span class="comment">// namespace arm_compute</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_datasets_8h_xhtml"><div class="ttname"><a href="_datasets_8h.xhtml">Datasets.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a512eb649fdb115f2dee5df9f1d156b16"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a512eb649fdb115f2dee5df9f1d156b16">arm_compute::test::validation::TEST_SUITE_END</a></div><div class="ttdeci">TEST_SUITE_END() FIXTURE_DATA_TEST_CASE(RunSmall</div><div class="ttdoc">[CLActivationLayer Test snippet]</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_dequantization_layer_8cpp_source.xhtml#l00111">DequantizationLayer.cpp:111</a></div></div>
<div class="ttc" id="a_padding_calculator_8h_xhtml"><div class="ttname"><a href="_padding_calculator_8h.xhtml">PaddingCalculator.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ad1506e225a5eac0b0b0a4b98b38750df"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ad1506e225a5eac0b0b0a4b98b38750df">arm_compute::test::validation::TEST_CASE</a></div><div class="ttdeci">TEST_CASE(FusedActivation, framework::DatasetMode::ALL)</div><div class="ttdoc">Validate fused activation expecting the following behaviours:</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_addition_8cpp_source.xhtml#l00093">ArithmeticAddition.cpp:93</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a119467838ca12a1bfa8817c6af573541"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a119467838ca12a1bfa8817c6af573541">arm_compute::test::validation::expected_num_detection</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; expected_num_detection(TensorShape(1U), DataType::F32)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a146990bdb7bc1df6e90e6dca4eaa764c"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a146990bdb7bc1df6e90e6dca4eaa764c">arm_compute::test::validation::DATA_TEST_CASE</a></div><div class="ttdeci">DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QSYMM16, QuantizationInfo(1.f/32768.f, 0)), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LOGISTIC), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::SQRT), })), framework::dataset::make(&quot;Expected&quot;, { false, true, true, true, false, false, true, true, false })), input_info, output_info, act_info, expected)</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_activation_layer_8cpp_source.xhtml#l00100">ActivationLayer.cpp:100</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6af14462d71aa842202c3e4b272c7ec924">arm_compute::DataType::QASYMM8</a></div><div class="ttdeci">@ QASYMM8</div><div class="ttdoc">quantized, asymmetric fixed-point 8-bit number unsigned</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00039">TensorShape.h:39</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1support_1_1cpp11_xhtml_ab71c35ca207b916a9f8b0336ab88484e"><div class="ttname"><a href="namespacearm__compute_1_1support_1_1cpp11.xhtml#ab71c35ca207b916a9f8b0336ab88484e">arm_compute::support::cpp11::round</a></div><div class="ttdeci">T round(T value)</div><div class="ttdoc">Round floating-point value with half value rounding away from zero.</div><div class="ttdef"><b>Definition:</b> <a href="_toolchain_support_8h_source.xhtml#l00184">ToolchainSupport.h:184</a></div></div>
<div class="ttc" id="aarm__compute_2core_2_types_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ab8cef8b31b552b532a14ab8815e06285"><div class="ttname"><a href="namespacearm__compute.xhtml#ab8cef8b31b552b532a14ab8815e06285">arm_compute::quantize_qasymm8</a></div><div class="ttdeci">uint8_t quantize_qasymm8(float value, const INFO_TYPE &amp;qinfo, RoundingPolicy rounding_policy=RoundingPolicy::TO_NEAREST_UP)</div><div class="ttdoc">Quantize a value given an unsigned 8-bit asymmetric quantization scheme.</div><div class="ttdef"><b>Definition:</b> <a href="_quantization_info_8h_source.xhtml#l00303">QuantizationInfo.h:303</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a1985474c4ddb551501f96049c6b00fee"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a1985474c4ddb551501f96049c6b00fee">arm_compute::test::validation::base_test_case</a></div><div class="ttdeci">base_test_case(info, DataType::QASYMM8, expected_output_boxes, expected_output_classes, expected_output_scores, expected_num_detection, AbsoluteTolerance&lt; float &gt;(0.3f))</div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6aafb0fced528eaac5fe170b763cda5975">arm_compute::DataType::S8</a></div><div class="ttdeci">@ S8</div><div class="ttdoc">signed 8-bit number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a975901e0b4d6e387107c4d785c22edd5"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a975901e0b4d6e387107c4d785c22edd5">arm_compute::test::validation::validate</a></div><div class="ttdeci">validate(CLAccessor(output_state), expected_output)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1utils_1_1cast_xhtml_a81cf6107131a3583e2b0b762cb9c2862"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml#a81cf6107131a3583e2b0b762cb9c2862">arm_compute::utils::cast::U</a></div><div class="ttdeci">U</div><div class="ttdef"><b>Definition:</b> <a href="_saturate_cast_8h_source.xhtml#l00064">SaturateCast.h:64</a></div></div>
<div class="ttc" id="a_tensor_allocator_8h_xhtml"><div class="ttname"><a href="_tensor_allocator_8h.xhtml">TensorAllocator.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa5fb1f955b45e38e31789286a1790398d">arm_compute::test::framework::DatasetMode::ALL</a></div><div class="ttdeci">@ ALL</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a90b43fea352c7553eca7f18a358ee13d"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a90b43fea352c7553eca7f18a358ee13d">arm_compute::test::validation::expected_output_boxes</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; expected_output_boxes(TensorShape(4U, 3U), DataType::F32)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3c8562a1f05d23f44aed87545b7892cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3c8562a1f05d23f44aed87545b7892cf">arm_compute::test::validation::ARM_COMPUTE_EXPECT</a></div><div class="ttdeci">ARM_COMPUTE_EXPECT(has_error==expected, framework::LogLevel::ERRORS)</div></div>
<div class="ttc" id="a_n_e_detection_post_process_layer_8h_xhtml"><div class="ttname"><a href="_n_e_detection_post_process_layer_8h.xhtml">NEDetectionPostProcessLayer.h</a></div></div>
<div class="ttc" id="a_asserts_8h_xhtml"><div class="ttname"><a href="_asserts_8h.xhtml">Asserts.h</a></div></div>
<div class="ttc" id="a_accessor_8h_xhtml"><div class="ttname"><a href="_accessor_8h.xhtml">Accessor.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1detail_xhtml_a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742"><div class="ttname"><a href="namespacearm__compute_1_1detail.xhtml#a2c0ee4eb5bed32d6fb8358d113995aa4af20fc369b14cb5d40e695dab98bcb742">arm_compute::detail::ObjectType::Tensor</a></div><div class="ttdeci">@ Tensor</div></div>
<div class="ttc" id="asrc_2core_2_c_l_2cl__kernels_2_helpers_8h_xhtml_a009469e4d9b8fce3b6d5e97d2077827d"><div class="ttname"><a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h.xhtml#a009469e4d9b8fce3b6d5e97d2077827d">offset</a></div><div class="ttdeci">__global uchar * offset(const Image *img, int x, int y)</div><div class="ttdoc">Get the pointer position of a Image.</div><div class="ttdef"><b>Definition:</b> <a href="src_2core_2_c_l_2cl__kernels_2_helpers_8h_source.xhtml#l01112">helpers.h:1112</a></div></div>
<div class="ttc" id="atests_2framework_2_macros_8h_xhtml"><div class="ttname"><a href="tests_2framework_2_macros_8h.xhtml">Macros.h</a></div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a5555e1497e9b84ade322d8ad8b503598"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a5555e1497e9b84ade322d8ad8b503598">tensor</a></div><div class="ttdeci">CLTensor * tensor</div><div class="ttdoc">Pointer to the auxiliary tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00066">ClWorkloadRuntime.cpp:66</a></div></div>
<div class="ttc" id="aruntime_2_tensor_8h_xhtml"><div class="ttname"><a href="runtime_2_tensor_8h.xhtml">Tensor.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_1_1dataset_xhtml_a352791fb808d42a82ad70df5efa3508b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework_1_1dataset.xhtml#a352791fb808d42a82ad70df5efa3508b">arm_compute::test::framework::dataset::make</a></div><div class="ttdeci">std::enable_if&lt; is_container&lt; T &gt;::value, ContainerDataset&lt; T &gt; &gt;::type make(std::string name, T &amp;&amp;values)</div><div class="ttdoc">Helper function to create a ContainerDataset.</div><div class="ttdef"><b>Definition:</b> <a href="_container_dataset_8h_source.xhtml#l00160">ContainerDataset.h:160</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a5f5b6c4337eac9e2e0046ca2304d80dc"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a5f5b6c4337eac9e2e0046ca2304d80dc">arm_compute::test::validation::data_type</a></div><div class="ttdeci">data_type</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_cast_8cpp_source.xhtml#l00203">Cast.cpp:203</a></div></div>
<div class="ttc" id="a_validation_8h_xhtml"><div class="ttname"><a href="_validation_8h.xhtml">Validation.h</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a6a5eef7d8485a2b8c04bf9b4638a90e9"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6a5eef7d8485a2b8c04bf9b4638a90e9">arm_compute::test::validation::fill_tensor</a></div><div class="ttdeci">fill_tensor(input_to_input_weights, std::vector&lt; uint8_t &gt;{ 122, 130, 124, 134, 120, 122, 134, 134 })</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a2d31907a71286c53189967ebcfdbbd90"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a2d31907a71286c53189967ebcfdbbd90">arm_compute::test::validation::expected_output_classes</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; expected_output_classes(TensorShape(3U), DataType::F32)</div></div>
<div class="ttc" id="aclassarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor's metadata.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00043">TensorInfo.h:43</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a96f9e78d0c2a93f0e3a876eeae4be4b0"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a96f9e78d0c2a93f0e3a876eeae4be4b0">arm_compute::test::validation::zip</a></div><div class="ttdeci">zip(zip(framework::dataset::make(&quot;Weights&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 1U), 1, DataType::F32), }), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(5U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false}))</div></div>
<div class="ttc" id="aclassarm__compute_1_1_n_e_detection_post_process_layer_xhtml_a08744faa3f68379fa82bcbd96bbec691"><div class="ttname"><a href="classarm__compute_1_1_n_e_detection_post_process_layer.xhtml#a08744faa3f68379fa82bcbd96bbec691">arm_compute::NEDetectionPostProcessLayer::validate</a></div><div class="ttdeci">static Status validate(const ITensorInfo *input_box_encoding, const ITensorInfo *input_class_score, const ITensorInfo *input_anchors, ITensorInfo *output_boxes, ITensorInfo *output_classes, ITensorInfo *output_scores, ITensorInfo *num_detection, DetectionPostProcessLayerInfo info=DetectionPostProcessLayerInfo())</div><div class="ttdoc">Static function to check if given info will lead to a valid configuration of NEDetectionPostProcessLa...</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_detection_post_process_layer_8cpp_source.xhtml#l00074">NEDetectionPostProcessLayer.cpp:74</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_aca264ca53b0835cc6fa6625c899667cb"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#aca264ca53b0835cc6fa6625c899667cb">arm_compute::test::validation::expected_output_scores</a></div><div class="ttdeci">SimpleTensor&lt; float &gt; expected_output_scores(TensorShape(3U), DataType::F32)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a4f12b7902ae53e3898b2ab779f962340"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a4f12b7902ae53e3898b2ab779f962340">arm_compute::test::validation::scale</a></div><div class="ttdeci">NEScale scale</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_n_e_o_n_2_scale_8cpp_source.xhtml#l00272">Scale.cpp:272</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2023 Arm Limited.</div><div class="ttdef"><b>Definition:</b> <a href="introduction_8dox_source.xhtml#l00024">introduction.dox:24</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ab83a154582d05c0a0428018a5788c920"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab83a154582d05c0a0428018a5788c920">arm_compute::test::validation::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(QASYMM8_to_F32) FIXTURE_DATA_TEST_CASE(RunSmall</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_a3b69631535313e83809cd7746027cc62"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3b69631535313e83809cd7746027cc62">arm_compute::test::validation::expected</a></div><div class="ttdeci">expected</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_batch_normalization_layer_8cpp_source.xhtml#l00166">BatchNormalizationLayer.cpp:166</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a44ad4ef5a76e6aa6fb3e3fa079a54fda">arm_compute::DataType::F32</a></div><div class="ttdeci">@ F32</div><div class="ttdoc">32-bit floating-point number</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_a7edf31944a6144ffd493d2f9a7bfb5cf"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf">arm_compute::test::framework::DatasetMode</a></div><div class="ttdeci">DatasetMode</div><div class="ttdoc">Possible dataset modes.</div><div class="ttdef"><b>Definition:</b> <a href="_dataset_modes_8h_source.xhtml#l00040">DatasetModes.h:40</a></div></div>
<div class="ttc" id="anamespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types.</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_types_8h_source.xhtml#l00079">Types.h:79</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1framework_xhtml_aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9a6f3a603fac4d817f1848c3173b243b57">arm_compute::test::framework::LogLevel::ERRORS</a></div><div class="ttdeci">@ ERRORS</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_0538a82dae0483a21d0f1e9d7e0a45c6.xhtml">NEON</a></li><li class="navelem"><a class="el" href="_n_e_o_n_2_detection_post_process_layer_8cpp.xhtml">DetectionPostProcessLayer.cpp</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:20 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
