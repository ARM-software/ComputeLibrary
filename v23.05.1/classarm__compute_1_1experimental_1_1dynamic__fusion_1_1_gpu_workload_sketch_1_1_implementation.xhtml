<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GpuWorkloadSketch::Implementation Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GpuWorkloadSketch::Implementation Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Internal implementation of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a>.  
 <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf94eb610fe8006b99837d880e4e7ac5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">Implementation</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a>)</td></tr>
<tr class="memdesc:acf94eb610fe8006b99837d880e4e7ac5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#acf94eb610fe8006b99837d880e4e7ac5">More...</a><br /></td></tr>
<tr class="separator:acf94eb610fe8006b99837d880e4e7ac5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef21b4830ba8e69ca71f43f00748730"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#afef21b4830ba8e69ca71f43f00748730">Implementation</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl)=delete</td></tr>
<tr class="memdesc:afef21b4830ba8e69ca71f43f00748730"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copy constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#afef21b4830ba8e69ca71f43f00748730">More...</a><br /></td></tr>
<tr class="separator:afef21b4830ba8e69ca71f43f00748730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf80439a5c87912150e770e20d2c7d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">operator=</a> (const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;impl)=delete</td></tr>
<tr class="memdesc:aeaf80439a5c87912150e770e20d2c7d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeaf80439a5c87912150e770e20d2c7d6">More...</a><br /></td></tr>
<tr class="separator:aeaf80439a5c87912150e770e20d2c7d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8346261a7f98cf2e9c7794996f5f96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7f8346261a7f98cf2e9c7794996f5f96">Implementation</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl)=default</td></tr>
<tr class="memdesc:a7f8346261a7f98cf2e9c7794996f5f96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be move constructed.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7f8346261a7f98cf2e9c7794996f5f96">More...</a><br /></td></tr>
<tr class="separator:a7f8346261a7f98cf2e9c7794996f5f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab486961b3c3a47b1247b179403e7e707"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab486961b3c3a47b1247b179403e7e707">operator=</a> (<a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;impl)=default</td></tr>
<tr class="memdesc:ab486961b3c3a47b1247b179403e7e707"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow instances of this class to be moved.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab486961b3c3a47b1247b179403e7e707">More...</a><br /></td></tr>
<tr class="separator:ab486961b3c3a47b1247b179403e7e707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d6e63adc08ff38e747e2884d4f4cef"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a> () const</td></tr>
<tr class="memdesc:af5d6e63adc08ff38e747e2884d4f4cef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get workload context.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">More...</a><br /></td></tr>
<tr class="separator:af5d6e63adc08ff38e747e2884d4f4cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a99846286646c8e36726c50407b5c3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a> () const</td></tr>
<tr class="memdesc:a53a99846286646c8e36726c50407b5c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component graph.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">More...</a><br /></td></tr>
<tr class="separator:a53a99846286646c8e36726c50407b5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b2d6961c405c49f005fbc77aba3733a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">component_graph</a> ()</td></tr>
<tr class="memdesc:a7b2d6961c405c49f005fbc77aba3733a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get component graph.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a7b2d6961c405c49f005fbc77aba3733a">More...</a><br /></td></tr>
<tr class="separator:a7b2d6961c405c49f005fbc77aba3733a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca25ed142be5cb241f375c6f79638e0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">operator_group</a> () const</td></tr>
<tr class="memdesc:aeca25ed142be5cb241f375c6f79638e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get operator group.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aeca25ed142be5cb241f375c6f79638e0">More...</a><br /></td></tr>
<tr class="separator:aeca25ed142be5cb241f375c6f79638e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab05bc2988232ebd54d7a2f66526469fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">operator_group</a> ()</td></tr>
<tr class="memdesc:ab05bc2988232ebd54d7a2f66526469fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get operator group.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#ab05bc2988232ebd54d7a2f66526469fa">More...</a><br /></td></tr>
<tr class="separator:ab05bc2988232ebd54d7a2f66526469fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea42870fd33398b3d52774719e843297"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">allocate_new_tensor_id</a> ()</td></tr>
<tr class="separator:aea42870fd33398b3d52774719e843297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a503d1467801eeb14035d6421c39e74f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">generate_source_code</a> () const</td></tr>
<tr class="memdesc:a503d1467801eeb14035d6421c39e74f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> from the workload sketch.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a503d1467801eeb14035d6421c39e74f1">More...</a><br /></td></tr>
<tr class="separator:a503d1467801eeb14035d6421c39e74f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57128473b45c636d96d321805f217e79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">create_virtual_tensor</a> ()</td></tr>
<tr class="memdesc:a57128473b45c636d96d321805f217e79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a57128473b45c636d96d321805f217e79">More...</a><br /></td></tr>
<tr class="separator:a57128473b45c636d96d321805f217e79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa91b668c6dca5294415d9d270f500c25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aa91b668c6dca5294415d9d270f500c25">create_auxiliary_tensor</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;<a class="el" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>)</td></tr>
<tr class="memdesc:aa91b668c6dca5294415d9d270f500c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aa91b668c6dca5294415d9d270f500c25">More...</a><br /></td></tr>
<tr class="separator:aa91b668c6dca5294415d9d270f500c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f7f326479ca44799448f8163493850"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a22f7f326479ca44799448f8163493850">register_memory_descriptor</a> (const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;info, const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml">MemoryDescriptor</a> &amp;mem_desc)</td></tr>
<tr class="memdesc:a22f7f326479ca44799448f8163493850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register memory descriptor of a tensor info.  <a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a22f7f326479ca44799448f8163493850">More...</a><br /></td></tr>
<tr class="separator:a22f7f326479ca44799448f8163493850"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Internal implementation of <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a>. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00043">43</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="acf94eb610fe8006b99837d880e4e7ac5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf94eb610fe8006b99837d880e4e7ac5">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a> *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>global workload creation context </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00050">50</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        : _context{ <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">context</a> },</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;          _comp_services{},</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;          _component_graph{ &amp;_comp_services },</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;          _operator_group{},</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          _managed_tensor_info_list{ std::vector&lt;std::unique_ptr&lt;TensorInfo&gt;&gt;() },</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          _mem_map{}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00069">GpuWorkloadSketch::Implementation::context()</a>.</p>

</div>
</div>
<a id="afef21b4830ba8e69ca71f43f00748730"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afef21b4830ba8e69ca71f43f00748730">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copy constructed. </p>

</div>
</div>
<a id="a7f8346261a7f98cf2e9c7794996f5f96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8346261a7f98cf2e9c7794996f5f96">&#9670;&nbsp;</a></span>Implementation() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be move constructed. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aea42870fd33398b3d52774719e843297"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea42870fd33398b3d52774719e843297">&#9670;&nbsp;</a></span>allocate_new_tensor_id()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml#a1fafaeb6e3ab8c0bc772532cc3fcff1a">ITensorInfo::Id</a> allocate_new_tensor_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00093">93</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> ++_next_id;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00129">GpuWorkloadSketch::Implementation::create_auxiliary_tensor()</a>, and <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00110">GpuWorkloadSketch::Implementation::create_virtual_tensor()</a>.</p>

</div>
</div>
<a id="a7b2d6961c405c49f005fbc77aba3733a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b2d6961c405c49f005fbc77aba3733a">&#9670;&nbsp;</a></span>component_graph() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; component_graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get component graph. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00079">79</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a53a99846286646c8e36726c50407b5c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53a99846286646c8e36726c50407b5c3">&#9670;&nbsp;</a></span>component_graph() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml">GpuKernelComponentGraph</a>&amp; component_graph </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get component graph. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00074">74</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> _component_graph;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00102">GpuWorkloadSketch::Implementation::generate_source_code()</a>.</p>

</div>
</div>
<a id="af5d6e63adc08ff38e747e2884d4f4cef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d6e63adc08ff38e747e2884d4f4cef">&#9670;&nbsp;</a></span>context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml#a5900a01b0597e1db0d6b7522e94ddbf1">Context</a>* context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get workload context. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00069">69</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> _context;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00050">GpuWorkloadSketch::Implementation::Implementation()</a>.</p>

</div>
</div>
<a id="aa91b668c6dca5294415d9d270f500c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa91b668c6dca5294415d9d270f500c25">&#9670;&nbsp;</a></span>create_auxiliary_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* create_auxiliary_tensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created auxiliary tensor info object pointer Create an auxiliary (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor_info</td><td><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> to copy from</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created auxiliary tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00129">129</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keyword">auto</span> uptr = std::make_unique&lt;TensorInfo&gt;(<a class="code" href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        uptr-&gt;set_id(<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">allocate_new_tensor_id</a>());</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a22f7f326479ca44799448f8163493850">register_memory_descriptor</a>(*uptr, MemoryDescriptor{ <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">MemoryType::Auxiliary</a>, AuxMemoryInfo{ uptr-&gt;total_size() } });</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        _managed_tensor_info_list.emplace_back(std::move(uptr));</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">return</span> _managed_tensor_info_list.back().get();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00093">GpuWorkloadSketch::Implementation::allocate_new_tensor_id()</a>, <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::Auxiliary</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00142">GpuWorkloadSketch::Implementation::register_memory_descriptor()</a>, and <a class="el" href="_cl_workload_runtime_8cpp_source.xhtml#l00067">tensor_info</a>.</p>

</div>
</div>
<a id="a57128473b45c636d96d321805f217e79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57128473b45c636d96d321805f217e79">&#9670;&nbsp;</a></span>create_virtual_tensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a>* create_virtual_tensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a virtual (see <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01">MemoryType</a>) tensor info and save it. </p>
<dl class="section return"><dt>Returns</dt><dd>ITensorInfo* The created virtual tensor info object pointer </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">auto</span> uptr = std::make_unique&lt;TensorInfo&gt;();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        uptr-&gt;set_id(-<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">allocate_new_tensor_id</a>()); <span class="comment">// virtual tensors must have negative id</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a22f7f326479ca44799448f8163493850">register_memory_descriptor</a>(*uptr, MemoryDescriptor{ <a class="code" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">MemoryType::Virtual</a> });</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        _managed_tensor_info_list.emplace_back(std::move(uptr));</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> _managed_tensor_info_list.back().get();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00093">GpuWorkloadSketch::Implementation::allocate_new_tensor_id()</a>, <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00142">GpuWorkloadSketch::Implementation::register_memory_descriptor()</a>, and <a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">arm_compute::experimental::dynamic_fusion::Virtual</a>.</p>

</div>
</div>
<a id="a503d1467801eeb14035d6421c39e74f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a503d1467801eeb14035d6421c39e74f1">&#9670;&nbsp;</a></span>generate_source_code()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> generate_source_code </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml">GpuWorkloadSourceCode</a> from the workload sketch. </p>
<dl class="section note"><dt>Note</dt><dd>The sketch must be valid. Any error encountered during the building of the code will be thrown.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_source_code.xhtml" title="Hold the generated kernel source code and other information required to compile and run the workload.">GpuWorkloadSourceCode</a> The generated workload code </dd></dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00102">102</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">component_graph</a>().<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">fuse</a>(_mem_map).<a class="code" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">write_workload_code</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00074">GpuWorkloadSketch::Implementation::component_graph()</a>, <a class="el" href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00052">GpuKernelComponentGraph::fuse()</a>, and <a class="el" href="_gpu_kernel_component_stream_8cpp_source.xhtml#l00041">GpuKernelComponentStream::write_workload_code()</a>.</p>

</div>
</div>
<a id="aeaf80439a5c87912150e770e20d2c7d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaf80439a5c87912150e770e20d2c7d6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="ab486961b3c3a47b1247b179403e7e707"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab486961b3c3a47b1247b179403e7e707">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allow instances of this class to be moved. </p>

</div>
</div>
<a id="ab05bc2988232ebd54d7a2f66526469fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab05bc2988232ebd54d7a2f66526469fa">&#9670;&nbsp;</a></span>operator_group() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a>&amp; operator_group </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get operator group. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00089">89</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aeca25ed142be5cb241f375c6f79638e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca25ed142be5cb241f375c6f79638e0">&#9670;&nbsp;</a></span>operator_group() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_operator_group.xhtml">GpuOperatorGroup</a>&amp; operator_group </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get operator group. </p>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00084">84</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> _operator_group;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a22f7f326479ca44799448f8163493850"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f7f326479ca44799448f8163493850">&#9670;&nbsp;</a></span>register_memory_descriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void register_memory_descriptor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml">MemoryDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>mem_desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Register memory descriptor of a tensor info. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td><a class="el" href="classarm__compute_1_1_i_tensor_info.xhtml">ITensorInfo</a> to be registered </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mem_desc</td><td><a class="el" href="structarm__compute_1_1experimental_1_1dynamic__fusion_1_1_memory_descriptor.xhtml">MemoryDescriptor</a> to be registered with <code>info</code> </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00142">142</a> of file <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        _mem_map[<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">info</a>.id()] = mem_desc;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a>.</p>

<p class="reference">Referenced by <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00129">GpuWorkloadSketch::Implementation::create_auxiliary_tensor()</a>, and <a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml#l00110">GpuWorkloadSketch::Implementation::create_virtual_tensor()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/dynamic_fusion/sketch/gpu/<a class="el" href="_gpu_workload_sketch_impl_8h_source.xhtml">GpuWorkloadSketchImpl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a81cbcdf2b235a9fac1b797ce93322276">arm_compute::experimental::dynamic_fusion::MemoryType::Auxiliary</a></div><div class="ttdeci">@ Auxiliary</div><div class="ttdoc">Additional memory required by the workload tensor, e.g.</div></div>
<div class="ttc" id="anamespacearm__compute_1_1experimental_1_1dynamic__fusion_xhtml_a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70"><div class="ttname"><a href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml#a462bfa9dfea81692463ecb192183dd01a615e6f9baca5553d44683a098d342b70">arm_compute::experimental::dynamic_fusion::MemoryType::Virtual</a></div><div class="ttdeci">@ Virtual</div><div class="ttdoc">Virtual type is of No-Alloc type.</div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph_xhtml_a2e5d7338d083afa4107e92da04a768b0"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_graph.xhtml#a2e5d7338d083afa4107e92da04a768b0">arm_compute::experimental::dynamic_fusion::GpuKernelComponentGraph::fuse</a></div><div class="ttdeci">GpuKernelComponentStream fuse(const MemoryDescriptorMap &amp;mem_map) const</div><div class="ttdoc">Perform component fusion and serialize the graph into a stream of component groups.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_graph_8cpp_source.xhtml#l00052">GpuKernelComponentGraph.cpp:52</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream_xhtml_a402c56e36acaa4905e85616bda2f287f"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_kernel_component_stream.xhtml#a402c56e36acaa4905e85616bda2f287f">arm_compute::experimental::dynamic_fusion::GpuKernelComponentStream::write_workload_code</a></div><div class="ttdeci">GpuWorkloadSourceCode write_workload_code()</div><div class="ttdoc">Generate and assemble GpuWorkloadSourceCode from the stream.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_kernel_component_stream_8cpp_source.xhtml#l00041">GpuKernelComponentStream.cpp:41</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_aea42870fd33398b3d52774719e843297"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#aea42870fd33398b3d52774719e843297">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::allocate_new_tensor_id</a></div><div class="ttdeci">ITensorInfo::Id allocate_new_tensor_id()</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00093">GpuWorkloadSketchImpl.h:93</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a53a99846286646c8e36726c50407b5c3"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a53a99846286646c8e36726c50407b5c3">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::component_graph</a></div><div class="ttdeci">const GpuKernelComponentGraph &amp; component_graph() const</div><div class="ttdoc">Get component graph.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00074">GpuWorkloadSketchImpl.h:74</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_a22f7f326479ca44799448f8163493850"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#a22f7f326479ca44799448f8163493850">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::register_memory_descriptor</a></div><div class="ttdeci">void register_memory_descriptor(const ITensorInfo &amp;info, const MemoryDescriptor &amp;mem_desc)</div><div class="ttdoc">Register memory descriptor of a tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00142">GpuWorkloadSketchImpl.h:142</a></div></div>
<div class="ttc" id="aclassarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation_xhtml_af5d6e63adc08ff38e747e2884d4f4cef"><div class="ttname"><a href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml#af5d6e63adc08ff38e747e2884d4f4cef">arm_compute::experimental::dynamic_fusion::GpuWorkloadSketch::Implementation::context</a></div><div class="ttdeci">const Context * context() const</div><div class="ttdoc">Get workload context.</div><div class="ttdef"><b>Definition:</b> <a href="_gpu_workload_sketch_impl_8h_source.xhtml#l00069">GpuWorkloadSketchImpl.h:69</a></div></div>
<div class="ttc" id="anamespacearm__compute_1_1test_1_1validation_xhtml_ac57b92957968088a392021cac1d2076b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ac57b92957968088a392021cac1d2076b">arm_compute::test::validation::info</a></div><div class="ttdeci">ScaleKernelInfo info(interpolation_policy, default_border_mode, PixelValue(), sampling_policy, false)</div></div>
<div class="ttc" id="a_cl_workload_runtime_8cpp_xhtml_a84d9f260af89712132849ff260487ea0"><div class="ttname"><a href="_cl_workload_runtime_8cpp.xhtml#a84d9f260af89712132849ff260487ea0">tensor_info</a></div><div class="ttdeci">TensorInfo tensor_info</div><div class="ttdoc">Associated tensor info.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_runtime_8cpp_source.xhtml#l00067">ClWorkloadRuntime.cpp:67</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental.xhtml">experimental</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1experimental_1_1dynamic__fusion.xhtml">dynamic_fusion</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch.xhtml">GpuWorkloadSketch</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1experimental_1_1dynamic__fusion_1_1_gpu_workload_sketch_1_1_implementation.xhtml">Implementation</a></li>
    <li class="footer">Generated on Wed Jul 5 2023 11:29:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
